{
  "version": 3,
  "sources": ["../node_modules/tslib/tslib.es6.mjs", "../node_modules/ts-invariant/lib/invariant.js", "../node_modules/@apollo/client/version.js", "../node_modules/@apollo/client/utilities/globals/maybe.js", "../node_modules/@apollo/client/utilities/globals/global.js", "../node_modules/@apollo/client/utilities/common/makeUniqueId.js", "../node_modules/@apollo/client/utilities/common/stringifyForDisplay.js", "../node_modules/@apollo/client/utilities/globals/invariantWrappers.js", "../node_modules/@apollo/client/utilities/globals/index.js", "../node_modules/graphql/version.js", "../node_modules/graphql/jsutils/devAssert.js", "../node_modules/graphql/jsutils/isPromise.js", "../node_modules/graphql/jsutils/isObjectLike.js", "../node_modules/graphql/jsutils/invariant.js", "../node_modules/graphql/language/location.js", "../node_modules/graphql/language/printLocation.js", "../node_modules/graphql/error/GraphQLError.js", "../node_modules/graphql/error/syntaxError.js", "../node_modules/graphql/language/ast.js", "../node_modules/graphql/language/directiveLocation.js", "../node_modules/graphql/language/kinds.js", "../node_modules/graphql/language/characterClasses.js", "../node_modules/graphql/language/blockString.js", "../node_modules/graphql/language/tokenKind.js", "../node_modules/graphql/language/lexer.js", "../node_modules/graphql/jsutils/inspect.js", "../node_modules/graphql/jsutils/instanceOf.js", "../node_modules/graphql/language/source.js", "../node_modules/graphql/language/parser.js", "../node_modules/graphql/jsutils/didYouMean.js", "../node_modules/graphql/jsutils/identityFunc.js", "../node_modules/graphql/jsutils/keyMap.js", "../node_modules/graphql/jsutils/keyValMap.js", "../node_modules/graphql/jsutils/mapValue.js", "../node_modules/graphql/jsutils/naturalCompare.js", "../node_modules/graphql/jsutils/suggestionList.js", "../node_modules/graphql/jsutils/toObjMap.js", "../node_modules/graphql/language/printString.js", "../node_modules/graphql/language/visitor.js", "../node_modules/graphql/language/printer.js", "../node_modules/graphql/utilities/valueFromASTUntyped.js", "../node_modules/graphql/type/assertName.js", "../node_modules/graphql/type/definition.js", "../node_modules/graphql/utilities/typeComparators.js", "../node_modules/graphql/type/scalars.js", "../node_modules/graphql/type/directives.js", "../node_modules/graphql/jsutils/isIterableObject.js", "../node_modules/graphql/utilities/astFromValue.js", "../node_modules/graphql/type/introspection.js", "../node_modules/graphql/type/schema.js", "../node_modules/graphql/type/validate.js", "../node_modules/graphql/utilities/typeFromAST.js", "../node_modules/graphql/utilities/TypeInfo.js", "../node_modules/graphql/language/predicates.js", "../node_modules/graphql/validation/rules/ExecutableDefinitionsRule.js", "../node_modules/graphql/validation/rules/FieldsOnCorrectTypeRule.js", "../node_modules/graphql/validation/rules/FragmentsOnCompositeTypesRule.js", "../node_modules/graphql/validation/rules/KnownArgumentNamesRule.js", "../node_modules/graphql/validation/rules/KnownDirectivesRule.js", "../node_modules/graphql/validation/rules/KnownFragmentNamesRule.js", "../node_modules/graphql/validation/rules/KnownTypeNamesRule.js", "../node_modules/graphql/validation/rules/LoneAnonymousOperationRule.js", "../node_modules/graphql/validation/rules/LoneSchemaDefinitionRule.js", "../node_modules/graphql/validation/rules/NoFragmentCyclesRule.js", "../node_modules/graphql/validation/rules/NoUndefinedVariablesRule.js", "../node_modules/graphql/validation/rules/NoUnusedFragmentsRule.js", "../node_modules/graphql/validation/rules/NoUnusedVariablesRule.js", "../node_modules/graphql/utilities/sortValueNode.js", "../node_modules/graphql/validation/rules/OverlappingFieldsCanBeMergedRule.js", "../node_modules/graphql/validation/rules/PossibleFragmentSpreadsRule.js", "../node_modules/graphql/validation/rules/PossibleTypeExtensionsRule.js", "../node_modules/graphql/validation/rules/ProvidedRequiredArgumentsRule.js", "../node_modules/graphql/validation/rules/ScalarLeafsRule.js", "../node_modules/graphql/jsutils/printPathArray.js", "../node_modules/graphql/jsutils/Path.js", "../node_modules/graphql/utilities/coerceInputValue.js", "../node_modules/graphql/utilities/valueFromAST.js", "../node_modules/graphql/execution/values.js", "../node_modules/graphql/execution/collectFields.js", "../node_modules/graphql/validation/rules/SingleFieldSubscriptionsRule.js", "../node_modules/graphql/jsutils/groupBy.js", "../node_modules/graphql/validation/rules/UniqueArgumentDefinitionNamesRule.js", "../node_modules/graphql/validation/rules/UniqueArgumentNamesRule.js", "../node_modules/graphql/validation/rules/UniqueDirectiveNamesRule.js", "../node_modules/graphql/validation/rules/UniqueDirectivesPerLocationRule.js", "../node_modules/graphql/validation/rules/UniqueEnumValueNamesRule.js", "../node_modules/graphql/validation/rules/UniqueFieldDefinitionNamesRule.js", "../node_modules/graphql/validation/rules/UniqueFragmentNamesRule.js", "../node_modules/graphql/validation/rules/UniqueInputFieldNamesRule.js", "../node_modules/graphql/validation/rules/UniqueOperationNamesRule.js", "../node_modules/graphql/validation/rules/UniqueOperationTypesRule.js", "../node_modules/graphql/validation/rules/UniqueTypeNamesRule.js", "../node_modules/graphql/validation/rules/UniqueVariableNamesRule.js", "../node_modules/graphql/validation/rules/ValuesOfCorrectTypeRule.js", "../node_modules/graphql/validation/rules/VariablesAreInputTypesRule.js", "../node_modules/graphql/validation/rules/VariablesInAllowedPositionRule.js", "../node_modules/graphql/validation/specifiedRules.js", "../node_modules/graphql/validation/ValidationContext.js", "../node_modules/graphql/validation/validate.js", "../node_modules/graphql/jsutils/memoize3.js", "../node_modules/graphql/jsutils/promiseForObject.js", "../node_modules/graphql/jsutils/promiseReduce.js", "../node_modules/graphql/jsutils/toError.js", "../node_modules/graphql/error/locatedError.js", "../node_modules/graphql/execution/execute.js", "../node_modules/graphql/graphql.js", "../node_modules/graphql/type/index.js", "../node_modules/graphql/language/index.js", "../node_modules/graphql/jsutils/isAsyncIterable.js", "../node_modules/graphql/execution/mapAsyncIterator.js", "../node_modules/graphql/execution/subscribe.js", "../node_modules/graphql/execution/index.js", "../node_modules/graphql/validation/rules/custom/NoDeprecatedCustomRule.js", "../node_modules/graphql/validation/rules/custom/NoSchemaIntrospectionCustomRule.js", "../node_modules/graphql/validation/index.js", "../node_modules/graphql/error/index.js", "../node_modules/graphql/utilities/getIntrospectionQuery.js", "../node_modules/graphql/utilities/getOperationAST.js", "../node_modules/graphql/utilities/getOperationRootType.js", "../node_modules/graphql/utilities/introspectionFromSchema.js", "../node_modules/graphql/utilities/buildClientSchema.js", "../node_modules/graphql/utilities/extendSchema.js", "../node_modules/graphql/utilities/buildASTSchema.js", "../node_modules/graphql/utilities/lexicographicSortSchema.js", "../node_modules/graphql/utilities/printSchema.js", "../node_modules/graphql/utilities/concatAST.js", "../node_modules/graphql/utilities/separateOperations.js", "../node_modules/graphql/utilities/stripIgnoredCharacters.js", "../node_modules/graphql/utilities/assertValidName.js", "../node_modules/graphql/utilities/findBreakingChanges.js", "../node_modules/graphql/utilities/index.js", "../node_modules/graphql/index.js", "../node_modules/@wry/trie/lib/es5/index.js", "../node_modules/@wry/caches/lib/es5/strong.js", "../node_modules/@wry/caches/lib/es5/weak.js", "../node_modules/optimism/node_modules/@wry/trie/lib/es5/index.js", "../node_modules/@wry/context/lib/es5/slot.js", "../node_modules/@wry/context/lib/es5/index.js", "../node_modules/optimism/lib/es5/context.js", "../node_modules/optimism/lib/es5/helpers.js", "../node_modules/optimism/lib/es5/entry.js", "../node_modules/optimism/lib/es5/dep.js", "../node_modules/optimism/lib/es5/index.js", "../node_modules/zen-observable/lib/Observable.js", "../node_modules/zen-observable/index.js", "../node_modules/zen-observable-ts/index.cjs", "../node_modules/symbol-observable/lib/ponyfill.js", "../node_modules/symbol-observable/lib/index.js", "../node_modules/@apollo/client/utilities/graphql/directives.js", "../node_modules/@apollo/client/utilities/common/canUse.js", "../node_modules/@apollo/client/utilities/common/objects.js", "../node_modules/@apollo/client/utilities/graphql/fragments.js", "../node_modules/@apollo/client/utilities/caching/caches.js", "../node_modules/@apollo/client/utilities/caching/sizes.js", "../node_modules/@apollo/client/utilities/caching/getMemoryInternals.js", "../node_modules/@apollo/client/utilities/common/canonicalStringify.js", "../node_modules/@apollo/client/utilities/graphql/storeUtils.js", "../node_modules/@apollo/client/utilities/graphql/getFromAST.js", "../node_modules/@apollo/client/utilities/graphql/DocumentTransform.js", "../node_modules/@apollo/client/utilities/graphql/print.js", "../node_modules/@apollo/client/utilities/common/arrays.js", "../node_modules/@apollo/client/utilities/graphql/transform.js", "../node_modules/@apollo/client/utilities/graphql/operations.js", "../node_modules/@apollo/client/utilities/common/mergeDeep.js", "../node_modules/@apollo/client/utilities/policies/pagination.js", "../node_modules/@apollo/client/utilities/promises/decoration.js", "../node_modules/@apollo/client/utilities/common/cloneDeep.js", "../node_modules/@apollo/client/utilities/common/maybeDeepFreeze.js", "../node_modules/@apollo/client/utilities/observables/iteration.js", "../node_modules/@apollo/client/utilities/observables/asyncMap.js", "../node_modules/@apollo/client/utilities/observables/subclassing.js", "../node_modules/@apollo/client/utilities/observables/Concast.js", "../node_modules/@apollo/client/utilities/common/incrementalResult.js", "../node_modules/@apollo/client/utilities/common/errorHandling.js", "../node_modules/@apollo/client/utilities/common/compact.js", "../node_modules/@apollo/client/utilities/common/makeUniqueId.js", "../node_modules/@apollo/client/utilities/common/stringifyForDisplay.js", "../node_modules/@apollo/client/utilities/common/mergeOptions.js", "../node_modules/@apollo/client/utilities/common/omitDeep.js", "../node_modules/@apollo/client/utilities/common/stripTypename.js", "../node_modules/@apollo/client/link/utils/fromError.js", "../node_modules/@apollo/client/link/utils/toPromise.js", "../node_modules/@apollo/client/link/utils/fromPromise.js", "../node_modules/@apollo/client/link/utils/throwServerError.js", "../node_modules/@apollo/client/link/utils/validateOperation.js", "../node_modules/@apollo/client/link/utils/createOperation.js", "../node_modules/@apollo/client/link/utils/transformOperation.js", "../node_modules/@apollo/client/link/utils/filterOperationVariables.js", "../node_modules/@apollo/client/link/core/ApolloLink.js", "../node_modules/@apollo/client/link/core/empty.js", "../node_modules/@apollo/client/link/core/from.js", "../node_modules/@apollo/client/link/core/split.js", "../node_modules/@apollo/client/link/core/concat.js", "../node_modules/@apollo/client/link/core/execute.js", "../node_modules/@apollo/client/errors/index.js", "../node_modules/@apollo/client/link/http/iterators/async.js", "../node_modules/@apollo/client/link/http/iterators/nodeStream.js", "../node_modules/@apollo/client/link/http/iterators/promise.js", "../node_modules/@apollo/client/link/http/iterators/reader.js", "../node_modules/@apollo/client/link/http/responseIterator.js", "../node_modules/@apollo/client/utilities/common/objects.js", "../node_modules/@apollo/client/utilities/common/incrementalResult.js", "../node_modules/@apollo/client/link/http/parseAndCheckHttpResponse.js", "../node_modules/@apollo/client/link/http/serializeFetchParameter.js", "../node_modules/@apollo/client/link/http/selectHttpOptionsAndBody.js", "../node_modules/@apollo/client/link/http/checkFetcher.js", "../node_modules/@apollo/client/link/http/createSignalIfSupported.js", "../node_modules/@apollo/client/link/http/selectURI.js", "../node_modules/@apollo/client/link/http/rewriteURIForGET.js", "../node_modules/@apollo/client/link/http/createHttpLink.js", "../node_modules/@apollo/client/link/http/HttpLink.js", "../node_modules/@wry/equality/lib/index.js", "../node_modules/@apollo/client/utilities/caching/getMemoryInternals.js", "../node_modules/@apollo/client/cache/core/cache.js", "../node_modules/@apollo/client/cache/core/types/Cache.js", "../node_modules/@apollo/client/cache/core/types/common.js", "../node_modules/@apollo/client/cache/inmemory/helpers.js", "../node_modules/@apollo/client/cache/inmemory/entityStore.js", "../node_modules/@apollo/client/cache/inmemory/object-canon.js", "../node_modules/@apollo/client/cache/inmemory/readFromStore.js", "../node_modules/@apollo/client/cache/inmemory/reactiveVars.js", "../node_modules/@apollo/client/cache/inmemory/key-extractor.js", "../node_modules/@apollo/client/cache/inmemory/policies.js", "../node_modules/@apollo/client/cache/inmemory/writeToStore.js", "../node_modules/@apollo/client/cache/inmemory/inMemoryCache.js", "../node_modules/@apollo/client/cache/inmemory/fragmentRegistry.js", "../node_modules/graphql-tag/src/index.ts", "../node_modules/graphql-tag/main.js", "../node_modules/@apollo/client/version.js", "../node_modules/@apollo/client/utilities/common/objects.js", "../node_modules/@apollo/client/utilities/common/arrays.js", "../node_modules/@apollo/client/utilities/common/mergeDeep.js", "../node_modules/@apollo/client/utilities/common/incrementalResult.js", "../node_modules/@apollo/client/core/networkStatus.js", "../node_modules/@apollo/client/core/equalByQuery.js", "../node_modules/@apollo/client/core/ObservableQuery.js", "../node_modules/@apollo/client/core/LocalState.js", "../node_modules/@apollo/client/core/QueryInfo.js", "../node_modules/@apollo/client/core/QueryManager.js", "../node_modules/@apollo/client/utilities/caching/sizes.js", "../node_modules/@apollo/client/utilities/caching/getMemoryInternals.js", "../node_modules/@apollo/client/core/ApolloClient.js", "../node_modules/@apollo/client/core/index.js", "../node_modules/ethers/src.ts/ethers.ts", "../node_modules/ethers/src.ts/_version.ts", "../node_modules/ethers/src.ts/utils/properties.ts", "../node_modules/ethers/src.ts/utils/errors.ts", "../node_modules/ethers/src.ts/utils/data.ts", "../node_modules/ethers/src.ts/utils/maths.ts", "../node_modules/ethers/src.ts/utils/base58.ts", "../node_modules/ethers/src.ts/utils/base64-browser.ts", "../node_modules/ethers/src.ts/utils/events.ts", "../node_modules/ethers/src.ts/utils/utf8.ts", "../node_modules/ethers/src.ts/utils/geturl-browser.ts", "../node_modules/ethers/src.ts/utils/fetch.ts", "../node_modules/ethers/src.ts/utils/fixednumber.ts", "../node_modules/ethers/src.ts/utils/rlp-decode.ts", "../node_modules/ethers/src.ts/utils/rlp-encode.ts", "../node_modules/ethers/src.ts/utils/units.ts", "../node_modules/ethers/src.ts/utils/uuid.ts", "../node_modules/ethers/src.ts/abi/coders/abstract-coder.ts", "../node_modules/ethers/node_modules/@noble/hashes/src/_assert.ts", "../node_modules/ethers/node_modules/@noble/hashes/src/crypto.ts", "../node_modules/ethers/node_modules/@noble/hashes/src/utils.ts", "../node_modules/ethers/node_modules/@noble/hashes/src/hmac.ts", "../node_modules/ethers/node_modules/@noble/hashes/src/pbkdf2.ts", "../node_modules/ethers/node_modules/@noble/hashes/src/_sha2.ts", "../node_modules/ethers/node_modules/@noble/hashes/src/sha256.ts", "../node_modules/ethers/node_modules/@noble/hashes/src/_u64.ts", "../node_modules/ethers/node_modules/@noble/hashes/src/sha512.ts", "../node_modules/ethers/src.ts/crypto/crypto-browser.ts", "../node_modules/ethers/src.ts/crypto/hmac.ts", "../node_modules/ethers/node_modules/@noble/hashes/src/sha3.ts", "../node_modules/ethers/src.ts/crypto/keccak.ts", "../node_modules/ethers/node_modules/@noble/hashes/src/ripemd160.ts", "../node_modules/ethers/src.ts/crypto/ripemd160.ts", "../node_modules/ethers/src.ts/crypto/pbkdf2.ts", "../node_modules/ethers/src.ts/crypto/random.ts", "../node_modules/ethers/node_modules/@noble/hashes/src/scrypt.ts", "../node_modules/ethers/src.ts/crypto/scrypt.ts", "../node_modules/ethers/src.ts/crypto/sha2.ts", "../node_modules/ethers/node_modules/@noble/curves/src/abstract/utils.ts", "../node_modules/ethers/node_modules/@noble/curves/src/abstract/modular.ts", "../node_modules/ethers/node_modules/@noble/curves/src/abstract/curve.ts", "../node_modules/ethers/node_modules/@noble/curves/src/abstract/weierstrass.ts", "../node_modules/ethers/node_modules/@noble/curves/src/_shortw_utils.ts", "../node_modules/ethers/node_modules/@noble/curves/src/secp256k1.ts", "../node_modules/ethers/src.ts/constants/addresses.ts", "../node_modules/ethers/src.ts/constants/hashes.ts", "../node_modules/ethers/src.ts/constants/numbers.ts", "../node_modules/ethers/src.ts/constants/strings.ts", "../node_modules/ethers/src.ts/crypto/signature.ts", "../node_modules/ethers/src.ts/crypto/signing-key.ts", "../node_modules/ethers/src.ts/crypto/index.ts", "../node_modules/ethers/src.ts/address/address.ts", "../node_modules/ethers/src.ts/address/contract-address.ts", "../node_modules/ethers/src.ts/address/checks.ts", "../node_modules/ethers/src.ts/abi/typed.ts", "../node_modules/ethers/src.ts/abi/coders/address.ts", "../node_modules/ethers/src.ts/abi/coders/anonymous.ts", "../node_modules/ethers/src.ts/abi/coders/array.ts", "../node_modules/ethers/src.ts/abi/coders/boolean.ts", "../node_modules/ethers/src.ts/abi/coders/bytes.ts", "../node_modules/ethers/src.ts/abi/coders/fixed-bytes.ts", "../node_modules/ethers/src.ts/abi/coders/null.ts", "../node_modules/ethers/src.ts/abi/coders/number.ts", "../node_modules/ethers/src.ts/abi/coders/string.ts", "../node_modules/ethers/src.ts/abi/coders/tuple.ts", "../node_modules/ethers/src.ts/hash/id.ts", "../node_modules/@adraffy/ens-normalize/dist/index.mjs", "../node_modules/ethers/src.ts/hash/namehash.ts", "../node_modules/ethers/src.ts/transaction/accesslist.ts", "../node_modules/ethers/src.ts/transaction/address.ts", "../node_modules/ethers/src.ts/transaction/transaction.ts", "../node_modules/ethers/src.ts/hash/message.ts", "../node_modules/ethers/src.ts/hash/solidity.ts", "../node_modules/ethers/src.ts/hash/typed-data.ts", "../node_modules/ethers/src.ts/abi/fragments.ts", "../node_modules/ethers/src.ts/abi/abi-coder.ts", "../node_modules/ethers/src.ts/abi/bytes32.ts", "../node_modules/ethers/src.ts/abi/interface.ts", "../node_modules/ethers/src.ts/providers/provider.ts", "../node_modules/ethers/src.ts/contract/wrappers.ts", "../node_modules/ethers/src.ts/contract/contract.ts", "../node_modules/ethers/src.ts/contract/factory.ts", "../node_modules/ethers/src.ts/providers/ens-resolver.ts", "../node_modules/ethers/src.ts/providers/format.ts", "../node_modules/ethers/src.ts/providers/plugins-network.ts", "../node_modules/ethers/src.ts/providers/network.ts", "../node_modules/ethers/src.ts/providers/subscriber-polling.ts", "../node_modules/ethers/src.ts/providers/abstract-provider.ts", "../node_modules/ethers/src.ts/providers/abstract-signer.ts", "../node_modules/ethers/src.ts/providers/community.ts", "../node_modules/ethers/src.ts/providers/subscriber-filterid.ts", "../node_modules/ethers/src.ts/providers/provider-jsonrpc.ts", "../node_modules/ethers/src.ts/providers/provider-ankr.ts", "../node_modules/ethers/src.ts/providers/provider-alchemy.ts", "../node_modules/ethers/src.ts/providers/provider-cloudflare.ts", "../node_modules/ethers/src.ts/providers/provider-etherscan.ts", "../node_modules/ethers/src.ts/providers/ws-browser.ts", "../node_modules/ethers/src.ts/providers/provider-socket.ts", "../node_modules/ethers/src.ts/providers/provider-websocket.ts", "../node_modules/ethers/src.ts/providers/provider-infura.ts", "../node_modules/ethers/src.ts/providers/provider-quicknode.ts", "../node_modules/ethers/src.ts/providers/provider-fallback.ts", "../node_modules/ethers/src.ts/providers/default-provider.ts", "../node_modules/ethers/src.ts/providers/signer-noncemanager.ts", "../node_modules/ethers/src.ts/providers/provider-browser.ts", "../node_modules/ethers/src.ts/providers/provider-pocket.ts", "../node_modules/ethers/src.ts/providers/provider-ipcsocket-browser.ts", "../node_modules/ethers/src.ts/wallet/base-wallet.ts", "../node_modules/ethers/src.ts/wordlists/decode-owl.ts", "../node_modules/ethers/src.ts/wordlists/wordlist.ts", "../node_modules/ethers/src.ts/wordlists/wordlist-owl.ts", "../node_modules/ethers/src.ts/wordlists/lang-en.ts", "../node_modules/ethers/src.ts/wallet/mnemonic.ts", "../node_modules/aes-js/src.ts/aes.ts", "../node_modules/aes-js/src.ts/mode.ts", "../node_modules/aes-js/src.ts/mode-cbc.ts", "../node_modules/aes-js/src.ts/mode-cfb.ts", "../node_modules/aes-js/src.ts/mode-ctr.ts", "../node_modules/aes-js/src.ts/padding.ts", "../node_modules/ethers/src.ts/wallet/utils.ts", "../node_modules/ethers/src.ts/wallet/json-keystore.ts", "../node_modules/ethers/src.ts/wallet/hdwallet.ts", "../node_modules/ethers/src.ts/wallet/json-crowdsale.ts", "../node_modules/ethers/src.ts/wallet/wallet.ts", "../node_modules/ethers/src.ts/wordlists/bit-reader.ts", "../node_modules/ethers/src.ts/wordlists/decode-owla.ts", "../node_modules/ethers/src.ts/wordlists/wordlist-owla.ts", "../node_modules/ethers/src.ts/wordlists/wordlists-browser.ts", "../src/services/DSponsorNFT/methods/getTotalSupply.js", "../src/services/DSponsorNFT/methods/getMaxSupply.js", "../src/primitives/ChainNetwork/chains/polygon-mumbai.json", "../src/primitives/ChainNetwork/getChainConfig.js", "../src/primitives/ChainNetwork/ChainNetwork.js", "../src/utils/generatePrivateKey.js", "../src/services/DSponsorNFT/methods/getTokenURI.js", "../src/services/DSponsorNFT/methods/getTokenURIs.js", "../src/services/DSponsorNFT/methods/approve.js", "../src/services/DSponsorNFT/methods/getAds.js", "../src/primitives/Ad/Ad.js", "../src/services/DSponsorNFT/methods/getApproved.js", "../src/services/DSponsorNFT/methods/getBalanceOf.js", "../src/services/DSponsorNFT/methods/getIsApprovedForAll.js", "../src/services/DSponsorNFT/methods/getName.js", "../src/services/DSponsorNFT/methods/getOwnerAddress.js", "../src/services/DSponsorNFT/methods/getOwnerOf.js", "../src/services/DSponsorNFT/methods/getSymbol.js", "../src/services/DSponsorNFT/methods/mint.js", "../src/services/DSponsorNFT/methods/safeTransferFrom.js", "../src/services/DSponsorNFT/methods/setApprovalForAll.js", "../src/services/DSponsorNFT/methods/setBaseURI.js", "../src/services/DSponsorNFT/methods/setContractURI.js", "../src/services/DSponsorNFT/methods/supportsInterface.js", "../src/services/DSponsorNFT/methods/transferFrom.js", "../src/services/DSponsorNFT/methods/transferOwnership.js", "../src/services/DSponsorNFT/DSponsorNFT.js", "../src/services/DSponsorNFT/methods/getOfferId.js", "../src/services/DSponsorAdmin/DSponsorAdmin.js", "../src/services/DSponsorAdmin/methods/getOfferContract.js", "../src/services/DSponsorAdmin/methods/getBPS.js", "../src/services/DSponsorAdmin/methods/getOfferProposals.js", "../src/services/DSponsorAdmin/methods/isAllowedAdParameter.js", "../src/services/DSponsorAdmin/methods/isOfferAdmin.js", "../src/services/DSponsorAdmin/methods/isOfferDisabled.js", "../src/services/DSponsorAdmin/methods/getAllowedTokensFromId.js", "../src/services/DSponsorAdmin/methods/getNFTFactoryContractAddress.js", "../src/services/DSponsorAdmin/methods/getCurrentTrustedForwarder.js", "../src/services/DSponsorAdmin/methods/getOwnerAddress.js", "../src/services/DSponsorAdmin/methods/getRecipientAddress.js", "../src/services/DSponsorAdmin/methods/getSwapRouterAddress.js", "../src/services/DSponsorAdmin/methods/createDSponsortNFTAndOffer.js", "../src/services/DSponsorAdmin/methods/createOffer.js", "../src/services/DSponsorAdmin/methods/mintAndSubmit.js", "../src/services/DSponsorAdmin/methods/reviewAdProposal.js", "../src/services/DSponsorAdmin/methods/setTrustedForwarder.js", "../src/services/DSponsorAdmin/methods/submitAdProposal.js", "../src/services/DSponsorAdmin/methods/transferOwnership.js", "../src/services/DSponsorAdmin/methods/updateOffer.js", "../src/services/DSponsorAdmin/methods/updateProtocolFee.js", "../src/services/DSponsorAdmin/methods/getAdsProposalsFromOfferId.js", "../src/utils/isNumber.js", "../src/services/DSponsorAdmin/methods/getValidatedAdsFromOfferId.js", "../src/services/DSponsorAdmin/methods/getAdProposalFromProposalId.js", "../src/services/DSponsorAdmin/methods/getOffer.js", "../src/services/DSponsorAdmin/methods/getOffers.js", "../src/services/DSponsorAdmin/methods/getDSponsorNFT.js", "../src/services/DSponsorAdmin/methods/getMintPricesFromId.js", "../src/services/DSponsorNFT/methods/getDSponsorAdmin.js", "../src/services/DSponsorNFT/methods/getMintPrice.js", "../src/services/DSponsorNFT/methods/getCreationInfo.js", "../src/services/AdSpaceRenderer/methods/render.js", "../src/services/AdSpaceRenderer/methods/preload.js", "../src/services/AdSpaceRenderer/methods/select.js", "../src/services/AdSpaceRenderer/methods/connect.js", "../src/services/AdSpaceRenderer/AdSpaceRenderer.js", "../src/primitives/Wallet/Wallet.js", "../src/primitives/Token/Token.js", "../src/DSponsorSDK.js", "../src/utils/stringToUint256.js", "../src/utils/convertABIToShortABI.js", "../src/utils/isHexadecimal.js"],
  "sourcesContent": ["/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n", "import { __extends } from \"tslib\";\nvar genericMessage = \"Invariant Violation\";\nvar _a = Object.setPrototypeOf, setPrototypeOf = _a === void 0 ? function (obj, proto) {\n    obj.__proto__ = proto;\n    return obj;\n} : _a;\nvar InvariantError = /** @class */ (function (_super) {\n    __extends(InvariantError, _super);\n    function InvariantError(message) {\n        if (message === void 0) { message = genericMessage; }\n        var _this = _super.call(this, typeof message === \"number\"\n            ? genericMessage + \": \" + message + \" (see https://github.com/apollographql/invariant-packages)\"\n            : message) || this;\n        _this.framesToPop = 1;\n        _this.name = genericMessage;\n        setPrototypeOf(_this, InvariantError.prototype);\n        return _this;\n    }\n    return InvariantError;\n}(Error));\nexport { InvariantError };\nexport function invariant(condition, message) {\n    if (!condition) {\n        throw new InvariantError(message);\n    }\n}\nvar verbosityLevels = [\"debug\", \"log\", \"warn\", \"error\", \"silent\"];\nvar verbosityLevel = verbosityLevels.indexOf(\"log\");\nfunction wrapConsoleMethod(name) {\n    return function () {\n        if (verbosityLevels.indexOf(name) >= verbosityLevel) {\n            // Default to console.log if this host environment happens not to provide\n            // all the console.* methods we need.\n            var method = console[name] || console.log;\n            return method.apply(console, arguments);\n        }\n    };\n}\n(function (invariant) {\n    invariant.debug = wrapConsoleMethod(\"debug\");\n    invariant.log = wrapConsoleMethod(\"log\");\n    invariant.warn = wrapConsoleMethod(\"warn\");\n    invariant.error = wrapConsoleMethod(\"error\");\n})(invariant || (invariant = {}));\nexport function setVerbosity(level) {\n    var old = verbosityLevels[verbosityLevel];\n    verbosityLevel = Math.max(0, verbosityLevels.indexOf(level));\n    return old;\n}\nexport default invariant;\n//# sourceMappingURL=invariant.js.map", "export var version = \"3.9.9\";\n//# sourceMappingURL=version.js.map", "export function maybe(thunk) {\n    try {\n        return thunk();\n    }\n    catch (_a) { }\n}\n//# sourceMappingURL=maybe.js.map", "import { maybe } from \"./maybe.js\";\nexport default (maybe(function () { return globalThis; }) ||\n    maybe(function () { return window; }) ||\n    maybe(function () { return self; }) ||\n    maybe(function () { return global; }) || // We don't expect the Function constructor ever to be invoked at runtime, as\n// long as at least one of globalThis, window, self, or global is defined, so\n// we are under no obligation to make it easy for static analysis tools to\n// detect syntactic usage of the Function constructor. If you think you can\n// improve your static analysis to detect this obfuscation, think again. This\n// is an arms race you cannot win, at least not in JavaScript.\nmaybe(function () {\n    return maybe.constructor(\"return this\")();\n}));\n//# sourceMappingURL=global.js.map", "var prefixCounts = new Map();\n// These IDs won't be globally unique, but they will be unique within this\n// process, thanks to the counter, and unguessable thanks to the random suffix.\nexport function makeUniqueId(prefix) {\n    var count = prefixCounts.get(prefix) || 1;\n    prefixCounts.set(prefix, count + 1);\n    return \"\".concat(prefix, \":\").concat(count, \":\").concat(Math.random().toString(36).slice(2));\n}\n//# sourceMappingURL=makeUniqueId.js.map", "import { makeUniqueId } from \"./makeUniqueId.js\";\nexport function stringifyForDisplay(value, space) {\n    if (space === void 0) { space = 0; }\n    var undefId = makeUniqueId(\"stringifyForDisplay\");\n    return JSON.stringify(value, function (key, value) {\n        return value === void 0 ? undefId : value;\n    }, space)\n        .split(JSON.stringify(undefId))\n        .join(\"<undefined>\");\n}\n//# sourceMappingURL=stringifyForDisplay.js.map", "import { invariant as originalInvariant, InvariantError } from \"ts-invariant\";\nimport { version } from \"../../version.js\";\nimport global from \"./global.js\";\nimport { stringifyForDisplay } from \"../common/stringifyForDisplay.js\";\nfunction wrap(fn) {\n    return function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (typeof message === \"number\") {\n            var arg0 = message;\n            message = getHandledErrorMsg(arg0);\n            if (!message) {\n                message = getFallbackErrorMsg(arg0, args);\n                args = [];\n            }\n        }\n        fn.apply(void 0, [message].concat(args));\n    };\n}\nvar invariant = Object.assign(function invariant(condition, message) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    if (!condition) {\n        originalInvariant(condition, getHandledErrorMsg(message, args) || getFallbackErrorMsg(message, args));\n    }\n}, {\n    debug: wrap(originalInvariant.debug),\n    log: wrap(originalInvariant.log),\n    warn: wrap(originalInvariant.warn),\n    error: wrap(originalInvariant.error),\n});\n/**\n * Returns an InvariantError.\n *\n * `message` can only be a string, a concatenation of strings, or a ternary statement\n * that results in a string. This will be enforced on build, where the message will\n * be replaced with a message number.\n * String substitutions with %s are supported and will also return\n * pretty-stringified objects.\n * Excess `optionalParams` will be swallowed.\n */\nfunction newInvariantError(message) {\n    var optionalParams = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        optionalParams[_i - 1] = arguments[_i];\n    }\n    return new InvariantError(getHandledErrorMsg(message, optionalParams) ||\n        getFallbackErrorMsg(message, optionalParams));\n}\nvar ApolloErrorMessageHandler = Symbol.for(\"ApolloErrorMessageHandler_\" + version);\nfunction stringify(arg) {\n    return typeof arg == \"string\" ? arg : (stringifyForDisplay(arg, 2).slice(0, 1000));\n}\nfunction getHandledErrorMsg(message, messageArgs) {\n    if (messageArgs === void 0) { messageArgs = []; }\n    if (!message)\n        return;\n    return (global[ApolloErrorMessageHandler] &&\n        global[ApolloErrorMessageHandler](message, messageArgs.map(stringify)));\n}\nfunction getFallbackErrorMsg(message, messageArgs) {\n    if (messageArgs === void 0) { messageArgs = []; }\n    if (!message)\n        return;\n    return \"An error occurred! For more details, see the full error text at https://go.apollo.dev/c/err#\".concat(encodeURIComponent(JSON.stringify({\n        version: version,\n        message: message,\n        args: messageArgs.map(stringify),\n    })));\n}\nexport { invariant, InvariantError, newInvariantError, ApolloErrorMessageHandler, };\n//# sourceMappingURL=invariantWrappers.js.map", "import { invariant, newInvariantError, InvariantError, } from \"./invariantWrappers.js\";\nexport { maybe } from \"./maybe.js\";\nexport { default as global } from \"./global.js\";\nexport { invariant, newInvariantError, InvariantError };\n/**\n * @deprecated we do not use this internally anymore,\n * it is just exported for backwards compatibility\n */\n// this file is extempt from automatic `__DEV__` replacement\n// so we have to write it out here\n// @ts-ignore\nexport var DEV = globalThis.__DEV__ !== false;\nexport { DEV as __DEV__ };\n//# sourceMappingURL=index.js.map", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.versionInfo = exports.version = void 0;\n// Note: This file is autogenerated using \"resources/gen-version.js\" script and\n// automatically updated by \"npm version\" command.\n\n/**\n * A string containing the version of the GraphQL.js library\n */\nconst version = '16.8.1';\n/**\n * An object containing the components of the GraphQL.js version string\n */\n\nexports.version = version;\nconst versionInfo = Object.freeze({\n  major: 16,\n  minor: 8,\n  patch: 1,\n  preReleaseTag: null,\n});\nexports.versionInfo = versionInfo;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.devAssert = devAssert;\n\nfunction devAssert(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.isPromise = isPromise;\n\n/**\n * Returns true if the value acts like a Promise, i.e. has a \"then\" function,\n * otherwise returns false.\n */\nfunction isPromise(value) {\n  return (\n    typeof (value === null || value === void 0 ? void 0 : value.then) ===\n    'function'\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.isObjectLike = isObjectLike;\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nfunction isObjectLike(value) {\n  return typeof value == 'object' && value !== null;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.invariant = invariant;\n\nfunction invariant(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(\n      message != null ? message : 'Unexpected invariant triggered.',\n    );\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.getLocation = getLocation;\n\nvar _invariant = require('../jsutils/invariant.js');\n\nconst LineRegExp = /\\r\\n|[\\n\\r]/g;\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nfunction getLocation(source, position) {\n  let lastLineStart = 0;\n  let line = 1;\n\n  for (const match of source.body.matchAll(LineRegExp)) {\n    typeof match.index === 'number' || (0, _invariant.invariant)(false);\n\n    if (match.index >= position) {\n      break;\n    }\n\n    lastLineStart = match.index + match[0].length;\n    line += 1;\n  }\n\n  return {\n    line,\n    column: position + 1 - lastLineStart,\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.printLocation = printLocation;\nexports.printSourceLocation = printSourceLocation;\n\nvar _location = require('./location.js');\n\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\nfunction printLocation(location) {\n  return printSourceLocation(\n    location.source,\n    (0, _location.getLocation)(location.source, location.start),\n  );\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nfunction printSourceLocation(source, sourceLocation) {\n  const firstLineColumnOffset = source.locationOffset.column - 1;\n  const body = ''.padStart(firstLineColumnOffset) + source.body;\n  const lineIndex = sourceLocation.line - 1;\n  const lineOffset = source.locationOffset.line - 1;\n  const lineNum = sourceLocation.line + lineOffset;\n  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  const columnNum = sourceLocation.column + columnOffset;\n  const locationStr = `${source.name}:${lineNum}:${columnNum}\\n`;\n  const lines = body.split(/\\r\\n|[\\n\\r]/g);\n  const locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    const subLineIndex = Math.floor(columnNum / 80);\n    const subLineColumnNum = columnNum % 80;\n    const subLines = [];\n\n    for (let i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return (\n      locationStr +\n      printPrefixedLines([\n        [`${lineNum} |`, subLines[0]],\n        ...subLines.slice(1, subLineIndex + 1).map((subLine) => ['|', subLine]),\n        ['|', '^'.padStart(subLineColumnNum)],\n        ['|', subLines[subLineIndex + 1]],\n      ])\n    );\n  }\n\n  return (\n    locationStr +\n    printPrefixedLines([\n      // Lines specified like this: [\"prefix\", \"string\"],\n      [`${lineNum - 1} |`, lines[lineIndex - 1]],\n      [`${lineNum} |`, locationLine],\n      ['|', '^'.padStart(columnNum)],\n      [`${lineNum + 1} |`, lines[lineIndex + 1]],\n    ])\n  );\n}\n\nfunction printPrefixedLines(lines) {\n  const existingLines = lines.filter(([_, line]) => line !== undefined);\n  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));\n  return existingLines\n    .map(([prefix, line]) => prefix.padStart(padLen) + (line ? ' ' + line : ''))\n    .join('\\n');\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.GraphQLError = void 0;\nexports.formatError = formatError;\nexports.printError = printError;\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _location = require('../language/location.js');\n\nvar _printLocation = require('../language/printLocation.js');\n\nfunction toNormalizedOptions(args) {\n  const firstArg = args[0];\n\n  if (firstArg == null || 'kind' in firstArg || 'length' in firstArg) {\n    return {\n      nodes: firstArg,\n      source: args[1],\n      positions: args[2],\n      path: args[3],\n      originalError: args[4],\n      extensions: args[5],\n    };\n  }\n\n  return firstArg;\n}\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nclass GraphQLError extends Error {\n  /**\n   * An array of `{ line, column }` locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n\n  /**\n   * @deprecated Please use the `GraphQLErrorOptions` constructor overload instead.\n   */\n  constructor(message, ...rawArgs) {\n    var _this$nodes, _nodeLocations$, _ref;\n\n    const { nodes, source, positions, path, originalError, extensions } =\n      toNormalizedOptions(rawArgs);\n    super(message);\n    this.name = 'GraphQLError';\n    this.path = path !== null && path !== void 0 ? path : undefined;\n    this.originalError =\n      originalError !== null && originalError !== void 0\n        ? originalError\n        : undefined; // Compute list of blame nodes.\n\n    this.nodes = undefinedIfEmpty(\n      Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined,\n    );\n    const nodeLocations = undefinedIfEmpty(\n      (_this$nodes = this.nodes) === null || _this$nodes === void 0\n        ? void 0\n        : _this$nodes.map((node) => node.loc).filter((loc) => loc != null),\n    ); // Compute locations in the source for the given nodes/positions.\n\n    this.source =\n      source !== null && source !== void 0\n        ? source\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : (_nodeLocations$ = nodeLocations[0]) === null ||\n          _nodeLocations$ === void 0\n        ? void 0\n        : _nodeLocations$.source;\n    this.positions =\n      positions !== null && positions !== void 0\n        ? positions\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => loc.start);\n    this.locations =\n      positions && source\n        ? positions.map((pos) => (0, _location.getLocation)(source, pos))\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) =>\n            (0, _location.getLocation)(loc.source, loc.start),\n          );\n    const originalExtensions = (0, _isObjectLike.isObjectLike)(\n      originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions,\n    )\n      ? originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions\n      : undefined;\n    this.extensions =\n      (_ref =\n        extensions !== null && extensions !== void 0\n          ? extensions\n          : originalExtensions) !== null && _ref !== void 0\n        ? _ref\n        : Object.create(null); // Only properties prescribed by the spec should be enumerable.\n    // Keep the rest as non-enumerable.\n\n    Object.defineProperties(this, {\n      message: {\n        writable: true,\n        enumerable: true,\n      },\n      name: {\n        enumerable: false,\n      },\n      nodes: {\n        enumerable: false,\n      },\n      source: {\n        enumerable: false,\n      },\n      positions: {\n        enumerable: false,\n      },\n      originalError: {\n        enumerable: false,\n      },\n    }); // Include (non-enumerable) stack trace.\n\n    /* c8 ignore start */\n    // FIXME: https://github.com/graphql/graphql-js/issues/2317\n\n    if (\n      originalError !== null &&\n      originalError !== void 0 &&\n      originalError.stack\n    ) {\n      Object.defineProperty(this, 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true,\n      });\n    } else if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, GraphQLError);\n    } else {\n      Object.defineProperty(this, 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true,\n      });\n    }\n    /* c8 ignore stop */\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLError';\n  }\n\n  toString() {\n    let output = this.message;\n\n    if (this.nodes) {\n      for (const node of this.nodes) {\n        if (node.loc) {\n          output += '\\n\\n' + (0, _printLocation.printLocation)(node.loc);\n        }\n      }\n    } else if (this.source && this.locations) {\n      for (const location of this.locations) {\n        output +=\n          '\\n\\n' +\n          (0, _printLocation.printSourceLocation)(this.source, location);\n      }\n    }\n\n    return output;\n  }\n\n  toJSON() {\n    const formattedError = {\n      message: this.message,\n    };\n\n    if (this.locations != null) {\n      formattedError.locations = this.locations;\n    }\n\n    if (this.path != null) {\n      formattedError.path = this.path;\n    }\n\n    if (this.extensions != null && Object.keys(this.extensions).length > 0) {\n      formattedError.extensions = this.extensions;\n    }\n\n    return formattedError;\n  }\n}\n\nexports.GraphQLError = GraphQLError;\n\nfunction undefinedIfEmpty(array) {\n  return array === undefined || array.length === 0 ? undefined : array;\n}\n/**\n * See: https://spec.graphql.org/draft/#sec-Errors\n */\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n *\n * @deprecated Please use `error.toString` instead. Will be removed in v17\n */\nfunction printError(error) {\n  return error.toString();\n}\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n *\n * @deprecated Please use `error.toJSON` instead. Will be removed in v17\n */\n\nfunction formatError(error) {\n  return error.toJSON();\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.syntaxError = syntaxError;\n\nvar _GraphQLError = require('./GraphQLError.js');\n\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\nfunction syntaxError(source, position, description) {\n  return new _GraphQLError.GraphQLError(`Syntax Error: ${description}`, {\n    source,\n    positions: [position],\n  });\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Token =\n  exports.QueryDocumentKeys =\n  exports.OperationTypeNode =\n  exports.Location =\n    void 0;\nexports.isNode = isNode;\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nclass Location {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  constructor(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Location';\n  }\n\n  toJSON() {\n    return {\n      start: this.start,\n      end: this.end,\n    };\n  }\n}\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexports.Location = Location;\n\nclass Token {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   *\n   * Note: is undefined for punctuation tokens, but typed as string for\n   * convenience in the parser.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  constructor(kind, start, end, line, column, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Token';\n  }\n\n  toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column,\n    };\n  }\n}\n/**\n * The list of all possible AST node types.\n */\n\nexports.Token = Token;\n\n/**\n * @internal\n */\nconst QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: [\n    'name',\n    'variableDefinitions',\n    'directives',\n    'selectionSet',\n  ],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: [\n    'name', // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n    'variableDefinitions',\n    'typeCondition',\n    'directives',\n    'selectionSet',\n  ],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: [\n    'description',\n    'name',\n    'type',\n    'defaultValue',\n    'directives',\n  ],\n  InterfaceTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n};\nexports.QueryDocumentKeys = QueryDocumentKeys;\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\n/**\n * @internal\n */\n\nfunction isNode(maybeNode) {\n  const maybeKind =\n    maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === 'string' && kindValues.has(maybeKind);\n}\n/** Name */\n\nvar OperationTypeNode;\nexports.OperationTypeNode = OperationTypeNode;\n\n(function (OperationTypeNode) {\n  OperationTypeNode['QUERY'] = 'query';\n  OperationTypeNode['MUTATION'] = 'mutation';\n  OperationTypeNode['SUBSCRIPTION'] = 'subscription';\n})(OperationTypeNode || (exports.OperationTypeNode = OperationTypeNode = {}));\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.DirectiveLocation = void 0;\n\n/**\n * The set of allowed directive location values.\n */\nvar DirectiveLocation;\nexports.DirectiveLocation = DirectiveLocation;\n\n(function (DirectiveLocation) {\n  DirectiveLocation['QUERY'] = 'QUERY';\n  DirectiveLocation['MUTATION'] = 'MUTATION';\n  DirectiveLocation['SUBSCRIPTION'] = 'SUBSCRIPTION';\n  DirectiveLocation['FIELD'] = 'FIELD';\n  DirectiveLocation['FRAGMENT_DEFINITION'] = 'FRAGMENT_DEFINITION';\n  DirectiveLocation['FRAGMENT_SPREAD'] = 'FRAGMENT_SPREAD';\n  DirectiveLocation['INLINE_FRAGMENT'] = 'INLINE_FRAGMENT';\n  DirectiveLocation['VARIABLE_DEFINITION'] = 'VARIABLE_DEFINITION';\n  DirectiveLocation['SCHEMA'] = 'SCHEMA';\n  DirectiveLocation['SCALAR'] = 'SCALAR';\n  DirectiveLocation['OBJECT'] = 'OBJECT';\n  DirectiveLocation['FIELD_DEFINITION'] = 'FIELD_DEFINITION';\n  DirectiveLocation['ARGUMENT_DEFINITION'] = 'ARGUMENT_DEFINITION';\n  DirectiveLocation['INTERFACE'] = 'INTERFACE';\n  DirectiveLocation['UNION'] = 'UNION';\n  DirectiveLocation['ENUM'] = 'ENUM';\n  DirectiveLocation['ENUM_VALUE'] = 'ENUM_VALUE';\n  DirectiveLocation['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  DirectiveLocation['INPUT_FIELD_DEFINITION'] = 'INPUT_FIELD_DEFINITION';\n})(DirectiveLocation || (exports.DirectiveLocation = DirectiveLocation = {}));\n/**\n * The enum type representing the directive location values.\n *\n * @deprecated Please use `DirectiveLocation`. Will be remove in v17.\n */\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Kind = void 0;\n\n/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind;\nexports.Kind = Kind;\n\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (exports.Kind = Kind = {}));\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.isDigit = isDigit;\nexports.isLetter = isLetter;\nexports.isNameContinue = isNameContinue;\nexports.isNameStart = isNameStart;\nexports.isWhiteSpace = isWhiteSpace;\n\n/**\n * ```\n * WhiteSpace ::\n *   - \"Horizontal Tab (U+0009)\"\n *   - \"Space (U+0020)\"\n * ```\n * @internal\n */\nfunction isWhiteSpace(code) {\n  return code === 0x0009 || code === 0x0020;\n}\n/**\n * ```\n * Digit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n * ```\n * @internal\n */\n\nfunction isDigit(code) {\n  return code >= 0x0030 && code <= 0x0039;\n}\n/**\n * ```\n * Letter :: one of\n *   - `A` `B` `C` `D` `E` `F` `G` `H` `I` `J` `K` `L` `M`\n *   - `N` `O` `P` `Q` `R` `S` `T` `U` `V` `W` `X` `Y` `Z`\n *   - `a` `b` `c` `d` `e` `f` `g` `h` `i` `j` `k` `l` `m`\n *   - `n` `o` `p` `q` `r` `s` `t` `u` `v` `w` `x` `y` `z`\n * ```\n * @internal\n */\n\nfunction isLetter(code) {\n  return (\n    (code >= 0x0061 && code <= 0x007a) || // A-Z\n    (code >= 0x0041 && code <= 0x005a) // a-z\n  );\n}\n/**\n * ```\n * NameStart ::\n *   - Letter\n *   - `_`\n * ```\n * @internal\n */\n\nfunction isNameStart(code) {\n  return isLetter(code) || code === 0x005f;\n}\n/**\n * ```\n * NameContinue ::\n *   - Letter\n *   - Digit\n *   - `_`\n * ```\n * @internal\n */\n\nfunction isNameContinue(code) {\n  return isLetter(code) || isDigit(code) || code === 0x005f;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.dedentBlockStringLines = dedentBlockStringLines;\nexports.isPrintableAsBlockString = isPrintableAsBlockString;\nexports.printBlockString = printBlockString;\n\nvar _characterClasses = require('./characterClasses.js');\n\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\nfunction dedentBlockStringLines(lines) {\n  var _firstNonEmptyLine2;\n\n  let commonIndent = Number.MAX_SAFE_INTEGER;\n  let firstNonEmptyLine = null;\n  let lastNonEmptyLine = -1;\n\n  for (let i = 0; i < lines.length; ++i) {\n    var _firstNonEmptyLine;\n\n    const line = lines[i];\n    const indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    firstNonEmptyLine =\n      (_firstNonEmptyLine = firstNonEmptyLine) !== null &&\n      _firstNonEmptyLine !== void 0\n        ? _firstNonEmptyLine\n        : i;\n    lastNonEmptyLine = i;\n\n    if (i !== 0 && indent < commonIndent) {\n      commonIndent = indent;\n    }\n  }\n\n  return lines // Remove common indentation from all lines but first.\n    .map((line, i) => (i === 0 ? line : line.slice(commonIndent))) // Remove leading and trailing blank lines.\n    .slice(\n      (_firstNonEmptyLine2 = firstNonEmptyLine) !== null &&\n        _firstNonEmptyLine2 !== void 0\n        ? _firstNonEmptyLine2\n        : 0,\n      lastNonEmptyLine + 1,\n    );\n}\n\nfunction leadingWhitespace(str) {\n  let i = 0;\n\n  while (\n    i < str.length &&\n    (0, _characterClasses.isWhiteSpace)(str.charCodeAt(i))\n  ) {\n    ++i;\n  }\n\n  return i;\n}\n/**\n * @internal\n */\n\nfunction isPrintableAsBlockString(value) {\n  if (value === '') {\n    return true; // empty string is printable\n  }\n\n  let isEmptyLine = true;\n  let hasIndent = false;\n  let hasCommonIndent = true;\n  let seenNonEmptyLine = false;\n\n  for (let i = 0; i < value.length; ++i) {\n    switch (value.codePointAt(i)) {\n      case 0x0000:\n      case 0x0001:\n      case 0x0002:\n      case 0x0003:\n      case 0x0004:\n      case 0x0005:\n      case 0x0006:\n      case 0x0007:\n      case 0x0008:\n      case 0x000b:\n      case 0x000c:\n      case 0x000e:\n      case 0x000f:\n        return false;\n      // Has non-printable characters\n\n      case 0x000d:\n        //  \\r\n        return false;\n      // Has \\r or \\r\\n which will be replaced as \\n\n\n      case 10:\n        //  \\n\n        if (isEmptyLine && !seenNonEmptyLine) {\n          return false; // Has leading new line\n        }\n\n        seenNonEmptyLine = true;\n        isEmptyLine = true;\n        hasIndent = false;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        hasIndent || (hasIndent = isEmptyLine);\n        break;\n\n      default:\n        hasCommonIndent && (hasCommonIndent = hasIndent);\n        isEmptyLine = false;\n    }\n  }\n\n  if (isEmptyLine) {\n    return false; // Has trailing empty lines\n  }\n\n  if (hasCommonIndent && seenNonEmptyLine) {\n    return false; // Has internal indent\n  }\n\n  return true;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nfunction printBlockString(value, options) {\n  const escapedValue = value.replace(/\"\"\"/g, '\\\\\"\"\"'); // Expand a block string's raw value into independent lines.\n\n  const lines = escapedValue.split(/\\r\\n|[\\n\\r]/g);\n  const isSingleLine = lines.length === 1; // If common indentation is found we can fix some of those cases by adding leading new line\n\n  const forceLeadingNewLine =\n    lines.length > 1 &&\n    lines\n      .slice(1)\n      .every(\n        (line) =>\n          line.length === 0 ||\n          (0, _characterClasses.isWhiteSpace)(line.charCodeAt(0)),\n      ); // Trailing triple quotes just looks confusing but doesn't force trailing new line\n\n  const hasTrailingTripleQuotes = escapedValue.endsWith('\\\\\"\"\"'); // Trailing quote (single or double) or slash forces trailing new line\n\n  const hasTrailingQuote = value.endsWith('\"') && !hasTrailingTripleQuotes;\n  const hasTrailingSlash = value.endsWith('\\\\');\n  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;\n  const printAsMultipleLines =\n    !(options !== null && options !== void 0 && options.minimize) && // add leading and trailing new lines only if it improves readability\n    (!isSingleLine ||\n      value.length > 70 ||\n      forceTrailingNewline ||\n      forceLeadingNewLine ||\n      hasTrailingTripleQuotes);\n  let result = ''; // Format a multi-line block quote to account for leading space.\n\n  const skipLeadingNewLine =\n    isSingleLine && (0, _characterClasses.isWhiteSpace)(value.charCodeAt(0));\n\n  if ((printAsMultipleLines && !skipLeadingNewLine) || forceLeadingNewLine) {\n    result += '\\n';\n  }\n\n  result += escapedValue;\n\n  if (printAsMultipleLines || forceTrailingNewline) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result + '\"\"\"';\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.TokenKind = void 0;\n\n/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind;\nexports.TokenKind = TokenKind;\n\n(function (TokenKind) {\n  TokenKind['SOF'] = '<SOF>';\n  TokenKind['EOF'] = '<EOF>';\n  TokenKind['BANG'] = '!';\n  TokenKind['DOLLAR'] = '$';\n  TokenKind['AMP'] = '&';\n  TokenKind['PAREN_L'] = '(';\n  TokenKind['PAREN_R'] = ')';\n  TokenKind['SPREAD'] = '...';\n  TokenKind['COLON'] = ':';\n  TokenKind['EQUALS'] = '=';\n  TokenKind['AT'] = '@';\n  TokenKind['BRACKET_L'] = '[';\n  TokenKind['BRACKET_R'] = ']';\n  TokenKind['BRACE_L'] = '{';\n  TokenKind['PIPE'] = '|';\n  TokenKind['BRACE_R'] = '}';\n  TokenKind['NAME'] = 'Name';\n  TokenKind['INT'] = 'Int';\n  TokenKind['FLOAT'] = 'Float';\n  TokenKind['STRING'] = 'String';\n  TokenKind['BLOCK_STRING'] = 'BlockString';\n  TokenKind['COMMENT'] = 'Comment';\n})(TokenKind || (exports.TokenKind = TokenKind = {}));\n/**\n * The enum type representing the token kinds values.\n *\n * @deprecated Please use `TokenKind`. Will be remove in v17.\n */\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Lexer = void 0;\nexports.isPunctuatorTokenKind = isPunctuatorTokenKind;\n\nvar _syntaxError = require('../error/syntaxError.js');\n\nvar _ast = require('./ast.js');\n\nvar _blockString = require('./blockString.js');\n\nvar _characterClasses = require('./characterClasses.js');\n\nvar _tokenKind = require('./tokenKind.js');\n\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\nclass Lexer {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  constructor(source) {\n    const startOfFileToken = new _ast.Token(\n      _tokenKind.TokenKind.SOF,\n      0,\n      0,\n      0,\n      0,\n    );\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lexer';\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n  advance() {\n    this.lastToken = this.token;\n    const token = (this.token = this.lookahead());\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n\n  lookahead() {\n    let token = this.token;\n\n    if (token.kind !== _tokenKind.TokenKind.EOF) {\n      do {\n        if (token.next) {\n          token = token.next;\n        } else {\n          // Read the next token and form a link in the token linked-list.\n          const nextToken = readNextToken(this, token.end); // @ts-expect-error next is only mutable during parsing.\n\n          token.next = nextToken; // @ts-expect-error prev is only mutable during parsing.\n\n          nextToken.prev = token;\n          token = nextToken;\n        }\n      } while (token.kind === _tokenKind.TokenKind.COMMENT);\n    }\n\n    return token;\n  }\n}\n/**\n * @internal\n */\n\nexports.Lexer = Lexer;\n\nfunction isPunctuatorTokenKind(kind) {\n  return (\n    kind === _tokenKind.TokenKind.BANG ||\n    kind === _tokenKind.TokenKind.DOLLAR ||\n    kind === _tokenKind.TokenKind.AMP ||\n    kind === _tokenKind.TokenKind.PAREN_L ||\n    kind === _tokenKind.TokenKind.PAREN_R ||\n    kind === _tokenKind.TokenKind.SPREAD ||\n    kind === _tokenKind.TokenKind.COLON ||\n    kind === _tokenKind.TokenKind.EQUALS ||\n    kind === _tokenKind.TokenKind.AT ||\n    kind === _tokenKind.TokenKind.BRACKET_L ||\n    kind === _tokenKind.TokenKind.BRACKET_R ||\n    kind === _tokenKind.TokenKind.BRACE_L ||\n    kind === _tokenKind.TokenKind.PIPE ||\n    kind === _tokenKind.TokenKind.BRACE_R\n  );\n}\n/**\n * A Unicode scalar value is any Unicode code point except surrogate code\n * points. In other words, the inclusive ranges of values 0x0000 to 0xD7FF and\n * 0xE000 to 0x10FFFF.\n *\n * SourceCharacter ::\n *   - \"Any Unicode scalar value\"\n */\n\nfunction isUnicodeScalarValue(code) {\n  return (\n    (code >= 0x0000 && code <= 0xd7ff) || (code >= 0xe000 && code <= 0x10ffff)\n  );\n}\n/**\n * The GraphQL specification defines source text as a sequence of unicode scalar\n * values (which Unicode defines to exclude surrogate code points). However\n * JavaScript defines strings as a sequence of UTF-16 code units which may\n * include surrogates. A surrogate pair is a valid source character as it\n * encodes a supplementary code point (above U+FFFF), but unpaired surrogate\n * code points are not valid source characters.\n */\n\nfunction isSupplementaryCodePoint(body, location) {\n  return (\n    isLeadingSurrogate(body.charCodeAt(location)) &&\n    isTrailingSurrogate(body.charCodeAt(location + 1))\n  );\n}\n\nfunction isLeadingSurrogate(code) {\n  return code >= 0xd800 && code <= 0xdbff;\n}\n\nfunction isTrailingSurrogate(code) {\n  return code >= 0xdc00 && code <= 0xdfff;\n}\n/**\n * Prints the code point (or end of file reference) at a given location in a\n * source for use in error messages.\n *\n * Printable ASCII is printed quoted, while other points are printed in Unicode\n * code point form (ie. U+1234).\n */\n\nfunction printCodePointAt(lexer, location) {\n  const code = lexer.source.body.codePointAt(location);\n\n  if (code === undefined) {\n    return _tokenKind.TokenKind.EOF;\n  } else if (code >= 0x0020 && code <= 0x007e) {\n    // Printable ASCII\n    const char = String.fromCodePoint(code);\n    return char === '\"' ? \"'\\\"'\" : `\"${char}\"`;\n  } // Unicode code point\n\n  return 'U+' + code.toString(16).toUpperCase().padStart(4, '0');\n}\n/**\n * Create a token with line and column location information.\n */\n\nfunction createToken(lexer, kind, start, end, value) {\n  const line = lexer.line;\n  const col = 1 + start - lexer.lineStart;\n  return new _ast.Token(kind, start, end, line, col, value);\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\nfunction readNextToken(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // SourceCharacter\n\n    switch (code) {\n      // Ignored ::\n      //   - UnicodeBOM\n      //   - WhiteSpace\n      //   - LineTerminator\n      //   - Comment\n      //   - Comma\n      //\n      // UnicodeBOM :: \"Byte Order Mark (U+FEFF)\"\n      //\n      // WhiteSpace ::\n      //   - \"Horizontal Tab (U+0009)\"\n      //   - \"Space (U+0020)\"\n      //\n      // Comma :: ,\n      case 0xfeff: // <BOM>\n\n      case 0x0009: // \\t\n\n      case 0x0020: // <space>\n\n      case 0x002c:\n        // ,\n        ++position;\n        continue;\n      // LineTerminator ::\n      //   - \"New Line (U+000A)\"\n      //   - \"Carriage Return (U+000D)\" [lookahead != \"New Line (U+000A)\"]\n      //   - \"Carriage Return (U+000D)\" \"New Line (U+000A)\"\n\n      case 0x000a:\n        // \\n\n        ++position;\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n\n      case 0x000d:\n        // \\r\n        if (body.charCodeAt(position + 1) === 0x000a) {\n          position += 2;\n        } else {\n          ++position;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n      // Comment\n\n      case 0x0023:\n        // #\n        return readComment(lexer, position);\n      // Token ::\n      //   - Punctuator\n      //   - Name\n      //   - IntValue\n      //   - FloatValue\n      //   - StringValue\n      //\n      // Punctuator :: one of ! $ & ( ) ... : = @ [ ] { | }\n\n      case 0x0021:\n        // !\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.BANG,\n          position,\n          position + 1,\n        );\n\n      case 0x0024:\n        // $\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.DOLLAR,\n          position,\n          position + 1,\n        );\n\n      case 0x0026:\n        // &\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.AMP,\n          position,\n          position + 1,\n        );\n\n      case 0x0028:\n        // (\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.PAREN_L,\n          position,\n          position + 1,\n        );\n\n      case 0x0029:\n        // )\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.PAREN_R,\n          position,\n          position + 1,\n        );\n\n      case 0x002e:\n        // .\n        if (\n          body.charCodeAt(position + 1) === 0x002e &&\n          body.charCodeAt(position + 2) === 0x002e\n        ) {\n          return createToken(\n            lexer,\n            _tokenKind.TokenKind.SPREAD,\n            position,\n            position + 3,\n          );\n        }\n\n        break;\n\n      case 0x003a:\n        // :\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.COLON,\n          position,\n          position + 1,\n        );\n\n      case 0x003d:\n        // =\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.EQUALS,\n          position,\n          position + 1,\n        );\n\n      case 0x0040:\n        // @\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.AT,\n          position,\n          position + 1,\n        );\n\n      case 0x005b:\n        // [\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.BRACKET_L,\n          position,\n          position + 1,\n        );\n\n      case 0x005d:\n        // ]\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.BRACKET_R,\n          position,\n          position + 1,\n        );\n\n      case 0x007b:\n        // {\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.BRACE_L,\n          position,\n          position + 1,\n        );\n\n      case 0x007c:\n        // |\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.PIPE,\n          position,\n          position + 1,\n        );\n\n      case 0x007d:\n        // }\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.BRACE_R,\n          position,\n          position + 1,\n        );\n      // StringValue\n\n      case 0x0022:\n        // \"\n        if (\n          body.charCodeAt(position + 1) === 0x0022 &&\n          body.charCodeAt(position + 2) === 0x0022\n        ) {\n          return readBlockString(lexer, position);\n        }\n\n        return readString(lexer, position);\n    } // IntValue | FloatValue (Digit | -)\n\n    if ((0, _characterClasses.isDigit)(code) || code === 0x002d) {\n      return readNumber(lexer, position, code);\n    } // Name\n\n    if ((0, _characterClasses.isNameStart)(code)) {\n      return readName(lexer, position);\n    }\n\n    throw (0, _syntaxError.syntaxError)(\n      lexer.source,\n      position,\n      code === 0x0027\n        ? 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?'\n        : isUnicodeScalarValue(code) || isSupplementaryCodePoint(body, position)\n        ? `Unexpected character: ${printCodePointAt(lexer, position)}.`\n        : `Invalid character: ${printCodePointAt(lexer, position)}.`,\n    );\n  }\n\n  return createToken(lexer, _tokenKind.TokenKind.EOF, bodyLength, bodyLength);\n}\n/**\n * Reads a comment token from the source file.\n *\n * ```\n * Comment :: # CommentChar* [lookahead != CommentChar]\n *\n * CommentChar :: SourceCharacter but not LineTerminator\n * ```\n */\n\nfunction readComment(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    _tokenKind.TokenKind.COMMENT,\n    start,\n    position,\n    body.slice(start + 1, position),\n  );\n}\n/**\n * Reads a number token from the source file, either a FloatValue or an IntValue\n * depending on whether a FractionalPart or ExponentPart is encountered.\n *\n * ```\n * IntValue :: IntegerPart [lookahead != {Digit, `.`, NameStart}]\n *\n * IntegerPart ::\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit Digit*\n *\n * NegativeSign :: -\n *\n * NonZeroDigit :: Digit but not `0`\n *\n * FloatValue ::\n *   - IntegerPart FractionalPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart FractionalPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *\n * FractionalPart :: . Digit+\n *\n * ExponentPart :: ExponentIndicator Sign? Digit+\n *\n * ExponentIndicator :: one of `e` `E`\n *\n * Sign :: one of + -\n * ```\n */\n\nfunction readNumber(lexer, start, firstCode) {\n  const body = lexer.source.body;\n  let position = start;\n  let code = firstCode;\n  let isFloat = false; // NegativeSign (-)\n\n  if (code === 0x002d) {\n    code = body.charCodeAt(++position);\n  } // Zero (0)\n\n  if (code === 0x0030) {\n    code = body.charCodeAt(++position);\n\n    if ((0, _characterClasses.isDigit)(code)) {\n      throw (0, _syntaxError.syntaxError)(\n        lexer.source,\n        position,\n        `Invalid number, unexpected digit after 0: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  } else {\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Full stop (.)\n\n  if (code === 0x002e) {\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // E e\n\n  if (code === 0x0045 || code === 0x0065) {\n    isFloat = true;\n    code = body.charCodeAt(++position); // + -\n\n    if (code === 0x002b || code === 0x002d) {\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n  if (code === 0x002e || (0, _characterClasses.isNameStart)(code)) {\n    throw (0, _syntaxError.syntaxError)(\n      lexer.source,\n      position,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        position,\n      )}.`,\n    );\n  }\n\n  return createToken(\n    lexer,\n    isFloat ? _tokenKind.TokenKind.FLOAT : _tokenKind.TokenKind.INT,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n/**\n * Returns the new position in the source after reading one or more digits.\n */\n\nfunction readDigits(lexer, start, firstCode) {\n  if (!(0, _characterClasses.isDigit)(firstCode)) {\n    throw (0, _syntaxError.syntaxError)(\n      lexer.source,\n      start,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        start,\n      )}.`,\n    );\n  }\n\n  const body = lexer.source.body;\n  let position = start + 1; // +1 to skip first firstCode\n\n  while ((0, _characterClasses.isDigit)(body.charCodeAt(position))) {\n    ++position;\n  }\n\n  return position;\n}\n/**\n * Reads a single-quote string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"` [lookahead != `\"`]\n *   - `\"` StringCharacter+ `\"`\n *\n * StringCharacter ::\n *   - SourceCharacter but not `\"` or `\\` or LineTerminator\n *   - `\\u` EscapedUnicode\n *   - `\\` EscapedCharacter\n *\n * EscapedUnicode ::\n *   - `{` HexDigit+ `}`\n *   - HexDigit HexDigit HexDigit HexDigit\n *\n * EscapedCharacter :: one of `\"` `\\` `/` `b` `f` `n` `r` `t`\n * ```\n */\n\nfunction readString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n  let chunkStart = position;\n  let value = '';\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Quote (\")\n\n    if (code === 0x0022) {\n      value += body.slice(chunkStart, position);\n      return createToken(\n        lexer,\n        _tokenKind.TokenKind.STRING,\n        start,\n        position + 1,\n        value,\n      );\n    } // Escape Sequence (\\)\n\n    if (code === 0x005c) {\n      value += body.slice(chunkStart, position);\n      const escape =\n        body.charCodeAt(position + 1) === 0x0075 // u\n          ? body.charCodeAt(position + 2) === 0x007b // {\n            ? readEscapedUnicodeVariableWidth(lexer, position)\n            : readEscapedUnicodeFixedWidth(lexer, position)\n          : readEscapedCharacter(lexer, position);\n      value += escape.value;\n      position += escape.size;\n      chunkStart = position;\n      continue;\n    } // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw (0, _syntaxError.syntaxError)(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw (0, _syntaxError.syntaxError)(\n    lexer.source,\n    position,\n    'Unterminated string.',\n  );\n} // The string value and lexed size of an escape sequence.\n\nfunction readEscapedUnicodeVariableWidth(lexer, position) {\n  const body = lexer.source.body;\n  let point = 0;\n  let size = 3; // Cannot be larger than 12 chars (\\u{00000000}).\n\n  while (size < 12) {\n    const code = body.charCodeAt(position + size++); // Closing Brace (})\n\n    if (code === 0x007d) {\n      // Must be at least 5 chars (\\u{0}) and encode a Unicode scalar value.\n      if (size < 5 || !isUnicodeScalarValue(point)) {\n        break;\n      }\n\n      return {\n        value: String.fromCodePoint(point),\n        size,\n      };\n    } // Append this hex digit to the code point.\n\n    point = (point << 4) | readHexDigit(code);\n\n    if (point < 0) {\n      break;\n    }\n  }\n\n  throw (0, _syntaxError.syntaxError)(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(\n      position,\n      position + size,\n    )}\".`,\n  );\n}\n\nfunction readEscapedUnicodeFixedWidth(lexer, position) {\n  const body = lexer.source.body;\n  const code = read16BitHexCode(body, position + 2);\n\n  if (isUnicodeScalarValue(code)) {\n    return {\n      value: String.fromCodePoint(code),\n      size: 6,\n    };\n  } // GraphQL allows JSON-style surrogate pair escape sequences, but only when\n  // a valid pair is formed.\n\n  if (isLeadingSurrogate(code)) {\n    // \\u\n    if (\n      body.charCodeAt(position + 6) === 0x005c &&\n      body.charCodeAt(position + 7) === 0x0075\n    ) {\n      const trailingCode = read16BitHexCode(body, position + 8);\n\n      if (isTrailingSurrogate(trailingCode)) {\n        // JavaScript defines strings as a sequence of UTF-16 code units and\n        // encodes Unicode code points above U+FFFF using a surrogate pair of\n        // code units. Since this is a surrogate pair escape sequence, just\n        // include both codes into the JavaScript string value. Had JavaScript\n        // not been internally based on UTF-16, then this surrogate pair would\n        // be decoded to retrieve the supplementary code point.\n        return {\n          value: String.fromCodePoint(code, trailingCode),\n          size: 12,\n        };\n      }\n    }\n  }\n\n  throw (0, _syntaxError.syntaxError)(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(position, position + 6)}\".`,\n  );\n}\n/**\n * Reads four hexadecimal characters and returns the positive integer that 16bit\n * hexadecimal string represents. For example, \"000f\" will return 15, and \"dead\"\n * will return 57005.\n *\n * Returns a negative number if any char was not a valid hexadecimal digit.\n */\n\nfunction read16BitHexCode(body, position) {\n  // readHexDigit() returns -1 on error. ORing a negative value with any other\n  // value always produces a negative value.\n  return (\n    (readHexDigit(body.charCodeAt(position)) << 12) |\n    (readHexDigit(body.charCodeAt(position + 1)) << 8) |\n    (readHexDigit(body.charCodeAt(position + 2)) << 4) |\n    readHexDigit(body.charCodeAt(position + 3))\n  );\n}\n/**\n * Reads a hexadecimal character and returns its positive integer value (0-15).\n *\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 if the provided character code was not a valid hexadecimal digit.\n *\n * HexDigit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n *   - `A` `B` `C` `D` `E` `F`\n *   - `a` `b` `c` `d` `e` `f`\n */\n\nfunction readHexDigit(code) {\n  return code >= 0x0030 && code <= 0x0039 // 0-9\n    ? code - 0x0030\n    : code >= 0x0041 && code <= 0x0046 // A-F\n    ? code - 0x0037\n    : code >= 0x0061 && code <= 0x0066 // a-f\n    ? code - 0x0057\n    : -1;\n}\n/**\n * | Escaped Character | Code Point | Character Name               |\n * | ----------------- | ---------- | ---------------------------- |\n * | `\"`               | U+0022     | double quote                 |\n * | `\\`               | U+005C     | reverse solidus (back slash) |\n * | `/`               | U+002F     | solidus (forward slash)      |\n * | `b`               | U+0008     | backspace                    |\n * | `f`               | U+000C     | form feed                    |\n * | `n`               | U+000A     | line feed (new line)         |\n * | `r`               | U+000D     | carriage return              |\n * | `t`               | U+0009     | horizontal tab               |\n */\n\nfunction readEscapedCharacter(lexer, position) {\n  const body = lexer.source.body;\n  const code = body.charCodeAt(position + 1);\n\n  switch (code) {\n    case 0x0022:\n      // \"\n      return {\n        value: '\\u0022',\n        size: 2,\n      };\n\n    case 0x005c:\n      // \\\n      return {\n        value: '\\u005c',\n        size: 2,\n      };\n\n    case 0x002f:\n      // /\n      return {\n        value: '\\u002f',\n        size: 2,\n      };\n\n    case 0x0062:\n      // b\n      return {\n        value: '\\u0008',\n        size: 2,\n      };\n\n    case 0x0066:\n      // f\n      return {\n        value: '\\u000c',\n        size: 2,\n      };\n\n    case 0x006e:\n      // n\n      return {\n        value: '\\u000a',\n        size: 2,\n      };\n\n    case 0x0072:\n      // r\n      return {\n        value: '\\u000d',\n        size: 2,\n      };\n\n    case 0x0074:\n      // t\n      return {\n        value: '\\u0009',\n        size: 2,\n      };\n  }\n\n  throw (0, _syntaxError.syntaxError)(\n    lexer.source,\n    position,\n    `Invalid character escape sequence: \"${body.slice(\n      position,\n      position + 2,\n    )}\".`,\n  );\n}\n/**\n * Reads a block string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"\"` BlockStringCharacter* `\"\"\"`\n *\n * BlockStringCharacter ::\n *   - SourceCharacter but not `\"\"\"` or `\\\"\"\"`\n *   - `\\\"\"\"`\n * ```\n */\n\nfunction readBlockString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let lineStart = lexer.lineStart;\n  let position = start + 3;\n  let chunkStart = position;\n  let currentLine = '';\n  const blockLines = [];\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Triple-Quote (\"\"\")\n\n    if (\n      code === 0x0022 &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n      const token = createToken(\n        lexer,\n        _tokenKind.TokenKind.BLOCK_STRING,\n        start,\n        position + 3, // Return a string of the lines joined with U+000A.\n        (0, _blockString.dedentBlockStringLines)(blockLines).join('\\n'),\n      );\n      lexer.line += blockLines.length - 1;\n      lexer.lineStart = lineStart;\n      return token;\n    } // Escaped Triple-Quote (\\\"\"\")\n\n    if (\n      code === 0x005c &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022 &&\n      body.charCodeAt(position + 3) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      chunkStart = position + 1; // skip only slash\n\n      position += 4;\n      continue;\n    } // LineTerminator\n\n    if (code === 0x000a || code === 0x000d) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n\n      if (code === 0x000d && body.charCodeAt(position + 1) === 0x000a) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      currentLine = '';\n      chunkStart = position;\n      lineStart = position;\n      continue;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw (0, _syntaxError.syntaxError)(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw (0, _syntaxError.syntaxError)(\n    lexer.source,\n    position,\n    'Unterminated string.',\n  );\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * ```\n * Name ::\n *   - NameStart NameContinue* [lookahead != NameContinue]\n * ```\n */\n\nfunction readName(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position);\n\n    if ((0, _characterClasses.isNameContinue)(code)) {\n      ++position;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    _tokenKind.TokenKind.NAME,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.inspect = inspect;\nconst MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nfunction inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? `[function ${value.name}]` : '[function]';\n\n    case 'object':\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (previouslySeenValues.includes(value)) {\n    return '[Circular]';\n  }\n\n  const seenValues = [...previouslySeenValues, value];\n\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON(); // check for infinite recursion\n\n    if (jsonValue !== value) {\n      return typeof jsonValue === 'string'\n        ? jsonValue\n        : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction isJSONable(value) {\n  return typeof value.toJSON === 'function';\n}\n\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n\n  if (entries.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  const properties = entries.map(\n    ([key, value]) => key + ': ' + formatValue(value, seenValues),\n  );\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object /, '')\n    .replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    const name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.instanceOf = void 0;\n\nvar _inspect = require('./inspect.js');\n\n/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n * See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n * See: https://webpack.js.org/guides/production/\n */\nconst instanceOf =\n  /* c8 ignore next 6 */\n  // FIXME: https://github.com/graphql/graphql-js/issues/2317\n  globalThis.process && globalThis.process.env.NODE_ENV === 'production'\n    ? function instanceOf(value, constructor) {\n        return value instanceof constructor;\n      }\n    : function instanceOf(value, constructor) {\n        if (value instanceof constructor) {\n          return true;\n        }\n\n        if (typeof value === 'object' && value !== null) {\n          var _value$constructor;\n\n          // Prefer Symbol.toStringTag since it is immune to minification.\n          const className = constructor.prototype[Symbol.toStringTag];\n          const valueClassName = // We still need to support constructor's name to detect conflicts with older versions of this library.\n            Symbol.toStringTag in value // @ts-expect-error TS bug see, https://github.com/microsoft/TypeScript/issues/38009\n              ? value[Symbol.toStringTag]\n              : (_value$constructor = value.constructor) === null ||\n                _value$constructor === void 0\n              ? void 0\n              : _value$constructor.name;\n\n          if (className === valueClassName) {\n            const stringifiedValue = (0, _inspect.inspect)(value);\n            throw new Error(`Cannot use ${className} \"${stringifiedValue}\" from another module or realm.\n\nEnsure that there is only one instance of \"graphql\" in the node_modules\ndirectory. If different versions of \"graphql\" are the dependencies of other\nrelied on modules, use \"resolutions\" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate \"graphql\" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`);\n          }\n        }\n\n        return false;\n      };\nexports.instanceOf = instanceOf;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Source = void 0;\nexports.isSource = isSource;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _instanceOf = require('../jsutils/instanceOf.js');\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nclass Source {\n  constructor(\n    body,\n    name = 'GraphQL request',\n    locationOffset = {\n      line: 1,\n      column: 1,\n    },\n  ) {\n    typeof body === 'string' ||\n      (0, _devAssert.devAssert)(\n        false,\n        `Body must be a string. Received: ${(0, _inspect.inspect)(body)}.`,\n      );\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 ||\n      (0, _devAssert.devAssert)(\n        false,\n        'line in locationOffset is 1-indexed and must be positive.',\n      );\n    this.locationOffset.column > 0 ||\n      (0, _devAssert.devAssert)(\n        false,\n        'column in locationOffset is 1-indexed and must be positive.',\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Source';\n  }\n}\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\nexports.Source = Source;\n\nfunction isSource(source) {\n  return (0, _instanceOf.instanceOf)(source, Source);\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Parser = void 0;\nexports.parse = parse;\nexports.parseConstValue = parseConstValue;\nexports.parseType = parseType;\nexports.parseValue = parseValue;\n\nvar _syntaxError = require('../error/syntaxError.js');\n\nvar _ast = require('./ast.js');\n\nvar _directiveLocation = require('./directiveLocation.js');\n\nvar _kinds = require('./kinds.js');\n\nvar _lexer = require('./lexer.js');\n\nvar _source = require('./source.js');\n\nvar _tokenKind = require('./tokenKind.js');\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nfunction parse(source, options) {\n  const parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nfunction parseValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(_tokenKind.TokenKind.SOF);\n  const value = parser.parseValueLiteral(false);\n  parser.expectToken(_tokenKind.TokenKind.EOF);\n  return value;\n}\n/**\n * Similar to parseValue(), but raises a parse error if it encounters a\n * variable. The return type will be a constant value.\n */\n\nfunction parseConstValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(_tokenKind.TokenKind.SOF);\n  const value = parser.parseConstValueLiteral();\n  parser.expectToken(_tokenKind.TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nfunction parseType(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(_tokenKind.TokenKind.SOF);\n  const type = parser.parseTypeReference();\n  parser.expectToken(_tokenKind.TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nclass Parser {\n  constructor(source, options = {}) {\n    const sourceObj = (0, _source.isSource)(source)\n      ? source\n      : new _source.Source(source);\n    this._lexer = new _lexer.Lexer(sourceObj);\n    this._options = options;\n    this._tokenCounter = 0;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n  parseName() {\n    const token = this.expectToken(_tokenKind.TokenKind.NAME);\n    return this.node(token, {\n      kind: _kinds.Kind.NAME,\n      value: token.value,\n    });\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n\n  parseDocument() {\n    return this.node(this._lexer.token, {\n      kind: _kinds.Kind.DOCUMENT,\n      definitions: this.many(\n        _tokenKind.TokenKind.SOF,\n        this.parseDefinition,\n        _tokenKind.TokenKind.EOF,\n      ),\n    });\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   *\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n\n  parseDefinition() {\n    if (this.peek(_tokenKind.TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } // Many definitions begin with a description and require a lookahead.\n\n    const hasDescription = this.peekDescription();\n    const keywordToken = hasDescription\n      ? this._lexer.lookahead()\n      : this._lexer.token;\n\n    if (keywordToken.kind === _tokenKind.TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n\n      if (hasDescription) {\n        throw (0, _syntaxError.syntaxError)(\n          this._lexer.source,\n          this._lexer.token.start,\n          'Unexpected description, descriptions are supported only on type definitions.',\n        );\n      }\n\n      switch (keywordToken.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n\n  parseOperationDefinition() {\n    const start = this._lexer.token;\n\n    if (this.peek(_tokenKind.TokenKind.BRACE_L)) {\n      return this.node(start, {\n        kind: _kinds.Kind.OPERATION_DEFINITION,\n        operation: _ast.OperationTypeNode.QUERY,\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    const operation = this.parseOperationType();\n    let name;\n\n    if (this.peek(_tokenKind.TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.OPERATION_DEFINITION,\n      operation,\n      name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n\n  parseOperationType() {\n    const operationToken = this.expectToken(_tokenKind.TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return _ast.OperationTypeNode.QUERY;\n\n      case 'mutation':\n        return _ast.OperationTypeNode.MUTATION;\n\n      case 'subscription':\n        return _ast.OperationTypeNode.SUBSCRIPTION;\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n\n  parseVariableDefinitions() {\n    return this.optionalMany(\n      _tokenKind.TokenKind.PAREN_L,\n      this.parseVariableDefinition,\n      _tokenKind.TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n\n  parseVariableDefinition() {\n    return this.node(this._lexer.token, {\n      kind: _kinds.Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type:\n        (this.expectToken(_tokenKind.TokenKind.COLON),\n        this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(_tokenKind.TokenKind.EQUALS)\n        ? this.parseConstValueLiteral()\n        : undefined,\n      directives: this.parseConstDirectives(),\n    });\n  }\n  /**\n   * Variable : $ Name\n   */\n\n  parseVariable() {\n    const start = this._lexer.token;\n    this.expectToken(_tokenKind.TokenKind.DOLLAR);\n    return this.node(start, {\n      kind: _kinds.Kind.VARIABLE,\n      name: this.parseName(),\n    });\n  }\n  /**\n   * ```\n   * SelectionSet : { Selection+ }\n   * ```\n   */\n\n  parseSelectionSet() {\n    return this.node(this._lexer.token, {\n      kind: _kinds.Kind.SELECTION_SET,\n      selections: this.many(\n        _tokenKind.TokenKind.BRACE_L,\n        this.parseSelection,\n        _tokenKind.TokenKind.BRACE_R,\n      ),\n    });\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n\n  parseSelection() {\n    return this.peek(_tokenKind.TokenKind.SPREAD)\n      ? this.parseFragment()\n      : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n\n  parseField() {\n    const start = this._lexer.token;\n    const nameOrAlias = this.parseName();\n    let alias;\n    let name;\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.FIELD,\n      alias,\n      name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(_tokenKind.TokenKind.BRACE_L)\n        ? this.parseSelectionSet()\n        : undefined,\n    });\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n\n  parseArguments(isConst) {\n    const item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(\n      _tokenKind.TokenKind.PAREN_L,\n      item,\n      _tokenKind.TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n\n  parseArgument(isConst = false) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    return this.node(start, {\n      kind: _kinds.Kind.ARGUMENT,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  }\n\n  parseConstArgument() {\n    return this.parseArgument(true);\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n\n  parseFragment() {\n    const start = this._lexer.token;\n    this.expectToken(_tokenKind.TokenKind.SPREAD);\n    const hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(_tokenKind.TokenKind.NAME)) {\n      return this.node(start, {\n        kind: _kinds.Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n      });\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n\n  parseFragmentDefinition() {\n    const start = this._lexer.token;\n    this.expectKeyword('fragment'); // Legacy support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (this._options.allowLegacyFragmentVariables === true) {\n      return this.node(start, {\n        kind: _kinds.Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n\n  parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseValueLiteral(isConst) {\n    const token = this._lexer.token;\n\n    switch (token.kind) {\n      case _tokenKind.TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case _tokenKind.TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case _tokenKind.TokenKind.INT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: _kinds.Kind.INT,\n          value: token.value,\n        });\n\n      case _tokenKind.TokenKind.FLOAT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: _kinds.Kind.FLOAT,\n          value: token.value,\n        });\n\n      case _tokenKind.TokenKind.STRING:\n      case _tokenKind.TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case _tokenKind.TokenKind.NAME:\n        this.advanceLexer();\n\n        switch (token.value) {\n          case 'true':\n            return this.node(token, {\n              kind: _kinds.Kind.BOOLEAN,\n              value: true,\n            });\n\n          case 'false':\n            return this.node(token, {\n              kind: _kinds.Kind.BOOLEAN,\n              value: false,\n            });\n\n          case 'null':\n            return this.node(token, {\n              kind: _kinds.Kind.NULL,\n            });\n\n          default:\n            return this.node(token, {\n              kind: _kinds.Kind.ENUM,\n              value: token.value,\n            });\n        }\n\n      case _tokenKind.TokenKind.DOLLAR:\n        if (isConst) {\n          this.expectToken(_tokenKind.TokenKind.DOLLAR);\n\n          if (this._lexer.token.kind === _tokenKind.TokenKind.NAME) {\n            const varName = this._lexer.token.value;\n            throw (0, _syntaxError.syntaxError)(\n              this._lexer.source,\n              token.start,\n              `Unexpected variable \"$${varName}\" in constant value.`,\n            );\n          } else {\n            throw this.unexpected(token);\n          }\n        }\n\n        return this.parseVariable();\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseConstValueLiteral() {\n    return this.parseValueLiteral(true);\n  }\n\n  parseStringLiteral() {\n    const token = this._lexer.token;\n    this.advanceLexer();\n    return this.node(token, {\n      kind: _kinds.Kind.STRING,\n      value: token.value,\n      block: token.kind === _tokenKind.TokenKind.BLOCK_STRING,\n    });\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n\n  parseList(isConst) {\n    const item = () => this.parseValueLiteral(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: _kinds.Kind.LIST,\n      values: this.any(\n        _tokenKind.TokenKind.BRACKET_L,\n        item,\n        _tokenKind.TokenKind.BRACKET_R,\n      ),\n    });\n  }\n  /**\n   * ```\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   * ```\n   */\n\n  parseObject(isConst) {\n    const item = () => this.parseObjectField(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: _kinds.Kind.OBJECT,\n      fields: this.any(\n        _tokenKind.TokenKind.BRACE_L,\n        item,\n        _tokenKind.TokenKind.BRACE_R,\n      ),\n    });\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n\n  parseObjectField(isConst) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    return this.node(start, {\n      kind: _kinds.Kind.OBJECT_FIELD,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n\n  parseDirectives(isConst) {\n    const directives = [];\n\n    while (this.peek(_tokenKind.TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n\n  parseConstDirectives() {\n    return this.parseDirectives(true);\n  }\n  /**\n   * ```\n   * Directive[Const] : @ Name Arguments[?Const]?\n   * ```\n   */\n\n  parseDirective(isConst) {\n    const start = this._lexer.token;\n    this.expectToken(_tokenKind.TokenKind.AT);\n    return this.node(start, {\n      kind: _kinds.Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n    });\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n\n  parseTypeReference() {\n    const start = this._lexer.token;\n    let type;\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.BRACKET_L)) {\n      const innerType = this.parseTypeReference();\n      this.expectToken(_tokenKind.TokenKind.BRACKET_R);\n      type = this.node(start, {\n        kind: _kinds.Kind.LIST_TYPE,\n        type: innerType,\n      });\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.BANG)) {\n      return this.node(start, {\n        kind: _kinds.Kind.NON_NULL_TYPE,\n        type,\n      });\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n\n  parseNamedType() {\n    return this.node(this._lexer.token, {\n      kind: _kinds.Kind.NAMED_TYPE,\n      name: this.parseName(),\n    });\n  } // Implements the parsing rules in the Type Definition section.\n\n  peekDescription() {\n    return (\n      this.peek(_tokenKind.TokenKind.STRING) ||\n      this.peek(_tokenKind.TokenKind.BLOCK_STRING)\n    );\n  }\n  /**\n   * Description : StringValue\n   */\n\n  parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * ```\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   * ```\n   */\n\n  parseSchemaDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.many(\n      _tokenKind.TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      _tokenKind.TokenKind.BRACE_R,\n    );\n    return this.node(start, {\n      kind: _kinds.Kind.SCHEMA_DEFINITION,\n      description,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n\n  parseOperationTypeDefinition() {\n    const start = this._lexer.token;\n    const operation = this.parseOperationType();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    const type = this.parseNamedType();\n    return this.node(start, {\n      kind: _kinds.Kind.OPERATION_TYPE_DEFINITION,\n      operation,\n      type,\n    });\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n\n  parseScalarTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: _kinds.Kind.SCALAR_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n\n  parseObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: _kinds.Kind.OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n\n  parseImplementsInterfaces() {\n    return this.expectOptionalKeyword('implements')\n      ? this.delimitedMany(_tokenKind.TokenKind.AMP, this.parseNamedType)\n      : [];\n  }\n  /**\n   * ```\n   * FieldsDefinition : { FieldDefinition+ }\n   * ```\n   */\n\n  parseFieldsDefinition() {\n    return this.optionalMany(\n      _tokenKind.TokenKind.BRACE_L,\n      this.parseFieldDefinition,\n      _tokenKind.TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n\n  parseFieldDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    const type = this.parseTypeReference();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: _kinds.Kind.FIELD_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      type,\n      directives,\n    });\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n\n  parseArgumentDefs() {\n    return this.optionalMany(\n      _tokenKind.TokenKind.PAREN_L,\n      this.parseInputValueDef,\n      _tokenKind.TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n\n  parseInputValueDef() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    const type = this.parseTypeReference();\n    let defaultValue;\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.EQUALS)) {\n      defaultValue = this.parseConstValueLiteral();\n    }\n\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: _kinds.Kind.INPUT_VALUE_DEFINITION,\n      description,\n      name,\n      type,\n      defaultValue,\n      directives,\n    });\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n\n  parseInterfaceTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: _kinds.Kind.INTERFACE_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n\n  parseUnionTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n    return this.node(start, {\n      kind: _kinds.Kind.UNION_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n\n  parseUnionMemberTypes() {\n    return this.expectOptionalToken(_tokenKind.TokenKind.EQUALS)\n      ? this.delimitedMany(_tokenKind.TokenKind.PIPE, this.parseNamedType)\n      : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n\n  parseEnumTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n    return this.node(start, {\n      kind: _kinds.Kind.ENUM_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * ```\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   * ```\n   */\n\n  parseEnumValuesDefinition() {\n    return this.optionalMany(\n      _tokenKind.TokenKind.BRACE_L,\n      this.parseEnumValueDefinition,\n      _tokenKind.TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   */\n\n  parseEnumValueDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseEnumValueName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: _kinds.Kind.ENUM_VALUE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseEnumValueName() {\n    if (\n      this._lexer.token.value === 'true' ||\n      this._lexer.token.value === 'false' ||\n      this._lexer.token.value === 'null'\n    ) {\n      throw (0, _syntaxError.syntaxError)(\n        this._lexer.source,\n        this._lexer.token.start,\n        `${getTokenDesc(\n          this._lexer.token,\n        )} is reserved and cannot be used for an enum value.`,\n      );\n    }\n\n    return this.parseName();\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n\n  parseInputObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n    return this.node(start, {\n      kind: _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   * ```\n   */\n\n  parseInputFieldsDefinition() {\n    return this.optionalMany(\n      _tokenKind.TokenKind.BRACE_L,\n      this.parseInputValueDef,\n      _tokenKind.TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n\n  parseTypeSystemExtension() {\n    const keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === _tokenKind.TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * ```\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   * ```\n   */\n\n  parseSchemaExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.optionalMany(\n      _tokenKind.TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      _tokenKind.TokenKind.BRACE_R,\n    );\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.SCHEMA_EXTENSION,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n\n  parseScalarTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.SCALAR_TYPE_EXTENSION,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n\n  parseObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.OBJECT_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n\n  parseInterfaceTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.INTERFACE_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n\n  parseUnionTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.UNION_TYPE_EXTENSION,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n\n  parseEnumTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.ENUM_TYPE_EXTENSION,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n\n  parseInputObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   * ```\n   */\n\n  parseDirectiveDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(_tokenKind.TokenKind.AT);\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    const repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    const locations = this.parseDirectiveLocations();\n    return this.node(start, {\n      kind: _kinds.Kind.DIRECTIVE_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      repeatable,\n      locations,\n    });\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n\n  parseDirectiveLocations() {\n    return this.delimitedMany(\n      _tokenKind.TokenKind.PIPE,\n      this.parseDirectiveLocation,\n    );\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n\n  parseDirectiveLocation() {\n    const start = this._lexer.token;\n    const name = this.parseName();\n\n    if (\n      Object.prototype.hasOwnProperty.call(\n        _directiveLocation.DirectiveLocation,\n        name.value,\n      )\n    ) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a node that, if configured to do so, sets a \"loc\" field as a\n   * location object, used to identify the place in the source that created a\n   * given parsed object.\n   */\n\n  node(startToken, node) {\n    if (this._options.noLocation !== true) {\n      node.loc = new _ast.Location(\n        startToken,\n        this._lexer.lastToken,\n        this._lexer.source,\n      );\n    }\n\n    return node;\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n\n  peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return token;\n    }\n\n    throw (0, _syntaxError.syntaxError)(\n      this._lexer.source,\n      token.start,\n      `Expected ${getTokenKindDesc(kind)}, found ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * If the next token is of the given kind, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === _tokenKind.TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n    } else {\n      throw (0, _syntaxError.syntaxError)(\n        this._lexer.source,\n        token.start,\n        `Expected \"${value}\", found ${getTokenDesc(token)}.`,\n      );\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === _tokenKind.TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n\n  unexpected(atToken) {\n    const token =\n      atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return (0, _syntaxError.syntaxError)(\n      this._lexer.source,\n      token.start,\n      `Unexpected ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      const nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n\n  delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  }\n\n  advanceLexer() {\n    const { maxTokens } = this._options;\n\n    const token = this._lexer.advance();\n\n    if (maxTokens !== undefined && token.kind !== _tokenKind.TokenKind.EOF) {\n      ++this._tokenCounter;\n\n      if (this._tokenCounter > maxTokens) {\n        throw (0, _syntaxError.syntaxError)(\n          this._lexer.source,\n          token.start,\n          `Document contains more that ${maxTokens} tokens. Parsing aborted.`,\n        );\n      }\n    }\n  }\n}\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nexports.Parser = Parser;\n\nfunction getTokenDesc(token) {\n  const value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? ` \"${value}\"` : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\nfunction getTokenKindDesc(kind) {\n  return (0, _lexer.isPunctuatorTokenKind)(kind) ? `\"${kind}\"` : kind;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.didYouMean = didYouMean;\nconst MAX_SUGGESTIONS = 5;\n/**\n * Given [ A, B, C ] return ' Did you mean A, B, or C?'.\n */\n\nfunction didYouMean(firstArg, secondArg) {\n  const [subMessage, suggestionsArg] = secondArg\n    ? [firstArg, secondArg]\n    : [undefined, firstArg];\n  let message = ' Did you mean ';\n\n  if (subMessage) {\n    message += subMessage + ' ';\n  }\n\n  const suggestions = suggestionsArg.map((x) => `\"${x}\"`);\n\n  switch (suggestions.length) {\n    case 0:\n      return '';\n\n    case 1:\n      return message + suggestions[0] + '?';\n\n    case 2:\n      return message + suggestions[0] + ' or ' + suggestions[1] + '?';\n  }\n\n  const selected = suggestions.slice(0, MAX_SUGGESTIONS);\n  const lastItem = selected.pop();\n  return message + selected.join(', ') + ', or ' + lastItem + '?';\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.identityFunc = identityFunc;\n\n/**\n * Returns the first argument it receives.\n */\nfunction identityFunc(x) {\n  return x;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.keyMap = keyMap;\n\n/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * for each value in the array.\n *\n * This provides a convenient lookup for the array items if the key function\n * produces unique results.\n * ```ts\n * const phoneBook = [\n *   { name: 'Jon', num: '555-1234' },\n *   { name: 'Jenny', num: '867-5309' }\n * ]\n *\n * const entriesByName = keyMap(\n *   phoneBook,\n *   entry => entry.name\n * )\n *\n * // {\n * //   Jon: { name: 'Jon', num: '555-1234' },\n * //   Jenny: { name: 'Jenny', num: '867-5309' }\n * // }\n *\n * const jennyEntry = entriesByName['Jenny']\n *\n * // { name: 'Jenny', num: '857-6309' }\n * ```\n */\nfunction keyMap(list, keyFn) {\n  const result = Object.create(null);\n\n  for (const item of list) {\n    result[keyFn(item)] = item;\n  }\n\n  return result;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.keyValMap = keyValMap;\n\n/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * and a function to produce the values from each item in the array.\n * ```ts\n * const phoneBook = [\n *   { name: 'Jon', num: '555-1234' },\n *   { name: 'Jenny', num: '867-5309' }\n * ]\n *\n * // { Jon: '555-1234', Jenny: '867-5309' }\n * const phonesByName = keyValMap(\n *   phoneBook,\n *   entry => entry.name,\n *   entry => entry.num\n * )\n * ```\n */\nfunction keyValMap(list, keyFn, valFn) {\n  const result = Object.create(null);\n\n  for (const item of list) {\n    result[keyFn(item)] = valFn(item);\n  }\n\n  return result;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.mapValue = mapValue;\n\n/**\n * Creates an object map with the same keys as `map` and values generated by\n * running each value of `map` thru `fn`.\n */\nfunction mapValue(map, fn) {\n  const result = Object.create(null);\n\n  for (const key of Object.keys(map)) {\n    result[key] = fn(map[key], key);\n  }\n\n  return result;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.naturalCompare = naturalCompare;\n\n/**\n * Returns a number indicating whether a reference string comes before, or after,\n * or is the same as the given string in natural sort order.\n *\n * See: https://en.wikipedia.org/wiki/Natural_sort_order\n *\n */\nfunction naturalCompare(aStr, bStr) {\n  let aIndex = 0;\n  let bIndex = 0;\n\n  while (aIndex < aStr.length && bIndex < bStr.length) {\n    let aChar = aStr.charCodeAt(aIndex);\n    let bChar = bStr.charCodeAt(bIndex);\n\n    if (isDigit(aChar) && isDigit(bChar)) {\n      let aNum = 0;\n\n      do {\n        ++aIndex;\n        aNum = aNum * 10 + aChar - DIGIT_0;\n        aChar = aStr.charCodeAt(aIndex);\n      } while (isDigit(aChar) && aNum > 0);\n\n      let bNum = 0;\n\n      do {\n        ++bIndex;\n        bNum = bNum * 10 + bChar - DIGIT_0;\n        bChar = bStr.charCodeAt(bIndex);\n      } while (isDigit(bChar) && bNum > 0);\n\n      if (aNum < bNum) {\n        return -1;\n      }\n\n      if (aNum > bNum) {\n        return 1;\n      }\n    } else {\n      if (aChar < bChar) {\n        return -1;\n      }\n\n      if (aChar > bChar) {\n        return 1;\n      }\n\n      ++aIndex;\n      ++bIndex;\n    }\n  }\n\n  return aStr.length - bStr.length;\n}\n\nconst DIGIT_0 = 48;\nconst DIGIT_9 = 57;\n\nfunction isDigit(code) {\n  return !isNaN(code) && DIGIT_0 <= code && code <= DIGIT_9;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.suggestionList = suggestionList;\n\nvar _naturalCompare = require('./naturalCompare.js');\n\n/**\n * Given an invalid input string and a list of valid options, returns a filtered\n * list of valid options sorted based on their similarity with the input.\n */\nfunction suggestionList(input, options) {\n  const optionsByDistance = Object.create(null);\n  const lexicalDistance = new LexicalDistance(input);\n  const threshold = Math.floor(input.length * 0.4) + 1;\n\n  for (const option of options) {\n    const distance = lexicalDistance.measure(option, threshold);\n\n    if (distance !== undefined) {\n      optionsByDistance[option] = distance;\n    }\n  }\n\n  return Object.keys(optionsByDistance).sort((a, b) => {\n    const distanceDiff = optionsByDistance[a] - optionsByDistance[b];\n    return distanceDiff !== 0\n      ? distanceDiff\n      : (0, _naturalCompare.naturalCompare)(a, b);\n  });\n}\n/**\n * Computes the lexical distance between strings A and B.\n *\n * The \"distance\" between two strings is given by counting the minimum number\n * of edits needed to transform string A into string B. An edit can be an\n * insertion, deletion, or substitution of a single character, or a swap of two\n * adjacent characters.\n *\n * Includes a custom alteration from Damerau-Levenshtein to treat case changes\n * as a single edit which helps identify mis-cased values with an edit distance\n * of 1.\n *\n * This distance can be useful for detecting typos in input or sorting\n */\n\nclass LexicalDistance {\n  constructor(input) {\n    this._input = input;\n    this._inputLowerCase = input.toLowerCase();\n    this._inputArray = stringToArray(this._inputLowerCase);\n    this._rows = [\n      new Array(input.length + 1).fill(0),\n      new Array(input.length + 1).fill(0),\n      new Array(input.length + 1).fill(0),\n    ];\n  }\n\n  measure(option, threshold) {\n    if (this._input === option) {\n      return 0;\n    }\n\n    const optionLowerCase = option.toLowerCase(); // Any case change counts as a single edit\n\n    if (this._inputLowerCase === optionLowerCase) {\n      return 1;\n    }\n\n    let a = stringToArray(optionLowerCase);\n    let b = this._inputArray;\n\n    if (a.length < b.length) {\n      const tmp = a;\n      a = b;\n      b = tmp;\n    }\n\n    const aLength = a.length;\n    const bLength = b.length;\n\n    if (aLength - bLength > threshold) {\n      return undefined;\n    }\n\n    const rows = this._rows;\n\n    for (let j = 0; j <= bLength; j++) {\n      rows[0][j] = j;\n    }\n\n    for (let i = 1; i <= aLength; i++) {\n      const upRow = rows[(i - 1) % 3];\n      const currentRow = rows[i % 3];\n      let smallestCell = (currentRow[0] = i);\n\n      for (let j = 1; j <= bLength; j++) {\n        const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n        let currentCell = Math.min(\n          upRow[j] + 1, // delete\n          currentRow[j - 1] + 1, // insert\n          upRow[j - 1] + cost, // substitute\n        );\n\n        if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n          // transposition\n          const doubleDiagonalCell = rows[(i - 2) % 3][j - 2];\n          currentCell = Math.min(currentCell, doubleDiagonalCell + 1);\n        }\n\n        if (currentCell < smallestCell) {\n          smallestCell = currentCell;\n        }\n\n        currentRow[j] = currentCell;\n      } // Early exit, since distance can't go smaller than smallest element of the previous row.\n\n      if (smallestCell > threshold) {\n        return undefined;\n      }\n    }\n\n    const distance = rows[aLength % 3][bLength];\n    return distance <= threshold ? distance : undefined;\n  }\n}\n\nfunction stringToArray(str) {\n  const strLength = str.length;\n  const array = new Array(strLength);\n\n  for (let i = 0; i < strLength; ++i) {\n    array[i] = str.charCodeAt(i);\n  }\n\n  return array;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.toObjMap = toObjMap;\n\nfunction toObjMap(obj) {\n  if (obj == null) {\n    return Object.create(null);\n  }\n\n  if (Object.getPrototypeOf(obj) === null) {\n    return obj;\n  }\n\n  const map = Object.create(null);\n\n  for (const [key, value] of Object.entries(obj)) {\n    map[key] = value;\n  }\n\n  return map;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.printString = printString;\n\n/**\n * Prints a string as a GraphQL StringValue literal. Replaces control characters\n * and excluded characters (\" U+0022 and \\\\ U+005C) with escape sequences.\n */\nfunction printString(str) {\n  return `\"${str.replace(escapedRegExp, escapedReplacer)}\"`;\n} // eslint-disable-next-line no-control-regex\n\nconst escapedRegExp = /[\\x00-\\x1f\\x22\\x5c\\x7f-\\x9f]/g;\n\nfunction escapedReplacer(str) {\n  return escapeSequences[str.charCodeAt(0)];\n} // prettier-ignore\n\nconst escapeSequences = [\n  '\\\\u0000',\n  '\\\\u0001',\n  '\\\\u0002',\n  '\\\\u0003',\n  '\\\\u0004',\n  '\\\\u0005',\n  '\\\\u0006',\n  '\\\\u0007',\n  '\\\\b',\n  '\\\\t',\n  '\\\\n',\n  '\\\\u000B',\n  '\\\\f',\n  '\\\\r',\n  '\\\\u000E',\n  '\\\\u000F',\n  '\\\\u0010',\n  '\\\\u0011',\n  '\\\\u0012',\n  '\\\\u0013',\n  '\\\\u0014',\n  '\\\\u0015',\n  '\\\\u0016',\n  '\\\\u0017',\n  '\\\\u0018',\n  '\\\\u0019',\n  '\\\\u001A',\n  '\\\\u001B',\n  '\\\\u001C',\n  '\\\\u001D',\n  '\\\\u001E',\n  '\\\\u001F',\n  '',\n  '',\n  '\\\\\"',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 2F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 3F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 4F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\\\\\',\n  '',\n  '',\n  '', // 5F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 6F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\u007F',\n  '\\\\u0080',\n  '\\\\u0081',\n  '\\\\u0082',\n  '\\\\u0083',\n  '\\\\u0084',\n  '\\\\u0085',\n  '\\\\u0086',\n  '\\\\u0087',\n  '\\\\u0088',\n  '\\\\u0089',\n  '\\\\u008A',\n  '\\\\u008B',\n  '\\\\u008C',\n  '\\\\u008D',\n  '\\\\u008E',\n  '\\\\u008F',\n  '\\\\u0090',\n  '\\\\u0091',\n  '\\\\u0092',\n  '\\\\u0093',\n  '\\\\u0094',\n  '\\\\u0095',\n  '\\\\u0096',\n  '\\\\u0097',\n  '\\\\u0098',\n  '\\\\u0099',\n  '\\\\u009A',\n  '\\\\u009B',\n  '\\\\u009C',\n  '\\\\u009D',\n  '\\\\u009E',\n  '\\\\u009F',\n];\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.BREAK = void 0;\nexports.getEnterLeaveForKind = getEnterLeaveForKind;\nexports.getVisitFn = getVisitFn;\nexports.visit = visit;\nexports.visitInParallel = visitInParallel;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _ast = require('./ast.js');\n\nvar _kinds = require('./kinds.js');\n\nconst BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n * ```ts\n * const editedAST = visit(ast, {\n *   enter(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: skip visiting this node\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   },\n *   leave(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: no action\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   }\n * });\n * ```\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to three permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind(node) {\n *     // enter the \"Kind\" node\n *   }\n * })\n * ```\n *\n * 2) Named visitors that trigger upon entering and leaving a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind: {\n *     enter(node) {\n *       // enter the \"Kind\" node\n *     }\n *     leave(node) {\n *       // leave the \"Kind\" node\n *     }\n *   }\n * })\n * ```\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n * ```ts\n * visit(ast, {\n *   enter(node) {\n *     // enter any node\n *   },\n *   leave(node) {\n *     // leave any node\n *   }\n * })\n * ```\n */\n\nexports.BREAK = BREAK;\n\nfunction visit(root, visitor, visitorKeys = _ast.QueryDocumentKeys) {\n  const enterLeaveMap = new Map();\n\n  for (const kind of Object.values(_kinds.Kind)) {\n    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));\n  }\n  /* eslint-disable no-undef-init */\n\n  let stack = undefined;\n  let inArray = Array.isArray(root);\n  let keys = [root];\n  let index = -1;\n  let edits = [];\n  let node = root;\n  let key = undefined;\n  let parent = undefined;\n  const path = [];\n  const ancestors = [];\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    const isLeaving = index === keys.length;\n    const isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n          let editOffset = 0;\n\n          for (const [editKey, editValue] of edits) {\n            const arrayKey = editKey - editOffset;\n\n            if (editValue === null) {\n              node.splice(arrayKey, 1);\n              editOffset++;\n            } else {\n              node[arrayKey] = editValue;\n            }\n          }\n        } else {\n          node = Object.defineProperties(\n            {},\n            Object.getOwnPropertyDescriptors(node),\n          );\n\n          for (const [editKey, editValue] of edits) {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else if (parent) {\n      key = inArray ? index : keys[index];\n      node = parent[key];\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      path.push(key);\n    }\n\n    let result;\n\n    if (!Array.isArray(node)) {\n      var _enterLeaveMap$get, _enterLeaveMap$get2;\n\n      (0, _ast.isNode)(node) ||\n        (0, _devAssert.devAssert)(\n          false,\n          `Invalid AST Node: ${(0, _inspect.inspect)(node)}.`,\n        );\n      const visitFn = isLeaving\n        ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get === void 0\n          ? void 0\n          : _enterLeaveMap$get.leave\n        : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get2 === void 0\n        ? void 0\n        : _enterLeaveMap$get2.enter;\n      result =\n        visitFn === null || visitFn === void 0\n          ? void 0\n          : visitFn.call(visitor, node, key, parent, path, ancestors);\n\n      if (result === BREAK) {\n        break;\n      }\n\n      if (result === false) {\n        if (!isLeaving) {\n          path.pop();\n          continue;\n        }\n      } else if (result !== undefined) {\n        edits.push([key, result]);\n\n        if (!isLeaving) {\n          if ((0, _ast.isNode)(result)) {\n            node = result;\n          } else {\n            path.pop();\n            continue;\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _node$kind;\n\n      stack = {\n        inArray,\n        index,\n        keys,\n        edits,\n        prev: stack,\n      };\n      inArray = Array.isArray(node);\n      keys = inArray\n        ? node\n        : (_node$kind = visitorKeys[node.kind]) !== null &&\n          _node$kind !== void 0\n        ? _node$kind\n        : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    // New root\n    return edits[edits.length - 1][1];\n  }\n\n  return root;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nfunction visitInParallel(visitors) {\n  const skipping = new Array(visitors.length).fill(null);\n  const mergedVisitor = Object.create(null);\n\n  for (const kind of Object.values(_kinds.Kind)) {\n    let hasVisitor = false;\n    const enterList = new Array(visitors.length).fill(undefined);\n    const leaveList = new Array(visitors.length).fill(undefined);\n\n    for (let i = 0; i < visitors.length; ++i) {\n      const { enter, leave } = getEnterLeaveForKind(visitors[i], kind);\n      hasVisitor || (hasVisitor = enter != null || leave != null);\n      enterList[i] = enter;\n      leaveList[i] = leave;\n    }\n\n    if (!hasVisitor) {\n      continue;\n    }\n\n    const mergedEnterLeave = {\n      enter(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _enterList$i;\n\n            const result =\n              (_enterList$i = enterList[i]) === null || _enterList$i === void 0\n                ? void 0\n                : _enterList$i.apply(visitors[i], args);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      },\n\n      leave(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _leaveList$i;\n\n            const result =\n              (_leaveList$i = leaveList[i]) === null || _leaveList$i === void 0\n                ? void 0\n                : _leaveList$i.apply(visitors[i], args);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          } else if (skipping[i] === node) {\n            skipping[i] = null;\n          }\n        }\n      },\n    };\n    mergedVisitor[kind] = mergedEnterLeave;\n  }\n\n  return mergedVisitor;\n}\n/**\n * Given a visitor instance and a node kind, return EnterLeaveVisitor for that kind.\n */\n\nfunction getEnterLeaveForKind(visitor, kind) {\n  const kindVisitor = visitor[kind];\n\n  if (typeof kindVisitor === 'object') {\n    // { Kind: { enter() {}, leave() {} } }\n    return kindVisitor;\n  } else if (typeof kindVisitor === 'function') {\n    // { Kind() {} }\n    return {\n      enter: kindVisitor,\n      leave: undefined,\n    };\n  } // { enter() {}, leave() {} }\n\n  return {\n    enter: visitor.enter,\n    leave: visitor.leave,\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n *\n * @deprecated Please use `getEnterLeaveForKind` instead. Will be removed in v17\n */\n\n/* c8 ignore next 8 */\n\nfunction getVisitFn(visitor, kind, isLeaving) {\n  const { enter, leave } = getEnterLeaveForKind(visitor, kind);\n  return isLeaving ? leave : enter;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.print = print;\n\nvar _blockString = require('./blockString.js');\n\nvar _printString = require('./printString.js');\n\nvar _visitor = require('./visitor.js');\n\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction print(ast) {\n  return (0, _visitor.visit)(ast, printDocASTReducer);\n}\n\nconst MAX_LINE_LENGTH = 80;\nconst printDocASTReducer = {\n  Name: {\n    leave: (node) => node.value,\n  },\n  Variable: {\n    leave: (node) => '$' + node.name,\n  },\n  // Document\n  Document: {\n    leave: (node) => join(node.definitions, '\\n\\n'),\n  },\n  OperationDefinition: {\n    leave(node) {\n      const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n      const prefix = join(\n        [\n          node.operation,\n          join([node.name, varDefs]),\n          join(node.directives, ' '),\n        ],\n        ' ',\n      ); // Anonymous queries with no directives or variable definitions can use\n      // the query short form.\n\n      return (prefix === 'query' ? '' : prefix + ' ') + node.selectionSet;\n    },\n  },\n  VariableDefinition: {\n    leave: ({ variable, type, defaultValue, directives }) =>\n      variable +\n      ': ' +\n      type +\n      wrap(' = ', defaultValue) +\n      wrap(' ', join(directives, ' ')),\n  },\n  SelectionSet: {\n    leave: ({ selections }) => block(selections),\n  },\n  Field: {\n    leave({ alias, name, arguments: args, directives, selectionSet }) {\n      const prefix = wrap('', alias, ': ') + name;\n      let argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n      if (argsLine.length > MAX_LINE_LENGTH) {\n        argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n      }\n\n      return join([argsLine, join(directives, ' '), selectionSet], ' ');\n    },\n  },\n  Argument: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Fragments\n  FragmentSpread: {\n    leave: ({ name, directives }) =>\n      '...' + name + wrap(' ', join(directives, ' ')),\n  },\n  InlineFragment: {\n    leave: ({ typeCondition, directives, selectionSet }) =>\n      join(\n        [\n          '...',\n          wrap('on ', typeCondition),\n          join(directives, ' '),\n          selectionSet,\n        ],\n        ' ',\n      ),\n  },\n  FragmentDefinition: {\n    leave: (\n      { name, typeCondition, variableDefinitions, directives, selectionSet }, // Note: fragment variable definitions are experimental and may be changed\n    ) =>\n      // or removed in the future.\n      `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n      `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n      selectionSet,\n  },\n  // Value\n  IntValue: {\n    leave: ({ value }) => value,\n  },\n  FloatValue: {\n    leave: ({ value }) => value,\n  },\n  StringValue: {\n    leave: ({ value, block: isBlockString }) =>\n      isBlockString\n        ? (0, _blockString.printBlockString)(value)\n        : (0, _printString.printString)(value),\n  },\n  BooleanValue: {\n    leave: ({ value }) => (value ? 'true' : 'false'),\n  },\n  NullValue: {\n    leave: () => 'null',\n  },\n  EnumValue: {\n    leave: ({ value }) => value,\n  },\n  ListValue: {\n    leave: ({ values }) => '[' + join(values, ', ') + ']',\n  },\n  ObjectValue: {\n    leave: ({ fields }) => '{' + join(fields, ', ') + '}',\n  },\n  ObjectField: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Directive\n  Directive: {\n    leave: ({ name, arguments: args }) =>\n      '@' + name + wrap('(', join(args, ', '), ')'),\n  },\n  // Type\n  NamedType: {\n    leave: ({ name }) => name,\n  },\n  ListType: {\n    leave: ({ type }) => '[' + type + ']',\n  },\n  NonNullType: {\n    leave: ({ type }) => type + '!',\n  },\n  // Type System Definitions\n  SchemaDefinition: {\n    leave: ({ description, directives, operationTypes }) =>\n      wrap('', description, '\\n') +\n      join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n  },\n  OperationTypeDefinition: {\n    leave: ({ operation, type }) => operation + ': ' + type,\n  },\n  ScalarTypeDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') +\n      join(['scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  FieldDefinition: {\n    leave: ({ description, name, arguments: args, type, directives }) =>\n      wrap('', description, '\\n') +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      ': ' +\n      type +\n      wrap(' ', join(directives, ' ')),\n  },\n  InputValueDefinition: {\n    leave: ({ description, name, type, defaultValue, directives }) =>\n      wrap('', description, '\\n') +\n      join(\n        [name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')],\n        ' ',\n      ),\n  },\n  InterfaceTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeDefinition: {\n    leave: ({ description, name, directives, types }) =>\n      wrap('', description, '\\n') +\n      join(\n        ['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))],\n        ' ',\n      ),\n  },\n  EnumTypeDefinition: {\n    leave: ({ description, name, directives, values }) =>\n      wrap('', description, '\\n') +\n      join(['enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  EnumValueDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') + join([name, join(directives, ' ')], ' '),\n  },\n  InputObjectTypeDefinition: {\n    leave: ({ description, name, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(['input', name, join(directives, ' '), block(fields)], ' '),\n  },\n  DirectiveDefinition: {\n    leave: ({ description, name, arguments: args, repeatable, locations }) =>\n      wrap('', description, '\\n') +\n      'directive @' +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      (repeatable ? ' repeatable' : '') +\n      ' on ' +\n      join(locations, ' | '),\n  },\n  SchemaExtension: {\n    leave: ({ directives, operationTypes }) =>\n      join(\n        ['extend schema', join(directives, ' '), block(operationTypes)],\n        ' ',\n      ),\n  },\n  ScalarTypeExtension: {\n    leave: ({ name, directives }) =>\n      join(['extend scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  InterfaceTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeExtension: {\n    leave: ({ name, directives, types }) =>\n      join(\n        [\n          'extend union',\n          name,\n          join(directives, ' '),\n          wrap('= ', join(types, ' | ')),\n        ],\n        ' ',\n      ),\n  },\n  EnumTypeExtension: {\n    leave: ({ name, directives, values }) =>\n      join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  InputObjectTypeExtension: {\n    leave: ({ name, directives, fields }) =>\n      join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n  },\n};\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\nfunction join(maybeArray, separator = '') {\n  var _maybeArray$filter$jo;\n\n  return (_maybeArray$filter$jo =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.filter((x) => x).join(separator)) !== null &&\n    _maybeArray$filter$jo !== void 0\n    ? _maybeArray$filter$jo\n    : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an indented `{ }` block.\n */\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\nfunction wrap(start, maybeString, end = '') {\n  return maybeString != null && maybeString !== ''\n    ? start + maybeString + end\n    : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction hasMultilineItems(maybeArray) {\n  var _maybeArray$some;\n\n  // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n  return (_maybeArray$some =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.some((str) => str.includes('\\n'))) !== null &&\n    _maybeArray$some !== void 0\n    ? _maybeArray$some\n    : false;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.valueFromASTUntyped = valueFromASTUntyped;\n\nvar _keyValMap = require('../jsutils/keyValMap.js');\n\nvar _kinds = require('../language/kinds.js');\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\n * will reflect the provided GraphQL value AST.\n *\n * | GraphQL Value        | JavaScript Value |\n * | -------------------- | ---------------- |\n * | Input Object         | Object           |\n * | List                 | Array            |\n * | Boolean              | Boolean          |\n * | String / Enum        | String           |\n * | Int / Float          | Number           |\n * | Null                 | null             |\n *\n */\nfunction valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case _kinds.Kind.NULL:\n      return null;\n\n    case _kinds.Kind.INT:\n      return parseInt(valueNode.value, 10);\n\n    case _kinds.Kind.FLOAT:\n      return parseFloat(valueNode.value);\n\n    case _kinds.Kind.STRING:\n    case _kinds.Kind.ENUM:\n    case _kinds.Kind.BOOLEAN:\n      return valueNode.value;\n\n    case _kinds.Kind.LIST:\n      return valueNode.values.map((node) =>\n        valueFromASTUntyped(node, variables),\n      );\n\n    case _kinds.Kind.OBJECT:\n      return (0, _keyValMap.keyValMap)(\n        valueNode.fields,\n        (field) => field.name.value,\n        (field) => valueFromASTUntyped(field.value, variables),\n      );\n\n    case _kinds.Kind.VARIABLE:\n      return variables === null || variables === void 0\n        ? void 0\n        : variables[valueNode.name.value];\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.assertEnumValueName = assertEnumValueName;\nexports.assertName = assertName;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _characterClasses = require('../language/characterClasses.js');\n\n/**\n * Upholds the spec rules about naming.\n */\nfunction assertName(name) {\n  name != null || (0, _devAssert.devAssert)(false, 'Must provide name.');\n  typeof name === 'string' ||\n    (0, _devAssert.devAssert)(false, 'Expected name to be a string.');\n\n  if (name.length === 0) {\n    throw new _GraphQLError.GraphQLError(\n      'Expected name to be a non-empty string.',\n    );\n  }\n\n  for (let i = 1; i < name.length; ++i) {\n    if (!(0, _characterClasses.isNameContinue)(name.charCodeAt(i))) {\n      throw new _GraphQLError.GraphQLError(\n        `Names must only contain [_a-zA-Z0-9] but \"${name}\" does not.`,\n      );\n    }\n  }\n\n  if (!(0, _characterClasses.isNameStart)(name.charCodeAt(0))) {\n    throw new _GraphQLError.GraphQLError(\n      `Names must start with [_a-zA-Z] but \"${name}\" does not.`,\n    );\n  }\n\n  return name;\n}\n/**\n * Upholds the spec rules about naming enum values.\n *\n * @internal\n */\n\nfunction assertEnumValueName(name) {\n  if (name === 'true' || name === 'false' || name === 'null') {\n    throw new _GraphQLError.GraphQLError(\n      `Enum values cannot be named: ${name}`,\n    );\n  }\n\n  return assertName(name);\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.GraphQLUnionType =\n  exports.GraphQLScalarType =\n  exports.GraphQLObjectType =\n  exports.GraphQLNonNull =\n  exports.GraphQLList =\n  exports.GraphQLInterfaceType =\n  exports.GraphQLInputObjectType =\n  exports.GraphQLEnumType =\n    void 0;\nexports.argsToArgsConfig = argsToArgsConfig;\nexports.assertAbstractType = assertAbstractType;\nexports.assertCompositeType = assertCompositeType;\nexports.assertEnumType = assertEnumType;\nexports.assertInputObjectType = assertInputObjectType;\nexports.assertInputType = assertInputType;\nexports.assertInterfaceType = assertInterfaceType;\nexports.assertLeafType = assertLeafType;\nexports.assertListType = assertListType;\nexports.assertNamedType = assertNamedType;\nexports.assertNonNullType = assertNonNullType;\nexports.assertNullableType = assertNullableType;\nexports.assertObjectType = assertObjectType;\nexports.assertOutputType = assertOutputType;\nexports.assertScalarType = assertScalarType;\nexports.assertType = assertType;\nexports.assertUnionType = assertUnionType;\nexports.assertWrappingType = assertWrappingType;\nexports.defineArguments = defineArguments;\nexports.getNamedType = getNamedType;\nexports.getNullableType = getNullableType;\nexports.isAbstractType = isAbstractType;\nexports.isCompositeType = isCompositeType;\nexports.isEnumType = isEnumType;\nexports.isInputObjectType = isInputObjectType;\nexports.isInputType = isInputType;\nexports.isInterfaceType = isInterfaceType;\nexports.isLeafType = isLeafType;\nexports.isListType = isListType;\nexports.isNamedType = isNamedType;\nexports.isNonNullType = isNonNullType;\nexports.isNullableType = isNullableType;\nexports.isObjectType = isObjectType;\nexports.isOutputType = isOutputType;\nexports.isRequiredArgument = isRequiredArgument;\nexports.isRequiredInputField = isRequiredInputField;\nexports.isScalarType = isScalarType;\nexports.isType = isType;\nexports.isUnionType = isUnionType;\nexports.isWrappingType = isWrappingType;\nexports.resolveObjMapThunk = resolveObjMapThunk;\nexports.resolveReadonlyArrayThunk = resolveReadonlyArrayThunk;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _didYouMean = require('../jsutils/didYouMean.js');\n\nvar _identityFunc = require('../jsutils/identityFunc.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _instanceOf = require('../jsutils/instanceOf.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _keyMap = require('../jsutils/keyMap.js');\n\nvar _keyValMap = require('../jsutils/keyValMap.js');\n\nvar _mapValue = require('../jsutils/mapValue.js');\n\nvar _suggestionList = require('../jsutils/suggestionList.js');\n\nvar _toObjMap = require('../jsutils/toObjMap.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _printer = require('../language/printer.js');\n\nvar _valueFromASTUntyped = require('../utilities/valueFromASTUntyped.js');\n\nvar _assertName = require('./assertName.js');\n\nfunction isType(type) {\n  return (\n    isScalarType(type) ||\n    isObjectType(type) ||\n    isInterfaceType(type) ||\n    isUnionType(type) ||\n    isEnumType(type) ||\n    isInputObjectType(type) ||\n    isListType(type) ||\n    isNonNullType(type)\n  );\n}\n\nfunction assertType(type) {\n  if (!isType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * There are predicates for each kind of GraphQL type.\n */\n\nfunction isScalarType(type) {\n  return (0, _instanceOf.instanceOf)(type, GraphQLScalarType);\n}\n\nfunction assertScalarType(type) {\n  if (!isScalarType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL Scalar type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction isObjectType(type) {\n  return (0, _instanceOf.instanceOf)(type, GraphQLObjectType);\n}\n\nfunction assertObjectType(type) {\n  if (!isObjectType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL Object type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction isInterfaceType(type) {\n  return (0, _instanceOf.instanceOf)(type, GraphQLInterfaceType);\n}\n\nfunction assertInterfaceType(type) {\n  if (!isInterfaceType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL Interface type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction isUnionType(type) {\n  return (0, _instanceOf.instanceOf)(type, GraphQLUnionType);\n}\n\nfunction assertUnionType(type) {\n  if (!isUnionType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL Union type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction isEnumType(type) {\n  return (0, _instanceOf.instanceOf)(type, GraphQLEnumType);\n}\n\nfunction assertEnumType(type) {\n  if (!isEnumType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL Enum type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction isInputObjectType(type) {\n  return (0, _instanceOf.instanceOf)(type, GraphQLInputObjectType);\n}\n\nfunction assertInputObjectType(type) {\n  if (!isInputObjectType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(\n        type,\n      )} to be a GraphQL Input Object type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction isListType(type) {\n  return (0, _instanceOf.instanceOf)(type, GraphQLList);\n}\n\nfunction assertListType(type) {\n  if (!isListType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL List type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction isNonNullType(type) {\n  return (0, _instanceOf.instanceOf)(type, GraphQLNonNull);\n}\n\nfunction assertNonNullType(type) {\n  if (!isNonNullType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL Non-Null type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * These types may be used as input types for arguments and directives.\n */\n\nfunction isInputType(type) {\n  return (\n    isScalarType(type) ||\n    isEnumType(type) ||\n    isInputObjectType(type) ||\n    (isWrappingType(type) && isInputType(type.ofType))\n  );\n}\n\nfunction assertInputType(type) {\n  if (!isInputType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL input type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * These types may be used as output types as the result of fields.\n */\n\nfunction isOutputType(type) {\n  return (\n    isScalarType(type) ||\n    isObjectType(type) ||\n    isInterfaceType(type) ||\n    isUnionType(type) ||\n    isEnumType(type) ||\n    (isWrappingType(type) && isOutputType(type.ofType))\n  );\n}\n\nfunction assertOutputType(type) {\n  if (!isOutputType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL output type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * These types may describe types which may be leaf values.\n */\n\nfunction isLeafType(type) {\n  return isScalarType(type) || isEnumType(type);\n}\n\nfunction assertLeafType(type) {\n  if (!isLeafType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL leaf type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nfunction isCompositeType(type) {\n  return isObjectType(type) || isInterfaceType(type) || isUnionType(type);\n}\n\nfunction assertCompositeType(type) {\n  if (!isCompositeType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL composite type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nfunction isAbstractType(type) {\n  return isInterfaceType(type) || isUnionType(type);\n}\n\nfunction assertAbstractType(type) {\n  if (!isAbstractType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL abstract type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * List Type Wrapper\n *\n * A list is a wrapping type which points to another type.\n * Lists are often created within the context of defining the fields of\n * an object type.\n *\n * Example:\n *\n * ```ts\n * const PersonType = new GraphQLObjectType({\n *   name: 'Person',\n *   fields: () => ({\n *     parents: { type: new GraphQLList(PersonType) },\n *     children: { type: new GraphQLList(PersonType) },\n *   })\n * })\n * ```\n */\n\nclass GraphQLList {\n  constructor(ofType) {\n    isType(ofType) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `Expected ${(0, _inspect.inspect)(ofType)} to be a GraphQL type.`,\n      );\n    this.ofType = ofType;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLList';\n  }\n\n  toString() {\n    return '[' + String(this.ofType) + ']';\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n/**\n * Non-Null Type Wrapper\n *\n * A non-null is a wrapping type which points to another type.\n * Non-null types enforce that their values are never null and can ensure\n * an error is raised if this ever occurs during a request. It is useful for\n * fields which you can make a strong guarantee on non-nullability, for example\n * usually the id field of a database row will never be null.\n *\n * Example:\n *\n * ```ts\n * const RowType = new GraphQLObjectType({\n *   name: 'Row',\n *   fields: () => ({\n *     id: { type: new GraphQLNonNull(GraphQLString) },\n *   })\n * })\n * ```\n * Note: the enforcement of non-nullability occurs within the executor.\n */\n\nexports.GraphQLList = GraphQLList;\n\nclass GraphQLNonNull {\n  constructor(ofType) {\n    isNullableType(ofType) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `Expected ${(0, _inspect.inspect)(\n          ofType,\n        )} to be a GraphQL nullable type.`,\n      );\n    this.ofType = ofType;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLNonNull';\n  }\n\n  toString() {\n    return String(this.ofType) + '!';\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n/**\n * These types wrap and modify other types\n */\n\nexports.GraphQLNonNull = GraphQLNonNull;\n\nfunction isWrappingType(type) {\n  return isListType(type) || isNonNullType(type);\n}\n\nfunction assertWrappingType(type) {\n  if (!isWrappingType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL wrapping type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * These types can all accept null as a value.\n */\n\nfunction isNullableType(type) {\n  return isType(type) && !isNonNullType(type);\n}\n\nfunction assertNullableType(type) {\n  if (!isNullableType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL nullable type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction getNullableType(type) {\n  if (type) {\n    return isNonNullType(type) ? type.ofType : type;\n  }\n}\n/**\n * These named types do not include modifiers like List or NonNull.\n */\n\nfunction isNamedType(type) {\n  return (\n    isScalarType(type) ||\n    isObjectType(type) ||\n    isInterfaceType(type) ||\n    isUnionType(type) ||\n    isEnumType(type) ||\n    isInputObjectType(type)\n  );\n}\n\nfunction assertNamedType(type) {\n  if (!isNamedType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL named type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction getNamedType(type) {\n  if (type) {\n    let unwrappedType = type;\n\n    while (isWrappingType(unwrappedType)) {\n      unwrappedType = unwrappedType.ofType;\n    }\n\n    return unwrappedType;\n  }\n}\n/**\n * Used while defining GraphQL types to allow for circular references in\n * otherwise immutable type definitions.\n */\n\nfunction resolveReadonlyArrayThunk(thunk) {\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\n\nfunction resolveObjMapThunk(thunk) {\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Scalar Type Definition\n *\n * The leaf values of any request and input values to arguments are\n * Scalars (or Enums) and are defined with a name and a series of functions\n * used to parse input from ast or variables and to ensure validity.\n *\n * If a type's serialize function returns `null` or does not return a value\n * (i.e. it returns `undefined`) then an error will be raised and a `null`\n * value will be returned in the response. It is always better to validate\n *\n * Example:\n *\n * ```ts\n * const OddType = new GraphQLScalarType({\n *   name: 'Odd',\n *   serialize(value) {\n *     if (!Number.isFinite(value)) {\n *       throw new Error(\n *         `Scalar \"Odd\" cannot represent \"${value}\" since it is not a finite number.`,\n *       );\n *     }\n *\n *     if (value % 2 === 0) {\n *       throw new Error(`Scalar \"Odd\" cannot represent \"${value}\" since it is even.`);\n *     }\n *     return value;\n *   }\n * });\n * ```\n */\nclass GraphQLScalarType {\n  constructor(config) {\n    var _config$parseValue,\n      _config$serialize,\n      _config$parseLiteral,\n      _config$extensionASTN;\n\n    const parseValue =\n      (_config$parseValue = config.parseValue) !== null &&\n      _config$parseValue !== void 0\n        ? _config$parseValue\n        : _identityFunc.identityFunc;\n    this.name = (0, _assertName.assertName)(config.name);\n    this.description = config.description;\n    this.specifiedByURL = config.specifiedByURL;\n    this.serialize =\n      (_config$serialize = config.serialize) !== null &&\n      _config$serialize !== void 0\n        ? _config$serialize\n        : _identityFunc.identityFunc;\n    this.parseValue = parseValue;\n    this.parseLiteral =\n      (_config$parseLiteral = config.parseLiteral) !== null &&\n      _config$parseLiteral !== void 0\n        ? _config$parseLiteral\n        : (node, variables) =>\n            parseValue(\n              (0, _valueFromASTUntyped.valueFromASTUntyped)(node, variables),\n            );\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN = config.extensionASTNodes) !== null &&\n      _config$extensionASTN !== void 0\n        ? _config$extensionASTN\n        : [];\n    config.specifiedByURL == null ||\n      typeof config.specifiedByURL === 'string' ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${this.name} must provide \"specifiedByURL\" as a string, ` +\n          `but got: ${(0, _inspect.inspect)(config.specifiedByURL)}.`,\n      );\n    config.serialize == null ||\n      typeof config.serialize === 'function' ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${this.name} must provide \"serialize\" function. If this custom Scalar is also used as an input type, ensure \"parseValue\" and \"parseLiteral\" functions are also provided.`,\n      );\n\n    if (config.parseLiteral) {\n      (typeof config.parseValue === 'function' &&\n        typeof config.parseLiteral === 'function') ||\n        (0, _devAssert.devAssert)(\n          false,\n          `${this.name} must provide both \"parseValue\" and \"parseLiteral\" functions.`,\n        );\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLScalarType';\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      specifiedByURL: this.specifiedByURL,\n      serialize: this.serialize,\n      parseValue: this.parseValue,\n      parseLiteral: this.parseLiteral,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexports.GraphQLScalarType = GraphQLScalarType;\n\n/**\n * Object Type Definition\n *\n * Almost all of the GraphQL types you define will be object types. Object types\n * have a name, but most importantly describe their fields.\n *\n * Example:\n *\n * ```ts\n * const AddressType = new GraphQLObjectType({\n *   name: 'Address',\n *   fields: {\n *     street: { type: GraphQLString },\n *     number: { type: GraphQLInt },\n *     formatted: {\n *       type: GraphQLString,\n *       resolve(obj) {\n *         return obj.number + ' ' + obj.street\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * When two types need to refer to each other, or a type needs to refer to\n * itself in a field, you can use a function expression (aka a closure or a\n * thunk) to supply the fields lazily.\n *\n * Example:\n *\n * ```ts\n * const PersonType = new GraphQLObjectType({\n *   name: 'Person',\n *   fields: () => ({\n *     name: { type: GraphQLString },\n *     bestFriend: { type: PersonType },\n *   })\n * });\n * ```\n */\nclass GraphQLObjectType {\n  constructor(config) {\n    var _config$extensionASTN2;\n\n    this.name = (0, _assertName.assertName)(config.name);\n    this.description = config.description;\n    this.isTypeOf = config.isTypeOf;\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN2 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN2 !== void 0\n        ? _config$extensionASTN2\n        : [];\n\n    this._fields = () => defineFieldMap(config);\n\n    this._interfaces = () => defineInterfaces(config);\n\n    config.isTypeOf == null ||\n      typeof config.isTypeOf === 'function' ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${this.name} must provide \"isTypeOf\" as a function, ` +\n          `but got: ${(0, _inspect.inspect)(config.isTypeOf)}.`,\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLObjectType';\n  }\n\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  }\n\n  getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      isTypeOf: this.isTypeOf,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexports.GraphQLObjectType = GraphQLObjectType;\n\nfunction defineInterfaces(config) {\n  var _config$interfaces;\n\n  const interfaces = resolveReadonlyArrayThunk(\n    (_config$interfaces = config.interfaces) !== null &&\n      _config$interfaces !== void 0\n      ? _config$interfaces\n      : [],\n  );\n  Array.isArray(interfaces) ||\n    (0, _devAssert.devAssert)(\n      false,\n      `${config.name} interfaces must be an Array or a function which returns an Array.`,\n    );\n  return interfaces;\n}\n\nfunction defineFieldMap(config) {\n  const fieldMap = resolveObjMapThunk(config.fields);\n  isPlainObj(fieldMap) ||\n    (0, _devAssert.devAssert)(\n      false,\n      `${config.name} fields must be an object with field names as keys or a function which returns such an object.`,\n    );\n  return (0, _mapValue.mapValue)(fieldMap, (fieldConfig, fieldName) => {\n    var _fieldConfig$args;\n\n    isPlainObj(fieldConfig) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${config.name}.${fieldName} field config must be an object.`,\n      );\n    fieldConfig.resolve == null ||\n      typeof fieldConfig.resolve === 'function' ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${config.name}.${fieldName} field resolver must be a function if ` +\n          `provided, but got: ${(0, _inspect.inspect)(fieldConfig.resolve)}.`,\n      );\n    const argsConfig =\n      (_fieldConfig$args = fieldConfig.args) !== null &&\n      _fieldConfig$args !== void 0\n        ? _fieldConfig$args\n        : {};\n    isPlainObj(argsConfig) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${config.name}.${fieldName} args must be an object with argument names as keys.`,\n      );\n    return {\n      name: (0, _assertName.assertName)(fieldName),\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      args: defineArguments(argsConfig),\n      resolve: fieldConfig.resolve,\n      subscribe: fieldConfig.subscribe,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: (0, _toObjMap.toObjMap)(fieldConfig.extensions),\n      astNode: fieldConfig.astNode,\n    };\n  });\n}\n\nfunction defineArguments(config) {\n  return Object.entries(config).map(([argName, argConfig]) => ({\n    name: (0, _assertName.assertName)(argName),\n    description: argConfig.description,\n    type: argConfig.type,\n    defaultValue: argConfig.defaultValue,\n    deprecationReason: argConfig.deprecationReason,\n    extensions: (0, _toObjMap.toObjMap)(argConfig.extensions),\n    astNode: argConfig.astNode,\n  }));\n}\n\nfunction isPlainObj(obj) {\n  return (0, _isObjectLike.isObjectLike)(obj) && !Array.isArray(obj);\n}\n\nfunction fieldsToFieldsConfig(fields) {\n  return (0, _mapValue.mapValue)(fields, (field) => ({\n    description: field.description,\n    type: field.type,\n    args: argsToArgsConfig(field.args),\n    resolve: field.resolve,\n    subscribe: field.subscribe,\n    deprecationReason: field.deprecationReason,\n    extensions: field.extensions,\n    astNode: field.astNode,\n  }));\n}\n/**\n * @internal\n */\n\nfunction argsToArgsConfig(args) {\n  return (0, _keyValMap.keyValMap)(\n    args,\n    (arg) => arg.name,\n    (arg) => ({\n      description: arg.description,\n      type: arg.type,\n      defaultValue: arg.defaultValue,\n      deprecationReason: arg.deprecationReason,\n      extensions: arg.extensions,\n      astNode: arg.astNode,\n    }),\n  );\n}\n\nfunction isRequiredArgument(arg) {\n  return isNonNullType(arg.type) && arg.defaultValue === undefined;\n}\n\n/**\n * Interface Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Interface type\n * is used to describe what types are possible, what fields are in common across\n * all types, as well as a function to determine which type is actually used\n * when the field is resolved.\n *\n * Example:\n *\n * ```ts\n * const EntityType = new GraphQLInterfaceType({\n *   name: 'Entity',\n *   fields: {\n *     name: { type: GraphQLString }\n *   }\n * });\n * ```\n */\nclass GraphQLInterfaceType {\n  constructor(config) {\n    var _config$extensionASTN3;\n\n    this.name = (0, _assertName.assertName)(config.name);\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN3 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN3 !== void 0\n        ? _config$extensionASTN3\n        : [];\n    this._fields = defineFieldMap.bind(undefined, config);\n    this._interfaces = defineInterfaces.bind(undefined, config);\n    config.resolveType == null ||\n      typeof config.resolveType === 'function' ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${this.name} must provide \"resolveType\" as a function, ` +\n          `but got: ${(0, _inspect.inspect)(config.resolveType)}.`,\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLInterfaceType';\n  }\n\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  }\n\n  getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexports.GraphQLInterfaceType = GraphQLInterfaceType;\n\n/**\n * Union Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Union type\n * is used to describe what types are possible as well as providing a function\n * to determine which type is actually used when the field is resolved.\n *\n * Example:\n *\n * ```ts\n * const PetType = new GraphQLUnionType({\n *   name: 'Pet',\n *   types: [ DogType, CatType ],\n *   resolveType(value) {\n *     if (value instanceof Dog) {\n *       return DogType;\n *     }\n *     if (value instanceof Cat) {\n *       return CatType;\n *     }\n *   }\n * });\n * ```\n */\nclass GraphQLUnionType {\n  constructor(config) {\n    var _config$extensionASTN4;\n\n    this.name = (0, _assertName.assertName)(config.name);\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN4 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN4 !== void 0\n        ? _config$extensionASTN4\n        : [];\n    this._types = defineTypes.bind(undefined, config);\n    config.resolveType == null ||\n      typeof config.resolveType === 'function' ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${this.name} must provide \"resolveType\" as a function, ` +\n          `but got: ${(0, _inspect.inspect)(config.resolveType)}.`,\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLUnionType';\n  }\n\n  getTypes() {\n    if (typeof this._types === 'function') {\n      this._types = this._types();\n    }\n\n    return this._types;\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      types: this.getTypes(),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexports.GraphQLUnionType = GraphQLUnionType;\n\nfunction defineTypes(config) {\n  const types = resolveReadonlyArrayThunk(config.types);\n  Array.isArray(types) ||\n    (0, _devAssert.devAssert)(\n      false,\n      `Must provide Array of types or a function which returns such an array for Union ${config.name}.`,\n    );\n  return types;\n}\n\n/**\n * Enum Type Definition\n *\n * Some leaf values of requests and input values are Enums. GraphQL serializes\n * Enum values as strings, however internally Enums can be represented by any\n * kind of type, often integers.\n *\n * Example:\n *\n * ```ts\n * const RGBType = new GraphQLEnumType({\n *   name: 'RGB',\n *   values: {\n *     RED: { value: 0 },\n *     GREEN: { value: 1 },\n *     BLUE: { value: 2 }\n *   }\n * });\n * ```\n *\n * Note: If a value is not provided in a definition, the name of the enum value\n * will be used as its internal value.\n */\nclass GraphQLEnumType {\n  /* <T> */\n  constructor(config) {\n    var _config$extensionASTN5;\n\n    this.name = (0, _assertName.assertName)(config.name);\n    this.description = config.description;\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN5 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN5 !== void 0\n        ? _config$extensionASTN5\n        : [];\n    this._values = defineEnumValues(this.name, config.values);\n    this._valueLookup = new Map(\n      this._values.map((enumValue) => [enumValue.value, enumValue]),\n    );\n    this._nameLookup = (0, _keyMap.keyMap)(this._values, (value) => value.name);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLEnumType';\n  }\n\n  getValues() {\n    return this._values;\n  }\n\n  getValue(name) {\n    return this._nameLookup[name];\n  }\n\n  serialize(outputValue) {\n    const enumValue = this._valueLookup.get(outputValue);\n\n    if (enumValue === undefined) {\n      throw new _GraphQLError.GraphQLError(\n        `Enum \"${this.name}\" cannot represent value: ${(0, _inspect.inspect)(\n          outputValue,\n        )}`,\n      );\n    }\n\n    return enumValue.name;\n  }\n\n  parseValue(inputValue) /* T */\n  {\n    if (typeof inputValue !== 'string') {\n      const valueStr = (0, _inspect.inspect)(inputValue);\n      throw new _GraphQLError.GraphQLError(\n        `Enum \"${this.name}\" cannot represent non-string value: ${valueStr}.` +\n          didYouMeanEnumValue(this, valueStr),\n      );\n    }\n\n    const enumValue = this.getValue(inputValue);\n\n    if (enumValue == null) {\n      throw new _GraphQLError.GraphQLError(\n        `Value \"${inputValue}\" does not exist in \"${this.name}\" enum.` +\n          didYouMeanEnumValue(this, inputValue),\n      );\n    }\n\n    return enumValue.value;\n  }\n\n  parseLiteral(valueNode, _variables) /* T */\n  {\n    // Note: variables will be resolved to a value before calling this function.\n    if (valueNode.kind !== _kinds.Kind.ENUM) {\n      const valueStr = (0, _printer.print)(valueNode);\n      throw new _GraphQLError.GraphQLError(\n        `Enum \"${this.name}\" cannot represent non-enum value: ${valueStr}.` +\n          didYouMeanEnumValue(this, valueStr),\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    const enumValue = this.getValue(valueNode.value);\n\n    if (enumValue == null) {\n      const valueStr = (0, _printer.print)(valueNode);\n      throw new _GraphQLError.GraphQLError(\n        `Value \"${valueStr}\" does not exist in \"${this.name}\" enum.` +\n          didYouMeanEnumValue(this, valueStr),\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return enumValue.value;\n  }\n\n  toConfig() {\n    const values = (0, _keyValMap.keyValMap)(\n      this.getValues(),\n      (value) => value.name,\n      (value) => ({\n        description: value.description,\n        value: value.value,\n        deprecationReason: value.deprecationReason,\n        extensions: value.extensions,\n        astNode: value.astNode,\n      }),\n    );\n    return {\n      name: this.name,\n      description: this.description,\n      values,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexports.GraphQLEnumType = GraphQLEnumType;\n\nfunction didYouMeanEnumValue(enumType, unknownValueStr) {\n  const allNames = enumType.getValues().map((value) => value.name);\n  const suggestedValues = (0, _suggestionList.suggestionList)(\n    unknownValueStr,\n    allNames,\n  );\n  return (0, _didYouMean.didYouMean)('the enum value', suggestedValues);\n}\n\nfunction defineEnumValues(typeName, valueMap) {\n  isPlainObj(valueMap) ||\n    (0, _devAssert.devAssert)(\n      false,\n      `${typeName} values must be an object with value names as keys.`,\n    );\n  return Object.entries(valueMap).map(([valueName, valueConfig]) => {\n    isPlainObj(valueConfig) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${typeName}.${valueName} must refer to an object with a \"value\" key ` +\n          `representing an internal value but got: ${(0, _inspect.inspect)(\n            valueConfig,\n          )}.`,\n      );\n    return {\n      name: (0, _assertName.assertEnumValueName)(valueName),\n      description: valueConfig.description,\n      value: valueConfig.value !== undefined ? valueConfig.value : valueName,\n      deprecationReason: valueConfig.deprecationReason,\n      extensions: (0, _toObjMap.toObjMap)(valueConfig.extensions),\n      astNode: valueConfig.astNode,\n    };\n  });\n}\n\n/**\n * Input Object Type Definition\n *\n * An input object defines a structured collection of fields which may be\n * supplied to a field argument.\n *\n * Using `NonNull` will ensure that a value must be provided by the query\n *\n * Example:\n *\n * ```ts\n * const GeoPoint = new GraphQLInputObjectType({\n *   name: 'GeoPoint',\n *   fields: {\n *     lat: { type: new GraphQLNonNull(GraphQLFloat) },\n *     lon: { type: new GraphQLNonNull(GraphQLFloat) },\n *     alt: { type: GraphQLFloat, defaultValue: 0 },\n *   }\n * });\n * ```\n */\nclass GraphQLInputObjectType {\n  constructor(config) {\n    var _config$extensionASTN6;\n\n    this.name = (0, _assertName.assertName)(config.name);\n    this.description = config.description;\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN6 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN6 !== void 0\n        ? _config$extensionASTN6\n        : [];\n    this._fields = defineInputFieldMap.bind(undefined, config);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLInputObjectType';\n  }\n\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  }\n\n  toConfig() {\n    const fields = (0, _mapValue.mapValue)(this.getFields(), (field) => ({\n      description: field.description,\n      type: field.type,\n      defaultValue: field.defaultValue,\n      deprecationReason: field.deprecationReason,\n      extensions: field.extensions,\n      astNode: field.astNode,\n    }));\n    return {\n      name: this.name,\n      description: this.description,\n      fields,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexports.GraphQLInputObjectType = GraphQLInputObjectType;\n\nfunction defineInputFieldMap(config) {\n  const fieldMap = resolveObjMapThunk(config.fields);\n  isPlainObj(fieldMap) ||\n    (0, _devAssert.devAssert)(\n      false,\n      `${config.name} fields must be an object with field names as keys or a function which returns such an object.`,\n    );\n  return (0, _mapValue.mapValue)(fieldMap, (fieldConfig, fieldName) => {\n    !('resolve' in fieldConfig) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${config.name}.${fieldName} field has a resolve property, but Input Types cannot define resolvers.`,\n      );\n    return {\n      name: (0, _assertName.assertName)(fieldName),\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      defaultValue: fieldConfig.defaultValue,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: (0, _toObjMap.toObjMap)(fieldConfig.extensions),\n      astNode: fieldConfig.astNode,\n    };\n  });\n}\n\nfunction isRequiredInputField(field) {\n  return isNonNullType(field.type) && field.defaultValue === undefined;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.doTypesOverlap = doTypesOverlap;\nexports.isEqualType = isEqualType;\nexports.isTypeSubTypeOf = isTypeSubTypeOf;\n\nvar _definition = require('../type/definition.js');\n\n/**\n * Provided two types, return true if the types are equal (invariant).\n */\nfunction isEqualType(typeA, typeB) {\n  // Equivalent types are equal.\n  if (typeA === typeB) {\n    return true;\n  } // If either type is non-null, the other must also be non-null.\n\n  if (\n    (0, _definition.isNonNullType)(typeA) &&\n    (0, _definition.isNonNullType)(typeB)\n  ) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // If either type is a list, the other must also be a list.\n\n  if (\n    (0, _definition.isListType)(typeA) &&\n    (0, _definition.isListType)(typeB)\n  ) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // Otherwise the types are not equal.\n\n  return false;\n}\n/**\n * Provided a type and a super type, return true if the first type is either\n * equal or a subset of the second super type (covariant).\n */\n\nfunction isTypeSubTypeOf(schema, maybeSubType, superType) {\n  // Equivalent type is a valid subtype\n  if (maybeSubType === superType) {\n    return true;\n  } // If superType is non-null, maybeSubType must also be non-null.\n\n  if ((0, _definition.isNonNullType)(superType)) {\n    if ((0, _definition.isNonNullType)(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n\n    return false;\n  }\n\n  if ((0, _definition.isNonNullType)(maybeSubType)) {\n    // If superType is nullable, maybeSubType may be non-null or nullable.\n    return isTypeSubTypeOf(schema, maybeSubType.ofType, superType);\n  } // If superType type is a list, maybeSubType type must also be a list.\n\n  if ((0, _definition.isListType)(superType)) {\n    if ((0, _definition.isListType)(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n\n    return false;\n  }\n\n  if ((0, _definition.isListType)(maybeSubType)) {\n    // If superType is not a list, maybeSubType must also be not a list.\n    return false;\n  } // If superType type is an abstract type, check if it is super type of maybeSubType.\n  // Otherwise, the child type is not a valid subtype of the parent type.\n\n  return (\n    (0, _definition.isAbstractType)(superType) &&\n    ((0, _definition.isInterfaceType)(maybeSubType) ||\n      (0, _definition.isObjectType)(maybeSubType)) &&\n    schema.isSubType(superType, maybeSubType)\n  );\n}\n/**\n * Provided two composite types, determine if they \"overlap\". Two composite\n * types overlap when the Sets of possible concrete types for each intersect.\n *\n * This is often used to determine if a fragment of a given type could possibly\n * be visited in a context of another type.\n *\n * This function is commutative.\n */\n\nfunction doTypesOverlap(schema, typeA, typeB) {\n  // Equivalent types overlap\n  if (typeA === typeB) {\n    return true;\n  }\n\n  if ((0, _definition.isAbstractType)(typeA)) {\n    if ((0, _definition.isAbstractType)(typeB)) {\n      // If both types are abstract, then determine if there is any intersection\n      // between possible concrete types of each.\n      return schema\n        .getPossibleTypes(typeA)\n        .some((type) => schema.isSubType(typeB, type));\n    } // Determine if the latter type is a possible concrete type of the former.\n\n    return schema.isSubType(typeA, typeB);\n  }\n\n  if ((0, _definition.isAbstractType)(typeB)) {\n    // Determine if the former type is a possible concrete type of the latter.\n    return schema.isSubType(typeB, typeA);\n  } // Otherwise the types do not overlap.\n\n  return false;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.GraphQLString =\n  exports.GraphQLInt =\n  exports.GraphQLID =\n  exports.GraphQLFloat =\n  exports.GraphQLBoolean =\n  exports.GRAPHQL_MIN_INT =\n  exports.GRAPHQL_MAX_INT =\n    void 0;\nexports.isSpecifiedScalarType = isSpecifiedScalarType;\nexports.specifiedScalarTypes = void 0;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _printer = require('../language/printer.js');\n\nvar _definition = require('./definition.js');\n\n/**\n * Maximum possible Int value as per GraphQL Spec (32-bit signed integer).\n * n.b. This differs from JavaScript's numbers that are IEEE 754 doubles safe up-to 2^53 - 1\n * */\nconst GRAPHQL_MAX_INT = 2147483647;\n/**\n * Minimum possible Int value as per GraphQL Spec (32-bit signed integer).\n * n.b. This differs from JavaScript's numbers that are IEEE 754 doubles safe starting at -(2^53 - 1)\n * */\n\nexports.GRAPHQL_MAX_INT = GRAPHQL_MAX_INT;\nconst GRAPHQL_MIN_INT = -2147483648;\nexports.GRAPHQL_MIN_INT = GRAPHQL_MIN_INT;\nconst GraphQLInt = new _definition.GraphQLScalarType({\n  name: 'Int',\n  description:\n    'The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 1 : 0;\n    }\n\n    let num = coercedValue;\n\n    if (typeof coercedValue === 'string' && coercedValue !== '') {\n      num = Number(coercedValue);\n    }\n\n    if (typeof num !== 'number' || !Number.isInteger(num)) {\n      throw new _GraphQLError.GraphQLError(\n        `Int cannot represent non-integer value: ${(0, _inspect.inspect)(\n          coercedValue,\n        )}`,\n      );\n    }\n\n    if (num > GRAPHQL_MAX_INT || num < GRAPHQL_MIN_INT) {\n      throw new _GraphQLError.GraphQLError(\n        'Int cannot represent non 32-bit signed integer value: ' +\n          (0, _inspect.inspect)(coercedValue),\n      );\n    }\n\n    return num;\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'number' || !Number.isInteger(inputValue)) {\n      throw new _GraphQLError.GraphQLError(\n        `Int cannot represent non-integer value: ${(0, _inspect.inspect)(\n          inputValue,\n        )}`,\n      );\n    }\n\n    if (inputValue > GRAPHQL_MAX_INT || inputValue < GRAPHQL_MIN_INT) {\n      throw new _GraphQLError.GraphQLError(\n        `Int cannot represent non 32-bit signed integer value: ${inputValue}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== _kinds.Kind.INT) {\n      throw new _GraphQLError.GraphQLError(\n        `Int cannot represent non-integer value: ${(0, _printer.print)(\n          valueNode,\n        )}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    const num = parseInt(valueNode.value, 10);\n\n    if (num > GRAPHQL_MAX_INT || num < GRAPHQL_MIN_INT) {\n      throw new _GraphQLError.GraphQLError(\n        `Int cannot represent non 32-bit signed integer value: ${valueNode.value}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return num;\n  },\n});\nexports.GraphQLInt = GraphQLInt;\nconst GraphQLFloat = new _definition.GraphQLScalarType({\n  name: 'Float',\n  description:\n    'The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 1 : 0;\n    }\n\n    let num = coercedValue;\n\n    if (typeof coercedValue === 'string' && coercedValue !== '') {\n      num = Number(coercedValue);\n    }\n\n    if (typeof num !== 'number' || !Number.isFinite(num)) {\n      throw new _GraphQLError.GraphQLError(\n        `Float cannot represent non numeric value: ${(0, _inspect.inspect)(\n          coercedValue,\n        )}`,\n      );\n    }\n\n    return num;\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'number' || !Number.isFinite(inputValue)) {\n      throw new _GraphQLError.GraphQLError(\n        `Float cannot represent non numeric value: ${(0, _inspect.inspect)(\n          inputValue,\n        )}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (\n      valueNode.kind !== _kinds.Kind.FLOAT &&\n      valueNode.kind !== _kinds.Kind.INT\n    ) {\n      throw new _GraphQLError.GraphQLError(\n        `Float cannot represent non numeric value: ${(0, _printer.print)(\n          valueNode,\n        )}`,\n        valueNode,\n      );\n    }\n\n    return parseFloat(valueNode.value);\n  },\n});\nexports.GraphQLFloat = GraphQLFloat;\nconst GraphQLString = new _definition.GraphQLScalarType({\n  name: 'String',\n  description:\n    'The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue); // Serialize string, boolean and number values to a string, but do not\n    // attempt to coerce object, function, symbol, or other types as strings.\n\n    if (typeof coercedValue === 'string') {\n      return coercedValue;\n    }\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 'true' : 'false';\n    }\n\n    if (typeof coercedValue === 'number' && Number.isFinite(coercedValue)) {\n      return coercedValue.toString();\n    }\n\n    throw new _GraphQLError.GraphQLError(\n      `String cannot represent value: ${(0, _inspect.inspect)(outputValue)}`,\n    );\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'string') {\n      throw new _GraphQLError.GraphQLError(\n        `String cannot represent a non string value: ${(0, _inspect.inspect)(\n          inputValue,\n        )}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== _kinds.Kind.STRING) {\n      throw new _GraphQLError.GraphQLError(\n        `String cannot represent a non string value: ${(0, _printer.print)(\n          valueNode,\n        )}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return valueNode.value;\n  },\n});\nexports.GraphQLString = GraphQLString;\nconst GraphQLBoolean = new _definition.GraphQLScalarType({\n  name: 'Boolean',\n  description: 'The `Boolean` scalar type represents `true` or `false`.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue;\n    }\n\n    if (Number.isFinite(coercedValue)) {\n      return coercedValue !== 0;\n    }\n\n    throw new _GraphQLError.GraphQLError(\n      `Boolean cannot represent a non boolean value: ${(0, _inspect.inspect)(\n        coercedValue,\n      )}`,\n    );\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'boolean') {\n      throw new _GraphQLError.GraphQLError(\n        `Boolean cannot represent a non boolean value: ${(0, _inspect.inspect)(\n          inputValue,\n        )}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== _kinds.Kind.BOOLEAN) {\n      throw new _GraphQLError.GraphQLError(\n        `Boolean cannot represent a non boolean value: ${(0, _printer.print)(\n          valueNode,\n        )}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return valueNode.value;\n  },\n});\nexports.GraphQLBoolean = GraphQLBoolean;\nconst GraphQLID = new _definition.GraphQLScalarType({\n  name: 'ID',\n  description:\n    'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'string') {\n      return coercedValue;\n    }\n\n    if (Number.isInteger(coercedValue)) {\n      return String(coercedValue);\n    }\n\n    throw new _GraphQLError.GraphQLError(\n      `ID cannot represent value: ${(0, _inspect.inspect)(outputValue)}`,\n    );\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue === 'string') {\n      return inputValue;\n    }\n\n    if (typeof inputValue === 'number' && Number.isInteger(inputValue)) {\n      return inputValue.toString();\n    }\n\n    throw new _GraphQLError.GraphQLError(\n      `ID cannot represent value: ${(0, _inspect.inspect)(inputValue)}`,\n    );\n  },\n\n  parseLiteral(valueNode) {\n    if (\n      valueNode.kind !== _kinds.Kind.STRING &&\n      valueNode.kind !== _kinds.Kind.INT\n    ) {\n      throw new _GraphQLError.GraphQLError(\n        'ID cannot represent a non-string and non-integer value: ' +\n          (0, _printer.print)(valueNode),\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return valueNode.value;\n  },\n});\nexports.GraphQLID = GraphQLID;\nconst specifiedScalarTypes = Object.freeze([\n  GraphQLString,\n  GraphQLInt,\n  GraphQLFloat,\n  GraphQLBoolean,\n  GraphQLID,\n]);\nexports.specifiedScalarTypes = specifiedScalarTypes;\n\nfunction isSpecifiedScalarType(type) {\n  return specifiedScalarTypes.some(({ name }) => type.name === name);\n} // Support serializing objects with custom valueOf() or toJSON() functions -\n// a common way to represent a complex value which can be represented as\n// a string (ex: MongoDB id objects).\n\nfunction serializeObject(outputValue) {\n  if ((0, _isObjectLike.isObjectLike)(outputValue)) {\n    if (typeof outputValue.valueOf === 'function') {\n      const valueOfResult = outputValue.valueOf();\n\n      if (!(0, _isObjectLike.isObjectLike)(valueOfResult)) {\n        return valueOfResult;\n      }\n    }\n\n    if (typeof outputValue.toJSON === 'function') {\n      return outputValue.toJSON();\n    }\n  }\n\n  return outputValue;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.GraphQLSpecifiedByDirective =\n  exports.GraphQLSkipDirective =\n  exports.GraphQLIncludeDirective =\n  exports.GraphQLDirective =\n  exports.GraphQLDeprecatedDirective =\n  exports.DEFAULT_DEPRECATION_REASON =\n    void 0;\nexports.assertDirective = assertDirective;\nexports.isDirective = isDirective;\nexports.isSpecifiedDirective = isSpecifiedDirective;\nexports.specifiedDirectives = void 0;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _instanceOf = require('../jsutils/instanceOf.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _toObjMap = require('../jsutils/toObjMap.js');\n\nvar _directiveLocation = require('../language/directiveLocation.js');\n\nvar _assertName = require('./assertName.js');\n\nvar _definition = require('./definition.js');\n\nvar _scalars = require('./scalars.js');\n\n/**\n * Test if the given value is a GraphQL directive.\n */\nfunction isDirective(directive) {\n  return (0, _instanceOf.instanceOf)(directive, GraphQLDirective);\n}\n\nfunction assertDirective(directive) {\n  if (!isDirective(directive)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(directive)} to be a GraphQL directive.`,\n    );\n  }\n\n  return directive;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\nclass GraphQLDirective {\n  constructor(config) {\n    var _config$isRepeatable, _config$args;\n\n    this.name = (0, _assertName.assertName)(config.name);\n    this.description = config.description;\n    this.locations = config.locations;\n    this.isRepeatable =\n      (_config$isRepeatable = config.isRepeatable) !== null &&\n      _config$isRepeatable !== void 0\n        ? _config$isRepeatable\n        : false;\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    Array.isArray(config.locations) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `@${config.name} locations must be an Array.`,\n      );\n    const args =\n      (_config$args = config.args) !== null && _config$args !== void 0\n        ? _config$args\n        : {};\n    ((0, _isObjectLike.isObjectLike)(args) && !Array.isArray(args)) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `@${config.name} args must be an object with argument names as keys.`,\n      );\n    this.args = (0, _definition.defineArguments)(args);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLDirective';\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      locations: this.locations,\n      args: (0, _definition.argsToArgsConfig)(this.args),\n      isRepeatable: this.isRepeatable,\n      extensions: this.extensions,\n      astNode: this.astNode,\n    };\n  }\n\n  toString() {\n    return '@' + this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexports.GraphQLDirective = GraphQLDirective;\n\n/**\n * Used to conditionally include fields or fragments.\n */\nconst GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description:\n    'Directs the executor to include this field or fragment only when the `if` argument is true.',\n  locations: [\n    _directiveLocation.DirectiveLocation.FIELD,\n    _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD,\n    _directiveLocation.DirectiveLocation.INLINE_FRAGMENT,\n  ],\n  args: {\n    if: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      description: 'Included when true.',\n    },\n  },\n});\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\n\nexports.GraphQLIncludeDirective = GraphQLIncludeDirective;\nconst GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description:\n    'Directs the executor to skip this field or fragment when the `if` argument is true.',\n  locations: [\n    _directiveLocation.DirectiveLocation.FIELD,\n    _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD,\n    _directiveLocation.DirectiveLocation.INLINE_FRAGMENT,\n  ],\n  args: {\n    if: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      description: 'Skipped when true.',\n    },\n  },\n});\n/**\n * Constant string used for default reason for a deprecation.\n */\n\nexports.GraphQLSkipDirective = GraphQLSkipDirective;\nconst DEFAULT_DEPRECATION_REASON = 'No longer supported';\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\n\nexports.DEFAULT_DEPRECATION_REASON = DEFAULT_DEPRECATION_REASON;\nconst GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [\n    _directiveLocation.DirectiveLocation.FIELD_DEFINITION,\n    _directiveLocation.DirectiveLocation.ARGUMENT_DEFINITION,\n    _directiveLocation.DirectiveLocation.INPUT_FIELD_DEFINITION,\n    _directiveLocation.DirectiveLocation.ENUM_VALUE,\n  ],\n  args: {\n    reason: {\n      type: _scalars.GraphQLString,\n      description:\n        'Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON,\n    },\n  },\n});\n/**\n * Used to provide a URL for specifying the behavior of custom scalar definitions.\n */\n\nexports.GraphQLDeprecatedDirective = GraphQLDeprecatedDirective;\nconst GraphQLSpecifiedByDirective = new GraphQLDirective({\n  name: 'specifiedBy',\n  description: 'Exposes a URL that specifies the behavior of this scalar.',\n  locations: [_directiveLocation.DirectiveLocation.SCALAR],\n  args: {\n    url: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n      description: 'The URL that specifies the behavior of this scalar.',\n    },\n  },\n});\n/**\n * The full list of specified directives.\n */\n\nexports.GraphQLSpecifiedByDirective = GraphQLSpecifiedByDirective;\nconst specifiedDirectives = Object.freeze([\n  GraphQLIncludeDirective,\n  GraphQLSkipDirective,\n  GraphQLDeprecatedDirective,\n  GraphQLSpecifiedByDirective,\n]);\nexports.specifiedDirectives = specifiedDirectives;\n\nfunction isSpecifiedDirective(directive) {\n  return specifiedDirectives.some(({ name }) => name === directive.name);\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.isIterableObject = isIterableObject;\n\n/**\n * Returns true if the provided object is an Object (i.e. not a string literal)\n * and implements the Iterator protocol.\n *\n * This may be used in place of [Array.isArray()][isArray] to determine if\n * an object should be iterated-over e.g. Array, Map, Set, Int8Array,\n * TypedArray, etc. but excludes string literals.\n *\n * @example\n * ```ts\n * isIterableObject([ 1, 2, 3 ]) // true\n * isIterableObject(new Map()) // true\n * isIterableObject('ABC') // false\n * isIterableObject({ key: 'value' }) // false\n * isIterableObject({ length: 1, 0: 'Alpha' }) // false\n * ```\n */\nfunction isIterableObject(maybeIterable) {\n  return (\n    typeof maybeIterable === 'object' &&\n    typeof (maybeIterable === null || maybeIterable === void 0\n      ? void 0\n      : maybeIterable[Symbol.iterator]) === 'function'\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.astFromValue = astFromValue;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _isIterableObject = require('../jsutils/isIterableObject.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _scalars = require('../type/scalars.js');\n\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using suggested GraphQLInputType. For example:\n *\n *     astFromValue(\"value\", GraphQLString)\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * JavaScript values.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String / Enum Value  |\n * | Number        | Int / Float          |\n * | Unknown       | Enum Value           |\n * | null          | NullValue            |\n *\n */\nfunction astFromValue(value, type) {\n  if ((0, _definition.isNonNullType)(type)) {\n    const astValue = astFromValue(value, type.ofType);\n\n    if (\n      (astValue === null || astValue === void 0 ? void 0 : astValue.kind) ===\n      _kinds.Kind.NULL\n    ) {\n      return null;\n    }\n\n    return astValue;\n  } // only explicit null, not undefined, NaN\n\n  if (value === null) {\n    return {\n      kind: _kinds.Kind.NULL,\n    };\n  } // undefined\n\n  if (value === undefined) {\n    return null;\n  } // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n  // the value is not an array, convert the value using the list's item type.\n\n  if ((0, _definition.isListType)(type)) {\n    const itemType = type.ofType;\n\n    if ((0, _isIterableObject.isIterableObject)(value)) {\n      const valuesNodes = [];\n\n      for (const item of value) {\n        const itemNode = astFromValue(item, itemType);\n\n        if (itemNode != null) {\n          valuesNodes.push(itemNode);\n        }\n      }\n\n      return {\n        kind: _kinds.Kind.LIST,\n        values: valuesNodes,\n      };\n    }\n\n    return astFromValue(value, itemType);\n  } // Populate the fields of the input object by creating ASTs from each value\n  // in the JavaScript object according to the fields in the input type.\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    if (!(0, _isObjectLike.isObjectLike)(value)) {\n      return null;\n    }\n\n    const fieldNodes = [];\n\n    for (const field of Object.values(type.getFields())) {\n      const fieldValue = astFromValue(value[field.name], field.type);\n\n      if (fieldValue) {\n        fieldNodes.push({\n          kind: _kinds.Kind.OBJECT_FIELD,\n          name: {\n            kind: _kinds.Kind.NAME,\n            value: field.name,\n          },\n          value: fieldValue,\n        });\n      }\n    }\n\n    return {\n      kind: _kinds.Kind.OBJECT,\n      fields: fieldNodes,\n    };\n  }\n\n  if ((0, _definition.isLeafType)(type)) {\n    // Since value is an internally represented value, it must be serialized\n    // to an externally represented value before converting into an AST.\n    const serialized = type.serialize(value);\n\n    if (serialized == null) {\n      return null;\n    } // Others serialize based on their corresponding JavaScript scalar types.\n\n    if (typeof serialized === 'boolean') {\n      return {\n        kind: _kinds.Kind.BOOLEAN,\n        value: serialized,\n      };\n    } // JavaScript numbers can be Int or Float values.\n\n    if (typeof serialized === 'number' && Number.isFinite(serialized)) {\n      const stringNum = String(serialized);\n      return integerStringRegExp.test(stringNum)\n        ? {\n            kind: _kinds.Kind.INT,\n            value: stringNum,\n          }\n        : {\n            kind: _kinds.Kind.FLOAT,\n            value: stringNum,\n          };\n    }\n\n    if (typeof serialized === 'string') {\n      // Enum types use Enum literals.\n      if ((0, _definition.isEnumType)(type)) {\n        return {\n          kind: _kinds.Kind.ENUM,\n          value: serialized,\n        };\n      } // ID types can use Int literals.\n\n      if (type === _scalars.GraphQLID && integerStringRegExp.test(serialized)) {\n        return {\n          kind: _kinds.Kind.INT,\n          value: serialized,\n        };\n      }\n\n      return {\n        kind: _kinds.Kind.STRING,\n        value: serialized,\n      };\n    }\n\n    throw new TypeError(\n      `Cannot convert value to AST: ${(0, _inspect.inspect)(serialized)}.`,\n    );\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Unexpected input type: ' + (0, _inspect.inspect)(type),\n    );\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\n\nconst integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.introspectionTypes =\n  exports.__TypeKind =\n  exports.__Type =\n  exports.__Schema =\n  exports.__InputValue =\n  exports.__Field =\n  exports.__EnumValue =\n  exports.__DirectiveLocation =\n  exports.__Directive =\n  exports.TypeNameMetaFieldDef =\n  exports.TypeMetaFieldDef =\n  exports.TypeKind =\n  exports.SchemaMetaFieldDef =\n    void 0;\nexports.isIntrospectionType = isIntrospectionType;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _directiveLocation = require('../language/directiveLocation.js');\n\nvar _printer = require('../language/printer.js');\n\nvar _astFromValue = require('../utilities/astFromValue.js');\n\nvar _definition = require('./definition.js');\n\nvar _scalars = require('./scalars.js');\n\nconst __Schema = new _definition.GraphQLObjectType({\n  name: '__Schema',\n  description:\n    'A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.',\n  fields: () => ({\n    description: {\n      type: _scalars.GraphQLString,\n      resolve: (schema) => schema.description,\n    },\n    types: {\n      description: 'A list of all types supported by this server.',\n      type: new _definition.GraphQLNonNull(\n        new _definition.GraphQLList(new _definition.GraphQLNonNull(__Type)),\n      ),\n\n      resolve(schema) {\n        return Object.values(schema.getTypeMap());\n      },\n    },\n    queryType: {\n      description: 'The type that query operations will be rooted at.',\n      type: new _definition.GraphQLNonNull(__Type),\n      resolve: (schema) => schema.getQueryType(),\n    },\n    mutationType: {\n      description:\n        'If this server supports mutation, the type that mutation operations will be rooted at.',\n      type: __Type,\n      resolve: (schema) => schema.getMutationType(),\n    },\n    subscriptionType: {\n      description:\n        'If this server support subscription, the type that subscription operations will be rooted at.',\n      type: __Type,\n      resolve: (schema) => schema.getSubscriptionType(),\n    },\n    directives: {\n      description: 'A list of all directives supported by this server.',\n      type: new _definition.GraphQLNonNull(\n        new _definition.GraphQLList(\n          new _definition.GraphQLNonNull(__Directive),\n        ),\n      ),\n      resolve: (schema) => schema.getDirectives(),\n    },\n  }),\n});\n\nexports.__Schema = __Schema;\n\nconst __Directive = new _definition.GraphQLObjectType({\n  name: '__Directive',\n  description:\n    \"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\\n\\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.\",\n  fields: () => ({\n    name: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n      resolve: (directive) => directive.name,\n    },\n    description: {\n      type: _scalars.GraphQLString,\n      resolve: (directive) => directive.description,\n    },\n    isRepeatable: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      resolve: (directive) => directive.isRepeatable,\n    },\n    locations: {\n      type: new _definition.GraphQLNonNull(\n        new _definition.GraphQLList(\n          new _definition.GraphQLNonNull(__DirectiveLocation),\n        ),\n      ),\n      resolve: (directive) => directive.locations,\n    },\n    args: {\n      type: new _definition.GraphQLNonNull(\n        new _definition.GraphQLList(\n          new _definition.GraphQLNonNull(__InputValue),\n        ),\n      ),\n      args: {\n        includeDeprecated: {\n          type: _scalars.GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(field, { includeDeprecated }) {\n        return includeDeprecated\n          ? field.args\n          : field.args.filter((arg) => arg.deprecationReason == null);\n      },\n    },\n  }),\n});\n\nexports.__Directive = __Directive;\n\nconst __DirectiveLocation = new _definition.GraphQLEnumType({\n  name: '__DirectiveLocation',\n  description:\n    'A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.',\n  values: {\n    QUERY: {\n      value: _directiveLocation.DirectiveLocation.QUERY,\n      description: 'Location adjacent to a query operation.',\n    },\n    MUTATION: {\n      value: _directiveLocation.DirectiveLocation.MUTATION,\n      description: 'Location adjacent to a mutation operation.',\n    },\n    SUBSCRIPTION: {\n      value: _directiveLocation.DirectiveLocation.SUBSCRIPTION,\n      description: 'Location adjacent to a subscription operation.',\n    },\n    FIELD: {\n      value: _directiveLocation.DirectiveLocation.FIELD,\n      description: 'Location adjacent to a field.',\n    },\n    FRAGMENT_DEFINITION: {\n      value: _directiveLocation.DirectiveLocation.FRAGMENT_DEFINITION,\n      description: 'Location adjacent to a fragment definition.',\n    },\n    FRAGMENT_SPREAD: {\n      value: _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD,\n      description: 'Location adjacent to a fragment spread.',\n    },\n    INLINE_FRAGMENT: {\n      value: _directiveLocation.DirectiveLocation.INLINE_FRAGMENT,\n      description: 'Location adjacent to an inline fragment.',\n    },\n    VARIABLE_DEFINITION: {\n      value: _directiveLocation.DirectiveLocation.VARIABLE_DEFINITION,\n      description: 'Location adjacent to a variable definition.',\n    },\n    SCHEMA: {\n      value: _directiveLocation.DirectiveLocation.SCHEMA,\n      description: 'Location adjacent to a schema definition.',\n    },\n    SCALAR: {\n      value: _directiveLocation.DirectiveLocation.SCALAR,\n      description: 'Location adjacent to a scalar definition.',\n    },\n    OBJECT: {\n      value: _directiveLocation.DirectiveLocation.OBJECT,\n      description: 'Location adjacent to an object type definition.',\n    },\n    FIELD_DEFINITION: {\n      value: _directiveLocation.DirectiveLocation.FIELD_DEFINITION,\n      description: 'Location adjacent to a field definition.',\n    },\n    ARGUMENT_DEFINITION: {\n      value: _directiveLocation.DirectiveLocation.ARGUMENT_DEFINITION,\n      description: 'Location adjacent to an argument definition.',\n    },\n    INTERFACE: {\n      value: _directiveLocation.DirectiveLocation.INTERFACE,\n      description: 'Location adjacent to an interface definition.',\n    },\n    UNION: {\n      value: _directiveLocation.DirectiveLocation.UNION,\n      description: 'Location adjacent to a union definition.',\n    },\n    ENUM: {\n      value: _directiveLocation.DirectiveLocation.ENUM,\n      description: 'Location adjacent to an enum definition.',\n    },\n    ENUM_VALUE: {\n      value: _directiveLocation.DirectiveLocation.ENUM_VALUE,\n      description: 'Location adjacent to an enum value definition.',\n    },\n    INPUT_OBJECT: {\n      value: _directiveLocation.DirectiveLocation.INPUT_OBJECT,\n      description: 'Location adjacent to an input object type definition.',\n    },\n    INPUT_FIELD_DEFINITION: {\n      value: _directiveLocation.DirectiveLocation.INPUT_FIELD_DEFINITION,\n      description: 'Location adjacent to an input object field definition.',\n    },\n  },\n});\n\nexports.__DirectiveLocation = __DirectiveLocation;\n\nconst __Type = new _definition.GraphQLObjectType({\n  name: '__Type',\n  description:\n    'The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\\n\\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.',\n  fields: () => ({\n    kind: {\n      type: new _definition.GraphQLNonNull(__TypeKind),\n\n      resolve(type) {\n        if ((0, _definition.isScalarType)(type)) {\n          return TypeKind.SCALAR;\n        }\n\n        if ((0, _definition.isObjectType)(type)) {\n          return TypeKind.OBJECT;\n        }\n\n        if ((0, _definition.isInterfaceType)(type)) {\n          return TypeKind.INTERFACE;\n        }\n\n        if ((0, _definition.isUnionType)(type)) {\n          return TypeKind.UNION;\n        }\n\n        if ((0, _definition.isEnumType)(type)) {\n          return TypeKind.ENUM;\n        }\n\n        if ((0, _definition.isInputObjectType)(type)) {\n          return TypeKind.INPUT_OBJECT;\n        }\n\n        if ((0, _definition.isListType)(type)) {\n          return TypeKind.LIST;\n        }\n\n        if ((0, _definition.isNonNullType)(type)) {\n          return TypeKind.NON_NULL;\n        }\n        /* c8 ignore next 3 */\n        // Not reachable, all possible types have been considered)\n\n        false ||\n          (0, _invariant.invariant)(\n            false,\n            `Unexpected type: \"${(0, _inspect.inspect)(type)}\".`,\n          );\n      },\n    },\n    name: {\n      type: _scalars.GraphQLString,\n      resolve: (type) => ('name' in type ? type.name : undefined),\n    },\n    description: {\n      type: _scalars.GraphQLString,\n      resolve: (\n        type, // FIXME: add test case\n      ) =>\n        /* c8 ignore next */\n        'description' in type ? type.description : undefined,\n    },\n    specifiedByURL: {\n      type: _scalars.GraphQLString,\n      resolve: (obj) =>\n        'specifiedByURL' in obj ? obj.specifiedByURL : undefined,\n    },\n    fields: {\n      type: new _definition.GraphQLList(\n        new _definition.GraphQLNonNull(__Field),\n      ),\n      args: {\n        includeDeprecated: {\n          type: _scalars.GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(type, { includeDeprecated }) {\n        if (\n          (0, _definition.isObjectType)(type) ||\n          (0, _definition.isInterfaceType)(type)\n        ) {\n          const fields = Object.values(type.getFields());\n          return includeDeprecated\n            ? fields\n            : fields.filter((field) => field.deprecationReason == null);\n        }\n      },\n    },\n    interfaces: {\n      type: new _definition.GraphQLList(new _definition.GraphQLNonNull(__Type)),\n\n      resolve(type) {\n        if (\n          (0, _definition.isObjectType)(type) ||\n          (0, _definition.isInterfaceType)(type)\n        ) {\n          return type.getInterfaces();\n        }\n      },\n    },\n    possibleTypes: {\n      type: new _definition.GraphQLList(new _definition.GraphQLNonNull(__Type)),\n\n      resolve(type, _args, _context, { schema }) {\n        if ((0, _definition.isAbstractType)(type)) {\n          return schema.getPossibleTypes(type);\n        }\n      },\n    },\n    enumValues: {\n      type: new _definition.GraphQLList(\n        new _definition.GraphQLNonNull(__EnumValue),\n      ),\n      args: {\n        includeDeprecated: {\n          type: _scalars.GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(type, { includeDeprecated }) {\n        if ((0, _definition.isEnumType)(type)) {\n          const values = type.getValues();\n          return includeDeprecated\n            ? values\n            : values.filter((field) => field.deprecationReason == null);\n        }\n      },\n    },\n    inputFields: {\n      type: new _definition.GraphQLList(\n        new _definition.GraphQLNonNull(__InputValue),\n      ),\n      args: {\n        includeDeprecated: {\n          type: _scalars.GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(type, { includeDeprecated }) {\n        if ((0, _definition.isInputObjectType)(type)) {\n          const values = Object.values(type.getFields());\n          return includeDeprecated\n            ? values\n            : values.filter((field) => field.deprecationReason == null);\n        }\n      },\n    },\n    ofType: {\n      type: __Type,\n      resolve: (type) => ('ofType' in type ? type.ofType : undefined),\n    },\n  }),\n});\n\nexports.__Type = __Type;\n\nconst __Field = new _definition.GraphQLObjectType({\n  name: '__Field',\n  description:\n    'Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.',\n  fields: () => ({\n    name: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n      resolve: (field) => field.name,\n    },\n    description: {\n      type: _scalars.GraphQLString,\n      resolve: (field) => field.description,\n    },\n    args: {\n      type: new _definition.GraphQLNonNull(\n        new _definition.GraphQLList(\n          new _definition.GraphQLNonNull(__InputValue),\n        ),\n      ),\n      args: {\n        includeDeprecated: {\n          type: _scalars.GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(field, { includeDeprecated }) {\n        return includeDeprecated\n          ? field.args\n          : field.args.filter((arg) => arg.deprecationReason == null);\n      },\n    },\n    type: {\n      type: new _definition.GraphQLNonNull(__Type),\n      resolve: (field) => field.type,\n    },\n    isDeprecated: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      resolve: (field) => field.deprecationReason != null,\n    },\n    deprecationReason: {\n      type: _scalars.GraphQLString,\n      resolve: (field) => field.deprecationReason,\n    },\n  }),\n});\n\nexports.__Field = __Field;\n\nconst __InputValue = new _definition.GraphQLObjectType({\n  name: '__InputValue',\n  description:\n    'Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.',\n  fields: () => ({\n    name: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n      resolve: (inputValue) => inputValue.name,\n    },\n    description: {\n      type: _scalars.GraphQLString,\n      resolve: (inputValue) => inputValue.description,\n    },\n    type: {\n      type: new _definition.GraphQLNonNull(__Type),\n      resolve: (inputValue) => inputValue.type,\n    },\n    defaultValue: {\n      type: _scalars.GraphQLString,\n      description:\n        'A GraphQL-formatted string representing the default value for this input value.',\n\n      resolve(inputValue) {\n        const { type, defaultValue } = inputValue;\n        const valueAST = (0, _astFromValue.astFromValue)(defaultValue, type);\n        return valueAST ? (0, _printer.print)(valueAST) : null;\n      },\n    },\n    isDeprecated: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      resolve: (field) => field.deprecationReason != null,\n    },\n    deprecationReason: {\n      type: _scalars.GraphQLString,\n      resolve: (obj) => obj.deprecationReason,\n    },\n  }),\n});\n\nexports.__InputValue = __InputValue;\n\nconst __EnumValue = new _definition.GraphQLObjectType({\n  name: '__EnumValue',\n  description:\n    'One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.',\n  fields: () => ({\n    name: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n      resolve: (enumValue) => enumValue.name,\n    },\n    description: {\n      type: _scalars.GraphQLString,\n      resolve: (enumValue) => enumValue.description,\n    },\n    isDeprecated: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      resolve: (enumValue) => enumValue.deprecationReason != null,\n    },\n    deprecationReason: {\n      type: _scalars.GraphQLString,\n      resolve: (enumValue) => enumValue.deprecationReason,\n    },\n  }),\n});\n\nexports.__EnumValue = __EnumValue;\nvar TypeKind;\nexports.TypeKind = TypeKind;\n\n(function (TypeKind) {\n  TypeKind['SCALAR'] = 'SCALAR';\n  TypeKind['OBJECT'] = 'OBJECT';\n  TypeKind['INTERFACE'] = 'INTERFACE';\n  TypeKind['UNION'] = 'UNION';\n  TypeKind['ENUM'] = 'ENUM';\n  TypeKind['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  TypeKind['LIST'] = 'LIST';\n  TypeKind['NON_NULL'] = 'NON_NULL';\n})(TypeKind || (exports.TypeKind = TypeKind = {}));\n\nconst __TypeKind = new _definition.GraphQLEnumType({\n  name: '__TypeKind',\n  description: 'An enum describing what kind of type a given `__Type` is.',\n  values: {\n    SCALAR: {\n      value: TypeKind.SCALAR,\n      description: 'Indicates this type is a scalar.',\n    },\n    OBJECT: {\n      value: TypeKind.OBJECT,\n      description:\n        'Indicates this type is an object. `fields` and `interfaces` are valid fields.',\n    },\n    INTERFACE: {\n      value: TypeKind.INTERFACE,\n      description:\n        'Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.',\n    },\n    UNION: {\n      value: TypeKind.UNION,\n      description:\n        'Indicates this type is a union. `possibleTypes` is a valid field.',\n    },\n    ENUM: {\n      value: TypeKind.ENUM,\n      description:\n        'Indicates this type is an enum. `enumValues` is a valid field.',\n    },\n    INPUT_OBJECT: {\n      value: TypeKind.INPUT_OBJECT,\n      description:\n        'Indicates this type is an input object. `inputFields` is a valid field.',\n    },\n    LIST: {\n      value: TypeKind.LIST,\n      description: 'Indicates this type is a list. `ofType` is a valid field.',\n    },\n    NON_NULL: {\n      value: TypeKind.NON_NULL,\n      description:\n        'Indicates this type is a non-null. `ofType` is a valid field.',\n    },\n  },\n});\n/**\n * Note that these are GraphQLField and not GraphQLFieldConfig,\n * so the format for args is different.\n */\n\nexports.__TypeKind = __TypeKind;\nconst SchemaMetaFieldDef = {\n  name: '__schema',\n  type: new _definition.GraphQLNonNull(__Schema),\n  description: 'Access the current type schema of this server.',\n  args: [],\n  resolve: (_source, _args, _context, { schema }) => schema,\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined,\n};\nexports.SchemaMetaFieldDef = SchemaMetaFieldDef;\nconst TypeMetaFieldDef = {\n  name: '__type',\n  type: __Type,\n  description: 'Request the type information of a single type.',\n  args: [\n    {\n      name: 'name',\n      description: undefined,\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n      defaultValue: undefined,\n      deprecationReason: undefined,\n      extensions: Object.create(null),\n      astNode: undefined,\n    },\n  ],\n  resolve: (_source, { name }, _context, { schema }) => schema.getType(name),\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined,\n};\nexports.TypeMetaFieldDef = TypeMetaFieldDef;\nconst TypeNameMetaFieldDef = {\n  name: '__typename',\n  type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n  description: 'The name of the current Object type at runtime.',\n  args: [],\n  resolve: (_source, _args, _context, { parentType }) => parentType.name,\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined,\n};\nexports.TypeNameMetaFieldDef = TypeNameMetaFieldDef;\nconst introspectionTypes = Object.freeze([\n  __Schema,\n  __Directive,\n  __DirectiveLocation,\n  __Type,\n  __Field,\n  __InputValue,\n  __EnumValue,\n  __TypeKind,\n]);\nexports.introspectionTypes = introspectionTypes;\n\nfunction isIntrospectionType(type) {\n  return introspectionTypes.some(({ name }) => type.name === name);\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.GraphQLSchema = void 0;\nexports.assertSchema = assertSchema;\nexports.isSchema = isSchema;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _instanceOf = require('../jsutils/instanceOf.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _toObjMap = require('../jsutils/toObjMap.js');\n\nvar _ast = require('../language/ast.js');\n\nvar _definition = require('./definition.js');\n\nvar _directives = require('./directives.js');\n\nvar _introspection = require('./introspection.js');\n\n/**\n * Test if the given value is a GraphQL schema.\n */\nfunction isSchema(schema) {\n  return (0, _instanceOf.instanceOf)(schema, GraphQLSchema);\n}\n\nfunction assertSchema(schema) {\n  if (!isSchema(schema)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(schema)} to be a GraphQL schema.`,\n    );\n  }\n\n  return schema;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Schema Definition\n *\n * A Schema is created by supplying the root types of each type of operation,\n * query and mutation (optional). A schema definition is then supplied to the\n * validator and executor.\n *\n * Example:\n *\n * ```ts\n * const MyAppSchema = new GraphQLSchema({\n *   query: MyAppQueryRootType,\n *   mutation: MyAppMutationRootType,\n * })\n * ```\n *\n * Note: When the schema is constructed, by default only the types that are\n * reachable by traversing the root types are included, other types must be\n * explicitly referenced.\n *\n * Example:\n *\n * ```ts\n * const characterInterface = new GraphQLInterfaceType({\n *   name: 'Character',\n *   ...\n * });\n *\n * const humanType = new GraphQLObjectType({\n *   name: 'Human',\n *   interfaces: [characterInterface],\n *   ...\n * });\n *\n * const droidType = new GraphQLObjectType({\n *   name: 'Droid',\n *   interfaces: [characterInterface],\n *   ...\n * });\n *\n * const schema = new GraphQLSchema({\n *   query: new GraphQLObjectType({\n *     name: 'Query',\n *     fields: {\n *       hero: { type: characterInterface, ... },\n *     }\n *   }),\n *   ...\n *   // Since this schema references only the `Character` interface it's\n *   // necessary to explicitly list the types that implement it if\n *   // you want them to be included in the final schema.\n *   types: [humanType, droidType],\n * })\n * ```\n *\n * Note: If an array of `directives` are provided to GraphQLSchema, that will be\n * the exact list of directives represented and allowed. If `directives` is not\n * provided then a default set of the specified directives (e.g. `@include` and\n * `@skip`) will be used. If you wish to provide *additional* directives to these\n * specified directives, you must explicitly declare them. Example:\n *\n * ```ts\n * const MyAppSchema = new GraphQLSchema({\n *   ...\n *   directives: specifiedDirectives.concat([ myCustomDirective ]),\n * })\n * ```\n */\nclass GraphQLSchema {\n  // Used as a cache for validateSchema().\n  constructor(config) {\n    var _config$extensionASTN, _config$directives;\n\n    // If this schema was built from a source known to be valid, then it may be\n    // marked with assumeValid to avoid an additional type system validation.\n    this.__validationErrors = config.assumeValid === true ? [] : undefined; // Check for common mistakes during construction to produce early errors.\n\n    (0, _isObjectLike.isObjectLike)(config) ||\n      (0, _devAssert.devAssert)(false, 'Must provide configuration object.');\n    !config.types ||\n      Array.isArray(config.types) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `\"types\" must be Array if provided but got: ${(0, _inspect.inspect)(\n          config.types,\n        )}.`,\n      );\n    !config.directives ||\n      Array.isArray(config.directives) ||\n      (0, _devAssert.devAssert)(\n        false,\n        '\"directives\" must be Array if provided but got: ' +\n          `${(0, _inspect.inspect)(config.directives)}.`,\n      );\n    this.description = config.description;\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN = config.extensionASTNodes) !== null &&\n      _config$extensionASTN !== void 0\n        ? _config$extensionASTN\n        : [];\n    this._queryType = config.query;\n    this._mutationType = config.mutation;\n    this._subscriptionType = config.subscription; // Provide specified directives (e.g. @include and @skip) by default.\n\n    this._directives =\n      (_config$directives = config.directives) !== null &&\n      _config$directives !== void 0\n        ? _config$directives\n        : _directives.specifiedDirectives; // To preserve order of user-provided types, we add first to add them to\n    // the set of \"collected\" types, so `collectReferencedTypes` ignore them.\n\n    const allReferencedTypes = new Set(config.types);\n\n    if (config.types != null) {\n      for (const type of config.types) {\n        // When we ready to process this type, we remove it from \"collected\" types\n        // and then add it together with all dependent types in the correct position.\n        allReferencedTypes.delete(type);\n        collectReferencedTypes(type, allReferencedTypes);\n      }\n    }\n\n    if (this._queryType != null) {\n      collectReferencedTypes(this._queryType, allReferencedTypes);\n    }\n\n    if (this._mutationType != null) {\n      collectReferencedTypes(this._mutationType, allReferencedTypes);\n    }\n\n    if (this._subscriptionType != null) {\n      collectReferencedTypes(this._subscriptionType, allReferencedTypes);\n    }\n\n    for (const directive of this._directives) {\n      // Directives are not validated until validateSchema() is called.\n      if ((0, _directives.isDirective)(directive)) {\n        for (const arg of directive.args) {\n          collectReferencedTypes(arg.type, allReferencedTypes);\n        }\n      }\n    }\n\n    collectReferencedTypes(_introspection.__Schema, allReferencedTypes); // Storing the resulting map for reference by the schema.\n\n    this._typeMap = Object.create(null);\n    this._subTypeMap = Object.create(null); // Keep track of all implementations by interface name.\n\n    this._implementationsMap = Object.create(null);\n\n    for (const namedType of allReferencedTypes) {\n      if (namedType == null) {\n        continue;\n      }\n\n      const typeName = namedType.name;\n      typeName ||\n        (0, _devAssert.devAssert)(\n          false,\n          'One of the provided types for building the Schema is missing a name.',\n        );\n\n      if (this._typeMap[typeName] !== undefined) {\n        throw new Error(\n          `Schema must contain uniquely named types but contains multiple types named \"${typeName}\".`,\n        );\n      }\n\n      this._typeMap[typeName] = namedType;\n\n      if ((0, _definition.isInterfaceType)(namedType)) {\n        // Store implementations by interface.\n        for (const iface of namedType.getInterfaces()) {\n          if ((0, _definition.isInterfaceType)(iface)) {\n            let implementations = this._implementationsMap[iface.name];\n\n            if (implementations === undefined) {\n              implementations = this._implementationsMap[iface.name] = {\n                objects: [],\n                interfaces: [],\n              };\n            }\n\n            implementations.interfaces.push(namedType);\n          }\n        }\n      } else if ((0, _definition.isObjectType)(namedType)) {\n        // Store implementations by objects.\n        for (const iface of namedType.getInterfaces()) {\n          if ((0, _definition.isInterfaceType)(iface)) {\n            let implementations = this._implementationsMap[iface.name];\n\n            if (implementations === undefined) {\n              implementations = this._implementationsMap[iface.name] = {\n                objects: [],\n                interfaces: [],\n              };\n            }\n\n            implementations.objects.push(namedType);\n          }\n        }\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLSchema';\n  }\n\n  getQueryType() {\n    return this._queryType;\n  }\n\n  getMutationType() {\n    return this._mutationType;\n  }\n\n  getSubscriptionType() {\n    return this._subscriptionType;\n  }\n\n  getRootType(operation) {\n    switch (operation) {\n      case _ast.OperationTypeNode.QUERY:\n        return this.getQueryType();\n\n      case _ast.OperationTypeNode.MUTATION:\n        return this.getMutationType();\n\n      case _ast.OperationTypeNode.SUBSCRIPTION:\n        return this.getSubscriptionType();\n    }\n  }\n\n  getTypeMap() {\n    return this._typeMap;\n  }\n\n  getType(name) {\n    return this.getTypeMap()[name];\n  }\n\n  getPossibleTypes(abstractType) {\n    return (0, _definition.isUnionType)(abstractType)\n      ? abstractType.getTypes()\n      : this.getImplementations(abstractType).objects;\n  }\n\n  getImplementations(interfaceType) {\n    const implementations = this._implementationsMap[interfaceType.name];\n    return implementations !== null && implementations !== void 0\n      ? implementations\n      : {\n          objects: [],\n          interfaces: [],\n        };\n  }\n\n  isSubType(abstractType, maybeSubType) {\n    let map = this._subTypeMap[abstractType.name];\n\n    if (map === undefined) {\n      map = Object.create(null);\n\n      if ((0, _definition.isUnionType)(abstractType)) {\n        for (const type of abstractType.getTypes()) {\n          map[type.name] = true;\n        }\n      } else {\n        const implementations = this.getImplementations(abstractType);\n\n        for (const type of implementations.objects) {\n          map[type.name] = true;\n        }\n\n        for (const type of implementations.interfaces) {\n          map[type.name] = true;\n        }\n      }\n\n      this._subTypeMap[abstractType.name] = map;\n    }\n\n    return map[maybeSubType.name] !== undefined;\n  }\n\n  getDirectives() {\n    return this._directives;\n  }\n\n  getDirective(name) {\n    return this.getDirectives().find((directive) => directive.name === name);\n  }\n\n  toConfig() {\n    return {\n      description: this.description,\n      query: this.getQueryType(),\n      mutation: this.getMutationType(),\n      subscription: this.getSubscriptionType(),\n      types: Object.values(this.getTypeMap()),\n      directives: this.getDirectives(),\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n      assumeValid: this.__validationErrors !== undefined,\n    };\n  }\n}\n\nexports.GraphQLSchema = GraphQLSchema;\n\nfunction collectReferencedTypes(type, typeSet) {\n  const namedType = (0, _definition.getNamedType)(type);\n\n  if (!typeSet.has(namedType)) {\n    typeSet.add(namedType);\n\n    if ((0, _definition.isUnionType)(namedType)) {\n      for (const memberType of namedType.getTypes()) {\n        collectReferencedTypes(memberType, typeSet);\n      }\n    } else if (\n      (0, _definition.isObjectType)(namedType) ||\n      (0, _definition.isInterfaceType)(namedType)\n    ) {\n      for (const interfaceType of namedType.getInterfaces()) {\n        collectReferencedTypes(interfaceType, typeSet);\n      }\n\n      for (const field of Object.values(namedType.getFields())) {\n        collectReferencedTypes(field.type, typeSet);\n\n        for (const arg of field.args) {\n          collectReferencedTypes(arg.type, typeSet);\n        }\n      }\n    } else if ((0, _definition.isInputObjectType)(namedType)) {\n      for (const field of Object.values(namedType.getFields())) {\n        collectReferencedTypes(field.type, typeSet);\n      }\n    }\n  }\n\n  return typeSet;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.assertValidSchema = assertValidSchema;\nexports.validateSchema = validateSchema;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _ast = require('../language/ast.js');\n\nvar _typeComparators = require('../utilities/typeComparators.js');\n\nvar _definition = require('./definition.js');\n\nvar _directives = require('./directives.js');\n\nvar _introspection = require('./introspection.js');\n\nvar _schema = require('./schema.js');\n\n/**\n * Implements the \"Type Validation\" sub-sections of the specification's\n * \"Type System\" section.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the Schema is valid.\n */\nfunction validateSchema(schema) {\n  // First check to ensure the provided value is in fact a GraphQLSchema.\n  (0, _schema.assertSchema)(schema); // If this Schema has already been validated, return the previous results.\n\n  if (schema.__validationErrors) {\n    return schema.__validationErrors;\n  } // Validate the schema, producing a list of errors.\n\n  const context = new SchemaValidationContext(schema);\n  validateRootTypes(context);\n  validateDirectives(context);\n  validateTypes(context); // Persist the results of validation before returning to ensure validation\n  // does not run multiple times for this schema.\n\n  const errors = context.getErrors();\n  schema.__validationErrors = errors;\n  return errors;\n}\n/**\n * Utility function which asserts a schema is valid by throwing an error if\n * it is invalid.\n */\n\nfunction assertValidSchema(schema) {\n  const errors = validateSchema(schema);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n  }\n}\n\nclass SchemaValidationContext {\n  constructor(schema) {\n    this._errors = [];\n    this.schema = schema;\n  }\n\n  reportError(message, nodes) {\n    const _nodes = Array.isArray(nodes) ? nodes.filter(Boolean) : nodes;\n\n    this._errors.push(\n      new _GraphQLError.GraphQLError(message, {\n        nodes: _nodes,\n      }),\n    );\n  }\n\n  getErrors() {\n    return this._errors;\n  }\n}\n\nfunction validateRootTypes(context) {\n  const schema = context.schema;\n  const queryType = schema.getQueryType();\n\n  if (!queryType) {\n    context.reportError('Query root type must be provided.', schema.astNode);\n  } else if (!(0, _definition.isObjectType)(queryType)) {\n    var _getOperationTypeNode;\n\n    context.reportError(\n      `Query root type must be Object type, it cannot be ${(0,\n      _inspect.inspect)(queryType)}.`,\n      (_getOperationTypeNode = getOperationTypeNode(\n        schema,\n        _ast.OperationTypeNode.QUERY,\n      )) !== null && _getOperationTypeNode !== void 0\n        ? _getOperationTypeNode\n        : queryType.astNode,\n    );\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType && !(0, _definition.isObjectType)(mutationType)) {\n    var _getOperationTypeNode2;\n\n    context.reportError(\n      'Mutation root type must be Object type if provided, it cannot be ' +\n        `${(0, _inspect.inspect)(mutationType)}.`,\n      (_getOperationTypeNode2 = getOperationTypeNode(\n        schema,\n        _ast.OperationTypeNode.MUTATION,\n      )) !== null && _getOperationTypeNode2 !== void 0\n        ? _getOperationTypeNode2\n        : mutationType.astNode,\n    );\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && !(0, _definition.isObjectType)(subscriptionType)) {\n    var _getOperationTypeNode3;\n\n    context.reportError(\n      'Subscription root type must be Object type if provided, it cannot be ' +\n        `${(0, _inspect.inspect)(subscriptionType)}.`,\n      (_getOperationTypeNode3 = getOperationTypeNode(\n        schema,\n        _ast.OperationTypeNode.SUBSCRIPTION,\n      )) !== null && _getOperationTypeNode3 !== void 0\n        ? _getOperationTypeNode3\n        : subscriptionType.astNode,\n    );\n  }\n}\n\nfunction getOperationTypeNode(schema, operation) {\n  var _flatMap$find;\n\n  return (_flatMap$find = [schema.astNode, ...schema.extensionASTNodes]\n    .flatMap(\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      (schemaNode) => {\n        var _schemaNode$operation;\n\n        return (\n          /* c8 ignore next */\n          (_schemaNode$operation =\n            schemaNode === null || schemaNode === void 0\n              ? void 0\n              : schemaNode.operationTypes) !== null &&\n            _schemaNode$operation !== void 0\n            ? _schemaNode$operation\n            : []\n        );\n      },\n    )\n    .find((operationNode) => operationNode.operation === operation)) === null ||\n    _flatMap$find === void 0\n    ? void 0\n    : _flatMap$find.type;\n}\n\nfunction validateDirectives(context) {\n  for (const directive of context.schema.getDirectives()) {\n    // Ensure all directives are in fact GraphQL directives.\n    if (!(0, _directives.isDirective)(directive)) {\n      context.reportError(\n        `Expected directive but got: ${(0, _inspect.inspect)(directive)}.`,\n        directive === null || directive === void 0 ? void 0 : directive.astNode,\n      );\n      continue;\n    } // Ensure they are named correctly.\n\n    validateName(context, directive); // TODO: Ensure proper locations.\n    // Ensure the arguments are valid.\n\n    for (const arg of directive.args) {\n      // Ensure they are named correctly.\n      validateName(context, arg); // Ensure the type is an input type.\n\n      if (!(0, _definition.isInputType)(arg.type)) {\n        context.reportError(\n          `The type of @${directive.name}(${arg.name}:) must be Input Type ` +\n            `but got: ${(0, _inspect.inspect)(arg.type)}.`,\n          arg.astNode,\n        );\n      }\n\n      if (\n        (0, _definition.isRequiredArgument)(arg) &&\n        arg.deprecationReason != null\n      ) {\n        var _arg$astNode;\n\n        context.reportError(\n          `Required argument @${directive.name}(${arg.name}:) cannot be deprecated.`,\n          [\n            getDeprecatedDirectiveNode(arg.astNode),\n            (_arg$astNode = arg.astNode) === null || _arg$astNode === void 0\n              ? void 0\n              : _arg$astNode.type,\n          ],\n        );\n      }\n    }\n  }\n}\n\nfunction validateName(context, node) {\n  // Ensure names are valid, however introspection types opt out.\n  if (node.name.startsWith('__')) {\n    context.reportError(\n      `Name \"${node.name}\" must not begin with \"__\", which is reserved by GraphQL introspection.`,\n      node.astNode,\n    );\n  }\n}\n\nfunction validateTypes(context) {\n  const validateInputObjectCircularRefs =\n    createInputObjectCircularRefsValidator(context);\n  const typeMap = context.schema.getTypeMap();\n\n  for (const type of Object.values(typeMap)) {\n    // Ensure all provided types are in fact GraphQL type.\n    if (!(0, _definition.isNamedType)(type)) {\n      context.reportError(\n        `Expected GraphQL named type but got: ${(0, _inspect.inspect)(type)}.`,\n        type.astNode,\n      );\n      continue;\n    } // Ensure it is named correctly (excluding introspection types).\n\n    if (!(0, _introspection.isIntrospectionType)(type)) {\n      validateName(context, type);\n    }\n\n    if ((0, _definition.isObjectType)(type)) {\n      // Ensure fields are valid\n      validateFields(context, type); // Ensure objects implement the interfaces they claim to.\n\n      validateInterfaces(context, type);\n    } else if ((0, _definition.isInterfaceType)(type)) {\n      // Ensure fields are valid.\n      validateFields(context, type); // Ensure interfaces implement the interfaces they claim to.\n\n      validateInterfaces(context, type);\n    } else if ((0, _definition.isUnionType)(type)) {\n      // Ensure Unions include valid member types.\n      validateUnionMembers(context, type);\n    } else if ((0, _definition.isEnumType)(type)) {\n      // Ensure Enums have valid values.\n      validateEnumValues(context, type);\n    } else if ((0, _definition.isInputObjectType)(type)) {\n      // Ensure Input Object fields are valid.\n      validateInputFields(context, type); // Ensure Input Objects do not contain non-nullable circular references\n\n      validateInputObjectCircularRefs(type);\n    }\n  }\n}\n\nfunction validateFields(context, type) {\n  const fields = Object.values(type.getFields()); // Objects and Interfaces both must define one or more fields.\n\n  if (fields.length === 0) {\n    context.reportError(`Type ${type.name} must define one or more fields.`, [\n      type.astNode,\n      ...type.extensionASTNodes,\n    ]);\n  }\n\n  for (const field of fields) {\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an output type\n\n    if (!(0, _definition.isOutputType)(field.type)) {\n      var _field$astNode;\n\n      context.reportError(\n        `The type of ${type.name}.${field.name} must be Output Type ` +\n          `but got: ${(0, _inspect.inspect)(field.type)}.`,\n        (_field$astNode = field.astNode) === null || _field$astNode === void 0\n          ? void 0\n          : _field$astNode.type,\n      );\n    } // Ensure the arguments are valid\n\n    for (const arg of field.args) {\n      const argName = arg.name; // Ensure they are named correctly.\n\n      validateName(context, arg); // Ensure the type is an input type\n\n      if (!(0, _definition.isInputType)(arg.type)) {\n        var _arg$astNode2;\n\n        context.reportError(\n          `The type of ${type.name}.${field.name}(${argName}:) must be Input ` +\n            `Type but got: ${(0, _inspect.inspect)(arg.type)}.`,\n          (_arg$astNode2 = arg.astNode) === null || _arg$astNode2 === void 0\n            ? void 0\n            : _arg$astNode2.type,\n        );\n      }\n\n      if (\n        (0, _definition.isRequiredArgument)(arg) &&\n        arg.deprecationReason != null\n      ) {\n        var _arg$astNode3;\n\n        context.reportError(\n          `Required argument ${type.name}.${field.name}(${argName}:) cannot be deprecated.`,\n          [\n            getDeprecatedDirectiveNode(arg.astNode),\n            (_arg$astNode3 = arg.astNode) === null || _arg$astNode3 === void 0\n              ? void 0\n              : _arg$astNode3.type,\n          ],\n        );\n      }\n    }\n  }\n}\n\nfunction validateInterfaces(context, type) {\n  const ifaceTypeNames = Object.create(null);\n\n  for (const iface of type.getInterfaces()) {\n    if (!(0, _definition.isInterfaceType)(iface)) {\n      context.reportError(\n        `Type ${(0, _inspect.inspect)(\n          type,\n        )} must only implement Interface types, ` +\n          `it cannot implement ${(0, _inspect.inspect)(iface)}.`,\n        getAllImplementsInterfaceNodes(type, iface),\n      );\n      continue;\n    }\n\n    if (type === iface) {\n      context.reportError(\n        `Type ${type.name} cannot implement itself because it would create a circular reference.`,\n        getAllImplementsInterfaceNodes(type, iface),\n      );\n      continue;\n    }\n\n    if (ifaceTypeNames[iface.name]) {\n      context.reportError(\n        `Type ${type.name} can only implement ${iface.name} once.`,\n        getAllImplementsInterfaceNodes(type, iface),\n      );\n      continue;\n    }\n\n    ifaceTypeNames[iface.name] = true;\n    validateTypeImplementsAncestors(context, type, iface);\n    validateTypeImplementsInterface(context, type, iface);\n  }\n}\n\nfunction validateTypeImplementsInterface(context, type, iface) {\n  const typeFieldMap = type.getFields(); // Assert each interface field is implemented.\n\n  for (const ifaceField of Object.values(iface.getFields())) {\n    const fieldName = ifaceField.name;\n    const typeField = typeFieldMap[fieldName]; // Assert interface field exists on type.\n\n    if (!typeField) {\n      context.reportError(\n        `Interface field ${iface.name}.${fieldName} expected but ${type.name} does not provide it.`,\n        [ifaceField.astNode, type.astNode, ...type.extensionASTNodes],\n      );\n      continue;\n    } // Assert interface field type is satisfied by type field type, by being\n    // a valid subtype. (covariant)\n\n    if (\n      !(0, _typeComparators.isTypeSubTypeOf)(\n        context.schema,\n        typeField.type,\n        ifaceField.type,\n      )\n    ) {\n      var _ifaceField$astNode, _typeField$astNode;\n\n      context.reportError(\n        `Interface field ${iface.name}.${fieldName} expects type ` +\n          `${(0, _inspect.inspect)(ifaceField.type)} but ${\n            type.name\n          }.${fieldName} ` +\n          `is type ${(0, _inspect.inspect)(typeField.type)}.`,\n        [\n          (_ifaceField$astNode = ifaceField.astNode) === null ||\n          _ifaceField$astNode === void 0\n            ? void 0\n            : _ifaceField$astNode.type,\n          (_typeField$astNode = typeField.astNode) === null ||\n          _typeField$astNode === void 0\n            ? void 0\n            : _typeField$astNode.type,\n        ],\n      );\n    } // Assert each interface field arg is implemented.\n\n    for (const ifaceArg of ifaceField.args) {\n      const argName = ifaceArg.name;\n      const typeArg = typeField.args.find((arg) => arg.name === argName); // Assert interface field arg exists on object field.\n\n      if (!typeArg) {\n        context.reportError(\n          `Interface field argument ${iface.name}.${fieldName}(${argName}:) expected but ${type.name}.${fieldName} does not provide it.`,\n          [ifaceArg.astNode, typeField.astNode],\n        );\n        continue;\n      } // Assert interface field arg type matches object field arg type.\n      // (invariant)\n      // TODO: change to contravariant?\n\n      if (!(0, _typeComparators.isEqualType)(ifaceArg.type, typeArg.type)) {\n        var _ifaceArg$astNode, _typeArg$astNode;\n\n        context.reportError(\n          `Interface field argument ${iface.name}.${fieldName}(${argName}:) ` +\n            `expects type ${(0, _inspect.inspect)(ifaceArg.type)} but ` +\n            `${type.name}.${fieldName}(${argName}:) is type ` +\n            `${(0, _inspect.inspect)(typeArg.type)}.`,\n          [\n            (_ifaceArg$astNode = ifaceArg.astNode) === null ||\n            _ifaceArg$astNode === void 0\n              ? void 0\n              : _ifaceArg$astNode.type,\n            (_typeArg$astNode = typeArg.astNode) === null ||\n            _typeArg$astNode === void 0\n              ? void 0\n              : _typeArg$astNode.type,\n          ],\n        );\n      } // TODO: validate default values?\n    } // Assert additional arguments must not be required.\n\n    for (const typeArg of typeField.args) {\n      const argName = typeArg.name;\n      const ifaceArg = ifaceField.args.find((arg) => arg.name === argName);\n\n      if (!ifaceArg && (0, _definition.isRequiredArgument)(typeArg)) {\n        context.reportError(\n          `Object field ${type.name}.${fieldName} includes required argument ${argName} that is missing from the Interface field ${iface.name}.${fieldName}.`,\n          [typeArg.astNode, ifaceField.astNode],\n        );\n      }\n    }\n  }\n}\n\nfunction validateTypeImplementsAncestors(context, type, iface) {\n  const ifaceInterfaces = type.getInterfaces();\n\n  for (const transitive of iface.getInterfaces()) {\n    if (!ifaceInterfaces.includes(transitive)) {\n      context.reportError(\n        transitive === type\n          ? `Type ${type.name} cannot implement ${iface.name} because it would create a circular reference.`\n          : `Type ${type.name} must implement ${transitive.name} because it is implemented by ${iface.name}.`,\n        [\n          ...getAllImplementsInterfaceNodes(iface, transitive),\n          ...getAllImplementsInterfaceNodes(type, iface),\n        ],\n      );\n    }\n  }\n}\n\nfunction validateUnionMembers(context, union) {\n  const memberTypes = union.getTypes();\n\n  if (memberTypes.length === 0) {\n    context.reportError(\n      `Union type ${union.name} must define one or more member types.`,\n      [union.astNode, ...union.extensionASTNodes],\n    );\n  }\n\n  const includedTypeNames = Object.create(null);\n\n  for (const memberType of memberTypes) {\n    if (includedTypeNames[memberType.name]) {\n      context.reportError(\n        `Union type ${union.name} can only include type ${memberType.name} once.`,\n        getUnionMemberTypeNodes(union, memberType.name),\n      );\n      continue;\n    }\n\n    includedTypeNames[memberType.name] = true;\n\n    if (!(0, _definition.isObjectType)(memberType)) {\n      context.reportError(\n        `Union type ${union.name} can only include Object types, ` +\n          `it cannot include ${(0, _inspect.inspect)(memberType)}.`,\n        getUnionMemberTypeNodes(union, String(memberType)),\n      );\n    }\n  }\n}\n\nfunction validateEnumValues(context, enumType) {\n  const enumValues = enumType.getValues();\n\n  if (enumValues.length === 0) {\n    context.reportError(\n      `Enum type ${enumType.name} must define one or more values.`,\n      [enumType.astNode, ...enumType.extensionASTNodes],\n    );\n  }\n\n  for (const enumValue of enumValues) {\n    // Ensure valid name.\n    validateName(context, enumValue);\n  }\n}\n\nfunction validateInputFields(context, inputObj) {\n  const fields = Object.values(inputObj.getFields());\n\n  if (fields.length === 0) {\n    context.reportError(\n      `Input Object type ${inputObj.name} must define one or more fields.`,\n      [inputObj.astNode, ...inputObj.extensionASTNodes],\n    );\n  } // Ensure the arguments are valid\n\n  for (const field of fields) {\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an input type\n\n    if (!(0, _definition.isInputType)(field.type)) {\n      var _field$astNode2;\n\n      context.reportError(\n        `The type of ${inputObj.name}.${field.name} must be Input Type ` +\n          `but got: ${(0, _inspect.inspect)(field.type)}.`,\n        (_field$astNode2 = field.astNode) === null || _field$astNode2 === void 0\n          ? void 0\n          : _field$astNode2.type,\n      );\n    }\n\n    if (\n      (0, _definition.isRequiredInputField)(field) &&\n      field.deprecationReason != null\n    ) {\n      var _field$astNode3;\n\n      context.reportError(\n        `Required input field ${inputObj.name}.${field.name} cannot be deprecated.`,\n        [\n          getDeprecatedDirectiveNode(field.astNode),\n          (_field$astNode3 = field.astNode) === null ||\n          _field$astNode3 === void 0\n            ? void 0\n            : _field$astNode3.type,\n        ],\n      );\n    }\n  }\n}\n\nfunction createInputObjectCircularRefsValidator(context) {\n  // Modified copy of algorithm from 'src/validation/rules/NoFragmentCycles.js'.\n  // Tracks already visited types to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  const visitedTypes = Object.create(null); // Array of types nodes used to produce meaningful errors\n\n  const fieldPath = []; // Position in the type path\n\n  const fieldPathIndexByTypeName = Object.create(null);\n  return detectCycleRecursive; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(inputObj) {\n    if (visitedTypes[inputObj.name]) {\n      return;\n    }\n\n    visitedTypes[inputObj.name] = true;\n    fieldPathIndexByTypeName[inputObj.name] = fieldPath.length;\n    const fields = Object.values(inputObj.getFields());\n\n    for (const field of fields) {\n      if (\n        (0, _definition.isNonNullType)(field.type) &&\n        (0, _definition.isInputObjectType)(field.type.ofType)\n      ) {\n        const fieldType = field.type.ofType;\n        const cycleIndex = fieldPathIndexByTypeName[fieldType.name];\n        fieldPath.push(field);\n\n        if (cycleIndex === undefined) {\n          detectCycleRecursive(fieldType);\n        } else {\n          const cyclePath = fieldPath.slice(cycleIndex);\n          const pathStr = cyclePath.map((fieldObj) => fieldObj.name).join('.');\n          context.reportError(\n            `Cannot reference Input Object \"${fieldType.name}\" within itself through a series of non-null fields: \"${pathStr}\".`,\n            cyclePath.map((fieldObj) => fieldObj.astNode),\n          );\n        }\n\n        fieldPath.pop();\n      }\n    }\n\n    fieldPathIndexByTypeName[inputObj.name] = undefined;\n  }\n}\n\nfunction getAllImplementsInterfaceNodes(type, iface) {\n  const { astNode, extensionASTNodes } = type;\n  const nodes =\n    astNode != null ? [astNode, ...extensionASTNodes] : extensionASTNodes; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  return nodes\n    .flatMap((typeNode) => {\n      var _typeNode$interfaces;\n\n      return (\n        /* c8 ignore next */\n        (_typeNode$interfaces = typeNode.interfaces) !== null &&\n          _typeNode$interfaces !== void 0\n          ? _typeNode$interfaces\n          : []\n      );\n    })\n    .filter((ifaceNode) => ifaceNode.name.value === iface.name);\n}\n\nfunction getUnionMemberTypeNodes(union, typeName) {\n  const { astNode, extensionASTNodes } = union;\n  const nodes =\n    astNode != null ? [astNode, ...extensionASTNodes] : extensionASTNodes; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  return nodes\n    .flatMap((unionNode) => {\n      var _unionNode$types;\n\n      return (\n        /* c8 ignore next */\n        (_unionNode$types = unionNode.types) !== null &&\n          _unionNode$types !== void 0\n          ? _unionNode$types\n          : []\n      );\n    })\n    .filter((typeNode) => typeNode.name.value === typeName);\n}\n\nfunction getDeprecatedDirectiveNode(definitionNode) {\n  var _definitionNode$direc;\n\n  return definitionNode === null || definitionNode === void 0\n    ? void 0\n    : (_definitionNode$direc = definitionNode.directives) === null ||\n      _definitionNode$direc === void 0\n    ? void 0\n    : _definitionNode$direc.find(\n        (node) =>\n          node.name.value === _directives.GraphQLDeprecatedDirective.name,\n      );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.typeFromAST = typeFromAST;\n\nvar _kinds = require('../language/kinds.js');\n\nvar _definition = require('../type/definition.js');\n\nfunction typeFromAST(schema, typeNode) {\n  switch (typeNode.kind) {\n    case _kinds.Kind.LIST_TYPE: {\n      const innerType = typeFromAST(schema, typeNode.type);\n      return innerType && new _definition.GraphQLList(innerType);\n    }\n\n    case _kinds.Kind.NON_NULL_TYPE: {\n      const innerType = typeFromAST(schema, typeNode.type);\n      return innerType && new _definition.GraphQLNonNull(innerType);\n    }\n\n    case _kinds.Kind.NAMED_TYPE:\n      return schema.getType(typeNode.name.value);\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.TypeInfo = void 0;\nexports.visitWithTypeInfo = visitWithTypeInfo;\n\nvar _ast = require('../language/ast.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _visitor = require('../language/visitor.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _introspection = require('../type/introspection.js');\n\nvar _typeFromAST = require('./typeFromAST.js');\n\n/**\n * TypeInfo is a utility class which, given a GraphQL schema, can keep track\n * of the current field and type definitions at any point in a GraphQL document\n * AST during a recursive descent by calling `enter(node)` and `leave(node)`.\n */\nclass TypeInfo {\n  constructor(\n    schema,\n    /**\n     * Initial type may be provided in rare cases to facilitate traversals\n     *  beginning somewhere other than documents.\n     */\n    initialType,\n    /** @deprecated will be removed in 17.0.0 */\n    getFieldDefFn,\n  ) {\n    this._schema = schema;\n    this._typeStack = [];\n    this._parentTypeStack = [];\n    this._inputTypeStack = [];\n    this._fieldDefStack = [];\n    this._defaultValueStack = [];\n    this._directive = null;\n    this._argument = null;\n    this._enumValue = null;\n    this._getFieldDef =\n      getFieldDefFn !== null && getFieldDefFn !== void 0\n        ? getFieldDefFn\n        : getFieldDef;\n\n    if (initialType) {\n      if ((0, _definition.isInputType)(initialType)) {\n        this._inputTypeStack.push(initialType);\n      }\n\n      if ((0, _definition.isCompositeType)(initialType)) {\n        this._parentTypeStack.push(initialType);\n      }\n\n      if ((0, _definition.isOutputType)(initialType)) {\n        this._typeStack.push(initialType);\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'TypeInfo';\n  }\n\n  getType() {\n    if (this._typeStack.length > 0) {\n      return this._typeStack[this._typeStack.length - 1];\n    }\n  }\n\n  getParentType() {\n    if (this._parentTypeStack.length > 0) {\n      return this._parentTypeStack[this._parentTypeStack.length - 1];\n    }\n  }\n\n  getInputType() {\n    if (this._inputTypeStack.length > 0) {\n      return this._inputTypeStack[this._inputTypeStack.length - 1];\n    }\n  }\n\n  getParentInputType() {\n    if (this._inputTypeStack.length > 1) {\n      return this._inputTypeStack[this._inputTypeStack.length - 2];\n    }\n  }\n\n  getFieldDef() {\n    if (this._fieldDefStack.length > 0) {\n      return this._fieldDefStack[this._fieldDefStack.length - 1];\n    }\n  }\n\n  getDefaultValue() {\n    if (this._defaultValueStack.length > 0) {\n      return this._defaultValueStack[this._defaultValueStack.length - 1];\n    }\n  }\n\n  getDirective() {\n    return this._directive;\n  }\n\n  getArgument() {\n    return this._argument;\n  }\n\n  getEnumValue() {\n    return this._enumValue;\n  }\n\n  enter(node) {\n    const schema = this._schema; // Note: many of the types below are explicitly typed as \"unknown\" to drop\n    // any assumptions of a valid schema to ensure runtime types are properly\n    // checked before continuing since TypeInfo is used as part of validation\n    // which occurs before guarantees of schema and document validity.\n\n    switch (node.kind) {\n      case _kinds.Kind.SELECTION_SET: {\n        const namedType = (0, _definition.getNamedType)(this.getType());\n\n        this._parentTypeStack.push(\n          (0, _definition.isCompositeType)(namedType) ? namedType : undefined,\n        );\n\n        break;\n      }\n\n      case _kinds.Kind.FIELD: {\n        const parentType = this.getParentType();\n        let fieldDef;\n        let fieldType;\n\n        if (parentType) {\n          fieldDef = this._getFieldDef(schema, parentType, node);\n\n          if (fieldDef) {\n            fieldType = fieldDef.type;\n          }\n        }\n\n        this._fieldDefStack.push(fieldDef);\n\n        this._typeStack.push(\n          (0, _definition.isOutputType)(fieldType) ? fieldType : undefined,\n        );\n\n        break;\n      }\n\n      case _kinds.Kind.DIRECTIVE:\n        this._directive = schema.getDirective(node.name.value);\n        break;\n\n      case _kinds.Kind.OPERATION_DEFINITION: {\n        const rootType = schema.getRootType(node.operation);\n\n        this._typeStack.push(\n          (0, _definition.isObjectType)(rootType) ? rootType : undefined,\n        );\n\n        break;\n      }\n\n      case _kinds.Kind.INLINE_FRAGMENT:\n      case _kinds.Kind.FRAGMENT_DEFINITION: {\n        const typeConditionAST = node.typeCondition;\n        const outputType = typeConditionAST\n          ? (0, _typeFromAST.typeFromAST)(schema, typeConditionAST)\n          : (0, _definition.getNamedType)(this.getType());\n\n        this._typeStack.push(\n          (0, _definition.isOutputType)(outputType) ? outputType : undefined,\n        );\n\n        break;\n      }\n\n      case _kinds.Kind.VARIABLE_DEFINITION: {\n        const inputType = (0, _typeFromAST.typeFromAST)(schema, node.type);\n\n        this._inputTypeStack.push(\n          (0, _definition.isInputType)(inputType) ? inputType : undefined,\n        );\n\n        break;\n      }\n\n      case _kinds.Kind.ARGUMENT: {\n        var _this$getDirective;\n\n        let argDef;\n        let argType;\n        const fieldOrDirective =\n          (_this$getDirective = this.getDirective()) !== null &&\n          _this$getDirective !== void 0\n            ? _this$getDirective\n            : this.getFieldDef();\n\n        if (fieldOrDirective) {\n          argDef = fieldOrDirective.args.find(\n            (arg) => arg.name === node.name.value,\n          );\n\n          if (argDef) {\n            argType = argDef.type;\n          }\n        }\n\n        this._argument = argDef;\n\n        this._defaultValueStack.push(argDef ? argDef.defaultValue : undefined);\n\n        this._inputTypeStack.push(\n          (0, _definition.isInputType)(argType) ? argType : undefined,\n        );\n\n        break;\n      }\n\n      case _kinds.Kind.LIST: {\n        const listType = (0, _definition.getNullableType)(this.getInputType());\n        const itemType = (0, _definition.isListType)(listType)\n          ? listType.ofType\n          : listType; // List positions never have a default value.\n\n        this._defaultValueStack.push(undefined);\n\n        this._inputTypeStack.push(\n          (0, _definition.isInputType)(itemType) ? itemType : undefined,\n        );\n\n        break;\n      }\n\n      case _kinds.Kind.OBJECT_FIELD: {\n        const objectType = (0, _definition.getNamedType)(this.getInputType());\n        let inputFieldType;\n        let inputField;\n\n        if ((0, _definition.isInputObjectType)(objectType)) {\n          inputField = objectType.getFields()[node.name.value];\n\n          if (inputField) {\n            inputFieldType = inputField.type;\n          }\n        }\n\n        this._defaultValueStack.push(\n          inputField ? inputField.defaultValue : undefined,\n        );\n\n        this._inputTypeStack.push(\n          (0, _definition.isInputType)(inputFieldType)\n            ? inputFieldType\n            : undefined,\n        );\n\n        break;\n      }\n\n      case _kinds.Kind.ENUM: {\n        const enumType = (0, _definition.getNamedType)(this.getInputType());\n        let enumValue;\n\n        if ((0, _definition.isEnumType)(enumType)) {\n          enumValue = enumType.getValue(node.value);\n        }\n\n        this._enumValue = enumValue;\n        break;\n      }\n\n      default: // Ignore other nodes\n    }\n  }\n\n  leave(node) {\n    switch (node.kind) {\n      case _kinds.Kind.SELECTION_SET:\n        this._parentTypeStack.pop();\n\n        break;\n\n      case _kinds.Kind.FIELD:\n        this._fieldDefStack.pop();\n\n        this._typeStack.pop();\n\n        break;\n\n      case _kinds.Kind.DIRECTIVE:\n        this._directive = null;\n        break;\n\n      case _kinds.Kind.OPERATION_DEFINITION:\n      case _kinds.Kind.INLINE_FRAGMENT:\n      case _kinds.Kind.FRAGMENT_DEFINITION:\n        this._typeStack.pop();\n\n        break;\n\n      case _kinds.Kind.VARIABLE_DEFINITION:\n        this._inputTypeStack.pop();\n\n        break;\n\n      case _kinds.Kind.ARGUMENT:\n        this._argument = null;\n\n        this._defaultValueStack.pop();\n\n        this._inputTypeStack.pop();\n\n        break;\n\n      case _kinds.Kind.LIST:\n      case _kinds.Kind.OBJECT_FIELD:\n        this._defaultValueStack.pop();\n\n        this._inputTypeStack.pop();\n\n        break;\n\n      case _kinds.Kind.ENUM:\n        this._enumValue = null;\n        break;\n\n      default: // Ignore other nodes\n    }\n  }\n}\n\nexports.TypeInfo = TypeInfo;\n\n/**\n * Not exactly the same as the executor's definition of getFieldDef, in this\n * statically evaluated environment we do not always have an Object type,\n * and need to handle Interface and Union types.\n */\nfunction getFieldDef(schema, parentType, fieldNode) {\n  const name = fieldNode.name.value;\n\n  if (\n    name === _introspection.SchemaMetaFieldDef.name &&\n    schema.getQueryType() === parentType\n  ) {\n    return _introspection.SchemaMetaFieldDef;\n  }\n\n  if (\n    name === _introspection.TypeMetaFieldDef.name &&\n    schema.getQueryType() === parentType\n  ) {\n    return _introspection.TypeMetaFieldDef;\n  }\n\n  if (\n    name === _introspection.TypeNameMetaFieldDef.name &&\n    (0, _definition.isCompositeType)(parentType)\n  ) {\n    return _introspection.TypeNameMetaFieldDef;\n  }\n\n  if (\n    (0, _definition.isObjectType)(parentType) ||\n    (0, _definition.isInterfaceType)(parentType)\n  ) {\n    return parentType.getFields()[name];\n  }\n}\n/**\n * Creates a new visitor instance which maintains a provided TypeInfo instance\n * along with visiting visitor.\n */\n\nfunction visitWithTypeInfo(typeInfo, visitor) {\n  return {\n    enter(...args) {\n      const node = args[0];\n      typeInfo.enter(node);\n      const fn = (0, _visitor.getEnterLeaveForKind)(visitor, node.kind).enter;\n\n      if (fn) {\n        const result = fn.apply(visitor, args);\n\n        if (result !== undefined) {\n          typeInfo.leave(node);\n\n          if ((0, _ast.isNode)(result)) {\n            typeInfo.enter(result);\n          }\n        }\n\n        return result;\n      }\n    },\n\n    leave(...args) {\n      const node = args[0];\n      const fn = (0, _visitor.getEnterLeaveForKind)(visitor, node.kind).leave;\n      let result;\n\n      if (fn) {\n        result = fn.apply(visitor, args);\n      }\n\n      typeInfo.leave(node);\n      return result;\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.isConstValueNode = isConstValueNode;\nexports.isDefinitionNode = isDefinitionNode;\nexports.isExecutableDefinitionNode = isExecutableDefinitionNode;\nexports.isSelectionNode = isSelectionNode;\nexports.isTypeDefinitionNode = isTypeDefinitionNode;\nexports.isTypeExtensionNode = isTypeExtensionNode;\nexports.isTypeNode = isTypeNode;\nexports.isTypeSystemDefinitionNode = isTypeSystemDefinitionNode;\nexports.isTypeSystemExtensionNode = isTypeSystemExtensionNode;\nexports.isValueNode = isValueNode;\n\nvar _kinds = require('./kinds.js');\n\nfunction isDefinitionNode(node) {\n  return (\n    isExecutableDefinitionNode(node) ||\n    isTypeSystemDefinitionNode(node) ||\n    isTypeSystemExtensionNode(node)\n  );\n}\n\nfunction isExecutableDefinitionNode(node) {\n  return (\n    node.kind === _kinds.Kind.OPERATION_DEFINITION ||\n    node.kind === _kinds.Kind.FRAGMENT_DEFINITION\n  );\n}\n\nfunction isSelectionNode(node) {\n  return (\n    node.kind === _kinds.Kind.FIELD ||\n    node.kind === _kinds.Kind.FRAGMENT_SPREAD ||\n    node.kind === _kinds.Kind.INLINE_FRAGMENT\n  );\n}\n\nfunction isValueNode(node) {\n  return (\n    node.kind === _kinds.Kind.VARIABLE ||\n    node.kind === _kinds.Kind.INT ||\n    node.kind === _kinds.Kind.FLOAT ||\n    node.kind === _kinds.Kind.STRING ||\n    node.kind === _kinds.Kind.BOOLEAN ||\n    node.kind === _kinds.Kind.NULL ||\n    node.kind === _kinds.Kind.ENUM ||\n    node.kind === _kinds.Kind.LIST ||\n    node.kind === _kinds.Kind.OBJECT\n  );\n}\n\nfunction isConstValueNode(node) {\n  return (\n    isValueNode(node) &&\n    (node.kind === _kinds.Kind.LIST\n      ? node.values.some(isConstValueNode)\n      : node.kind === _kinds.Kind.OBJECT\n      ? node.fields.some((field) => isConstValueNode(field.value))\n      : node.kind !== _kinds.Kind.VARIABLE)\n  );\n}\n\nfunction isTypeNode(node) {\n  return (\n    node.kind === _kinds.Kind.NAMED_TYPE ||\n    node.kind === _kinds.Kind.LIST_TYPE ||\n    node.kind === _kinds.Kind.NON_NULL_TYPE\n  );\n}\n\nfunction isTypeSystemDefinitionNode(node) {\n  return (\n    node.kind === _kinds.Kind.SCHEMA_DEFINITION ||\n    isTypeDefinitionNode(node) ||\n    node.kind === _kinds.Kind.DIRECTIVE_DEFINITION\n  );\n}\n\nfunction isTypeDefinitionNode(node) {\n  return (\n    node.kind === _kinds.Kind.SCALAR_TYPE_DEFINITION ||\n    node.kind === _kinds.Kind.OBJECT_TYPE_DEFINITION ||\n    node.kind === _kinds.Kind.INTERFACE_TYPE_DEFINITION ||\n    node.kind === _kinds.Kind.UNION_TYPE_DEFINITION ||\n    node.kind === _kinds.Kind.ENUM_TYPE_DEFINITION ||\n    node.kind === _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION\n  );\n}\n\nfunction isTypeSystemExtensionNode(node) {\n  return (\n    node.kind === _kinds.Kind.SCHEMA_EXTENSION || isTypeExtensionNode(node)\n  );\n}\n\nfunction isTypeExtensionNode(node) {\n  return (\n    node.kind === _kinds.Kind.SCALAR_TYPE_EXTENSION ||\n    node.kind === _kinds.Kind.OBJECT_TYPE_EXTENSION ||\n    node.kind === _kinds.Kind.INTERFACE_TYPE_EXTENSION ||\n    node.kind === _kinds.Kind.UNION_TYPE_EXTENSION ||\n    node.kind === _kinds.Kind.ENUM_TYPE_EXTENSION ||\n    node.kind === _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.ExecutableDefinitionsRule = ExecutableDefinitionsRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _predicates = require('../../language/predicates.js');\n\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n *\n * See https://spec.graphql.org/draft/#sec-Executable-Definitions\n */\nfunction ExecutableDefinitionsRule(context) {\n  return {\n    Document(node) {\n      for (const definition of node.definitions) {\n        if (!(0, _predicates.isExecutableDefinitionNode)(definition)) {\n          const defName =\n            definition.kind === _kinds.Kind.SCHEMA_DEFINITION ||\n            definition.kind === _kinds.Kind.SCHEMA_EXTENSION\n              ? 'schema'\n              : '\"' + definition.name.value + '\"';\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `The ${defName} definition is not executable.`,\n              {\n                nodes: definition,\n              },\n            ),\n          );\n        }\n      }\n\n      return false;\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.FieldsOnCorrectTypeRule = FieldsOnCorrectTypeRule;\n\nvar _didYouMean = require('../../jsutils/didYouMean.js');\n\nvar _naturalCompare = require('../../jsutils/naturalCompare.js');\n\nvar _suggestionList = require('../../jsutils/suggestionList.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _definition = require('../../type/definition.js');\n\n/**\n * Fields on correct type\n *\n * A GraphQL document is only valid if all fields selected are defined by the\n * parent type, or are an allowed meta field such as __typename.\n *\n * See https://spec.graphql.org/draft/#sec-Field-Selections\n */\nfunction FieldsOnCorrectTypeRule(context) {\n  return {\n    Field(node) {\n      const type = context.getParentType();\n\n      if (type) {\n        const fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          // This field doesn't exist, lets look for suggestions.\n          const schema = context.getSchema();\n          const fieldName = node.name.value; // First determine if there are any suggested types to condition on.\n\n          let suggestion = (0, _didYouMean.didYouMean)(\n            'to use an inline fragment on',\n            getSuggestedTypeNames(schema, type, fieldName),\n          ); // If there are no suggested types, then perhaps this was a typo?\n\n          if (suggestion === '') {\n            suggestion = (0, _didYouMean.didYouMean)(\n              getSuggestedFieldNames(type, fieldName),\n            );\n          } // Report an error, including helpful suggestions.\n\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `Cannot query field \"${fieldName}\" on type \"${type.name}\".` +\n                suggestion,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n/**\n * Go through all of the implementations of type, as well as the interfaces that\n * they implement. If any of those types include the provided field, suggest them,\n * sorted by how often the type is referenced.\n */\n\nfunction getSuggestedTypeNames(schema, type, fieldName) {\n  if (!(0, _definition.isAbstractType)(type)) {\n    // Must be an Object type, which does not have possible fields.\n    return [];\n  }\n\n  const suggestedTypes = new Set();\n  const usageCount = Object.create(null);\n\n  for (const possibleType of schema.getPossibleTypes(type)) {\n    if (!possibleType.getFields()[fieldName]) {\n      continue;\n    } // This object type defines this field.\n\n    suggestedTypes.add(possibleType);\n    usageCount[possibleType.name] = 1;\n\n    for (const possibleInterface of possibleType.getInterfaces()) {\n      var _usageCount$possibleI;\n\n      if (!possibleInterface.getFields()[fieldName]) {\n        continue;\n      } // This interface type defines this field.\n\n      suggestedTypes.add(possibleInterface);\n      usageCount[possibleInterface.name] =\n        ((_usageCount$possibleI = usageCount[possibleInterface.name]) !==\n          null && _usageCount$possibleI !== void 0\n          ? _usageCount$possibleI\n          : 0) + 1;\n    }\n  }\n\n  return [...suggestedTypes]\n    .sort((typeA, typeB) => {\n      // Suggest both interface and object types based on how common they are.\n      const usageCountDiff = usageCount[typeB.name] - usageCount[typeA.name];\n\n      if (usageCountDiff !== 0) {\n        return usageCountDiff;\n      } // Suggest super types first followed by subtypes\n\n      if (\n        (0, _definition.isInterfaceType)(typeA) &&\n        schema.isSubType(typeA, typeB)\n      ) {\n        return -1;\n      }\n\n      if (\n        (0, _definition.isInterfaceType)(typeB) &&\n        schema.isSubType(typeB, typeA)\n      ) {\n        return 1;\n      }\n\n      return (0, _naturalCompare.naturalCompare)(typeA.name, typeB.name);\n    })\n    .map((x) => x.name);\n}\n/**\n * For the field name provided, determine if there are any similar field names\n * that may be the result of a typo.\n */\n\nfunction getSuggestedFieldNames(type, fieldName) {\n  if (\n    (0, _definition.isObjectType)(type) ||\n    (0, _definition.isInterfaceType)(type)\n  ) {\n    const possibleFieldNames = Object.keys(type.getFields());\n    return (0, _suggestionList.suggestionList)(fieldName, possibleFieldNames);\n  } // Otherwise, must be a Union type, which does not define fields.\n\n  return [];\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.FragmentsOnCompositeTypesRule = FragmentsOnCompositeTypesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _printer = require('../../language/printer.js');\n\nvar _definition = require('../../type/definition.js');\n\nvar _typeFromAST = require('../../utilities/typeFromAST.js');\n\n/**\n * Fragments on composite type\n *\n * Fragments use a type condition to determine if they apply, since fragments\n * can only be spread into a composite type (object, interface, or union), the\n * type condition must also be a composite type.\n *\n * See https://spec.graphql.org/draft/#sec-Fragments-On-Composite-Types\n */\nfunction FragmentsOnCompositeTypesRule(context) {\n  return {\n    InlineFragment(node) {\n      const typeCondition = node.typeCondition;\n\n      if (typeCondition) {\n        const type = (0, _typeFromAST.typeFromAST)(\n          context.getSchema(),\n          typeCondition,\n        );\n\n        if (type && !(0, _definition.isCompositeType)(type)) {\n          const typeStr = (0, _printer.print)(typeCondition);\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `Fragment cannot condition on non composite type \"${typeStr}\".`,\n              {\n                nodes: typeCondition,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    FragmentDefinition(node) {\n      const type = (0, _typeFromAST.typeFromAST)(\n        context.getSchema(),\n        node.typeCondition,\n      );\n\n      if (type && !(0, _definition.isCompositeType)(type)) {\n        const typeStr = (0, _printer.print)(node.typeCondition);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Fragment \"${node.name.value}\" cannot condition on non composite type \"${typeStr}\".`,\n            {\n              nodes: node.typeCondition,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.KnownArgumentNamesOnDirectivesRule = KnownArgumentNamesOnDirectivesRule;\nexports.KnownArgumentNamesRule = KnownArgumentNamesRule;\n\nvar _didYouMean = require('../../jsutils/didYouMean.js');\n\nvar _suggestionList = require('../../jsutils/suggestionList.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _directives = require('../../type/directives.js');\n\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n *\n * See https://spec.graphql.org/draft/#sec-Argument-Names\n * See https://spec.graphql.org/draft/#sec-Directives-Are-In-Valid-Locations\n */\nfunction KnownArgumentNamesRule(context) {\n  return {\n    // eslint-disable-next-line new-cap\n    ...KnownArgumentNamesOnDirectivesRule(context),\n\n    Argument(argNode) {\n      const argDef = context.getArgument();\n      const fieldDef = context.getFieldDef();\n      const parentType = context.getParentType();\n\n      if (!argDef && fieldDef && parentType) {\n        const argName = argNode.name.value;\n        const knownArgsNames = fieldDef.args.map((arg) => arg.name);\n        const suggestions = (0, _suggestionList.suggestionList)(\n          argName,\n          knownArgsNames,\n        );\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Unknown argument \"${argName}\" on field \"${parentType.name}.${fieldDef.name}\".` +\n              (0, _didYouMean.didYouMean)(suggestions),\n            {\n              nodes: argNode,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n/**\n * @internal\n */\n\nfunction KnownArgumentNamesOnDirectivesRule(context) {\n  const directiveArgs = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : _directives.specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    directiveArgs[directive.name] = directive.args.map((arg) => arg.name);\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argsNodes =\n        (_def$arguments = def.arguments) !== null && _def$arguments !== void 0\n          ? _def$arguments\n          : [];\n      directiveArgs[def.name.value] = argsNodes.map((arg) => arg.name.value);\n    }\n  }\n\n  return {\n    Directive(directiveNode) {\n      const directiveName = directiveNode.name.value;\n      const knownArgs = directiveArgs[directiveName];\n\n      if (directiveNode.arguments && knownArgs) {\n        for (const argNode of directiveNode.arguments) {\n          const argName = argNode.name.value;\n\n          if (!knownArgs.includes(argName)) {\n            const suggestions = (0, _suggestionList.suggestionList)(\n              argName,\n              knownArgs,\n            );\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                `Unknown argument \"${argName}\" on directive \"@${directiveName}\".` +\n                  (0, _didYouMean.didYouMean)(suggestions),\n                {\n                  nodes: argNode,\n                },\n              ),\n            );\n          }\n        }\n      }\n\n      return false;\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.KnownDirectivesRule = KnownDirectivesRule;\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _invariant = require('../../jsutils/invariant.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _ast = require('../../language/ast.js');\n\nvar _directiveLocation = require('../../language/directiveLocation.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _directives = require('../../type/directives.js');\n\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n *\n * See https://spec.graphql.org/draft/#sec-Directives-Are-Defined\n */\nfunction KnownDirectivesRule(context) {\n  const locationsMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : _directives.specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    locationsMap[directive.name] = directive.locations;\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      locationsMap[def.name.value] = def.locations.map((name) => name.value);\n    }\n  }\n\n  return {\n    Directive(node, _key, _parent, _path, ancestors) {\n      const name = node.name.value;\n      const locations = locationsMap[name];\n\n      if (!locations) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(`Unknown directive \"@${name}\".`, {\n            nodes: node,\n          }),\n        );\n        return;\n      }\n\n      const candidateLocation = getDirectiveLocationForASTPath(ancestors);\n\n      if (candidateLocation && !locations.includes(candidateLocation)) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Directive \"@${name}\" may not be used on ${candidateLocation}.`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  const appliedTo = ancestors[ancestors.length - 1];\n  'kind' in appliedTo || (0, _invariant.invariant)(false);\n\n  switch (appliedTo.kind) {\n    case _kinds.Kind.OPERATION_DEFINITION:\n      return getDirectiveLocationForOperation(appliedTo.operation);\n\n    case _kinds.Kind.FIELD:\n      return _directiveLocation.DirectiveLocation.FIELD;\n\n    case _kinds.Kind.FRAGMENT_SPREAD:\n      return _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD;\n\n    case _kinds.Kind.INLINE_FRAGMENT:\n      return _directiveLocation.DirectiveLocation.INLINE_FRAGMENT;\n\n    case _kinds.Kind.FRAGMENT_DEFINITION:\n      return _directiveLocation.DirectiveLocation.FRAGMENT_DEFINITION;\n\n    case _kinds.Kind.VARIABLE_DEFINITION:\n      return _directiveLocation.DirectiveLocation.VARIABLE_DEFINITION;\n\n    case _kinds.Kind.SCHEMA_DEFINITION:\n    case _kinds.Kind.SCHEMA_EXTENSION:\n      return _directiveLocation.DirectiveLocation.SCHEMA;\n\n    case _kinds.Kind.SCALAR_TYPE_DEFINITION:\n    case _kinds.Kind.SCALAR_TYPE_EXTENSION:\n      return _directiveLocation.DirectiveLocation.SCALAR;\n\n    case _kinds.Kind.OBJECT_TYPE_DEFINITION:\n    case _kinds.Kind.OBJECT_TYPE_EXTENSION:\n      return _directiveLocation.DirectiveLocation.OBJECT;\n\n    case _kinds.Kind.FIELD_DEFINITION:\n      return _directiveLocation.DirectiveLocation.FIELD_DEFINITION;\n\n    case _kinds.Kind.INTERFACE_TYPE_DEFINITION:\n    case _kinds.Kind.INTERFACE_TYPE_EXTENSION:\n      return _directiveLocation.DirectiveLocation.INTERFACE;\n\n    case _kinds.Kind.UNION_TYPE_DEFINITION:\n    case _kinds.Kind.UNION_TYPE_EXTENSION:\n      return _directiveLocation.DirectiveLocation.UNION;\n\n    case _kinds.Kind.ENUM_TYPE_DEFINITION:\n    case _kinds.Kind.ENUM_TYPE_EXTENSION:\n      return _directiveLocation.DirectiveLocation.ENUM;\n\n    case _kinds.Kind.ENUM_VALUE_DEFINITION:\n      return _directiveLocation.DirectiveLocation.ENUM_VALUE;\n\n    case _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION:\n    case _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return _directiveLocation.DirectiveLocation.INPUT_OBJECT;\n\n    case _kinds.Kind.INPUT_VALUE_DEFINITION: {\n      const parentNode = ancestors[ancestors.length - 3];\n      'kind' in parentNode || (0, _invariant.invariant)(false);\n      return parentNode.kind === _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION\n        ? _directiveLocation.DirectiveLocation.INPUT_FIELD_DEFINITION\n        : _directiveLocation.DirectiveLocation.ARGUMENT_DEFINITION;\n    }\n    // Not reachable, all possible types have been considered.\n\n    /* c8 ignore next */\n\n    default:\n      false ||\n        (0, _invariant.invariant)(\n          false,\n          'Unexpected kind: ' + (0, _inspect.inspect)(appliedTo.kind),\n        );\n  }\n}\n\nfunction getDirectiveLocationForOperation(operation) {\n  switch (operation) {\n    case _ast.OperationTypeNode.QUERY:\n      return _directiveLocation.DirectiveLocation.QUERY;\n\n    case _ast.OperationTypeNode.MUTATION:\n      return _directiveLocation.DirectiveLocation.MUTATION;\n\n    case _ast.OperationTypeNode.SUBSCRIPTION:\n      return _directiveLocation.DirectiveLocation.SUBSCRIPTION;\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.KnownFragmentNamesRule = KnownFragmentNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-spread-target-defined\n */\nfunction KnownFragmentNamesRule(context) {\n  return {\n    FragmentSpread(node) {\n      const fragmentName = node.name.value;\n      const fragment = context.getFragment(fragmentName);\n\n      if (!fragment) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Unknown fragment \"${fragmentName}\".`,\n            {\n              nodes: node.name,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.KnownTypeNamesRule = KnownTypeNamesRule;\n\nvar _didYouMean = require('../../jsutils/didYouMean.js');\n\nvar _suggestionList = require('../../jsutils/suggestionList.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _predicates = require('../../language/predicates.js');\n\nvar _introspection = require('../../type/introspection.js');\n\nvar _scalars = require('../../type/scalars.js');\n\n/**\n * Known type names\n *\n * A GraphQL document is only valid if referenced types (specifically\n * variable definitions and fragment conditions) are defined by the type schema.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-Spread-Type-Existence\n */\nfunction KnownTypeNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypesMap = schema ? schema.getTypeMap() : Object.create(null);\n  const definedTypes = Object.create(null);\n\n  for (const def of context.getDocument().definitions) {\n    if ((0, _predicates.isTypeDefinitionNode)(def)) {\n      definedTypes[def.name.value] = true;\n    }\n  }\n\n  const typeNames = [\n    ...Object.keys(existingTypesMap),\n    ...Object.keys(definedTypes),\n  ];\n  return {\n    NamedType(node, _1, parent, _2, ancestors) {\n      const typeName = node.name.value;\n\n      if (!existingTypesMap[typeName] && !definedTypes[typeName]) {\n        var _ancestors$;\n\n        const definitionNode =\n          (_ancestors$ = ancestors[2]) !== null && _ancestors$ !== void 0\n            ? _ancestors$\n            : parent;\n        const isSDL = definitionNode != null && isSDLNode(definitionNode);\n\n        if (isSDL && standardTypeNames.includes(typeName)) {\n          return;\n        }\n\n        const suggestedTypes = (0, _suggestionList.suggestionList)(\n          typeName,\n          isSDL ? standardTypeNames.concat(typeNames) : typeNames,\n        );\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Unknown type \"${typeName}\".` +\n              (0, _didYouMean.didYouMean)(suggestedTypes),\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\nconst standardTypeNames = [\n  ..._scalars.specifiedScalarTypes,\n  ..._introspection.introspectionTypes,\n].map((type) => type.name);\n\nfunction isSDLNode(value) {\n  return (\n    'kind' in value &&\n    ((0, _predicates.isTypeSystemDefinitionNode)(value) ||\n      (0, _predicates.isTypeSystemExtensionNode)(value))\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.LoneAnonymousOperationRule = LoneAnonymousOperationRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\n/**\n * Lone anonymous operation\n *\n * A GraphQL document is only valid if when it contains an anonymous operation\n * (the query short-hand) that it contains only that one operation definition.\n *\n * See https://spec.graphql.org/draft/#sec-Lone-Anonymous-Operation\n */\nfunction LoneAnonymousOperationRule(context) {\n  let operationCount = 0;\n  return {\n    Document(node) {\n      operationCount = node.definitions.filter(\n        (definition) => definition.kind === _kinds.Kind.OPERATION_DEFINITION,\n      ).length;\n    },\n\n    OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            'This anonymous operation must be the only defined operation.',\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.LoneSchemaDefinitionRule = LoneSchemaDefinitionRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Lone Schema definition\n *\n * A GraphQL document is only valid if it contains only one schema definition.\n */\nfunction LoneSchemaDefinitionRule(context) {\n  var _ref, _ref2, _oldSchema$astNode;\n\n  const oldSchema = context.getSchema();\n  const alreadyDefined =\n    (_ref =\n      (_ref2 =\n        (_oldSchema$astNode =\n          oldSchema === null || oldSchema === void 0\n            ? void 0\n            : oldSchema.astNode) !== null && _oldSchema$astNode !== void 0\n          ? _oldSchema$astNode\n          : oldSchema === null || oldSchema === void 0\n          ? void 0\n          : oldSchema.getQueryType()) !== null && _ref2 !== void 0\n        ? _ref2\n        : oldSchema === null || oldSchema === void 0\n        ? void 0\n        : oldSchema.getMutationType()) !== null && _ref !== void 0\n      ? _ref\n      : oldSchema === null || oldSchema === void 0\n      ? void 0\n      : oldSchema.getSubscriptionType();\n  let schemaDefinitionsCount = 0;\n  return {\n    SchemaDefinition(node) {\n      if (alreadyDefined) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            'Cannot define a new schema within a schema extension.',\n            {\n              nodes: node,\n            },\n          ),\n        );\n        return;\n      }\n\n      if (schemaDefinitionsCount > 0) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            'Must provide only one schema definition.',\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n\n      ++schemaDefinitionsCount;\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.NoFragmentCyclesRule = NoFragmentCyclesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * No fragment cycles\n *\n * The graph of fragment spreads must not form any cycles including spreading itself.\n * Otherwise an operation could infinitely spread or infinitely execute on cycles in the underlying data.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-spreads-must-not-form-cycles\n */\nfunction NoFragmentCyclesRule(context) {\n  // Tracks already visited fragments to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  const visitedFrags = Object.create(null); // Array of AST nodes used to produce meaningful errors\n\n  const spreadPath = []; // Position in the spread path\n\n  const spreadPathIndexByName = Object.create(null);\n  return {\n    OperationDefinition: () => false,\n\n    FragmentDefinition(node) {\n      detectCycleRecursive(node);\n      return false;\n    },\n  }; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(fragment) {\n    if (visitedFrags[fragment.name.value]) {\n      return;\n    }\n\n    const fragmentName = fragment.name.value;\n    visitedFrags[fragmentName] = true;\n    const spreadNodes = context.getFragmentSpreads(fragment.selectionSet);\n\n    if (spreadNodes.length === 0) {\n      return;\n    }\n\n    spreadPathIndexByName[fragmentName] = spreadPath.length;\n\n    for (const spreadNode of spreadNodes) {\n      const spreadName = spreadNode.name.value;\n      const cycleIndex = spreadPathIndexByName[spreadName];\n      spreadPath.push(spreadNode);\n\n      if (cycleIndex === undefined) {\n        const spreadFragment = context.getFragment(spreadName);\n\n        if (spreadFragment) {\n          detectCycleRecursive(spreadFragment);\n        }\n      } else {\n        const cyclePath = spreadPath.slice(cycleIndex);\n        const viaPath = cyclePath\n          .slice(0, -1)\n          .map((s) => '\"' + s.name.value + '\"')\n          .join(', ');\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Cannot spread fragment \"${spreadName}\" within itself` +\n              (viaPath !== '' ? ` via ${viaPath}.` : '.'),\n            {\n              nodes: cyclePath,\n            },\n          ),\n        );\n      }\n\n      spreadPath.pop();\n    }\n\n    spreadPathIndexByName[fragmentName] = undefined;\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.NoUndefinedVariablesRule = NoUndefinedVariablesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * No undefined variables\n *\n * A GraphQL operation is only valid if all variables encountered, both directly\n * and via fragment spreads, are defined by that operation.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variable-Uses-Defined\n */\nfunction NoUndefinedVariablesRule(context) {\n  let variableNameDefined = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter() {\n        variableNameDefined = Object.create(null);\n      },\n\n      leave(operation) {\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node } of usages) {\n          const varName = node.name.value;\n\n          if (variableNameDefined[varName] !== true) {\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                operation.name\n                  ? `Variable \"$${varName}\" is not defined by operation \"${operation.name.value}\".`\n                  : `Variable \"$${varName}\" is not defined.`,\n                {\n                  nodes: [node, operation],\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n\n    VariableDefinition(node) {\n      variableNameDefined[node.variable.name.value] = true;\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.NoUnusedFragmentsRule = NoUnusedFragmentsRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n *\n * See https://spec.graphql.org/draft/#sec-Fragments-Must-Be-Used\n */\nfunction NoUnusedFragmentsRule(context) {\n  const operationDefs = [];\n  const fragmentDefs = [];\n  return {\n    OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n\n    FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n\n    Document: {\n      leave() {\n        const fragmentNameUsed = Object.create(null);\n\n        for (const operation of operationDefs) {\n          for (const fragment of context.getRecursivelyReferencedFragments(\n            operation,\n          )) {\n            fragmentNameUsed[fragment.name.value] = true;\n          }\n        }\n\n        for (const fragmentDef of fragmentDefs) {\n          const fragName = fragmentDef.name.value;\n\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                `Fragment \"${fragName}\" is never used.`,\n                {\n                  nodes: fragmentDef,\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.NoUnusedVariablesRule = NoUnusedVariablesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * No unused variables\n *\n * A GraphQL operation is only valid if all variables defined by an operation\n * are used, either directly or within a spread fragment.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variables-Used\n */\nfunction NoUnusedVariablesRule(context) {\n  let variableDefs = [];\n  return {\n    OperationDefinition: {\n      enter() {\n        variableDefs = [];\n      },\n\n      leave(operation) {\n        const variableNameUsed = Object.create(null);\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node } of usages) {\n          variableNameUsed[node.name.value] = true;\n        }\n\n        for (const variableDef of variableDefs) {\n          const variableName = variableDef.variable.name.value;\n\n          if (variableNameUsed[variableName] !== true) {\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                operation.name\n                  ? `Variable \"$${variableName}\" is never used in operation \"${operation.name.value}\".`\n                  : `Variable \"$${variableName}\" is never used.`,\n                {\n                  nodes: variableDef,\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n\n    VariableDefinition(def) {\n      variableDefs.push(def);\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.sortValueNode = sortValueNode;\n\nvar _naturalCompare = require('../jsutils/naturalCompare.js');\n\nvar _kinds = require('../language/kinds.js');\n\n/**\n * Sort ValueNode.\n *\n * This function returns a sorted copy of the given ValueNode.\n *\n * @internal\n */\nfunction sortValueNode(valueNode) {\n  switch (valueNode.kind) {\n    case _kinds.Kind.OBJECT:\n      return { ...valueNode, fields: sortFields(valueNode.fields) };\n\n    case _kinds.Kind.LIST:\n      return { ...valueNode, values: valueNode.values.map(sortValueNode) };\n\n    case _kinds.Kind.INT:\n    case _kinds.Kind.FLOAT:\n    case _kinds.Kind.STRING:\n    case _kinds.Kind.BOOLEAN:\n    case _kinds.Kind.NULL:\n    case _kinds.Kind.ENUM:\n    case _kinds.Kind.VARIABLE:\n      return valueNode;\n  }\n}\n\nfunction sortFields(fields) {\n  return fields\n    .map((fieldNode) => ({\n      ...fieldNode,\n      value: sortValueNode(fieldNode.value),\n    }))\n    .sort((fieldA, fieldB) =>\n      (0, _naturalCompare.naturalCompare)(fieldA.name.value, fieldB.name.value),\n    );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.OverlappingFieldsCanBeMergedRule = OverlappingFieldsCanBeMergedRule;\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _printer = require('../../language/printer.js');\n\nvar _definition = require('../../type/definition.js');\n\nvar _sortValueNode = require('../../utilities/sortValueNode.js');\n\nvar _typeFromAST = require('../../utilities/typeFromAST.js');\n\nfunction reasonMessage(reason) {\n  if (Array.isArray(reason)) {\n    return reason\n      .map(\n        ([responseName, subReason]) =>\n          `subfields \"${responseName}\" conflict because ` +\n          reasonMessage(subReason),\n      )\n      .join(' and ');\n  }\n\n  return reason;\n}\n/**\n * Overlapping fields can be merged\n *\n * A selection set is only valid if all fields (including spreading any\n * fragments) either correspond to distinct response names or can be merged\n * without ambiguity.\n *\n * See https://spec.graphql.org/draft/#sec-Field-Selection-Merging\n */\n\nfunction OverlappingFieldsCanBeMergedRule(context) {\n  // A memoization for when two fragments are compared \"between\" each other for\n  // conflicts. Two fragments may be compared many times, so memoizing this can\n  // dramatically improve the performance of this validator.\n  const comparedFragmentPairs = new PairSet(); // A cache for the \"field map\" and list of fragment names found in any given\n  // selection set. Selection sets may be asked for this information multiple\n  // times, so this improves the performance of this validator.\n\n  const cachedFieldsAndFragmentNames = new Map();\n  return {\n    SelectionSet(selectionSet) {\n      const conflicts = findConflictsWithinSelectionSet(\n        context,\n        cachedFieldsAndFragmentNames,\n        comparedFragmentPairs,\n        context.getParentType(),\n        selectionSet,\n      );\n\n      for (const [[responseName, reason], fields1, fields2] of conflicts) {\n        const reasonMsg = reasonMessage(reason);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Fields \"${responseName}\" conflict because ${reasonMsg}. Use different aliases on the fields to fetch both if this was intentional.`,\n            {\n              nodes: fields1.concat(fields2),\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\n/**\n * Algorithm:\n *\n * Conflicts occur when two fields exist in a query which will produce the same\n * response name, but represent differing values, thus creating a conflict.\n * The algorithm below finds all conflicts via making a series of comparisons\n * between fields. In order to compare as few fields as possible, this makes\n * a series of comparisons \"within\" sets of fields and \"between\" sets of fields.\n *\n * Given any selection set, a collection produces both a set of fields by\n * also including all inline fragments, as well as a list of fragments\n * referenced by fragment spreads.\n *\n * A) Each selection set represented in the document first compares \"within\" its\n * collected set of fields, finding any conflicts between every pair of\n * overlapping fields.\n * Note: This is the *only time* that a the fields \"within\" a set are compared\n * to each other. After this only fields \"between\" sets are compared.\n *\n * B) Also, if any fragment is referenced in a selection set, then a\n * comparison is made \"between\" the original set of fields and the\n * referenced fragment.\n *\n * C) Also, if multiple fragments are referenced, then comparisons\n * are made \"between\" each referenced fragment.\n *\n * D) When comparing \"between\" a set of fields and a referenced fragment, first\n * a comparison is made between each field in the original set of fields and\n * each field in the the referenced set of fields.\n *\n * E) Also, if any fragment is referenced in the referenced selection set,\n * then a comparison is made \"between\" the original set of fields and the\n * referenced fragment (recursively referring to step D).\n *\n * F) When comparing \"between\" two fragments, first a comparison is made between\n * each field in the first referenced set of fields and each field in the the\n * second referenced set of fields.\n *\n * G) Also, any fragments referenced by the first must be compared to the\n * second, and any fragments referenced by the second must be compared to the\n * first (recursively referring to step F).\n *\n * H) When comparing two fields, if both have selection sets, then a comparison\n * is made \"between\" both selection sets, first comparing the set of fields in\n * the first selection set with the set of fields in the second.\n *\n * I) Also, if any fragment is referenced in either selection set, then a\n * comparison is made \"between\" the other set of fields and the\n * referenced fragment.\n *\n * J) Also, if two fragments are referenced in both selection sets, then a\n * comparison is made \"between\" the two fragments.\n *\n */\n// Find all conflicts found \"within\" a selection set, including those found\n// via spreading in fragments. Called when visiting each SelectionSet in the\n// GraphQL Document.\nfunction findConflictsWithinSelectionSet(\n  context,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  parentType,\n  selectionSet,\n) {\n  const conflicts = [];\n  const [fieldMap, fragmentNames] = getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    parentType,\n    selectionSet,\n  ); // (A) Find find all conflicts \"within\" the fields of this selection set.\n  // Note: this is the *only place* `collectConflictsWithin` is called.\n\n  collectConflictsWithin(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    fieldMap,\n  );\n\n  if (fragmentNames.length !== 0) {\n    // (B) Then collect conflicts between these fields and those represented by\n    // each spread fragment name found.\n    for (let i = 0; i < fragmentNames.length; i++) {\n      collectConflictsBetweenFieldsAndFragment(\n        context,\n        conflicts,\n        cachedFieldsAndFragmentNames,\n        comparedFragmentPairs,\n        false,\n        fieldMap,\n        fragmentNames[i],\n      ); // (C) Then compare this fragment with all other fragments found in this\n      // selection set to collect conflicts between fragments spread together.\n      // This compares each item in the list of fragment names to every other\n      // item in that same list (except for itself).\n\n      for (let j = i + 1; j < fragmentNames.length; j++) {\n        collectConflictsBetweenFragments(\n          context,\n          conflicts,\n          cachedFieldsAndFragmentNames,\n          comparedFragmentPairs,\n          false,\n          fragmentNames[i],\n          fragmentNames[j],\n        );\n      }\n    }\n  }\n\n  return conflicts;\n} // Collect all conflicts found between a set of fields and a fragment reference\n// including via spreading in any nested fragments.\n\nfunction collectConflictsBetweenFieldsAndFragment(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  areMutuallyExclusive,\n  fieldMap,\n  fragmentName,\n) {\n  const fragment = context.getFragment(fragmentName);\n\n  if (!fragment) {\n    return;\n  }\n\n  const [fieldMap2, referencedFragmentNames] =\n    getReferencedFieldsAndFragmentNames(\n      context,\n      cachedFieldsAndFragmentNames,\n      fragment,\n    ); // Do not compare a fragment's fieldMap to itself.\n\n  if (fieldMap === fieldMap2) {\n    return;\n  } // (D) First collect any conflicts between the provided collection of fields\n  // and the collection of fields represented by the given fragment.\n\n  collectConflictsBetween(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    areMutuallyExclusive,\n    fieldMap,\n    fieldMap2,\n  ); // (E) Then collect any conflicts between the provided collection of fields\n  // and any fragment names found in the given fragment.\n\n  for (const referencedFragmentName of referencedFragmentNames) {\n    // Memoize so two fragments are not compared for conflicts more than once.\n    if (\n      comparedFragmentPairs.has(\n        referencedFragmentName,\n        fragmentName,\n        areMutuallyExclusive,\n      )\n    ) {\n      continue;\n    }\n\n    comparedFragmentPairs.add(\n      referencedFragmentName,\n      fragmentName,\n      areMutuallyExclusive,\n    );\n    collectConflictsBetweenFieldsAndFragment(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fieldMap,\n      referencedFragmentName,\n    );\n  }\n} // Collect all conflicts found between two fragments, including via spreading in\n// any nested fragments.\n\nfunction collectConflictsBetweenFragments(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  areMutuallyExclusive,\n  fragmentName1,\n  fragmentName2,\n) {\n  // No need to compare a fragment to itself.\n  if (fragmentName1 === fragmentName2) {\n    return;\n  } // Memoize so two fragments are not compared for conflicts more than once.\n\n  if (\n    comparedFragmentPairs.has(\n      fragmentName1,\n      fragmentName2,\n      areMutuallyExclusive,\n    )\n  ) {\n    return;\n  }\n\n  comparedFragmentPairs.add(fragmentName1, fragmentName2, areMutuallyExclusive);\n  const fragment1 = context.getFragment(fragmentName1);\n  const fragment2 = context.getFragment(fragmentName2);\n\n  if (!fragment1 || !fragment2) {\n    return;\n  }\n\n  const [fieldMap1, referencedFragmentNames1] =\n    getReferencedFieldsAndFragmentNames(\n      context,\n      cachedFieldsAndFragmentNames,\n      fragment1,\n    );\n  const [fieldMap2, referencedFragmentNames2] =\n    getReferencedFieldsAndFragmentNames(\n      context,\n      cachedFieldsAndFragmentNames,\n      fragment2,\n    ); // (F) First, collect all conflicts between these two collections of fields\n  // (not including any nested fragments).\n\n  collectConflictsBetween(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    areMutuallyExclusive,\n    fieldMap1,\n    fieldMap2,\n  ); // (G) Then collect conflicts between the first fragment and any nested\n  // fragments spread in the second fragment.\n\n  for (const referencedFragmentName2 of referencedFragmentNames2) {\n    collectConflictsBetweenFragments(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fragmentName1,\n      referencedFragmentName2,\n    );\n  } // (G) Then collect conflicts between the second fragment and any nested\n  // fragments spread in the first fragment.\n\n  for (const referencedFragmentName1 of referencedFragmentNames1) {\n    collectConflictsBetweenFragments(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      referencedFragmentName1,\n      fragmentName2,\n    );\n  }\n} // Find all conflicts found between two selection sets, including those found\n// via spreading in fragments. Called when determining if conflicts exist\n// between the sub-fields of two overlapping fields.\n\nfunction findConflictsBetweenSubSelectionSets(\n  context,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  areMutuallyExclusive,\n  parentType1,\n  selectionSet1,\n  parentType2,\n  selectionSet2,\n) {\n  const conflicts = [];\n  const [fieldMap1, fragmentNames1] = getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    parentType1,\n    selectionSet1,\n  );\n  const [fieldMap2, fragmentNames2] = getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    parentType2,\n    selectionSet2,\n  ); // (H) First, collect all conflicts between these two collections of field.\n\n  collectConflictsBetween(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    areMutuallyExclusive,\n    fieldMap1,\n    fieldMap2,\n  ); // (I) Then collect conflicts between the first collection of fields and\n  // those referenced by each fragment name associated with the second.\n\n  for (const fragmentName2 of fragmentNames2) {\n    collectConflictsBetweenFieldsAndFragment(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fieldMap1,\n      fragmentName2,\n    );\n  } // (I) Then collect conflicts between the second collection of fields and\n  // those referenced by each fragment name associated with the first.\n\n  for (const fragmentName1 of fragmentNames1) {\n    collectConflictsBetweenFieldsAndFragment(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fieldMap2,\n      fragmentName1,\n    );\n  } // (J) Also collect conflicts between any fragment names by the first and\n  // fragment names by the second. This compares each item in the first set of\n  // names to each item in the second set of names.\n\n  for (const fragmentName1 of fragmentNames1) {\n    for (const fragmentName2 of fragmentNames2) {\n      collectConflictsBetweenFragments(\n        context,\n        conflicts,\n        cachedFieldsAndFragmentNames,\n        comparedFragmentPairs,\n        areMutuallyExclusive,\n        fragmentName1,\n        fragmentName2,\n      );\n    }\n  }\n\n  return conflicts;\n} // Collect all Conflicts \"within\" one collection of fields.\n\nfunction collectConflictsWithin(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  fieldMap,\n) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For every response name, if there are multiple fields, they\n  // must be compared to find a potential conflict.\n  for (const [responseName, fields] of Object.entries(fieldMap)) {\n    // This compares every field in the list to every other field in this list\n    // (except to itself). If the list only has one item, nothing needs to\n    // be compared.\n    if (fields.length > 1) {\n      for (let i = 0; i < fields.length; i++) {\n        for (let j = i + 1; j < fields.length; j++) {\n          const conflict = findConflict(\n            context,\n            cachedFieldsAndFragmentNames,\n            comparedFragmentPairs,\n            false, // within one collection is never mutually exclusive\n            responseName,\n            fields[i],\n            fields[j],\n          );\n\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Collect all Conflicts between two collections of fields. This is similar to,\n// but different from the `collectConflictsWithin` function above. This check\n// assumes that `collectConflictsWithin` has already been called on each\n// provided collection of fields. This is true because this validator traverses\n// each individual selection set.\n\nfunction collectConflictsBetween(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  parentFieldsAreMutuallyExclusive,\n  fieldMap1,\n  fieldMap2,\n) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For any response name which appears in both provided field\n  // maps, each field from the first field map must be compared to every field\n  // in the second field map to find potential conflicts.\n  for (const [responseName, fields1] of Object.entries(fieldMap1)) {\n    const fields2 = fieldMap2[responseName];\n\n    if (fields2) {\n      for (const field1 of fields1) {\n        for (const field2 of fields2) {\n          const conflict = findConflict(\n            context,\n            cachedFieldsAndFragmentNames,\n            comparedFragmentPairs,\n            parentFieldsAreMutuallyExclusive,\n            responseName,\n            field1,\n            field2,\n          );\n\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Determines if there is a conflict between two particular fields, including\n// comparing their sub-fields.\n\nfunction findConflict(\n  context,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  parentFieldsAreMutuallyExclusive,\n  responseName,\n  field1,\n  field2,\n) {\n  const [parentType1, node1, def1] = field1;\n  const [parentType2, node2, def2] = field2; // If it is known that two fields could not possibly apply at the same\n  // time, due to the parent types, then it is safe to permit them to diverge\n  // in aliased field or arguments used as they will not present any ambiguity\n  // by differing.\n  // It is known that two parent types could never overlap if they are\n  // different Object types. Interface or Union types might overlap - if not\n  // in the current state of the schema, then perhaps in some future version,\n  // thus may not safely diverge.\n\n  const areMutuallyExclusive =\n    parentFieldsAreMutuallyExclusive ||\n    (parentType1 !== parentType2 &&\n      (0, _definition.isObjectType)(parentType1) &&\n      (0, _definition.isObjectType)(parentType2));\n\n  if (!areMutuallyExclusive) {\n    // Two aliases must refer to the same field.\n    const name1 = node1.name.value;\n    const name2 = node2.name.value;\n\n    if (name1 !== name2) {\n      return [\n        [responseName, `\"${name1}\" and \"${name2}\" are different fields`],\n        [node1],\n        [node2],\n      ];\n    } // Two field calls must have the same arguments.\n\n    if (!sameArguments(node1, node2)) {\n      return [\n        [responseName, 'they have differing arguments'],\n        [node1],\n        [node2],\n      ];\n    }\n  } // The return type for each field.\n\n  const type1 = def1 === null || def1 === void 0 ? void 0 : def1.type;\n  const type2 = def2 === null || def2 === void 0 ? void 0 : def2.type;\n\n  if (type1 && type2 && doTypesConflict(type1, type2)) {\n    return [\n      [\n        responseName,\n        `they return conflicting types \"${(0, _inspect.inspect)(\n          type1,\n        )}\" and \"${(0, _inspect.inspect)(type2)}\"`,\n      ],\n      [node1],\n      [node2],\n    ];\n  } // Collect and compare sub-fields. Use the same \"visited fragment names\" list\n  // for both collections so fields in a fragment reference are never\n  // compared to themselves.\n\n  const selectionSet1 = node1.selectionSet;\n  const selectionSet2 = node2.selectionSet;\n\n  if (selectionSet1 && selectionSet2) {\n    const conflicts = findConflictsBetweenSubSelectionSets(\n      context,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      (0, _definition.getNamedType)(type1),\n      selectionSet1,\n      (0, _definition.getNamedType)(type2),\n      selectionSet2,\n    );\n    return subfieldConflicts(conflicts, responseName, node1, node2);\n  }\n}\n\nfunction sameArguments(node1, node2) {\n  const args1 = node1.arguments;\n  const args2 = node2.arguments;\n\n  if (args1 === undefined || args1.length === 0) {\n    return args2 === undefined || args2.length === 0;\n  }\n\n  if (args2 === undefined || args2.length === 0) {\n    return false;\n  }\n  /* c8 ignore next */\n\n  if (args1.length !== args2.length) {\n    /* c8 ignore next */\n    return false;\n    /* c8 ignore next */\n  }\n\n  const values2 = new Map(args2.map(({ name, value }) => [name.value, value]));\n  return args1.every((arg1) => {\n    const value1 = arg1.value;\n    const value2 = values2.get(arg1.name.value);\n\n    if (value2 === undefined) {\n      return false;\n    }\n\n    return stringifyValue(value1) === stringifyValue(value2);\n  });\n}\n\nfunction stringifyValue(value) {\n  return (0, _printer.print)((0, _sortValueNode.sortValueNode)(value));\n} // Two types conflict if both types could not apply to a value simultaneously.\n// Composite types are ignored as their individual field types will be compared\n// later recursively. However List and Non-Null types must match.\n\nfunction doTypesConflict(type1, type2) {\n  if ((0, _definition.isListType)(type1)) {\n    return (0, _definition.isListType)(type2)\n      ? doTypesConflict(type1.ofType, type2.ofType)\n      : true;\n  }\n\n  if ((0, _definition.isListType)(type2)) {\n    return true;\n  }\n\n  if ((0, _definition.isNonNullType)(type1)) {\n    return (0, _definition.isNonNullType)(type2)\n      ? doTypesConflict(type1.ofType, type2.ofType)\n      : true;\n  }\n\n  if ((0, _definition.isNonNullType)(type2)) {\n    return true;\n  }\n\n  if (\n    (0, _definition.isLeafType)(type1) ||\n    (0, _definition.isLeafType)(type2)\n  ) {\n    return type1 !== type2;\n  }\n\n  return false;\n} // Given a selection set, return the collection of fields (a mapping of response\n// name to field nodes and definitions) as well as a list of fragment names\n// referenced via fragment spreads.\n\nfunction getFieldsAndFragmentNames(\n  context,\n  cachedFieldsAndFragmentNames,\n  parentType,\n  selectionSet,\n) {\n  const cached = cachedFieldsAndFragmentNames.get(selectionSet);\n\n  if (cached) {\n    return cached;\n  }\n\n  const nodeAndDefs = Object.create(null);\n  const fragmentNames = Object.create(null);\n\n  _collectFieldsAndFragmentNames(\n    context,\n    parentType,\n    selectionSet,\n    nodeAndDefs,\n    fragmentNames,\n  );\n\n  const result = [nodeAndDefs, Object.keys(fragmentNames)];\n  cachedFieldsAndFragmentNames.set(selectionSet, result);\n  return result;\n} // Given a reference to a fragment, return the represented collection of fields\n// as well as a list of nested fragment names referenced via fragment spreads.\n\nfunction getReferencedFieldsAndFragmentNames(\n  context,\n  cachedFieldsAndFragmentNames,\n  fragment,\n) {\n  // Short-circuit building a type from the node if possible.\n  const cached = cachedFieldsAndFragmentNames.get(fragment.selectionSet);\n\n  if (cached) {\n    return cached;\n  }\n\n  const fragmentType = (0, _typeFromAST.typeFromAST)(\n    context.getSchema(),\n    fragment.typeCondition,\n  );\n  return getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    fragmentType,\n    fragment.selectionSet,\n  );\n}\n\nfunction _collectFieldsAndFragmentNames(\n  context,\n  parentType,\n  selectionSet,\n  nodeAndDefs,\n  fragmentNames,\n) {\n  for (const selection of selectionSet.selections) {\n    switch (selection.kind) {\n      case _kinds.Kind.FIELD: {\n        const fieldName = selection.name.value;\n        let fieldDef;\n\n        if (\n          (0, _definition.isObjectType)(parentType) ||\n          (0, _definition.isInterfaceType)(parentType)\n        ) {\n          fieldDef = parentType.getFields()[fieldName];\n        }\n\n        const responseName = selection.alias\n          ? selection.alias.value\n          : fieldName;\n\n        if (!nodeAndDefs[responseName]) {\n          nodeAndDefs[responseName] = [];\n        }\n\n        nodeAndDefs[responseName].push([parentType, selection, fieldDef]);\n        break;\n      }\n\n      case _kinds.Kind.FRAGMENT_SPREAD:\n        fragmentNames[selection.name.value] = true;\n        break;\n\n      case _kinds.Kind.INLINE_FRAGMENT: {\n        const typeCondition = selection.typeCondition;\n        const inlineFragmentType = typeCondition\n          ? (0, _typeFromAST.typeFromAST)(context.getSchema(), typeCondition)\n          : parentType;\n\n        _collectFieldsAndFragmentNames(\n          context,\n          inlineFragmentType,\n          selection.selectionSet,\n          nodeAndDefs,\n          fragmentNames,\n        );\n\n        break;\n      }\n    }\n  }\n} // Given a series of Conflicts which occurred between two sub-fields, generate\n// a single Conflict.\n\nfunction subfieldConflicts(conflicts, responseName, node1, node2) {\n  if (conflicts.length > 0) {\n    return [\n      [responseName, conflicts.map(([reason]) => reason)],\n      [node1, ...conflicts.map(([, fields1]) => fields1).flat()],\n      [node2, ...conflicts.map(([, , fields2]) => fields2).flat()],\n    ];\n  }\n}\n/**\n * A way to keep track of pairs of things when the ordering of the pair does not matter.\n */\n\nclass PairSet {\n  constructor() {\n    this._data = new Map();\n  }\n\n  has(a, b, areMutuallyExclusive) {\n    var _this$_data$get;\n\n    const [key1, key2] = a < b ? [a, b] : [b, a];\n    const result =\n      (_this$_data$get = this._data.get(key1)) === null ||\n      _this$_data$get === void 0\n        ? void 0\n        : _this$_data$get.get(key2);\n\n    if (result === undefined) {\n      return false;\n    } // areMutuallyExclusive being false is a superset of being true, hence if\n    // we want to know if this PairSet \"has\" these two with no exclusivity,\n    // we have to ensure it was added as such.\n\n    return areMutuallyExclusive ? true : areMutuallyExclusive === result;\n  }\n\n  add(a, b, areMutuallyExclusive) {\n    const [key1, key2] = a < b ? [a, b] : [b, a];\n\n    const map = this._data.get(key1);\n\n    if (map === undefined) {\n      this._data.set(key1, new Map([[key2, areMutuallyExclusive]]));\n    } else {\n      map.set(key2, areMutuallyExclusive);\n    }\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.PossibleFragmentSpreadsRule = PossibleFragmentSpreadsRule;\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _definition = require('../../type/definition.js');\n\nvar _typeComparators = require('../../utilities/typeComparators.js');\n\nvar _typeFromAST = require('../../utilities/typeFromAST.js');\n\n/**\n * Possible fragment spread\n *\n * A fragment spread is only valid if the type condition could ever possibly\n * be true: if there is a non-empty intersection of the possible parent types,\n * and possible types which pass the type condition.\n */\nfunction PossibleFragmentSpreadsRule(context) {\n  return {\n    InlineFragment(node) {\n      const fragType = context.getType();\n      const parentType = context.getParentType();\n\n      if (\n        (0, _definition.isCompositeType)(fragType) &&\n        (0, _definition.isCompositeType)(parentType) &&\n        !(0, _typeComparators.doTypesOverlap)(\n          context.getSchema(),\n          fragType,\n          parentType,\n        )\n      ) {\n        const parentTypeStr = (0, _inspect.inspect)(parentType);\n        const fragTypeStr = (0, _inspect.inspect)(fragType);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Fragment cannot be spread here as objects of type \"${parentTypeStr}\" can never be of type \"${fragTypeStr}\".`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    FragmentSpread(node) {\n      const fragName = node.name.value;\n      const fragType = getFragmentType(context, fragName);\n      const parentType = context.getParentType();\n\n      if (\n        fragType &&\n        parentType &&\n        !(0, _typeComparators.doTypesOverlap)(\n          context.getSchema(),\n          fragType,\n          parentType,\n        )\n      ) {\n        const parentTypeStr = (0, _inspect.inspect)(parentType);\n        const fragTypeStr = (0, _inspect.inspect)(fragType);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Fragment \"${fragName}\" cannot be spread here as objects of type \"${parentTypeStr}\" can never be of type \"${fragTypeStr}\".`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\nfunction getFragmentType(context, name) {\n  const frag = context.getFragment(name);\n\n  if (frag) {\n    const type = (0, _typeFromAST.typeFromAST)(\n      context.getSchema(),\n      frag.typeCondition,\n    );\n\n    if ((0, _definition.isCompositeType)(type)) {\n      return type;\n    }\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.PossibleTypeExtensionsRule = PossibleTypeExtensionsRule;\n\nvar _didYouMean = require('../../jsutils/didYouMean.js');\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _invariant = require('../../jsutils/invariant.js');\n\nvar _suggestionList = require('../../jsutils/suggestionList.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _predicates = require('../../language/predicates.js');\n\nvar _definition = require('../../type/definition.js');\n\n/**\n * Possible type extension\n *\n * A type extension is only valid if the type is defined and has the same kind.\n */\nfunction PossibleTypeExtensionsRule(context) {\n  const schema = context.getSchema();\n  const definedTypes = Object.create(null);\n\n  for (const def of context.getDocument().definitions) {\n    if ((0, _predicates.isTypeDefinitionNode)(def)) {\n      definedTypes[def.name.value] = def;\n    }\n  }\n\n  return {\n    ScalarTypeExtension: checkExtension,\n    ObjectTypeExtension: checkExtension,\n    InterfaceTypeExtension: checkExtension,\n    UnionTypeExtension: checkExtension,\n    EnumTypeExtension: checkExtension,\n    InputObjectTypeExtension: checkExtension,\n  };\n\n  function checkExtension(node) {\n    const typeName = node.name.value;\n    const defNode = definedTypes[typeName];\n    const existingType =\n      schema === null || schema === void 0 ? void 0 : schema.getType(typeName);\n    let expectedKind;\n\n    if (defNode) {\n      expectedKind = defKindToExtKind[defNode.kind];\n    } else if (existingType) {\n      expectedKind = typeToExtKind(existingType);\n    }\n\n    if (expectedKind) {\n      if (expectedKind !== node.kind) {\n        const kindStr = extensionKindToTypeName(node.kind);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Cannot extend non-${kindStr} type \"${typeName}\".`,\n            {\n              nodes: defNode ? [defNode, node] : node,\n            },\n          ),\n        );\n      }\n    } else {\n      const allTypeNames = Object.keys({\n        ...definedTypes,\n        ...(schema === null || schema === void 0\n          ? void 0\n          : schema.getTypeMap()),\n      });\n      const suggestedTypes = (0, _suggestionList.suggestionList)(\n        typeName,\n        allTypeNames,\n      );\n      context.reportError(\n        new _GraphQLError.GraphQLError(\n          `Cannot extend type \"${typeName}\" because it is not defined.` +\n            (0, _didYouMean.didYouMean)(suggestedTypes),\n          {\n            nodes: node.name,\n          },\n        ),\n      );\n    }\n  }\n}\n\nconst defKindToExtKind = {\n  [_kinds.Kind.SCALAR_TYPE_DEFINITION]: _kinds.Kind.SCALAR_TYPE_EXTENSION,\n  [_kinds.Kind.OBJECT_TYPE_DEFINITION]: _kinds.Kind.OBJECT_TYPE_EXTENSION,\n  [_kinds.Kind.INTERFACE_TYPE_DEFINITION]: _kinds.Kind.INTERFACE_TYPE_EXTENSION,\n  [_kinds.Kind.UNION_TYPE_DEFINITION]: _kinds.Kind.UNION_TYPE_EXTENSION,\n  [_kinds.Kind.ENUM_TYPE_DEFINITION]: _kinds.Kind.ENUM_TYPE_EXTENSION,\n  [_kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION]:\n    _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION,\n};\n\nfunction typeToExtKind(type) {\n  if ((0, _definition.isScalarType)(type)) {\n    return _kinds.Kind.SCALAR_TYPE_EXTENSION;\n  }\n\n  if ((0, _definition.isObjectType)(type)) {\n    return _kinds.Kind.OBJECT_TYPE_EXTENSION;\n  }\n\n  if ((0, _definition.isInterfaceType)(type)) {\n    return _kinds.Kind.INTERFACE_TYPE_EXTENSION;\n  }\n\n  if ((0, _definition.isUnionType)(type)) {\n    return _kinds.Kind.UNION_TYPE_EXTENSION;\n  }\n\n  if ((0, _definition.isEnumType)(type)) {\n    return _kinds.Kind.ENUM_TYPE_EXTENSION;\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    return _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable. All possible types have been considered\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Unexpected type: ' + (0, _inspect.inspect)(type),\n    );\n}\n\nfunction extensionKindToTypeName(kind) {\n  switch (kind) {\n    case _kinds.Kind.SCALAR_TYPE_EXTENSION:\n      return 'scalar';\n\n    case _kinds.Kind.OBJECT_TYPE_EXTENSION:\n      return 'object';\n\n    case _kinds.Kind.INTERFACE_TYPE_EXTENSION:\n      return 'interface';\n\n    case _kinds.Kind.UNION_TYPE_EXTENSION:\n      return 'union';\n\n    case _kinds.Kind.ENUM_TYPE_EXTENSION:\n      return 'enum';\n\n    case _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return 'input object';\n    // Not reachable. All possible types have been considered\n\n    /* c8 ignore next */\n\n    default:\n      false ||\n        (0, _invariant.invariant)(\n          false,\n          'Unexpected kind: ' + (0, _inspect.inspect)(kind),\n        );\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.ProvidedRequiredArgumentsOnDirectivesRule =\n  ProvidedRequiredArgumentsOnDirectivesRule;\nexports.ProvidedRequiredArgumentsRule = ProvidedRequiredArgumentsRule;\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _keyMap = require('../../jsutils/keyMap.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _printer = require('../../language/printer.js');\n\nvar _definition = require('../../type/definition.js');\n\nvar _directives = require('../../type/directives.js');\n\n/**\n * Provided required arguments\n *\n * A field or directive is only valid if all required (non-null without a\n * default value) field arguments have been provided.\n */\nfunction ProvidedRequiredArgumentsRule(context) {\n  return {\n    // eslint-disable-next-line new-cap\n    ...ProvidedRequiredArgumentsOnDirectivesRule(context),\n    Field: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(fieldNode) {\n        var _fieldNode$arguments;\n\n        const fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          return false;\n        }\n\n        const providedArgs = new Set( // FIXME: https://github.com/graphql/graphql-js/issues/2203\n          /* c8 ignore next */\n          (_fieldNode$arguments = fieldNode.arguments) === null ||\n          _fieldNode$arguments === void 0\n            ? void 0\n            : _fieldNode$arguments.map((arg) => arg.name.value),\n        );\n\n        for (const argDef of fieldDef.args) {\n          if (\n            !providedArgs.has(argDef.name) &&\n            (0, _definition.isRequiredArgument)(argDef)\n          ) {\n            const argTypeStr = (0, _inspect.inspect)(argDef.type);\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                `Field \"${fieldDef.name}\" argument \"${argDef.name}\" of type \"${argTypeStr}\" is required, but it was not provided.`,\n                {\n                  nodes: fieldNode,\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n  };\n}\n/**\n * @internal\n */\n\nfunction ProvidedRequiredArgumentsOnDirectivesRule(context) {\n  var _schema$getDirectives;\n\n  const requiredArgsMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives =\n    (_schema$getDirectives =\n      schema === null || schema === void 0\n        ? void 0\n        : schema.getDirectives()) !== null && _schema$getDirectives !== void 0\n      ? _schema$getDirectives\n      : _directives.specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    requiredArgsMap[directive.name] = (0, _keyMap.keyMap)(\n      directive.args.filter(_definition.isRequiredArgument),\n      (arg) => arg.name,\n    );\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argNodes =\n        (_def$arguments = def.arguments) !== null && _def$arguments !== void 0\n          ? _def$arguments\n          : [];\n      requiredArgsMap[def.name.value] = (0, _keyMap.keyMap)(\n        argNodes.filter(isRequiredArgumentNode),\n        (arg) => arg.name.value,\n      );\n    }\n  }\n\n  return {\n    Directive: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(directiveNode) {\n        const directiveName = directiveNode.name.value;\n        const requiredArgs = requiredArgsMap[directiveName];\n\n        if (requiredArgs) {\n          var _directiveNode$argume;\n\n          // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n          /* c8 ignore next */\n          const argNodes =\n            (_directiveNode$argume = directiveNode.arguments) !== null &&\n            _directiveNode$argume !== void 0\n              ? _directiveNode$argume\n              : [];\n          const argNodeMap = new Set(argNodes.map((arg) => arg.name.value));\n\n          for (const [argName, argDef] of Object.entries(requiredArgs)) {\n            if (!argNodeMap.has(argName)) {\n              const argType = (0, _definition.isType)(argDef.type)\n                ? (0, _inspect.inspect)(argDef.type)\n                : (0, _printer.print)(argDef.type);\n              context.reportError(\n                new _GraphQLError.GraphQLError(\n                  `Directive \"@${directiveName}\" argument \"${argName}\" of type \"${argType}\" is required, but it was not provided.`,\n                  {\n                    nodes: directiveNode,\n                  },\n                ),\n              );\n            }\n          }\n        }\n      },\n    },\n  };\n}\n\nfunction isRequiredArgumentNode(arg) {\n  return (\n    arg.type.kind === _kinds.Kind.NON_NULL_TYPE && arg.defaultValue == null\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.ScalarLeafsRule = ScalarLeafsRule;\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _definition = require('../../type/definition.js');\n\n/**\n * Scalar leafs\n *\n * A GraphQL document is valid only if all leaf fields (fields without\n * sub selections) are of scalar or enum types.\n */\nfunction ScalarLeafsRule(context) {\n  return {\n    Field(node) {\n      const type = context.getType();\n      const selectionSet = node.selectionSet;\n\n      if (type) {\n        if ((0, _definition.isLeafType)((0, _definition.getNamedType)(type))) {\n          if (selectionSet) {\n            const fieldName = node.name.value;\n            const typeStr = (0, _inspect.inspect)(type);\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                `Field \"${fieldName}\" must not have a selection since type \"${typeStr}\" has no subfields.`,\n                {\n                  nodes: selectionSet,\n                },\n              ),\n            );\n          }\n        } else if (!selectionSet) {\n          const fieldName = node.name.value;\n          const typeStr = (0, _inspect.inspect)(type);\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `Field \"${fieldName}\" of type \"${typeStr}\" must have a selection of subfields. Did you mean \"${fieldName} { ... }\"?`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.printPathArray = printPathArray;\n\n/**\n * Build a string describing the path.\n */\nfunction printPathArray(path) {\n  return path\n    .map((key) =>\n      typeof key === 'number' ? '[' + key.toString() + ']' : '.' + key,\n    )\n    .join('');\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.addPath = addPath;\nexports.pathToArray = pathToArray;\n\n/**\n * Given a Path and a key, return a new Path containing the new key.\n */\nfunction addPath(prev, key, typename) {\n  return {\n    prev,\n    key,\n    typename,\n  };\n}\n/**\n * Given a Path, return an Array of the path keys.\n */\n\nfunction pathToArray(path) {\n  const flattened = [];\n  let curr = path;\n\n  while (curr) {\n    flattened.push(curr.key);\n    curr = curr.prev;\n  }\n\n  return flattened.reverse();\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.coerceInputValue = coerceInputValue;\n\nvar _didYouMean = require('../jsutils/didYouMean.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _isIterableObject = require('../jsutils/isIterableObject.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _Path = require('../jsutils/Path.js');\n\nvar _printPathArray = require('../jsutils/printPathArray.js');\n\nvar _suggestionList = require('../jsutils/suggestionList.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _definition = require('../type/definition.js');\n\n/**\n * Coerces a JavaScript value given a GraphQL Input Type.\n */\nfunction coerceInputValue(inputValue, type, onError = defaultOnError) {\n  return coerceInputValueImpl(inputValue, type, onError, undefined);\n}\n\nfunction defaultOnError(path, invalidValue, error) {\n  let errorPrefix = 'Invalid value ' + (0, _inspect.inspect)(invalidValue);\n\n  if (path.length > 0) {\n    errorPrefix += ` at \"value${(0, _printPathArray.printPathArray)(path)}\"`;\n  }\n\n  error.message = errorPrefix + ': ' + error.message;\n  throw error;\n}\n\nfunction coerceInputValueImpl(inputValue, type, onError, path) {\n  if ((0, _definition.isNonNullType)(type)) {\n    if (inputValue != null) {\n      return coerceInputValueImpl(inputValue, type.ofType, onError, path);\n    }\n\n    onError(\n      (0, _Path.pathToArray)(path),\n      inputValue,\n      new _GraphQLError.GraphQLError(\n        `Expected non-nullable type \"${(0, _inspect.inspect)(\n          type,\n        )}\" not to be null.`,\n      ),\n    );\n    return;\n  }\n\n  if (inputValue == null) {\n    // Explicitly return the value null.\n    return null;\n  }\n\n  if ((0, _definition.isListType)(type)) {\n    const itemType = type.ofType;\n\n    if ((0, _isIterableObject.isIterableObject)(inputValue)) {\n      return Array.from(inputValue, (itemValue, index) => {\n        const itemPath = (0, _Path.addPath)(path, index, undefined);\n        return coerceInputValueImpl(itemValue, itemType, onError, itemPath);\n      });\n    } // Lists accept a non-list value as a list of one.\n\n    return [coerceInputValueImpl(inputValue, itemType, onError, path)];\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    if (!(0, _isObjectLike.isObjectLike)(inputValue)) {\n      onError(\n        (0, _Path.pathToArray)(path),\n        inputValue,\n        new _GraphQLError.GraphQLError(\n          `Expected type \"${type.name}\" to be an object.`,\n        ),\n      );\n      return;\n    }\n\n    const coercedValue = {};\n    const fieldDefs = type.getFields();\n\n    for (const field of Object.values(fieldDefs)) {\n      const fieldValue = inputValue[field.name];\n\n      if (fieldValue === undefined) {\n        if (field.defaultValue !== undefined) {\n          coercedValue[field.name] = field.defaultValue;\n        } else if ((0, _definition.isNonNullType)(field.type)) {\n          const typeStr = (0, _inspect.inspect)(field.type);\n          onError(\n            (0, _Path.pathToArray)(path),\n            inputValue,\n            new _GraphQLError.GraphQLError(\n              `Field \"${field.name}\" of required type \"${typeStr}\" was not provided.`,\n            ),\n          );\n        }\n\n        continue;\n      }\n\n      coercedValue[field.name] = coerceInputValueImpl(\n        fieldValue,\n        field.type,\n        onError,\n        (0, _Path.addPath)(path, field.name, type.name),\n      );\n    } // Ensure every provided field is defined.\n\n    for (const fieldName of Object.keys(inputValue)) {\n      if (!fieldDefs[fieldName]) {\n        const suggestions = (0, _suggestionList.suggestionList)(\n          fieldName,\n          Object.keys(type.getFields()),\n        );\n        onError(\n          (0, _Path.pathToArray)(path),\n          inputValue,\n          new _GraphQLError.GraphQLError(\n            `Field \"${fieldName}\" is not defined by type \"${type.name}\".` +\n              (0, _didYouMean.didYouMean)(suggestions),\n          ),\n        );\n      }\n    }\n\n    return coercedValue;\n  }\n\n  if ((0, _definition.isLeafType)(type)) {\n    let parseResult; // Scalars and Enums determine if a input value is valid via parseValue(),\n    // which can throw to indicate failure. If it throws, maintain a reference\n    // to the original error.\n\n    try {\n      parseResult = type.parseValue(inputValue);\n    } catch (error) {\n      if (error instanceof _GraphQLError.GraphQLError) {\n        onError((0, _Path.pathToArray)(path), inputValue, error);\n      } else {\n        onError(\n          (0, _Path.pathToArray)(path),\n          inputValue,\n          new _GraphQLError.GraphQLError(\n            `Expected type \"${type.name}\". ` + error.message,\n            {\n              originalError: error,\n            },\n          ),\n        );\n      }\n\n      return;\n    }\n\n    if (parseResult === undefined) {\n      onError(\n        (0, _Path.pathToArray)(path),\n        inputValue,\n        new _GraphQLError.GraphQLError(`Expected type \"${type.name}\".`),\n      );\n    }\n\n    return parseResult;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Unexpected input type: ' + (0, _inspect.inspect)(type),\n    );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.valueFromAST = valueFromAST;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _keyMap = require('../jsutils/keyMap.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _definition = require('../type/definition.js');\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * GraphQL Value literals.\n *\n * Returns `undefined` when the value could not be validly coerced according to\n * the provided type.\n *\n * | GraphQL Value        | JSON Value    |\n * | -------------------- | ------------- |\n * | Input Object         | Object        |\n * | List                 | Array         |\n * | Boolean              | Boolean       |\n * | String               | String        |\n * | Int / Float          | Number        |\n * | Enum Value           | Unknown       |\n * | NullValue            | null          |\n *\n */\nfunction valueFromAST(valueNode, type, variables) {\n  if (!valueNode) {\n    // When there is no node, then there is also no value.\n    // Importantly, this is different from returning the value null.\n    return;\n  }\n\n  if (valueNode.kind === _kinds.Kind.VARIABLE) {\n    const variableName = valueNode.name.value;\n\n    if (variables == null || variables[variableName] === undefined) {\n      // No valid return value.\n      return;\n    }\n\n    const variableValue = variables[variableName];\n\n    if (variableValue === null && (0, _definition.isNonNullType)(type)) {\n      return; // Invalid: intentionally return no value.\n    } // Note: This does no further checking that this variable is correct.\n    // This assumes that this query has been validated and the variable\n    // usage here is of the correct type.\n\n    return variableValue;\n  }\n\n  if ((0, _definition.isNonNullType)(type)) {\n    if (valueNode.kind === _kinds.Kind.NULL) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return valueFromAST(valueNode, type.ofType, variables);\n  }\n\n  if (valueNode.kind === _kinds.Kind.NULL) {\n    // This is explicitly returning the value null.\n    return null;\n  }\n\n  if ((0, _definition.isListType)(type)) {\n    const itemType = type.ofType;\n\n    if (valueNode.kind === _kinds.Kind.LIST) {\n      const coercedValues = [];\n\n      for (const itemNode of valueNode.values) {\n        if (isMissingVariable(itemNode, variables)) {\n          // If an array contains a missing variable, it is either coerced to\n          // null or if the item type is non-null, it considered invalid.\n          if ((0, _definition.isNonNullType)(itemType)) {\n            return; // Invalid: intentionally return no value.\n          }\n\n          coercedValues.push(null);\n        } else {\n          const itemValue = valueFromAST(itemNode, itemType, variables);\n\n          if (itemValue === undefined) {\n            return; // Invalid: intentionally return no value.\n          }\n\n          coercedValues.push(itemValue);\n        }\n      }\n\n      return coercedValues;\n    }\n\n    const coercedValue = valueFromAST(valueNode, itemType, variables);\n\n    if (coercedValue === undefined) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return [coercedValue];\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    if (valueNode.kind !== _kinds.Kind.OBJECT) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    const coercedObj = Object.create(null);\n    const fieldNodes = (0, _keyMap.keyMap)(\n      valueNode.fields,\n      (field) => field.name.value,\n    );\n\n    for (const field of Object.values(type.getFields())) {\n      const fieldNode = fieldNodes[field.name];\n\n      if (!fieldNode || isMissingVariable(fieldNode.value, variables)) {\n        if (field.defaultValue !== undefined) {\n          coercedObj[field.name] = field.defaultValue;\n        } else if ((0, _definition.isNonNullType)(field.type)) {\n          return; // Invalid: intentionally return no value.\n        }\n\n        continue;\n      }\n\n      const fieldValue = valueFromAST(fieldNode.value, field.type, variables);\n\n      if (fieldValue === undefined) {\n        return; // Invalid: intentionally return no value.\n      }\n\n      coercedObj[field.name] = fieldValue;\n    }\n\n    return coercedObj;\n  }\n\n  if ((0, _definition.isLeafType)(type)) {\n    // Scalars and Enums fulfill parsing a literal value via parseLiteral().\n    // Invalid values represent a failure to parse correctly, in which case\n    // no value is returned.\n    let result;\n\n    try {\n      result = type.parseLiteral(valueNode, variables);\n    } catch (_error) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    if (result === undefined) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return result;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible input types have been considered.\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Unexpected input type: ' + (0, _inspect.inspect)(type),\n    );\n} // Returns true if the provided valueNode is a variable which is not defined\n// in the set of variables.\n\nfunction isMissingVariable(valueNode, variables) {\n  return (\n    valueNode.kind === _kinds.Kind.VARIABLE &&\n    (variables == null || variables[valueNode.name.value] === undefined)\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.getArgumentValues = getArgumentValues;\nexports.getDirectiveValues = getDirectiveValues;\nexports.getVariableValues = getVariableValues;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _keyMap = require('../jsutils/keyMap.js');\n\nvar _printPathArray = require('../jsutils/printPathArray.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _printer = require('../language/printer.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _coerceInputValue = require('../utilities/coerceInputValue.js');\n\nvar _typeFromAST = require('../utilities/typeFromAST.js');\n\nvar _valueFromAST = require('../utilities/valueFromAST.js');\n\n/**\n * Prepares an object map of variableValues of the correct type based on the\n * provided variable definitions and arbitrary input. If the input cannot be\n * parsed to match the variable definitions, a GraphQLError will be thrown.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nfunction getVariableValues(schema, varDefNodes, inputs, options) {\n  const errors = [];\n  const maxErrors =\n    options === null || options === void 0 ? void 0 : options.maxErrors;\n\n  try {\n    const coerced = coerceVariableValues(\n      schema,\n      varDefNodes,\n      inputs,\n      (error) => {\n        if (maxErrors != null && errors.length >= maxErrors) {\n          throw new _GraphQLError.GraphQLError(\n            'Too many errors processing variables, error limit reached. Execution aborted.',\n          );\n        }\n\n        errors.push(error);\n      },\n    );\n\n    if (errors.length === 0) {\n      return {\n        coerced,\n      };\n    }\n  } catch (error) {\n    errors.push(error);\n  }\n\n  return {\n    errors,\n  };\n}\n\nfunction coerceVariableValues(schema, varDefNodes, inputs, onError) {\n  const coercedValues = {};\n\n  for (const varDefNode of varDefNodes) {\n    const varName = varDefNode.variable.name.value;\n    const varType = (0, _typeFromAST.typeFromAST)(schema, varDefNode.type);\n\n    if (!(0, _definition.isInputType)(varType)) {\n      // Must use input types for variables. This should be caught during\n      // validation, however is checked again here for safety.\n      const varTypeStr = (0, _printer.print)(varDefNode.type);\n      onError(\n        new _GraphQLError.GraphQLError(\n          `Variable \"$${varName}\" expected value of type \"${varTypeStr}\" which cannot be used as an input type.`,\n          {\n            nodes: varDefNode.type,\n          },\n        ),\n      );\n      continue;\n    }\n\n    if (!hasOwnProperty(inputs, varName)) {\n      if (varDefNode.defaultValue) {\n        coercedValues[varName] = (0, _valueFromAST.valueFromAST)(\n          varDefNode.defaultValue,\n          varType,\n        );\n      } else if ((0, _definition.isNonNullType)(varType)) {\n        const varTypeStr = (0, _inspect.inspect)(varType);\n        onError(\n          new _GraphQLError.GraphQLError(\n            `Variable \"$${varName}\" of required type \"${varTypeStr}\" was not provided.`,\n            {\n              nodes: varDefNode,\n            },\n          ),\n        );\n      }\n\n      continue;\n    }\n\n    const value = inputs[varName];\n\n    if (value === null && (0, _definition.isNonNullType)(varType)) {\n      const varTypeStr = (0, _inspect.inspect)(varType);\n      onError(\n        new _GraphQLError.GraphQLError(\n          `Variable \"$${varName}\" of non-null type \"${varTypeStr}\" must not be null.`,\n          {\n            nodes: varDefNode,\n          },\n        ),\n      );\n      continue;\n    }\n\n    coercedValues[varName] = (0, _coerceInputValue.coerceInputValue)(\n      value,\n      varType,\n      (path, invalidValue, error) => {\n        let prefix =\n          `Variable \"$${varName}\" got invalid value ` +\n          (0, _inspect.inspect)(invalidValue);\n\n        if (path.length > 0) {\n          prefix += ` at \"${varName}${(0, _printPathArray.printPathArray)(\n            path,\n          )}\"`;\n        }\n\n        onError(\n          new _GraphQLError.GraphQLError(prefix + '; ' + error.message, {\n            nodes: varDefNode,\n            originalError: error,\n          }),\n        );\n      },\n    );\n  }\n\n  return coercedValues;\n}\n/**\n * Prepares an object map of argument values given a list of argument\n * definitions and list of argument AST nodes.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\n\nfunction getArgumentValues(def, node, variableValues) {\n  var _node$arguments;\n\n  const coercedValues = {}; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n\n  const argumentNodes =\n    (_node$arguments = node.arguments) !== null && _node$arguments !== void 0\n      ? _node$arguments\n      : [];\n  const argNodeMap = (0, _keyMap.keyMap)(\n    argumentNodes,\n    (arg) => arg.name.value,\n  );\n\n  for (const argDef of def.args) {\n    const name = argDef.name;\n    const argType = argDef.type;\n    const argumentNode = argNodeMap[name];\n\n    if (!argumentNode) {\n      if (argDef.defaultValue !== undefined) {\n        coercedValues[name] = argDef.defaultValue;\n      } else if ((0, _definition.isNonNullType)(argType)) {\n        throw new _GraphQLError.GraphQLError(\n          `Argument \"${name}\" of required type \"${(0, _inspect.inspect)(\n            argType,\n          )}\" ` + 'was not provided.',\n          {\n            nodes: node,\n          },\n        );\n      }\n\n      continue;\n    }\n\n    const valueNode = argumentNode.value;\n    let isNull = valueNode.kind === _kinds.Kind.NULL;\n\n    if (valueNode.kind === _kinds.Kind.VARIABLE) {\n      const variableName = valueNode.name.value;\n\n      if (\n        variableValues == null ||\n        !hasOwnProperty(variableValues, variableName)\n      ) {\n        if (argDef.defaultValue !== undefined) {\n          coercedValues[name] = argDef.defaultValue;\n        } else if ((0, _definition.isNonNullType)(argType)) {\n          throw new _GraphQLError.GraphQLError(\n            `Argument \"${name}\" of required type \"${(0, _inspect.inspect)(\n              argType,\n            )}\" ` +\n              `was provided the variable \"$${variableName}\" which was not provided a runtime value.`,\n            {\n              nodes: valueNode,\n            },\n          );\n        }\n\n        continue;\n      }\n\n      isNull = variableValues[variableName] == null;\n    }\n\n    if (isNull && (0, _definition.isNonNullType)(argType)) {\n      throw new _GraphQLError.GraphQLError(\n        `Argument \"${name}\" of non-null type \"${(0, _inspect.inspect)(\n          argType,\n        )}\" ` + 'must not be null.',\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    const coercedValue = (0, _valueFromAST.valueFromAST)(\n      valueNode,\n      argType,\n      variableValues,\n    );\n\n    if (coercedValue === undefined) {\n      // Note: ValuesOfCorrectTypeRule validation should catch this before\n      // execution. This is a runtime check to ensure execution does not\n      // continue with an invalid argument value.\n      throw new _GraphQLError.GraphQLError(\n        `Argument \"${name}\" has invalid value ${(0, _printer.print)(\n          valueNode,\n        )}.`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    coercedValues[name] = coercedValue;\n  }\n\n  return coercedValues;\n}\n/**\n * Prepares an object map of argument values given a directive definition\n * and a AST node which may contain directives. Optionally also accepts a map\n * of variable values.\n *\n * If the directive does not exist on the node, returns undefined.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\n\nfunction getDirectiveValues(directiveDef, node, variableValues) {\n  var _node$directives;\n\n  const directiveNode =\n    (_node$directives = node.directives) === null || _node$directives === void 0\n      ? void 0\n      : _node$directives.find(\n          (directive) => directive.name.value === directiveDef.name,\n        );\n\n  if (directiveNode) {\n    return getArgumentValues(directiveDef, directiveNode, variableValues);\n  }\n}\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.collectFields = collectFields;\nexports.collectSubfields = collectSubfields;\n\nvar _kinds = require('../language/kinds.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _directives = require('../type/directives.js');\n\nvar _typeFromAST = require('../utilities/typeFromAST.js');\n\nvar _values = require('./values.js');\n\n/**\n * Given a selectionSet, collects all of the fields and returns them.\n *\n * CollectFields requires the \"runtime type\" of an object. For a field that\n * returns an Interface or Union type, the \"runtime type\" will be the actual\n * object type returned by that field.\n *\n * @internal\n */\nfunction collectFields(\n  schema,\n  fragments,\n  variableValues,\n  runtimeType,\n  selectionSet,\n) {\n  const fields = new Map();\n  collectFieldsImpl(\n    schema,\n    fragments,\n    variableValues,\n    runtimeType,\n    selectionSet,\n    fields,\n    new Set(),\n  );\n  return fields;\n}\n/**\n * Given an array of field nodes, collects all of the subfields of the passed\n * in fields, and returns them at the end.\n *\n * CollectSubFields requires the \"return type\" of an object. For a field that\n * returns an Interface or Union type, the \"return type\" will be the actual\n * object type returned by that field.\n *\n * @internal\n */\n\nfunction collectSubfields(\n  schema,\n  fragments,\n  variableValues,\n  returnType,\n  fieldNodes,\n) {\n  const subFieldNodes = new Map();\n  const visitedFragmentNames = new Set();\n\n  for (const node of fieldNodes) {\n    if (node.selectionSet) {\n      collectFieldsImpl(\n        schema,\n        fragments,\n        variableValues,\n        returnType,\n        node.selectionSet,\n        subFieldNodes,\n        visitedFragmentNames,\n      );\n    }\n  }\n\n  return subFieldNodes;\n}\n\nfunction collectFieldsImpl(\n  schema,\n  fragments,\n  variableValues,\n  runtimeType,\n  selectionSet,\n  fields,\n  visitedFragmentNames,\n) {\n  for (const selection of selectionSet.selections) {\n    switch (selection.kind) {\n      case _kinds.Kind.FIELD: {\n        if (!shouldIncludeNode(variableValues, selection)) {\n          continue;\n        }\n\n        const name = getFieldEntryKey(selection);\n        const fieldList = fields.get(name);\n\n        if (fieldList !== undefined) {\n          fieldList.push(selection);\n        } else {\n          fields.set(name, [selection]);\n        }\n\n        break;\n      }\n\n      case _kinds.Kind.INLINE_FRAGMENT: {\n        if (\n          !shouldIncludeNode(variableValues, selection) ||\n          !doesFragmentConditionMatch(schema, selection, runtimeType)\n        ) {\n          continue;\n        }\n\n        collectFieldsImpl(\n          schema,\n          fragments,\n          variableValues,\n          runtimeType,\n          selection.selectionSet,\n          fields,\n          visitedFragmentNames,\n        );\n        break;\n      }\n\n      case _kinds.Kind.FRAGMENT_SPREAD: {\n        const fragName = selection.name.value;\n\n        if (\n          visitedFragmentNames.has(fragName) ||\n          !shouldIncludeNode(variableValues, selection)\n        ) {\n          continue;\n        }\n\n        visitedFragmentNames.add(fragName);\n        const fragment = fragments[fragName];\n\n        if (\n          !fragment ||\n          !doesFragmentConditionMatch(schema, fragment, runtimeType)\n        ) {\n          continue;\n        }\n\n        collectFieldsImpl(\n          schema,\n          fragments,\n          variableValues,\n          runtimeType,\n          fragment.selectionSet,\n          fields,\n          visitedFragmentNames,\n        );\n        break;\n      }\n    }\n  }\n}\n/**\n * Determines if a field should be included based on the `@include` and `@skip`\n * directives, where `@skip` has higher precedence than `@include`.\n */\n\nfunction shouldIncludeNode(variableValues, node) {\n  const skip = (0, _values.getDirectiveValues)(\n    _directives.GraphQLSkipDirective,\n    node,\n    variableValues,\n  );\n\n  if ((skip === null || skip === void 0 ? void 0 : skip.if) === true) {\n    return false;\n  }\n\n  const include = (0, _values.getDirectiveValues)(\n    _directives.GraphQLIncludeDirective,\n    node,\n    variableValues,\n  );\n\n  if (\n    (include === null || include === void 0 ? void 0 : include.if) === false\n  ) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Determines if a fragment is applicable to the given type.\n */\n\nfunction doesFragmentConditionMatch(schema, fragment, type) {\n  const typeConditionNode = fragment.typeCondition;\n\n  if (!typeConditionNode) {\n    return true;\n  }\n\n  const conditionalType = (0, _typeFromAST.typeFromAST)(\n    schema,\n    typeConditionNode,\n  );\n\n  if (conditionalType === type) {\n    return true;\n  }\n\n  if ((0, _definition.isAbstractType)(conditionalType)) {\n    return schema.isSubType(conditionalType, type);\n  }\n\n  return false;\n}\n/**\n * Implements the logic to compute the key of a given field's entry\n */\n\nfunction getFieldEntryKey(node) {\n  return node.alias ? node.alias.value : node.name.value;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.SingleFieldSubscriptionsRule = SingleFieldSubscriptionsRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _collectFields = require('../../execution/collectFields.js');\n\n/**\n * Subscriptions must only include a non-introspection field.\n *\n * A GraphQL subscription is valid only if it contains a single root field and\n * that root field is not an introspection field.\n *\n * See https://spec.graphql.org/draft/#sec-Single-root-field\n */\nfunction SingleFieldSubscriptionsRule(context) {\n  return {\n    OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        const schema = context.getSchema();\n        const subscriptionType = schema.getSubscriptionType();\n\n        if (subscriptionType) {\n          const operationName = node.name ? node.name.value : null;\n          const variableValues = Object.create(null);\n          const document = context.getDocument();\n          const fragments = Object.create(null);\n\n          for (const definition of document.definitions) {\n            if (definition.kind === _kinds.Kind.FRAGMENT_DEFINITION) {\n              fragments[definition.name.value] = definition;\n            }\n          }\n\n          const fields = (0, _collectFields.collectFields)(\n            schema,\n            fragments,\n            variableValues,\n            subscriptionType,\n            node.selectionSet,\n          );\n\n          if (fields.size > 1) {\n            const fieldSelectionLists = [...fields.values()];\n            const extraFieldSelectionLists = fieldSelectionLists.slice(1);\n            const extraFieldSelections = extraFieldSelectionLists.flat();\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                operationName != null\n                  ? `Subscription \"${operationName}\" must select only one top level field.`\n                  : 'Anonymous Subscription must select only one top level field.',\n                {\n                  nodes: extraFieldSelections,\n                },\n              ),\n            );\n          }\n\n          for (const fieldNodes of fields.values()) {\n            const field = fieldNodes[0];\n            const fieldName = field.name.value;\n\n            if (fieldName.startsWith('__')) {\n              context.reportError(\n                new _GraphQLError.GraphQLError(\n                  operationName != null\n                    ? `Subscription \"${operationName}\" must not select an introspection top level field.`\n                    : 'Anonymous Subscription must not select an introspection top level field.',\n                  {\n                    nodes: fieldNodes,\n                  },\n                ),\n              );\n            }\n          }\n        }\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.groupBy = groupBy;\n\n/**\n * Groups array items into a Map, given a function to produce grouping key.\n */\nfunction groupBy(list, keyFn) {\n  const result = new Map();\n\n  for (const item of list) {\n    const key = keyFn(item);\n    const group = result.get(key);\n\n    if (group === undefined) {\n      result.set(key, [item]);\n    } else {\n      group.push(item);\n    }\n  }\n\n  return result;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueArgumentDefinitionNamesRule = UniqueArgumentDefinitionNamesRule;\n\nvar _groupBy = require('../../jsutils/groupBy.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique argument definition names\n *\n * A GraphQL Object or Interface type is only valid if all its fields have uniquely named arguments.\n * A GraphQL Directive is only valid if all its arguments are uniquely named.\n */\nfunction UniqueArgumentDefinitionNamesRule(context) {\n  return {\n    DirectiveDefinition(directiveNode) {\n      var _directiveNode$argume;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argumentNodes =\n        (_directiveNode$argume = directiveNode.arguments) !== null &&\n        _directiveNode$argume !== void 0\n          ? _directiveNode$argume\n          : [];\n      return checkArgUniqueness(`@${directiveNode.name.value}`, argumentNodes);\n    },\n\n    InterfaceTypeDefinition: checkArgUniquenessPerField,\n    InterfaceTypeExtension: checkArgUniquenessPerField,\n    ObjectTypeDefinition: checkArgUniquenessPerField,\n    ObjectTypeExtension: checkArgUniquenessPerField,\n  };\n\n  function checkArgUniquenessPerField(typeNode) {\n    var _typeNode$fields;\n\n    const typeName = typeNode.name.value; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const fieldNodes =\n      (_typeNode$fields = typeNode.fields) !== null &&\n      _typeNode$fields !== void 0\n        ? _typeNode$fields\n        : [];\n\n    for (const fieldDef of fieldNodes) {\n      var _fieldDef$arguments;\n\n      const fieldName = fieldDef.name.value; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n\n      const argumentNodes =\n        (_fieldDef$arguments = fieldDef.arguments) !== null &&\n        _fieldDef$arguments !== void 0\n          ? _fieldDef$arguments\n          : [];\n      checkArgUniqueness(`${typeName}.${fieldName}`, argumentNodes);\n    }\n\n    return false;\n  }\n\n  function checkArgUniqueness(parentName, argumentNodes) {\n    const seenArgs = (0, _groupBy.groupBy)(\n      argumentNodes,\n      (arg) => arg.name.value,\n    );\n\n    for (const [argName, argNodes] of seenArgs) {\n      if (argNodes.length > 1) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Argument \"${parentName}(${argName}:)\" can only be defined once.`,\n            {\n              nodes: argNodes.map((node) => node.name),\n            },\n          ),\n        );\n      }\n    }\n\n    return false;\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueArgumentNamesRule = UniqueArgumentNamesRule;\n\nvar _groupBy = require('../../jsutils/groupBy.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique argument names\n *\n * A GraphQL field or directive is only valid if all supplied arguments are\n * uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Argument-Names\n */\nfunction UniqueArgumentNamesRule(context) {\n  return {\n    Field: checkArgUniqueness,\n    Directive: checkArgUniqueness,\n  };\n\n  function checkArgUniqueness(parentNode) {\n    var _parentNode$arguments;\n\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n    const argumentNodes =\n      (_parentNode$arguments = parentNode.arguments) !== null &&\n      _parentNode$arguments !== void 0\n        ? _parentNode$arguments\n        : [];\n    const seenArgs = (0, _groupBy.groupBy)(\n      argumentNodes,\n      (arg) => arg.name.value,\n    );\n\n    for (const [argName, argNodes] of seenArgs) {\n      if (argNodes.length > 1) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `There can be only one argument named \"${argName}\".`,\n            {\n              nodes: argNodes.map((node) => node.name),\n            },\n          ),\n        );\n      }\n    }\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueDirectiveNamesRule = UniqueDirectiveNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique directive names\n *\n * A GraphQL document is only valid if all defined directives have unique names.\n */\nfunction UniqueDirectiveNamesRule(context) {\n  const knownDirectiveNames = Object.create(null);\n  const schema = context.getSchema();\n  return {\n    DirectiveDefinition(node) {\n      const directiveName = node.name.value;\n\n      if (\n        schema !== null &&\n        schema !== void 0 &&\n        schema.getDirective(directiveName)\n      ) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Directive \"@${directiveName}\" already exists in the schema. It cannot be redefined.`,\n            {\n              nodes: node.name,\n            },\n          ),\n        );\n        return;\n      }\n\n      if (knownDirectiveNames[directiveName]) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `There can be only one directive named \"@${directiveName}\".`,\n            {\n              nodes: [knownDirectiveNames[directiveName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownDirectiveNames[directiveName] = node.name;\n      }\n\n      return false;\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueDirectivesPerLocationRule = UniqueDirectivesPerLocationRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _predicates = require('../../language/predicates.js');\n\nvar _directives = require('../../type/directives.js');\n\n/**\n * Unique directive names per location\n *\n * A GraphQL document is only valid if all non-repeatable directives at\n * a given location are uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Directives-Are-Unique-Per-Location\n */\nfunction UniqueDirectivesPerLocationRule(context) {\n  const uniqueDirectiveMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : _directives.specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    uniqueDirectiveMap[directive.name] = !directive.isRepeatable;\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      uniqueDirectiveMap[def.name.value] = !def.repeatable;\n    }\n  }\n\n  const schemaDirectives = Object.create(null);\n  const typeDirectivesMap = Object.create(null);\n  return {\n    // Many different AST nodes may contain directives. Rather than listing\n    // them all, just listen for entering any node, and check to see if it\n    // defines any directives.\n    enter(node) {\n      if (!('directives' in node) || !node.directives) {\n        return;\n      }\n\n      let seenDirectives;\n\n      if (\n        node.kind === _kinds.Kind.SCHEMA_DEFINITION ||\n        node.kind === _kinds.Kind.SCHEMA_EXTENSION\n      ) {\n        seenDirectives = schemaDirectives;\n      } else if (\n        (0, _predicates.isTypeDefinitionNode)(node) ||\n        (0, _predicates.isTypeExtensionNode)(node)\n      ) {\n        const typeName = node.name.value;\n        seenDirectives = typeDirectivesMap[typeName];\n\n        if (seenDirectives === undefined) {\n          typeDirectivesMap[typeName] = seenDirectives = Object.create(null);\n        }\n      } else {\n        seenDirectives = Object.create(null);\n      }\n\n      for (const directive of node.directives) {\n        const directiveName = directive.name.value;\n\n        if (uniqueDirectiveMap[directiveName]) {\n          if (seenDirectives[directiveName]) {\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                `The directive \"@${directiveName}\" can only be used once at this location.`,\n                {\n                  nodes: [seenDirectives[directiveName], directive],\n                },\n              ),\n            );\n          } else {\n            seenDirectives[directiveName] = directive;\n          }\n        }\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueEnumValueNamesRule = UniqueEnumValueNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _definition = require('../../type/definition.js');\n\n/**\n * Unique enum value names\n *\n * A GraphQL enum type is only valid if all its values are uniquely named.\n */\nfunction UniqueEnumValueNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  const knownValueNames = Object.create(null);\n  return {\n    EnumTypeDefinition: checkValueUniqueness,\n    EnumTypeExtension: checkValueUniqueness,\n  };\n\n  function checkValueUniqueness(node) {\n    var _node$values;\n\n    const typeName = node.name.value;\n\n    if (!knownValueNames[typeName]) {\n      knownValueNames[typeName] = Object.create(null);\n    } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const valueNodes =\n      (_node$values = node.values) !== null && _node$values !== void 0\n        ? _node$values\n        : [];\n    const valueNames = knownValueNames[typeName];\n\n    for (const valueDef of valueNodes) {\n      const valueName = valueDef.name.value;\n      const existingType = existingTypeMap[typeName];\n\n      if (\n        (0, _definition.isEnumType)(existingType) &&\n        existingType.getValue(valueName)\n      ) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Enum value \"${typeName}.${valueName}\" already exists in the schema. It cannot also be defined in this type extension.`,\n            {\n              nodes: valueDef.name,\n            },\n          ),\n        );\n      } else if (valueNames[valueName]) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Enum value \"${typeName}.${valueName}\" can only be defined once.`,\n            {\n              nodes: [valueNames[valueName], valueDef.name],\n            },\n          ),\n        );\n      } else {\n        valueNames[valueName] = valueDef.name;\n      }\n    }\n\n    return false;\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueFieldDefinitionNamesRule = UniqueFieldDefinitionNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _definition = require('../../type/definition.js');\n\n/**\n * Unique field definition names\n *\n * A GraphQL complex type is only valid if all its fields are uniquely named.\n */\nfunction UniqueFieldDefinitionNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  const knownFieldNames = Object.create(null);\n  return {\n    InputObjectTypeDefinition: checkFieldUniqueness,\n    InputObjectTypeExtension: checkFieldUniqueness,\n    InterfaceTypeDefinition: checkFieldUniqueness,\n    InterfaceTypeExtension: checkFieldUniqueness,\n    ObjectTypeDefinition: checkFieldUniqueness,\n    ObjectTypeExtension: checkFieldUniqueness,\n  };\n\n  function checkFieldUniqueness(node) {\n    var _node$fields;\n\n    const typeName = node.name.value;\n\n    if (!knownFieldNames[typeName]) {\n      knownFieldNames[typeName] = Object.create(null);\n    } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const fieldNodes =\n      (_node$fields = node.fields) !== null && _node$fields !== void 0\n        ? _node$fields\n        : [];\n    const fieldNames = knownFieldNames[typeName];\n\n    for (const fieldDef of fieldNodes) {\n      const fieldName = fieldDef.name.value;\n\n      if (hasField(existingTypeMap[typeName], fieldName)) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Field \"${typeName}.${fieldName}\" already exists in the schema. It cannot also be defined in this type extension.`,\n            {\n              nodes: fieldDef.name,\n            },\n          ),\n        );\n      } else if (fieldNames[fieldName]) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Field \"${typeName}.${fieldName}\" can only be defined once.`,\n            {\n              nodes: [fieldNames[fieldName], fieldDef.name],\n            },\n          ),\n        );\n      } else {\n        fieldNames[fieldName] = fieldDef.name;\n      }\n    }\n\n    return false;\n  }\n}\n\nfunction hasField(type, fieldName) {\n  if (\n    (0, _definition.isObjectType)(type) ||\n    (0, _definition.isInterfaceType)(type) ||\n    (0, _definition.isInputObjectType)(type)\n  ) {\n    return type.getFields()[fieldName] != null;\n  }\n\n  return false;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueFragmentNamesRule = UniqueFragmentNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-Name-Uniqueness\n */\nfunction UniqueFragmentNamesRule(context) {\n  const knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: () => false,\n\n    FragmentDefinition(node) {\n      const fragmentName = node.name.value;\n\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `There can be only one fragment named \"${fragmentName}\".`,\n            {\n              nodes: [knownFragmentNames[fragmentName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n\n      return false;\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueInputFieldNamesRule = UniqueInputFieldNamesRule;\n\nvar _invariant = require('../../jsutils/invariant.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Input-Object-Field-Uniqueness\n */\nfunction UniqueInputFieldNamesRule(context) {\n  const knownNameStack = [];\n  let knownNames = Object.create(null);\n  return {\n    ObjectValue: {\n      enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n\n      leave() {\n        const prevKnownNames = knownNameStack.pop();\n        prevKnownNames || (0, _invariant.invariant)(false);\n        knownNames = prevKnownNames;\n      },\n    },\n\n    ObjectField(node) {\n      const fieldName = node.name.value;\n\n      if (knownNames[fieldName]) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `There can be only one input field named \"${fieldName}\".`,\n            {\n              nodes: [knownNames[fieldName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueOperationNamesRule = UniqueOperationNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Operation-Name-Uniqueness\n */\nfunction UniqueOperationNamesRule(context) {\n  const knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition(node) {\n      const operationName = node.name;\n\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `There can be only one operation named \"${operationName.value}\".`,\n              {\n                nodes: [\n                  knownOperationNames[operationName.value],\n                  operationName,\n                ],\n              },\n            ),\n          );\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n\n      return false;\n    },\n\n    FragmentDefinition: () => false,\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueOperationTypesRule = UniqueOperationTypesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique operation types\n *\n * A GraphQL document is only valid if it has only one type per operation.\n */\nfunction UniqueOperationTypesRule(context) {\n  const schema = context.getSchema();\n  const definedOperationTypes = Object.create(null);\n  const existingOperationTypes = schema\n    ? {\n        query: schema.getQueryType(),\n        mutation: schema.getMutationType(),\n        subscription: schema.getSubscriptionType(),\n      }\n    : {};\n  return {\n    SchemaDefinition: checkOperationTypes,\n    SchemaExtension: checkOperationTypes,\n  };\n\n  function checkOperationTypes(node) {\n    var _node$operationTypes;\n\n    // See: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n    const operationTypesNodes =\n      (_node$operationTypes = node.operationTypes) !== null &&\n      _node$operationTypes !== void 0\n        ? _node$operationTypes\n        : [];\n\n    for (const operationType of operationTypesNodes) {\n      const operation = operationType.operation;\n      const alreadyDefinedOperationType = definedOperationTypes[operation];\n\n      if (existingOperationTypes[operation]) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Type for ${operation} already defined in the schema. It cannot be redefined.`,\n            {\n              nodes: operationType,\n            },\n          ),\n        );\n      } else if (alreadyDefinedOperationType) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `There can be only one ${operation} type in schema.`,\n            {\n              nodes: [alreadyDefinedOperationType, operationType],\n            },\n          ),\n        );\n      } else {\n        definedOperationTypes[operation] = operationType;\n      }\n    }\n\n    return false;\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueTypeNamesRule = UniqueTypeNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique type names\n *\n * A GraphQL document is only valid if all defined types have unique names.\n */\nfunction UniqueTypeNamesRule(context) {\n  const knownTypeNames = Object.create(null);\n  const schema = context.getSchema();\n  return {\n    ScalarTypeDefinition: checkTypeName,\n    ObjectTypeDefinition: checkTypeName,\n    InterfaceTypeDefinition: checkTypeName,\n    UnionTypeDefinition: checkTypeName,\n    EnumTypeDefinition: checkTypeName,\n    InputObjectTypeDefinition: checkTypeName,\n  };\n\n  function checkTypeName(node) {\n    const typeName = node.name.value;\n\n    if (schema !== null && schema !== void 0 && schema.getType(typeName)) {\n      context.reportError(\n        new _GraphQLError.GraphQLError(\n          `Type \"${typeName}\" already exists in the schema. It cannot also be defined in this type definition.`,\n          {\n            nodes: node.name,\n          },\n        ),\n      );\n      return;\n    }\n\n    if (knownTypeNames[typeName]) {\n      context.reportError(\n        new _GraphQLError.GraphQLError(\n          `There can be only one type named \"${typeName}\".`,\n          {\n            nodes: [knownTypeNames[typeName], node.name],\n          },\n        ),\n      );\n    } else {\n      knownTypeNames[typeName] = node.name;\n    }\n\n    return false;\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueVariableNamesRule = UniqueVariableNamesRule;\n\nvar _groupBy = require('../../jsutils/groupBy.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\nfunction UniqueVariableNamesRule(context) {\n  return {\n    OperationDefinition(operationNode) {\n      var _operationNode$variab;\n\n      // See: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const variableDefinitions =\n        (_operationNode$variab = operationNode.variableDefinitions) !== null &&\n        _operationNode$variab !== void 0\n          ? _operationNode$variab\n          : [];\n      const seenVariableDefinitions = (0, _groupBy.groupBy)(\n        variableDefinitions,\n        (node) => node.variable.name.value,\n      );\n\n      for (const [variableName, variableNodes] of seenVariableDefinitions) {\n        if (variableNodes.length > 1) {\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `There can be only one variable named \"$${variableName}\".`,\n              {\n                nodes: variableNodes.map((node) => node.variable.name),\n              },\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.ValuesOfCorrectTypeRule = ValuesOfCorrectTypeRule;\n\nvar _didYouMean = require('../../jsutils/didYouMean.js');\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _keyMap = require('../../jsutils/keyMap.js');\n\nvar _suggestionList = require('../../jsutils/suggestionList.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _printer = require('../../language/printer.js');\n\nvar _definition = require('../../type/definition.js');\n\n/**\n * Value literals of correct type\n *\n * A GraphQL document is only valid if all value literals are of the type\n * expected at their position.\n *\n * See https://spec.graphql.org/draft/#sec-Values-of-Correct-Type\n */\nfunction ValuesOfCorrectTypeRule(context) {\n  return {\n    ListValue(node) {\n      // Note: TypeInfo will traverse into a list's item type, so look to the\n      // parent input type to check if it is a list.\n      const type = (0, _definition.getNullableType)(\n        context.getParentInputType(),\n      );\n\n      if (!(0, _definition.isListType)(type)) {\n        isValidValueNode(context, node);\n        return false; // Don't traverse further.\n      }\n    },\n\n    ObjectValue(node) {\n      const type = (0, _definition.getNamedType)(context.getInputType());\n\n      if (!(0, _definition.isInputObjectType)(type)) {\n        isValidValueNode(context, node);\n        return false; // Don't traverse further.\n      } // Ensure every required field exists.\n\n      const fieldNodeMap = (0, _keyMap.keyMap)(\n        node.fields,\n        (field) => field.name.value,\n      );\n\n      for (const fieldDef of Object.values(type.getFields())) {\n        const fieldNode = fieldNodeMap[fieldDef.name];\n\n        if (!fieldNode && (0, _definition.isRequiredInputField)(fieldDef)) {\n          const typeStr = (0, _inspect.inspect)(fieldDef.type);\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `Field \"${type.name}.${fieldDef.name}\" of required type \"${typeStr}\" was not provided.`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    ObjectField(node) {\n      const parentType = (0, _definition.getNamedType)(\n        context.getParentInputType(),\n      );\n      const fieldType = context.getInputType();\n\n      if (!fieldType && (0, _definition.isInputObjectType)(parentType)) {\n        const suggestions = (0, _suggestionList.suggestionList)(\n          node.name.value,\n          Object.keys(parentType.getFields()),\n        );\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Field \"${node.name.value}\" is not defined by type \"${parentType.name}\".` +\n              (0, _didYouMean.didYouMean)(suggestions),\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    NullValue(node) {\n      const type = context.getInputType();\n\n      if ((0, _definition.isNonNullType)(type)) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Expected value of type \"${(0, _inspect.inspect)(\n              type,\n            )}\", found ${(0, _printer.print)(node)}.`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    EnumValue: (node) => isValidValueNode(context, node),\n    IntValue: (node) => isValidValueNode(context, node),\n    FloatValue: (node) => isValidValueNode(context, node),\n    StringValue: (node) => isValidValueNode(context, node),\n    BooleanValue: (node) => isValidValueNode(context, node),\n  };\n}\n/**\n * Any value literal may be a valid representation of a Scalar, depending on\n * that scalar type.\n */\n\nfunction isValidValueNode(context, node) {\n  // Report any error at the full type expected by the location.\n  const locationType = context.getInputType();\n\n  if (!locationType) {\n    return;\n  }\n\n  const type = (0, _definition.getNamedType)(locationType);\n\n  if (!(0, _definition.isLeafType)(type)) {\n    const typeStr = (0, _inspect.inspect)(locationType);\n    context.reportError(\n      new _GraphQLError.GraphQLError(\n        `Expected value of type \"${typeStr}\", found ${(0, _printer.print)(\n          node,\n        )}.`,\n        {\n          nodes: node,\n        },\n      ),\n    );\n    return;\n  } // Scalars and Enums determine if a literal value is valid via parseLiteral(),\n  // which may throw or return an invalid value to indicate failure.\n\n  try {\n    const parseResult = type.parseLiteral(\n      node,\n      undefined,\n      /* variables */\n    );\n\n    if (parseResult === undefined) {\n      const typeStr = (0, _inspect.inspect)(locationType);\n      context.reportError(\n        new _GraphQLError.GraphQLError(\n          `Expected value of type \"${typeStr}\", found ${(0, _printer.print)(\n            node,\n          )}.`,\n          {\n            nodes: node,\n          },\n        ),\n      );\n    }\n  } catch (error) {\n    const typeStr = (0, _inspect.inspect)(locationType);\n\n    if (error instanceof _GraphQLError.GraphQLError) {\n      context.reportError(error);\n    } else {\n      context.reportError(\n        new _GraphQLError.GraphQLError(\n          `Expected value of type \"${typeStr}\", found ${(0, _printer.print)(\n            node,\n          )}; ` + error.message,\n          {\n            nodes: node,\n            originalError: error,\n          },\n        ),\n      );\n    }\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.VariablesAreInputTypesRule = VariablesAreInputTypesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _printer = require('../../language/printer.js');\n\nvar _definition = require('../../type/definition.js');\n\nvar _typeFromAST = require('../../utilities/typeFromAST.js');\n\n/**\n * Variables are input types\n *\n * A GraphQL operation is only valid if all the variables it defines are of\n * input types (scalar, enum, or input object).\n *\n * See https://spec.graphql.org/draft/#sec-Variables-Are-Input-Types\n */\nfunction VariablesAreInputTypesRule(context) {\n  return {\n    VariableDefinition(node) {\n      const type = (0, _typeFromAST.typeFromAST)(\n        context.getSchema(),\n        node.type,\n      );\n\n      if (type !== undefined && !(0, _definition.isInputType)(type)) {\n        const variableName = node.variable.name.value;\n        const typeName = (0, _printer.print)(node.type);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Variable \"$${variableName}\" cannot be non-input type \"${typeName}\".`,\n            {\n              nodes: node.type,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.VariablesInAllowedPositionRule = VariablesInAllowedPositionRule;\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _definition = require('../../type/definition.js');\n\nvar _typeComparators = require('../../utilities/typeComparators.js');\n\nvar _typeFromAST = require('../../utilities/typeFromAST.js');\n\n/**\n * Variables in allowed position\n *\n * Variable usages must be compatible with the arguments they are passed to.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variable-Usages-are-Allowed\n */\nfunction VariablesInAllowedPositionRule(context) {\n  let varDefMap = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter() {\n        varDefMap = Object.create(null);\n      },\n\n      leave(operation) {\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node, type, defaultValue } of usages) {\n          const varName = node.name.value;\n          const varDef = varDefMap[varName];\n\n          if (varDef && type) {\n            // A var type is allowed if it is the same or more strict (e.g. is\n            // a subtype of) than the expected type. It can be more strict if\n            // the variable type is non-null when the expected type is nullable.\n            // If both are list types, the variable item type can be more strict\n            // than the expected item type (contravariant).\n            const schema = context.getSchema();\n            const varType = (0, _typeFromAST.typeFromAST)(schema, varDef.type);\n\n            if (\n              varType &&\n              !allowedVariableUsage(\n                schema,\n                varType,\n                varDef.defaultValue,\n                type,\n                defaultValue,\n              )\n            ) {\n              const varTypeStr = (0, _inspect.inspect)(varType);\n              const typeStr = (0, _inspect.inspect)(type);\n              context.reportError(\n                new _GraphQLError.GraphQLError(\n                  `Variable \"$${varName}\" of type \"${varTypeStr}\" used in position expecting type \"${typeStr}\".`,\n                  {\n                    nodes: [varDef, node],\n                  },\n                ),\n              );\n            }\n          }\n        }\n      },\n    },\n\n    VariableDefinition(node) {\n      varDefMap[node.variable.name.value] = node;\n    },\n  };\n}\n/**\n * Returns true if the variable is allowed in the location it was found,\n * which includes considering if default values exist for either the variable\n * or the location at which it is located.\n */\n\nfunction allowedVariableUsage(\n  schema,\n  varType,\n  varDefaultValue,\n  locationType,\n  locationDefaultValue,\n) {\n  if (\n    (0, _definition.isNonNullType)(locationType) &&\n    !(0, _definition.isNonNullType)(varType)\n  ) {\n    const hasNonNullVariableDefaultValue =\n      varDefaultValue != null && varDefaultValue.kind !== _kinds.Kind.NULL;\n    const hasLocationDefaultValue = locationDefaultValue !== undefined;\n\n    if (!hasNonNullVariableDefaultValue && !hasLocationDefaultValue) {\n      return false;\n    }\n\n    const nullableLocationType = locationType.ofType;\n    return (0, _typeComparators.isTypeSubTypeOf)(\n      schema,\n      varType,\n      nullableLocationType,\n    );\n  }\n\n  return (0, _typeComparators.isTypeSubTypeOf)(schema, varType, locationType);\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.specifiedSDLRules = exports.specifiedRules = void 0;\n\nvar _ExecutableDefinitionsRule = require('./rules/ExecutableDefinitionsRule.js');\n\nvar _FieldsOnCorrectTypeRule = require('./rules/FieldsOnCorrectTypeRule.js');\n\nvar _FragmentsOnCompositeTypesRule = require('./rules/FragmentsOnCompositeTypesRule.js');\n\nvar _KnownArgumentNamesRule = require('./rules/KnownArgumentNamesRule.js');\n\nvar _KnownDirectivesRule = require('./rules/KnownDirectivesRule.js');\n\nvar _KnownFragmentNamesRule = require('./rules/KnownFragmentNamesRule.js');\n\nvar _KnownTypeNamesRule = require('./rules/KnownTypeNamesRule.js');\n\nvar _LoneAnonymousOperationRule = require('./rules/LoneAnonymousOperationRule.js');\n\nvar _LoneSchemaDefinitionRule = require('./rules/LoneSchemaDefinitionRule.js');\n\nvar _NoFragmentCyclesRule = require('./rules/NoFragmentCyclesRule.js');\n\nvar _NoUndefinedVariablesRule = require('./rules/NoUndefinedVariablesRule.js');\n\nvar _NoUnusedFragmentsRule = require('./rules/NoUnusedFragmentsRule.js');\n\nvar _NoUnusedVariablesRule = require('./rules/NoUnusedVariablesRule.js');\n\nvar _OverlappingFieldsCanBeMergedRule = require('./rules/OverlappingFieldsCanBeMergedRule.js');\n\nvar _PossibleFragmentSpreadsRule = require('./rules/PossibleFragmentSpreadsRule.js');\n\nvar _PossibleTypeExtensionsRule = require('./rules/PossibleTypeExtensionsRule.js');\n\nvar _ProvidedRequiredArgumentsRule = require('./rules/ProvidedRequiredArgumentsRule.js');\n\nvar _ScalarLeafsRule = require('./rules/ScalarLeafsRule.js');\n\nvar _SingleFieldSubscriptionsRule = require('./rules/SingleFieldSubscriptionsRule.js');\n\nvar _UniqueArgumentDefinitionNamesRule = require('./rules/UniqueArgumentDefinitionNamesRule.js');\n\nvar _UniqueArgumentNamesRule = require('./rules/UniqueArgumentNamesRule.js');\n\nvar _UniqueDirectiveNamesRule = require('./rules/UniqueDirectiveNamesRule.js');\n\nvar _UniqueDirectivesPerLocationRule = require('./rules/UniqueDirectivesPerLocationRule.js');\n\nvar _UniqueEnumValueNamesRule = require('./rules/UniqueEnumValueNamesRule.js');\n\nvar _UniqueFieldDefinitionNamesRule = require('./rules/UniqueFieldDefinitionNamesRule.js');\n\nvar _UniqueFragmentNamesRule = require('./rules/UniqueFragmentNamesRule.js');\n\nvar _UniqueInputFieldNamesRule = require('./rules/UniqueInputFieldNamesRule.js');\n\nvar _UniqueOperationNamesRule = require('./rules/UniqueOperationNamesRule.js');\n\nvar _UniqueOperationTypesRule = require('./rules/UniqueOperationTypesRule.js');\n\nvar _UniqueTypeNamesRule = require('./rules/UniqueTypeNamesRule.js');\n\nvar _UniqueVariableNamesRule = require('./rules/UniqueVariableNamesRule.js');\n\nvar _ValuesOfCorrectTypeRule = require('./rules/ValuesOfCorrectTypeRule.js');\n\nvar _VariablesAreInputTypesRule = require('./rules/VariablesAreInputTypesRule.js');\n\nvar _VariablesInAllowedPositionRule = require('./rules/VariablesInAllowedPositionRule.js');\n\n// Spec Section: \"Executable Definitions\"\n// Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n// Spec Section: \"Fragments on Composite Types\"\n// Spec Section: \"Argument Names\"\n// Spec Section: \"Directives Are Defined\"\n// Spec Section: \"Fragment spread target defined\"\n// Spec Section: \"Fragment Spread Type Existence\"\n// Spec Section: \"Lone Anonymous Operation\"\n// SDL-specific validation rules\n// Spec Section: \"Fragments must not form cycles\"\n// Spec Section: \"All Variable Used Defined\"\n// Spec Section: \"Fragments must be used\"\n// Spec Section: \"All Variables Used\"\n// Spec Section: \"Field Selection Merging\"\n// Spec Section: \"Fragment spread is possible\"\n// Spec Section: \"Argument Optionality\"\n// Spec Section: \"Leaf Field Selections\"\n// Spec Section: \"Subscriptions with Single Root Field\"\n// Spec Section: \"Argument Uniqueness\"\n// Spec Section: \"Directives Are Unique Per Location\"\n// Spec Section: \"Fragment Name Uniqueness\"\n// Spec Section: \"Input Object Field Uniqueness\"\n// Spec Section: \"Operation Name Uniqueness\"\n// Spec Section: \"Variable Uniqueness\"\n// Spec Section: \"Value Type Correctness\"\n// Spec Section: \"Variables are Input Types\"\n// Spec Section: \"All Variable Usages Are Allowed\"\n\n/**\n * This set includes all validation rules defined by the GraphQL spec.\n *\n * The order of the rules in this list has been adjusted to lead to the\n * most clear output when encountering multiple validation errors.\n */\nconst specifiedRules = Object.freeze([\n  _ExecutableDefinitionsRule.ExecutableDefinitionsRule,\n  _UniqueOperationNamesRule.UniqueOperationNamesRule,\n  _LoneAnonymousOperationRule.LoneAnonymousOperationRule,\n  _SingleFieldSubscriptionsRule.SingleFieldSubscriptionsRule,\n  _KnownTypeNamesRule.KnownTypeNamesRule,\n  _FragmentsOnCompositeTypesRule.FragmentsOnCompositeTypesRule,\n  _VariablesAreInputTypesRule.VariablesAreInputTypesRule,\n  _ScalarLeafsRule.ScalarLeafsRule,\n  _FieldsOnCorrectTypeRule.FieldsOnCorrectTypeRule,\n  _UniqueFragmentNamesRule.UniqueFragmentNamesRule,\n  _KnownFragmentNamesRule.KnownFragmentNamesRule,\n  _NoUnusedFragmentsRule.NoUnusedFragmentsRule,\n  _PossibleFragmentSpreadsRule.PossibleFragmentSpreadsRule,\n  _NoFragmentCyclesRule.NoFragmentCyclesRule,\n  _UniqueVariableNamesRule.UniqueVariableNamesRule,\n  _NoUndefinedVariablesRule.NoUndefinedVariablesRule,\n  _NoUnusedVariablesRule.NoUnusedVariablesRule,\n  _KnownDirectivesRule.KnownDirectivesRule,\n  _UniqueDirectivesPerLocationRule.UniqueDirectivesPerLocationRule,\n  _KnownArgumentNamesRule.KnownArgumentNamesRule,\n  _UniqueArgumentNamesRule.UniqueArgumentNamesRule,\n  _ValuesOfCorrectTypeRule.ValuesOfCorrectTypeRule,\n  _ProvidedRequiredArgumentsRule.ProvidedRequiredArgumentsRule,\n  _VariablesInAllowedPositionRule.VariablesInAllowedPositionRule,\n  _OverlappingFieldsCanBeMergedRule.OverlappingFieldsCanBeMergedRule,\n  _UniqueInputFieldNamesRule.UniqueInputFieldNamesRule,\n]);\n/**\n * @internal\n */\n\nexports.specifiedRules = specifiedRules;\nconst specifiedSDLRules = Object.freeze([\n  _LoneSchemaDefinitionRule.LoneSchemaDefinitionRule,\n  _UniqueOperationTypesRule.UniqueOperationTypesRule,\n  _UniqueTypeNamesRule.UniqueTypeNamesRule,\n  _UniqueEnumValueNamesRule.UniqueEnumValueNamesRule,\n  _UniqueFieldDefinitionNamesRule.UniqueFieldDefinitionNamesRule,\n  _UniqueArgumentDefinitionNamesRule.UniqueArgumentDefinitionNamesRule,\n  _UniqueDirectiveNamesRule.UniqueDirectiveNamesRule,\n  _KnownTypeNamesRule.KnownTypeNamesRule,\n  _KnownDirectivesRule.KnownDirectivesRule,\n  _UniqueDirectivesPerLocationRule.UniqueDirectivesPerLocationRule,\n  _PossibleTypeExtensionsRule.PossibleTypeExtensionsRule,\n  _KnownArgumentNamesRule.KnownArgumentNamesOnDirectivesRule,\n  _UniqueArgumentNamesRule.UniqueArgumentNamesRule,\n  _UniqueInputFieldNamesRule.UniqueInputFieldNamesRule,\n  _ProvidedRequiredArgumentsRule.ProvidedRequiredArgumentsOnDirectivesRule,\n]);\nexports.specifiedSDLRules = specifiedSDLRules;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.ValidationContext =\n  exports.SDLValidationContext =\n  exports.ASTValidationContext =\n    void 0;\n\nvar _kinds = require('../language/kinds.js');\n\nvar _visitor = require('../language/visitor.js');\n\nvar _TypeInfo = require('../utilities/TypeInfo.js');\n\n/**\n * An instance of this class is passed as the \"this\" context to all validators,\n * allowing access to commonly useful contextual information from within a\n * validation rule.\n */\nclass ASTValidationContext {\n  constructor(ast, onError) {\n    this._ast = ast;\n    this._fragments = undefined;\n    this._fragmentSpreads = new Map();\n    this._recursivelyReferencedFragments = new Map();\n    this._onError = onError;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'ASTValidationContext';\n  }\n\n  reportError(error) {\n    this._onError(error);\n  }\n\n  getDocument() {\n    return this._ast;\n  }\n\n  getFragment(name) {\n    let fragments;\n\n    if (this._fragments) {\n      fragments = this._fragments;\n    } else {\n      fragments = Object.create(null);\n\n      for (const defNode of this.getDocument().definitions) {\n        if (defNode.kind === _kinds.Kind.FRAGMENT_DEFINITION) {\n          fragments[defNode.name.value] = defNode;\n        }\n      }\n\n      this._fragments = fragments;\n    }\n\n    return fragments[name];\n  }\n\n  getFragmentSpreads(node) {\n    let spreads = this._fragmentSpreads.get(node);\n\n    if (!spreads) {\n      spreads = [];\n      const setsToVisit = [node];\n      let set;\n\n      while ((set = setsToVisit.pop())) {\n        for (const selection of set.selections) {\n          if (selection.kind === _kinds.Kind.FRAGMENT_SPREAD) {\n            spreads.push(selection);\n          } else if (selection.selectionSet) {\n            setsToVisit.push(selection.selectionSet);\n          }\n        }\n      }\n\n      this._fragmentSpreads.set(node, spreads);\n    }\n\n    return spreads;\n  }\n\n  getRecursivelyReferencedFragments(operation) {\n    let fragments = this._recursivelyReferencedFragments.get(operation);\n\n    if (!fragments) {\n      fragments = [];\n      const collectedNames = Object.create(null);\n      const nodesToVisit = [operation.selectionSet];\n      let node;\n\n      while ((node = nodesToVisit.pop())) {\n        for (const spread of this.getFragmentSpreads(node)) {\n          const fragName = spread.name.value;\n\n          if (collectedNames[fragName] !== true) {\n            collectedNames[fragName] = true;\n            const fragment = this.getFragment(fragName);\n\n            if (fragment) {\n              fragments.push(fragment);\n              nodesToVisit.push(fragment.selectionSet);\n            }\n          }\n        }\n      }\n\n      this._recursivelyReferencedFragments.set(operation, fragments);\n    }\n\n    return fragments;\n  }\n}\n\nexports.ASTValidationContext = ASTValidationContext;\n\nclass SDLValidationContext extends ASTValidationContext {\n  constructor(ast, schema, onError) {\n    super(ast, onError);\n    this._schema = schema;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'SDLValidationContext';\n  }\n\n  getSchema() {\n    return this._schema;\n  }\n}\n\nexports.SDLValidationContext = SDLValidationContext;\n\nclass ValidationContext extends ASTValidationContext {\n  constructor(schema, ast, typeInfo, onError) {\n    super(ast, onError);\n    this._schema = schema;\n    this._typeInfo = typeInfo;\n    this._variableUsages = new Map();\n    this._recursiveVariableUsages = new Map();\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'ValidationContext';\n  }\n\n  getSchema() {\n    return this._schema;\n  }\n\n  getVariableUsages(node) {\n    let usages = this._variableUsages.get(node);\n\n    if (!usages) {\n      const newUsages = [];\n      const typeInfo = new _TypeInfo.TypeInfo(this._schema);\n      (0, _visitor.visit)(\n        node,\n        (0, _TypeInfo.visitWithTypeInfo)(typeInfo, {\n          VariableDefinition: () => false,\n\n          Variable(variable) {\n            newUsages.push({\n              node: variable,\n              type: typeInfo.getInputType(),\n              defaultValue: typeInfo.getDefaultValue(),\n            });\n          },\n        }),\n      );\n      usages = newUsages;\n\n      this._variableUsages.set(node, usages);\n    }\n\n    return usages;\n  }\n\n  getRecursiveVariableUsages(operation) {\n    let usages = this._recursiveVariableUsages.get(operation);\n\n    if (!usages) {\n      usages = this.getVariableUsages(operation);\n\n      for (const frag of this.getRecursivelyReferencedFragments(operation)) {\n        usages = usages.concat(this.getVariableUsages(frag));\n      }\n\n      this._recursiveVariableUsages.set(operation, usages);\n    }\n\n    return usages;\n  }\n\n  getType() {\n    return this._typeInfo.getType();\n  }\n\n  getParentType() {\n    return this._typeInfo.getParentType();\n  }\n\n  getInputType() {\n    return this._typeInfo.getInputType();\n  }\n\n  getParentInputType() {\n    return this._typeInfo.getParentInputType();\n  }\n\n  getFieldDef() {\n    return this._typeInfo.getFieldDef();\n  }\n\n  getDirective() {\n    return this._typeInfo.getDirective();\n  }\n\n  getArgument() {\n    return this._typeInfo.getArgument();\n  }\n\n  getEnumValue() {\n    return this._typeInfo.getEnumValue();\n  }\n}\n\nexports.ValidationContext = ValidationContext;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.assertValidSDL = assertValidSDL;\nexports.assertValidSDLExtension = assertValidSDLExtension;\nexports.validate = validate;\nexports.validateSDL = validateSDL;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _visitor = require('../language/visitor.js');\n\nvar _validate = require('../type/validate.js');\n\nvar _TypeInfo = require('../utilities/TypeInfo.js');\n\nvar _specifiedRules = require('./specifiedRules.js');\n\nvar _ValidationContext = require('./ValidationContext.js');\n\n/**\n * Implements the \"Validation\" section of the spec.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the document is valid.\n *\n * A list of specific validation rules may be provided. If not provided, the\n * default list of rules defined by the GraphQL specification will be used.\n *\n * Each validation rules is a function which returns a visitor\n * (see the language/visitor API). Visitor methods are expected to return\n * GraphQLErrors, or Arrays of GraphQLErrors when invalid.\n *\n * Validate will stop validation after a `maxErrors` limit has been reached.\n * Attackers can send pathologically invalid queries to induce a DoS attack,\n * so by default `maxErrors` set to 100 errors.\n *\n * Optionally a custom TypeInfo instance may be provided. If not provided, one\n * will be created from the provided schema.\n */\nfunction validate(\n  schema,\n  documentAST,\n  rules = _specifiedRules.specifiedRules,\n  options,\n  /** @deprecated will be removed in 17.0.0 */\n  typeInfo = new _TypeInfo.TypeInfo(schema),\n) {\n  var _options$maxErrors;\n\n  const maxErrors =\n    (_options$maxErrors =\n      options === null || options === void 0 ? void 0 : options.maxErrors) !==\n      null && _options$maxErrors !== void 0\n      ? _options$maxErrors\n      : 100;\n  documentAST || (0, _devAssert.devAssert)(false, 'Must provide document.'); // If the schema used for validation is invalid, throw an error.\n\n  (0, _validate.assertValidSchema)(schema);\n  const abortObj = Object.freeze({});\n  const errors = [];\n  const context = new _ValidationContext.ValidationContext(\n    schema,\n    documentAST,\n    typeInfo,\n    (error) => {\n      if (errors.length >= maxErrors) {\n        errors.push(\n          new _GraphQLError.GraphQLError(\n            'Too many validation errors, error limit reached. Validation aborted.',\n          ),\n        ); // eslint-disable-next-line @typescript-eslint/no-throw-literal\n\n        throw abortObj;\n      }\n\n      errors.push(error);\n    },\n  ); // This uses a specialized visitor which runs multiple visitors in parallel,\n  // while maintaining the visitor skip and break API.\n\n  const visitor = (0, _visitor.visitInParallel)(\n    rules.map((rule) => rule(context)),\n  ); // Visit the whole document with each instance of all provided rules.\n\n  try {\n    (0, _visitor.visit)(\n      documentAST,\n      (0, _TypeInfo.visitWithTypeInfo)(typeInfo, visitor),\n    );\n  } catch (e) {\n    if (e !== abortObj) {\n      throw e;\n    }\n  }\n\n  return errors;\n}\n/**\n * @internal\n */\n\nfunction validateSDL(\n  documentAST,\n  schemaToExtend,\n  rules = _specifiedRules.specifiedSDLRules,\n) {\n  const errors = [];\n  const context = new _ValidationContext.SDLValidationContext(\n    documentAST,\n    schemaToExtend,\n    (error) => {\n      errors.push(error);\n    },\n  );\n  const visitors = rules.map((rule) => rule(context));\n  (0, _visitor.visit)(documentAST, (0, _visitor.visitInParallel)(visitors));\n  return errors;\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\nfunction assertValidSDL(documentAST) {\n  const errors = validateSDL(documentAST);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n  }\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\nfunction assertValidSDLExtension(documentAST, schema) {\n  const errors = validateSDL(documentAST, schema);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.memoize3 = memoize3;\n\n/**\n * Memoizes the provided three-argument function.\n */\nfunction memoize3(fn) {\n  let cache0;\n  return function memoized(a1, a2, a3) {\n    if (cache0 === undefined) {\n      cache0 = new WeakMap();\n    }\n\n    let cache1 = cache0.get(a1);\n\n    if (cache1 === undefined) {\n      cache1 = new WeakMap();\n      cache0.set(a1, cache1);\n    }\n\n    let cache2 = cache1.get(a2);\n\n    if (cache2 === undefined) {\n      cache2 = new WeakMap();\n      cache1.set(a2, cache2);\n    }\n\n    let fnResult = cache2.get(a3);\n\n    if (fnResult === undefined) {\n      fnResult = fn(a1, a2, a3);\n      cache2.set(a3, fnResult);\n    }\n\n    return fnResult;\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.promiseForObject = promiseForObject;\n\n/**\n * This function transforms a JS object `ObjMap<Promise<T>>` into\n * a `Promise<ObjMap<T>>`\n *\n * This is akin to bluebird's `Promise.props`, but implemented only using\n * `Promise.all` so it will work with any implementation of ES6 promises.\n */\nfunction promiseForObject(object) {\n  return Promise.all(Object.values(object)).then((resolvedValues) => {\n    const resolvedObject = Object.create(null);\n\n    for (const [i, key] of Object.keys(object).entries()) {\n      resolvedObject[key] = resolvedValues[i];\n    }\n\n    return resolvedObject;\n  });\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.promiseReduce = promiseReduce;\n\nvar _isPromise = require('./isPromise.js');\n\n/**\n * Similar to Array.prototype.reduce(), however the reducing callback may return\n * a Promise, in which case reduction will continue after each promise resolves.\n *\n * If the callback does not return a Promise, then this function will also not\n * return a Promise.\n */\nfunction promiseReduce(values, callbackFn, initialValue) {\n  let accumulator = initialValue;\n\n  for (const value of values) {\n    accumulator = (0, _isPromise.isPromise)(accumulator)\n      ? accumulator.then((resolved) => callbackFn(resolved, value))\n      : callbackFn(accumulator, value);\n  }\n\n  return accumulator;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.toError = toError;\n\nvar _inspect = require('./inspect.js');\n\n/**\n * Sometimes a non-error is thrown, wrap it as an Error instance to ensure a consistent Error interface.\n */\nfunction toError(thrownValue) {\n  return thrownValue instanceof Error\n    ? thrownValue\n    : new NonErrorThrown(thrownValue);\n}\n\nclass NonErrorThrown extends Error {\n  constructor(thrownValue) {\n    super('Unexpected error value: ' + (0, _inspect.inspect)(thrownValue));\n    this.name = 'NonErrorThrown';\n    this.thrownValue = thrownValue;\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.locatedError = locatedError;\n\nvar _toError = require('../jsutils/toError.js');\n\nvar _GraphQLError = require('./GraphQLError.js');\n\n/**\n * Given an arbitrary value, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\nfunction locatedError(rawOriginalError, nodes, path) {\n  var _nodes;\n\n  const originalError = (0, _toError.toError)(rawOriginalError); // Note: this uses a brand-check to support GraphQL errors originating from other contexts.\n\n  if (isLocatedGraphQLError(originalError)) {\n    return originalError;\n  }\n\n  return new _GraphQLError.GraphQLError(originalError.message, {\n    nodes:\n      (_nodes = originalError.nodes) !== null && _nodes !== void 0\n        ? _nodes\n        : nodes,\n    source: originalError.source,\n    positions: originalError.positions,\n    path,\n    originalError,\n  });\n}\n\nfunction isLocatedGraphQLError(error) {\n  return Array.isArray(error.path);\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.assertValidExecutionArguments = assertValidExecutionArguments;\nexports.buildExecutionContext = buildExecutionContext;\nexports.buildResolveInfo = buildResolveInfo;\nexports.defaultTypeResolver = exports.defaultFieldResolver = void 0;\nexports.execute = execute;\nexports.executeSync = executeSync;\nexports.getFieldDef = getFieldDef;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _isIterableObject = require('../jsutils/isIterableObject.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _isPromise = require('../jsutils/isPromise.js');\n\nvar _memoize = require('../jsutils/memoize3.js');\n\nvar _Path = require('../jsutils/Path.js');\n\nvar _promiseForObject = require('../jsutils/promiseForObject.js');\n\nvar _promiseReduce = require('../jsutils/promiseReduce.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _locatedError = require('../error/locatedError.js');\n\nvar _ast = require('../language/ast.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _introspection = require('../type/introspection.js');\n\nvar _validate = require('../type/validate.js');\n\nvar _collectFields = require('./collectFields.js');\n\nvar _values = require('./values.js');\n\n/**\n * A memoized collection of relevant subfields with regard to the return\n * type. Memoizing ensures the subfields are not repeatedly calculated, which\n * saves overhead when resolving lists of values.\n */\nconst collectSubfields = (0, _memoize.memoize3)(\n  (exeContext, returnType, fieldNodes) =>\n    (0, _collectFields.collectSubfields)(\n      exeContext.schema,\n      exeContext.fragments,\n      exeContext.variableValues,\n      returnType,\n      fieldNodes,\n    ),\n);\n/**\n * Terminology\n *\n * \"Definitions\" are the generic name for top-level statements in the document.\n * Examples of this include:\n * 1) Operations (such as a query)\n * 2) Fragments\n *\n * \"Operations\" are a generic name for requests in the document.\n * Examples of this include:\n * 1) query,\n * 2) mutation\n *\n * \"Selections\" are the definitions that can appear legally and at\n * single level of the query. These include:\n * 1) field references e.g `a`\n * 2) fragment \"spreads\" e.g. `...c`\n * 3) inline fragment \"spreads\" e.g. `...on Type { a }`\n */\n\n/**\n * Data that must be available at all points during query execution.\n *\n * Namely, schema of the type system that is currently executing,\n * and the fragments defined in the query document\n */\n\n/**\n * Implements the \"Executing requests\" section of the GraphQL specification.\n *\n * Returns either a synchronous ExecutionResult (if all encountered resolvers\n * are synchronous), or a Promise of an ExecutionResult that will eventually be\n * resolved and never rejected.\n *\n * If the arguments to this function do not result in a legal execution context,\n * a GraphQLError will be thrown immediately explaining the invalid input.\n */\nfunction execute(args) {\n  // Temporary for v15 to v16 migration. Remove in v17\n  arguments.length < 2 ||\n    (0, _devAssert.devAssert)(\n      false,\n      'graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.',\n    );\n  const { schema, document, variableValues, rootValue } = args; // If arguments are missing or incorrect, throw an error.\n\n  assertValidExecutionArguments(schema, document, variableValues); // If a valid execution context cannot be created due to incorrect arguments,\n  // a \"Response\" with only errors is returned.\n\n  const exeContext = buildExecutionContext(args); // Return early errors if execution context failed.\n\n  if (!('schema' in exeContext)) {\n    return {\n      errors: exeContext,\n    };\n  } // Return a Promise that will eventually resolve to the data described by\n  // The \"Response\" section of the GraphQL specification.\n  //\n  // If errors are encountered while executing a GraphQL field, only that\n  // field and its descendants will be omitted, and sibling fields will still\n  // be executed. An execution which encounters errors will still result in a\n  // resolved Promise.\n  //\n  // Errors from sub-fields of a NonNull type may propagate to the top level,\n  // at which point we still log the error and null the parent field, which\n  // in this case is the entire response.\n\n  try {\n    const { operation } = exeContext;\n    const result = executeOperation(exeContext, operation, rootValue);\n\n    if ((0, _isPromise.isPromise)(result)) {\n      return result.then(\n        (data) => buildResponse(data, exeContext.errors),\n        (error) => {\n          exeContext.errors.push(error);\n          return buildResponse(null, exeContext.errors);\n        },\n      );\n    }\n\n    return buildResponse(result, exeContext.errors);\n  } catch (error) {\n    exeContext.errors.push(error);\n    return buildResponse(null, exeContext.errors);\n  }\n}\n/**\n * Also implements the \"Executing requests\" section of the GraphQL specification.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\n\nfunction executeSync(args) {\n  const result = execute(args); // Assert that the execution was synchronous.\n\n  if ((0, _isPromise.isPromise)(result)) {\n    throw new Error('GraphQL execution failed to complete synchronously.');\n  }\n\n  return result;\n}\n/**\n * Given a completed execution context and data, build the `{ errors, data }`\n * response defined by the \"Response\" section of the GraphQL specification.\n */\n\nfunction buildResponse(data, errors) {\n  return errors.length === 0\n    ? {\n        data,\n      }\n    : {\n        errors,\n        data,\n      };\n}\n/**\n * Essential assertions before executing to provide developer feedback for\n * improper use of the GraphQL library.\n *\n * @internal\n */\n\nfunction assertValidExecutionArguments(schema, document, rawVariableValues) {\n  document || (0, _devAssert.devAssert)(false, 'Must provide document.'); // If the schema used for execution is invalid, throw an error.\n\n  (0, _validate.assertValidSchema)(schema); // Variables, if provided, must be an object.\n\n  rawVariableValues == null ||\n    (0, _isObjectLike.isObjectLike)(rawVariableValues) ||\n    (0, _devAssert.devAssert)(\n      false,\n      'Variables must be provided as an Object where each property is a variable value. Perhaps look to see if an unparsed JSON string was provided.',\n    );\n}\n/**\n * Constructs a ExecutionContext object from the arguments passed to\n * execute, which we will pass throughout the other execution methods.\n *\n * Throws a GraphQLError if a valid execution context cannot be created.\n *\n * @internal\n */\n\nfunction buildExecutionContext(args) {\n  var _definition$name, _operation$variableDe;\n\n  const {\n    schema,\n    document,\n    rootValue,\n    contextValue,\n    variableValues: rawVariableValues,\n    operationName,\n    fieldResolver,\n    typeResolver,\n    subscribeFieldResolver,\n  } = args;\n  let operation;\n  const fragments = Object.create(null);\n\n  for (const definition of document.definitions) {\n    switch (definition.kind) {\n      case _kinds.Kind.OPERATION_DEFINITION:\n        if (operationName == null) {\n          if (operation !== undefined) {\n            return [\n              new _GraphQLError.GraphQLError(\n                'Must provide operation name if query contains multiple operations.',\n              ),\n            ];\n          }\n\n          operation = definition;\n        } else if (\n          ((_definition$name = definition.name) === null ||\n          _definition$name === void 0\n            ? void 0\n            : _definition$name.value) === operationName\n        ) {\n          operation = definition;\n        }\n\n        break;\n\n      case _kinds.Kind.FRAGMENT_DEFINITION:\n        fragments[definition.name.value] = definition;\n        break;\n\n      default: // ignore non-executable definitions\n    }\n  }\n\n  if (!operation) {\n    if (operationName != null) {\n      return [\n        new _GraphQLError.GraphQLError(\n          `Unknown operation named \"${operationName}\".`,\n        ),\n      ];\n    }\n\n    return [new _GraphQLError.GraphQLError('Must provide an operation.')];\n  } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n\n  const variableDefinitions =\n    (_operation$variableDe = operation.variableDefinitions) !== null &&\n    _operation$variableDe !== void 0\n      ? _operation$variableDe\n      : [];\n  const coercedVariableValues = (0, _values.getVariableValues)(\n    schema,\n    variableDefinitions,\n    rawVariableValues !== null && rawVariableValues !== void 0\n      ? rawVariableValues\n      : {},\n    {\n      maxErrors: 50,\n    },\n  );\n\n  if (coercedVariableValues.errors) {\n    return coercedVariableValues.errors;\n  }\n\n  return {\n    schema,\n    fragments,\n    rootValue,\n    contextValue,\n    operation,\n    variableValues: coercedVariableValues.coerced,\n    fieldResolver:\n      fieldResolver !== null && fieldResolver !== void 0\n        ? fieldResolver\n        : defaultFieldResolver,\n    typeResolver:\n      typeResolver !== null && typeResolver !== void 0\n        ? typeResolver\n        : defaultTypeResolver,\n    subscribeFieldResolver:\n      subscribeFieldResolver !== null && subscribeFieldResolver !== void 0\n        ? subscribeFieldResolver\n        : defaultFieldResolver,\n    errors: [],\n  };\n}\n/**\n * Implements the \"Executing operations\" section of the spec.\n */\n\nfunction executeOperation(exeContext, operation, rootValue) {\n  const rootType = exeContext.schema.getRootType(operation.operation);\n\n  if (rootType == null) {\n    throw new _GraphQLError.GraphQLError(\n      `Schema is not configured to execute ${operation.operation} operation.`,\n      {\n        nodes: operation,\n      },\n    );\n  }\n\n  const rootFields = (0, _collectFields.collectFields)(\n    exeContext.schema,\n    exeContext.fragments,\n    exeContext.variableValues,\n    rootType,\n    operation.selectionSet,\n  );\n  const path = undefined;\n\n  switch (operation.operation) {\n    case _ast.OperationTypeNode.QUERY:\n      return executeFields(exeContext, rootType, rootValue, path, rootFields);\n\n    case _ast.OperationTypeNode.MUTATION:\n      return executeFieldsSerially(\n        exeContext,\n        rootType,\n        rootValue,\n        path,\n        rootFields,\n      );\n\n    case _ast.OperationTypeNode.SUBSCRIPTION:\n      // TODO: deprecate `subscribe` and move all logic here\n      // Temporary solution until we finish merging execute and subscribe together\n      return executeFields(exeContext, rootType, rootValue, path, rootFields);\n  }\n}\n/**\n * Implements the \"Executing selection sets\" section of the spec\n * for fields that must be executed serially.\n */\n\nfunction executeFieldsSerially(\n  exeContext,\n  parentType,\n  sourceValue,\n  path,\n  fields,\n) {\n  return (0, _promiseReduce.promiseReduce)(\n    fields.entries(),\n    (results, [responseName, fieldNodes]) => {\n      const fieldPath = (0, _Path.addPath)(path, responseName, parentType.name);\n      const result = executeField(\n        exeContext,\n        parentType,\n        sourceValue,\n        fieldNodes,\n        fieldPath,\n      );\n\n      if (result === undefined) {\n        return results;\n      }\n\n      if ((0, _isPromise.isPromise)(result)) {\n        return result.then((resolvedResult) => {\n          results[responseName] = resolvedResult;\n          return results;\n        });\n      }\n\n      results[responseName] = result;\n      return results;\n    },\n    Object.create(null),\n  );\n}\n/**\n * Implements the \"Executing selection sets\" section of the spec\n * for fields that may be executed in parallel.\n */\n\nfunction executeFields(exeContext, parentType, sourceValue, path, fields) {\n  const results = Object.create(null);\n  let containsPromise = false;\n\n  try {\n    for (const [responseName, fieldNodes] of fields.entries()) {\n      const fieldPath = (0, _Path.addPath)(path, responseName, parentType.name);\n      const result = executeField(\n        exeContext,\n        parentType,\n        sourceValue,\n        fieldNodes,\n        fieldPath,\n      );\n\n      if (result !== undefined) {\n        results[responseName] = result;\n\n        if ((0, _isPromise.isPromise)(result)) {\n          containsPromise = true;\n        }\n      }\n    }\n  } catch (error) {\n    if (containsPromise) {\n      // Ensure that any promises returned by other fields are handled, as they may also reject.\n      return (0, _promiseForObject.promiseForObject)(results).finally(() => {\n        throw error;\n      });\n    }\n\n    throw error;\n  } // If there are no promises, we can just return the object\n\n  if (!containsPromise) {\n    return results;\n  } // Otherwise, results is a map from field name to the result of resolving that\n  // field, which is possibly a promise. Return a promise that will return this\n  // same map, but with any promises replaced with the values they resolved to.\n\n  return (0, _promiseForObject.promiseForObject)(results);\n}\n/**\n * Implements the \"Executing fields\" section of the spec\n * In particular, this function figures out the value that the field returns by\n * calling its resolve function, then calls completeValue to complete promises,\n * serialize scalars, or execute the sub-selection-set for objects.\n */\n\nfunction executeField(exeContext, parentType, source, fieldNodes, path) {\n  var _fieldDef$resolve;\n\n  const fieldDef = getFieldDef(exeContext.schema, parentType, fieldNodes[0]);\n\n  if (!fieldDef) {\n    return;\n  }\n\n  const returnType = fieldDef.type;\n  const resolveFn =\n    (_fieldDef$resolve = fieldDef.resolve) !== null &&\n    _fieldDef$resolve !== void 0\n      ? _fieldDef$resolve\n      : exeContext.fieldResolver;\n  const info = buildResolveInfo(\n    exeContext,\n    fieldDef,\n    fieldNodes,\n    parentType,\n    path,\n  ); // Get the resolve function, regardless of if its result is normal or abrupt (error).\n\n  try {\n    // Build a JS object of arguments from the field.arguments AST, using the\n    // variables scope to fulfill any variable references.\n    // TODO: find a way to memoize, in case this field is within a List type.\n    const args = (0, _values.getArgumentValues)(\n      fieldDef,\n      fieldNodes[0],\n      exeContext.variableValues,\n    ); // The resolve function's optional third argument is a context value that\n    // is provided to every resolve function within an execution. It is commonly\n    // used to represent an authenticated user, or request-specific caches.\n\n    const contextValue = exeContext.contextValue;\n    const result = resolveFn(source, args, contextValue, info);\n    let completed;\n\n    if ((0, _isPromise.isPromise)(result)) {\n      completed = result.then((resolved) =>\n        completeValue(exeContext, returnType, fieldNodes, info, path, resolved),\n      );\n    } else {\n      completed = completeValue(\n        exeContext,\n        returnType,\n        fieldNodes,\n        info,\n        path,\n        result,\n      );\n    }\n\n    if ((0, _isPromise.isPromise)(completed)) {\n      // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n      // to take a second callback for the error case.\n      return completed.then(undefined, (rawError) => {\n        const error = (0, _locatedError.locatedError)(\n          rawError,\n          fieldNodes,\n          (0, _Path.pathToArray)(path),\n        );\n        return handleFieldError(error, returnType, exeContext);\n      });\n    }\n\n    return completed;\n  } catch (rawError) {\n    const error = (0, _locatedError.locatedError)(\n      rawError,\n      fieldNodes,\n      (0, _Path.pathToArray)(path),\n    );\n    return handleFieldError(error, returnType, exeContext);\n  }\n}\n/**\n * @internal\n */\n\nfunction buildResolveInfo(exeContext, fieldDef, fieldNodes, parentType, path) {\n  // The resolve function's optional fourth argument is a collection of\n  // information about the current execution state.\n  return {\n    fieldName: fieldDef.name,\n    fieldNodes,\n    returnType: fieldDef.type,\n    parentType,\n    path,\n    schema: exeContext.schema,\n    fragments: exeContext.fragments,\n    rootValue: exeContext.rootValue,\n    operation: exeContext.operation,\n    variableValues: exeContext.variableValues,\n  };\n}\n\nfunction handleFieldError(error, returnType, exeContext) {\n  // If the field type is non-nullable, then it is resolved without any\n  // protection from errors, however it still properly locates the error.\n  if ((0, _definition.isNonNullType)(returnType)) {\n    throw error;\n  } // Otherwise, error protection is applied, logging the error and resolving\n  // a null value for this field if one is encountered.\n\n  exeContext.errors.push(error);\n  return null;\n}\n/**\n * Implements the instructions for completeValue as defined in the\n * \"Value Completion\" section of the spec.\n *\n * If the field type is Non-Null, then this recursively completes the value\n * for the inner type. It throws a field error if that completion returns null,\n * as per the \"Nullability\" section of the spec.\n *\n * If the field type is a List, then this recursively completes the value\n * for the inner type on each item in the list.\n *\n * If the field type is a Scalar or Enum, ensures the completed value is a legal\n * value of the type by calling the `serialize` method of GraphQL type\n * definition.\n *\n * If the field is an abstract type, determine the runtime type of the value\n * and then complete based on that type\n *\n * Otherwise, the field type expects a sub-selection set, and will complete the\n * value by executing all sub-selections.\n */\n\nfunction completeValue(exeContext, returnType, fieldNodes, info, path, result) {\n  // If result is an Error, throw a located error.\n  if (result instanceof Error) {\n    throw result;\n  } // If field type is NonNull, complete for inner type, and throw field error\n  // if result is null.\n\n  if ((0, _definition.isNonNullType)(returnType)) {\n    const completed = completeValue(\n      exeContext,\n      returnType.ofType,\n      fieldNodes,\n      info,\n      path,\n      result,\n    );\n\n    if (completed === null) {\n      throw new Error(\n        `Cannot return null for non-nullable field ${info.parentType.name}.${info.fieldName}.`,\n      );\n    }\n\n    return completed;\n  } // If result value is null or undefined then return null.\n\n  if (result == null) {\n    return null;\n  } // If field type is List, complete each item in the list with the inner type\n\n  if ((0, _definition.isListType)(returnType)) {\n    return completeListValue(\n      exeContext,\n      returnType,\n      fieldNodes,\n      info,\n      path,\n      result,\n    );\n  } // If field type is a leaf type, Scalar or Enum, serialize to a valid value,\n  // returning null if serialization is not possible.\n\n  if ((0, _definition.isLeafType)(returnType)) {\n    return completeLeafValue(returnType, result);\n  } // If field type is an abstract type, Interface or Union, determine the\n  // runtime Object type and complete for that type.\n\n  if ((0, _definition.isAbstractType)(returnType)) {\n    return completeAbstractValue(\n      exeContext,\n      returnType,\n      fieldNodes,\n      info,\n      path,\n      result,\n    );\n  } // If field type is Object, execute and complete all sub-selections.\n\n  if ((0, _definition.isObjectType)(returnType)) {\n    return completeObjectValue(\n      exeContext,\n      returnType,\n      fieldNodes,\n      info,\n      path,\n      result,\n    );\n  }\n  /* c8 ignore next 6 */\n  // Not reachable, all possible output types have been considered.\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Cannot complete value of unexpected output type: ' +\n        (0, _inspect.inspect)(returnType),\n    );\n}\n/**\n * Complete a list value by completing each item in the list with the\n * inner type\n */\n\nfunction completeListValue(\n  exeContext,\n  returnType,\n  fieldNodes,\n  info,\n  path,\n  result,\n) {\n  if (!(0, _isIterableObject.isIterableObject)(result)) {\n    throw new _GraphQLError.GraphQLError(\n      `Expected Iterable, but did not find one for field \"${info.parentType.name}.${info.fieldName}\".`,\n    );\n  } // This is specified as a simple map, however we're optimizing the path\n  // where the list contains no Promises by avoiding creating another Promise.\n\n  const itemType = returnType.ofType;\n  let containsPromise = false;\n  const completedResults = Array.from(result, (item, index) => {\n    // No need to modify the info object containing the path,\n    // since from here on it is not ever accessed by resolver functions.\n    const itemPath = (0, _Path.addPath)(path, index, undefined);\n\n    try {\n      let completedItem;\n\n      if ((0, _isPromise.isPromise)(item)) {\n        completedItem = item.then((resolved) =>\n          completeValue(\n            exeContext,\n            itemType,\n            fieldNodes,\n            info,\n            itemPath,\n            resolved,\n          ),\n        );\n      } else {\n        completedItem = completeValue(\n          exeContext,\n          itemType,\n          fieldNodes,\n          info,\n          itemPath,\n          item,\n        );\n      }\n\n      if ((0, _isPromise.isPromise)(completedItem)) {\n        containsPromise = true; // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n        // to take a second callback for the error case.\n\n        return completedItem.then(undefined, (rawError) => {\n          const error = (0, _locatedError.locatedError)(\n            rawError,\n            fieldNodes,\n            (0, _Path.pathToArray)(itemPath),\n          );\n          return handleFieldError(error, itemType, exeContext);\n        });\n      }\n\n      return completedItem;\n    } catch (rawError) {\n      const error = (0, _locatedError.locatedError)(\n        rawError,\n        fieldNodes,\n        (0, _Path.pathToArray)(itemPath),\n      );\n      return handleFieldError(error, itemType, exeContext);\n    }\n  });\n  return containsPromise ? Promise.all(completedResults) : completedResults;\n}\n/**\n * Complete a Scalar or Enum by serializing to a valid value, returning\n * null if serialization is not possible.\n */\n\nfunction completeLeafValue(returnType, result) {\n  const serializedResult = returnType.serialize(result);\n\n  if (serializedResult == null) {\n    throw new Error(\n      `Expected \\`${(0, _inspect.inspect)(returnType)}.serialize(${(0,\n      _inspect.inspect)(result)})\\` to ` +\n        `return non-nullable value, returned: ${(0, _inspect.inspect)(\n          serializedResult,\n        )}`,\n    );\n  }\n\n  return serializedResult;\n}\n/**\n * Complete a value of an abstract type by determining the runtime object type\n * of that value, then complete the value for that type.\n */\n\nfunction completeAbstractValue(\n  exeContext,\n  returnType,\n  fieldNodes,\n  info,\n  path,\n  result,\n) {\n  var _returnType$resolveTy;\n\n  const resolveTypeFn =\n    (_returnType$resolveTy = returnType.resolveType) !== null &&\n    _returnType$resolveTy !== void 0\n      ? _returnType$resolveTy\n      : exeContext.typeResolver;\n  const contextValue = exeContext.contextValue;\n  const runtimeType = resolveTypeFn(result, contextValue, info, returnType);\n\n  if ((0, _isPromise.isPromise)(runtimeType)) {\n    return runtimeType.then((resolvedRuntimeType) =>\n      completeObjectValue(\n        exeContext,\n        ensureValidRuntimeType(\n          resolvedRuntimeType,\n          exeContext,\n          returnType,\n          fieldNodes,\n          info,\n          result,\n        ),\n        fieldNodes,\n        info,\n        path,\n        result,\n      ),\n    );\n  }\n\n  return completeObjectValue(\n    exeContext,\n    ensureValidRuntimeType(\n      runtimeType,\n      exeContext,\n      returnType,\n      fieldNodes,\n      info,\n      result,\n    ),\n    fieldNodes,\n    info,\n    path,\n    result,\n  );\n}\n\nfunction ensureValidRuntimeType(\n  runtimeTypeName,\n  exeContext,\n  returnType,\n  fieldNodes,\n  info,\n  result,\n) {\n  if (runtimeTypeName == null) {\n    throw new _GraphQLError.GraphQLError(\n      `Abstract type \"${returnType.name}\" must resolve to an Object type at runtime for field \"${info.parentType.name}.${info.fieldName}\". Either the \"${returnType.name}\" type should provide a \"resolveType\" function or each possible type should provide an \"isTypeOf\" function.`,\n      fieldNodes,\n    );\n  } // releases before 16.0.0 supported returning `GraphQLObjectType` from `resolveType`\n  // TODO: remove in 17.0.0 release\n\n  if ((0, _definition.isObjectType)(runtimeTypeName)) {\n    throw new _GraphQLError.GraphQLError(\n      'Support for returning GraphQLObjectType from resolveType was removed in graphql-js@16.0.0 please return type name instead.',\n    );\n  }\n\n  if (typeof runtimeTypeName !== 'string') {\n    throw new _GraphQLError.GraphQLError(\n      `Abstract type \"${returnType.name}\" must resolve to an Object type at runtime for field \"${info.parentType.name}.${info.fieldName}\" with ` +\n        `value ${(0, _inspect.inspect)(result)}, received \"${(0,\n        _inspect.inspect)(runtimeTypeName)}\".`,\n    );\n  }\n\n  const runtimeType = exeContext.schema.getType(runtimeTypeName);\n\n  if (runtimeType == null) {\n    throw new _GraphQLError.GraphQLError(\n      `Abstract type \"${returnType.name}\" was resolved to a type \"${runtimeTypeName}\" that does not exist inside the schema.`,\n      {\n        nodes: fieldNodes,\n      },\n    );\n  }\n\n  if (!(0, _definition.isObjectType)(runtimeType)) {\n    throw new _GraphQLError.GraphQLError(\n      `Abstract type \"${returnType.name}\" was resolved to a non-object type \"${runtimeTypeName}\".`,\n      {\n        nodes: fieldNodes,\n      },\n    );\n  }\n\n  if (!exeContext.schema.isSubType(returnType, runtimeType)) {\n    throw new _GraphQLError.GraphQLError(\n      `Runtime Object type \"${runtimeType.name}\" is not a possible type for \"${returnType.name}\".`,\n      {\n        nodes: fieldNodes,\n      },\n    );\n  }\n\n  return runtimeType;\n}\n/**\n * Complete an Object value by executing all sub-selections.\n */\n\nfunction completeObjectValue(\n  exeContext,\n  returnType,\n  fieldNodes,\n  info,\n  path,\n  result,\n) {\n  // Collect sub-fields to execute to complete this value.\n  const subFieldNodes = collectSubfields(exeContext, returnType, fieldNodes); // If there is an isTypeOf predicate function, call it with the\n  // current result. If isTypeOf returns false, then raise an error rather\n  // than continuing execution.\n\n  if (returnType.isTypeOf) {\n    const isTypeOf = returnType.isTypeOf(result, exeContext.contextValue, info);\n\n    if ((0, _isPromise.isPromise)(isTypeOf)) {\n      return isTypeOf.then((resolvedIsTypeOf) => {\n        if (!resolvedIsTypeOf) {\n          throw invalidReturnTypeError(returnType, result, fieldNodes);\n        }\n\n        return executeFields(\n          exeContext,\n          returnType,\n          result,\n          path,\n          subFieldNodes,\n        );\n      });\n    }\n\n    if (!isTypeOf) {\n      throw invalidReturnTypeError(returnType, result, fieldNodes);\n    }\n  }\n\n  return executeFields(exeContext, returnType, result, path, subFieldNodes);\n}\n\nfunction invalidReturnTypeError(returnType, result, fieldNodes) {\n  return new _GraphQLError.GraphQLError(\n    `Expected value of type \"${returnType.name}\" but got: ${(0,\n    _inspect.inspect)(result)}.`,\n    {\n      nodes: fieldNodes,\n    },\n  );\n}\n/**\n * If a resolveType function is not given, then a default resolve behavior is\n * used which attempts two strategies:\n *\n * First, See if the provided value has a `__typename` field defined, if so, use\n * that value as name of the resolved type.\n *\n * Otherwise, test each possible type for the abstract type by calling\n * isTypeOf for the object being coerced, returning the first type that matches.\n */\n\nconst defaultTypeResolver = function (value, contextValue, info, abstractType) {\n  // First, look for `__typename`.\n  if (\n    (0, _isObjectLike.isObjectLike)(value) &&\n    typeof value.__typename === 'string'\n  ) {\n    return value.__typename;\n  } // Otherwise, test each possible type.\n\n  const possibleTypes = info.schema.getPossibleTypes(abstractType);\n  const promisedIsTypeOfResults = [];\n\n  for (let i = 0; i < possibleTypes.length; i++) {\n    const type = possibleTypes[i];\n\n    if (type.isTypeOf) {\n      const isTypeOfResult = type.isTypeOf(value, contextValue, info);\n\n      if ((0, _isPromise.isPromise)(isTypeOfResult)) {\n        promisedIsTypeOfResults[i] = isTypeOfResult;\n      } else if (isTypeOfResult) {\n        return type.name;\n      }\n    }\n  }\n\n  if (promisedIsTypeOfResults.length) {\n    return Promise.all(promisedIsTypeOfResults).then((isTypeOfResults) => {\n      for (let i = 0; i < isTypeOfResults.length; i++) {\n        if (isTypeOfResults[i]) {\n          return possibleTypes[i].name;\n        }\n      }\n    });\n  }\n};\n/**\n * If a resolve function is not given, then a default resolve behavior is used\n * which takes the property of the source object of the same name as the field\n * and returns it as the result, or if it's a function, returns the result\n * of calling that function while passing along args and context value.\n */\n\nexports.defaultTypeResolver = defaultTypeResolver;\n\nconst defaultFieldResolver = function (source, args, contextValue, info) {\n  // ensure source is a value for which property access is acceptable.\n  if ((0, _isObjectLike.isObjectLike)(source) || typeof source === 'function') {\n    const property = source[info.fieldName];\n\n    if (typeof property === 'function') {\n      return source[info.fieldName](args, contextValue, info);\n    }\n\n    return property;\n  }\n};\n/**\n * This method looks up the field on the given type definition.\n * It has special casing for the three introspection fields,\n * __schema, __type and __typename. __typename is special because\n * it can always be queried as a field, even in situations where no\n * other fields are allowed, like on a Union. __schema and __type\n * could get automatically added to the query type, but that would\n * require mutating type definitions, which would cause issues.\n *\n * @internal\n */\n\nexports.defaultFieldResolver = defaultFieldResolver;\n\nfunction getFieldDef(schema, parentType, fieldNode) {\n  const fieldName = fieldNode.name.value;\n\n  if (\n    fieldName === _introspection.SchemaMetaFieldDef.name &&\n    schema.getQueryType() === parentType\n  ) {\n    return _introspection.SchemaMetaFieldDef;\n  } else if (\n    fieldName === _introspection.TypeMetaFieldDef.name &&\n    schema.getQueryType() === parentType\n  ) {\n    return _introspection.TypeMetaFieldDef;\n  } else if (fieldName === _introspection.TypeNameMetaFieldDef.name) {\n    return _introspection.TypeNameMetaFieldDef;\n  }\n\n  return parentType.getFields()[fieldName];\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.graphql = graphql;\nexports.graphqlSync = graphqlSync;\n\nvar _devAssert = require('./jsutils/devAssert.js');\n\nvar _isPromise = require('./jsutils/isPromise.js');\n\nvar _parser = require('./language/parser.js');\n\nvar _validate = require('./type/validate.js');\n\nvar _validate2 = require('./validation/validate.js');\n\nvar _execute = require('./execution/execute.js');\n\nfunction graphql(args) {\n  // Always return a Promise for a consistent API.\n  return new Promise((resolve) => resolve(graphqlImpl(args)));\n}\n/**\n * The graphqlSync function also fulfills GraphQL operations by parsing,\n * validating, and executing a GraphQL document along side a GraphQL schema.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\n\nfunction graphqlSync(args) {\n  const result = graphqlImpl(args); // Assert that the execution was synchronous.\n\n  if ((0, _isPromise.isPromise)(result)) {\n    throw new Error('GraphQL execution failed to complete synchronously.');\n  }\n\n  return result;\n}\n\nfunction graphqlImpl(args) {\n  // Temporary for v15 to v16 migration. Remove in v17\n  arguments.length < 2 ||\n    (0, _devAssert.devAssert)(\n      false,\n      'graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.',\n    );\n  const {\n    schema,\n    source,\n    rootValue,\n    contextValue,\n    variableValues,\n    operationName,\n    fieldResolver,\n    typeResolver,\n  } = args; // Validate Schema\n\n  const schemaValidationErrors = (0, _validate.validateSchema)(schema);\n\n  if (schemaValidationErrors.length > 0) {\n    return {\n      errors: schemaValidationErrors,\n    };\n  } // Parse\n\n  let document;\n\n  try {\n    document = (0, _parser.parse)(source);\n  } catch (syntaxError) {\n    return {\n      errors: [syntaxError],\n    };\n  } // Validate\n\n  const validationErrors = (0, _validate2.validate)(schema, document);\n\n  if (validationErrors.length > 0) {\n    return {\n      errors: validationErrors,\n    };\n  } // Execute\n\n  return (0, _execute.execute)({\n    schema,\n    document,\n    rootValue,\n    contextValue,\n    variableValues,\n    operationName,\n    fieldResolver,\n    typeResolver,\n  });\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nObject.defineProperty(exports, 'DEFAULT_DEPRECATION_REASON', {\n  enumerable: true,\n  get: function () {\n    return _directives.DEFAULT_DEPRECATION_REASON;\n  },\n});\nObject.defineProperty(exports, 'GRAPHQL_MAX_INT', {\n  enumerable: true,\n  get: function () {\n    return _scalars.GRAPHQL_MAX_INT;\n  },\n});\nObject.defineProperty(exports, 'GRAPHQL_MIN_INT', {\n  enumerable: true,\n  get: function () {\n    return _scalars.GRAPHQL_MIN_INT;\n  },\n});\nObject.defineProperty(exports, 'GraphQLBoolean', {\n  enumerable: true,\n  get: function () {\n    return _scalars.GraphQLBoolean;\n  },\n});\nObject.defineProperty(exports, 'GraphQLDeprecatedDirective', {\n  enumerable: true,\n  get: function () {\n    return _directives.GraphQLDeprecatedDirective;\n  },\n});\nObject.defineProperty(exports, 'GraphQLDirective', {\n  enumerable: true,\n  get: function () {\n    return _directives.GraphQLDirective;\n  },\n});\nObject.defineProperty(exports, 'GraphQLEnumType', {\n  enumerable: true,\n  get: function () {\n    return _definition.GraphQLEnumType;\n  },\n});\nObject.defineProperty(exports, 'GraphQLFloat', {\n  enumerable: true,\n  get: function () {\n    return _scalars.GraphQLFloat;\n  },\n});\nObject.defineProperty(exports, 'GraphQLID', {\n  enumerable: true,\n  get: function () {\n    return _scalars.GraphQLID;\n  },\n});\nObject.defineProperty(exports, 'GraphQLIncludeDirective', {\n  enumerable: true,\n  get: function () {\n    return _directives.GraphQLIncludeDirective;\n  },\n});\nObject.defineProperty(exports, 'GraphQLInputObjectType', {\n  enumerable: true,\n  get: function () {\n    return _definition.GraphQLInputObjectType;\n  },\n});\nObject.defineProperty(exports, 'GraphQLInt', {\n  enumerable: true,\n  get: function () {\n    return _scalars.GraphQLInt;\n  },\n});\nObject.defineProperty(exports, 'GraphQLInterfaceType', {\n  enumerable: true,\n  get: function () {\n    return _definition.GraphQLInterfaceType;\n  },\n});\nObject.defineProperty(exports, 'GraphQLList', {\n  enumerable: true,\n  get: function () {\n    return _definition.GraphQLList;\n  },\n});\nObject.defineProperty(exports, 'GraphQLNonNull', {\n  enumerable: true,\n  get: function () {\n    return _definition.GraphQLNonNull;\n  },\n});\nObject.defineProperty(exports, 'GraphQLObjectType', {\n  enumerable: true,\n  get: function () {\n    return _definition.GraphQLObjectType;\n  },\n});\nObject.defineProperty(exports, 'GraphQLScalarType', {\n  enumerable: true,\n  get: function () {\n    return _definition.GraphQLScalarType;\n  },\n});\nObject.defineProperty(exports, 'GraphQLSchema', {\n  enumerable: true,\n  get: function () {\n    return _schema.GraphQLSchema;\n  },\n});\nObject.defineProperty(exports, 'GraphQLSkipDirective', {\n  enumerable: true,\n  get: function () {\n    return _directives.GraphQLSkipDirective;\n  },\n});\nObject.defineProperty(exports, 'GraphQLSpecifiedByDirective', {\n  enumerable: true,\n  get: function () {\n    return _directives.GraphQLSpecifiedByDirective;\n  },\n});\nObject.defineProperty(exports, 'GraphQLString', {\n  enumerable: true,\n  get: function () {\n    return _scalars.GraphQLString;\n  },\n});\nObject.defineProperty(exports, 'GraphQLUnionType', {\n  enumerable: true,\n  get: function () {\n    return _definition.GraphQLUnionType;\n  },\n});\nObject.defineProperty(exports, 'SchemaMetaFieldDef', {\n  enumerable: true,\n  get: function () {\n    return _introspection.SchemaMetaFieldDef;\n  },\n});\nObject.defineProperty(exports, 'TypeKind', {\n  enumerable: true,\n  get: function () {\n    return _introspection.TypeKind;\n  },\n});\nObject.defineProperty(exports, 'TypeMetaFieldDef', {\n  enumerable: true,\n  get: function () {\n    return _introspection.TypeMetaFieldDef;\n  },\n});\nObject.defineProperty(exports, 'TypeNameMetaFieldDef', {\n  enumerable: true,\n  get: function () {\n    return _introspection.TypeNameMetaFieldDef;\n  },\n});\nObject.defineProperty(exports, '__Directive', {\n  enumerable: true,\n  get: function () {\n    return _introspection.__Directive;\n  },\n});\nObject.defineProperty(exports, '__DirectiveLocation', {\n  enumerable: true,\n  get: function () {\n    return _introspection.__DirectiveLocation;\n  },\n});\nObject.defineProperty(exports, '__EnumValue', {\n  enumerable: true,\n  get: function () {\n    return _introspection.__EnumValue;\n  },\n});\nObject.defineProperty(exports, '__Field', {\n  enumerable: true,\n  get: function () {\n    return _introspection.__Field;\n  },\n});\nObject.defineProperty(exports, '__InputValue', {\n  enumerable: true,\n  get: function () {\n    return _introspection.__InputValue;\n  },\n});\nObject.defineProperty(exports, '__Schema', {\n  enumerable: true,\n  get: function () {\n    return _introspection.__Schema;\n  },\n});\nObject.defineProperty(exports, '__Type', {\n  enumerable: true,\n  get: function () {\n    return _introspection.__Type;\n  },\n});\nObject.defineProperty(exports, '__TypeKind', {\n  enumerable: true,\n  get: function () {\n    return _introspection.__TypeKind;\n  },\n});\nObject.defineProperty(exports, 'assertAbstractType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertAbstractType;\n  },\n});\nObject.defineProperty(exports, 'assertCompositeType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertCompositeType;\n  },\n});\nObject.defineProperty(exports, 'assertDirective', {\n  enumerable: true,\n  get: function () {\n    return _directives.assertDirective;\n  },\n});\nObject.defineProperty(exports, 'assertEnumType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertEnumType;\n  },\n});\nObject.defineProperty(exports, 'assertEnumValueName', {\n  enumerable: true,\n  get: function () {\n    return _assertName.assertEnumValueName;\n  },\n});\nObject.defineProperty(exports, 'assertInputObjectType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertInputObjectType;\n  },\n});\nObject.defineProperty(exports, 'assertInputType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertInputType;\n  },\n});\nObject.defineProperty(exports, 'assertInterfaceType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertInterfaceType;\n  },\n});\nObject.defineProperty(exports, 'assertLeafType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertLeafType;\n  },\n});\nObject.defineProperty(exports, 'assertListType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertListType;\n  },\n});\nObject.defineProperty(exports, 'assertName', {\n  enumerable: true,\n  get: function () {\n    return _assertName.assertName;\n  },\n});\nObject.defineProperty(exports, 'assertNamedType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertNamedType;\n  },\n});\nObject.defineProperty(exports, 'assertNonNullType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertNonNullType;\n  },\n});\nObject.defineProperty(exports, 'assertNullableType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertNullableType;\n  },\n});\nObject.defineProperty(exports, 'assertObjectType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertObjectType;\n  },\n});\nObject.defineProperty(exports, 'assertOutputType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertOutputType;\n  },\n});\nObject.defineProperty(exports, 'assertScalarType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertScalarType;\n  },\n});\nObject.defineProperty(exports, 'assertSchema', {\n  enumerable: true,\n  get: function () {\n    return _schema.assertSchema;\n  },\n});\nObject.defineProperty(exports, 'assertType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertType;\n  },\n});\nObject.defineProperty(exports, 'assertUnionType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertUnionType;\n  },\n});\nObject.defineProperty(exports, 'assertValidSchema', {\n  enumerable: true,\n  get: function () {\n    return _validate.assertValidSchema;\n  },\n});\nObject.defineProperty(exports, 'assertWrappingType', {\n  enumerable: true,\n  get: function () {\n    return _definition.assertWrappingType;\n  },\n});\nObject.defineProperty(exports, 'getNamedType', {\n  enumerable: true,\n  get: function () {\n    return _definition.getNamedType;\n  },\n});\nObject.defineProperty(exports, 'getNullableType', {\n  enumerable: true,\n  get: function () {\n    return _definition.getNullableType;\n  },\n});\nObject.defineProperty(exports, 'introspectionTypes', {\n  enumerable: true,\n  get: function () {\n    return _introspection.introspectionTypes;\n  },\n});\nObject.defineProperty(exports, 'isAbstractType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isAbstractType;\n  },\n});\nObject.defineProperty(exports, 'isCompositeType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isCompositeType;\n  },\n});\nObject.defineProperty(exports, 'isDirective', {\n  enumerable: true,\n  get: function () {\n    return _directives.isDirective;\n  },\n});\nObject.defineProperty(exports, 'isEnumType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isEnumType;\n  },\n});\nObject.defineProperty(exports, 'isInputObjectType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isInputObjectType;\n  },\n});\nObject.defineProperty(exports, 'isInputType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isInputType;\n  },\n});\nObject.defineProperty(exports, 'isInterfaceType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isInterfaceType;\n  },\n});\nObject.defineProperty(exports, 'isIntrospectionType', {\n  enumerable: true,\n  get: function () {\n    return _introspection.isIntrospectionType;\n  },\n});\nObject.defineProperty(exports, 'isLeafType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isLeafType;\n  },\n});\nObject.defineProperty(exports, 'isListType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isListType;\n  },\n});\nObject.defineProperty(exports, 'isNamedType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isNamedType;\n  },\n});\nObject.defineProperty(exports, 'isNonNullType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isNonNullType;\n  },\n});\nObject.defineProperty(exports, 'isNullableType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isNullableType;\n  },\n});\nObject.defineProperty(exports, 'isObjectType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isObjectType;\n  },\n});\nObject.defineProperty(exports, 'isOutputType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isOutputType;\n  },\n});\nObject.defineProperty(exports, 'isRequiredArgument', {\n  enumerable: true,\n  get: function () {\n    return _definition.isRequiredArgument;\n  },\n});\nObject.defineProperty(exports, 'isRequiredInputField', {\n  enumerable: true,\n  get: function () {\n    return _definition.isRequiredInputField;\n  },\n});\nObject.defineProperty(exports, 'isScalarType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isScalarType;\n  },\n});\nObject.defineProperty(exports, 'isSchema', {\n  enumerable: true,\n  get: function () {\n    return _schema.isSchema;\n  },\n});\nObject.defineProperty(exports, 'isSpecifiedDirective', {\n  enumerable: true,\n  get: function () {\n    return _directives.isSpecifiedDirective;\n  },\n});\nObject.defineProperty(exports, 'isSpecifiedScalarType', {\n  enumerable: true,\n  get: function () {\n    return _scalars.isSpecifiedScalarType;\n  },\n});\nObject.defineProperty(exports, 'isType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isType;\n  },\n});\nObject.defineProperty(exports, 'isUnionType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isUnionType;\n  },\n});\nObject.defineProperty(exports, 'isWrappingType', {\n  enumerable: true,\n  get: function () {\n    return _definition.isWrappingType;\n  },\n});\nObject.defineProperty(exports, 'resolveObjMapThunk', {\n  enumerable: true,\n  get: function () {\n    return _definition.resolveObjMapThunk;\n  },\n});\nObject.defineProperty(exports, 'resolveReadonlyArrayThunk', {\n  enumerable: true,\n  get: function () {\n    return _definition.resolveReadonlyArrayThunk;\n  },\n});\nObject.defineProperty(exports, 'specifiedDirectives', {\n  enumerable: true,\n  get: function () {\n    return _directives.specifiedDirectives;\n  },\n});\nObject.defineProperty(exports, 'specifiedScalarTypes', {\n  enumerable: true,\n  get: function () {\n    return _scalars.specifiedScalarTypes;\n  },\n});\nObject.defineProperty(exports, 'validateSchema', {\n  enumerable: true,\n  get: function () {\n    return _validate.validateSchema;\n  },\n});\n\nvar _schema = require('./schema.js');\n\nvar _definition = require('./definition.js');\n\nvar _directives = require('./directives.js');\n\nvar _scalars = require('./scalars.js');\n\nvar _introspection = require('./introspection.js');\n\nvar _validate = require('./validate.js');\n\nvar _assertName = require('./assertName.js');\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nObject.defineProperty(exports, 'BREAK', {\n  enumerable: true,\n  get: function () {\n    return _visitor.BREAK;\n  },\n});\nObject.defineProperty(exports, 'DirectiveLocation', {\n  enumerable: true,\n  get: function () {\n    return _directiveLocation.DirectiveLocation;\n  },\n});\nObject.defineProperty(exports, 'Kind', {\n  enumerable: true,\n  get: function () {\n    return _kinds.Kind;\n  },\n});\nObject.defineProperty(exports, 'Lexer', {\n  enumerable: true,\n  get: function () {\n    return _lexer.Lexer;\n  },\n});\nObject.defineProperty(exports, 'Location', {\n  enumerable: true,\n  get: function () {\n    return _ast.Location;\n  },\n});\nObject.defineProperty(exports, 'OperationTypeNode', {\n  enumerable: true,\n  get: function () {\n    return _ast.OperationTypeNode;\n  },\n});\nObject.defineProperty(exports, 'Source', {\n  enumerable: true,\n  get: function () {\n    return _source.Source;\n  },\n});\nObject.defineProperty(exports, 'Token', {\n  enumerable: true,\n  get: function () {\n    return _ast.Token;\n  },\n});\nObject.defineProperty(exports, 'TokenKind', {\n  enumerable: true,\n  get: function () {\n    return _tokenKind.TokenKind;\n  },\n});\nObject.defineProperty(exports, 'getEnterLeaveForKind', {\n  enumerable: true,\n  get: function () {\n    return _visitor.getEnterLeaveForKind;\n  },\n});\nObject.defineProperty(exports, 'getLocation', {\n  enumerable: true,\n  get: function () {\n    return _location.getLocation;\n  },\n});\nObject.defineProperty(exports, 'getVisitFn', {\n  enumerable: true,\n  get: function () {\n    return _visitor.getVisitFn;\n  },\n});\nObject.defineProperty(exports, 'isConstValueNode', {\n  enumerable: true,\n  get: function () {\n    return _predicates.isConstValueNode;\n  },\n});\nObject.defineProperty(exports, 'isDefinitionNode', {\n  enumerable: true,\n  get: function () {\n    return _predicates.isDefinitionNode;\n  },\n});\nObject.defineProperty(exports, 'isExecutableDefinitionNode', {\n  enumerable: true,\n  get: function () {\n    return _predicates.isExecutableDefinitionNode;\n  },\n});\nObject.defineProperty(exports, 'isSelectionNode', {\n  enumerable: true,\n  get: function () {\n    return _predicates.isSelectionNode;\n  },\n});\nObject.defineProperty(exports, 'isTypeDefinitionNode', {\n  enumerable: true,\n  get: function () {\n    return _predicates.isTypeDefinitionNode;\n  },\n});\nObject.defineProperty(exports, 'isTypeExtensionNode', {\n  enumerable: true,\n  get: function () {\n    return _predicates.isTypeExtensionNode;\n  },\n});\nObject.defineProperty(exports, 'isTypeNode', {\n  enumerable: true,\n  get: function () {\n    return _predicates.isTypeNode;\n  },\n});\nObject.defineProperty(exports, 'isTypeSystemDefinitionNode', {\n  enumerable: true,\n  get: function () {\n    return _predicates.isTypeSystemDefinitionNode;\n  },\n});\nObject.defineProperty(exports, 'isTypeSystemExtensionNode', {\n  enumerable: true,\n  get: function () {\n    return _predicates.isTypeSystemExtensionNode;\n  },\n});\nObject.defineProperty(exports, 'isValueNode', {\n  enumerable: true,\n  get: function () {\n    return _predicates.isValueNode;\n  },\n});\nObject.defineProperty(exports, 'parse', {\n  enumerable: true,\n  get: function () {\n    return _parser.parse;\n  },\n});\nObject.defineProperty(exports, 'parseConstValue', {\n  enumerable: true,\n  get: function () {\n    return _parser.parseConstValue;\n  },\n});\nObject.defineProperty(exports, 'parseType', {\n  enumerable: true,\n  get: function () {\n    return _parser.parseType;\n  },\n});\nObject.defineProperty(exports, 'parseValue', {\n  enumerable: true,\n  get: function () {\n    return _parser.parseValue;\n  },\n});\nObject.defineProperty(exports, 'print', {\n  enumerable: true,\n  get: function () {\n    return _printer.print;\n  },\n});\nObject.defineProperty(exports, 'printLocation', {\n  enumerable: true,\n  get: function () {\n    return _printLocation.printLocation;\n  },\n});\nObject.defineProperty(exports, 'printSourceLocation', {\n  enumerable: true,\n  get: function () {\n    return _printLocation.printSourceLocation;\n  },\n});\nObject.defineProperty(exports, 'visit', {\n  enumerable: true,\n  get: function () {\n    return _visitor.visit;\n  },\n});\nObject.defineProperty(exports, 'visitInParallel', {\n  enumerable: true,\n  get: function () {\n    return _visitor.visitInParallel;\n  },\n});\n\nvar _source = require('./source.js');\n\nvar _location = require('./location.js');\n\nvar _printLocation = require('./printLocation.js');\n\nvar _kinds = require('./kinds.js');\n\nvar _tokenKind = require('./tokenKind.js');\n\nvar _lexer = require('./lexer.js');\n\nvar _parser = require('./parser.js');\n\nvar _printer = require('./printer.js');\n\nvar _visitor = require('./visitor.js');\n\nvar _ast = require('./ast.js');\n\nvar _predicates = require('./predicates.js');\n\nvar _directiveLocation = require('./directiveLocation.js');\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.isAsyncIterable = isAsyncIterable;\n\n/**\n * Returns true if the provided object implements the AsyncIterator protocol via\n * implementing a `Symbol.asyncIterator` method.\n */\nfunction isAsyncIterable(maybeAsyncIterable) {\n  return (\n    typeof (maybeAsyncIterable === null || maybeAsyncIterable === void 0\n      ? void 0\n      : maybeAsyncIterable[Symbol.asyncIterator]) === 'function'\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.mapAsyncIterator = mapAsyncIterator;\n\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nfunction mapAsyncIterator(iterable, callback) {\n  const iterator = iterable[Symbol.asyncIterator]();\n\n  async function mapResult(result) {\n    if (result.done) {\n      return result;\n    }\n\n    try {\n      return {\n        value: await callback(result.value),\n        done: false,\n      };\n    } catch (error) {\n      /* c8 ignore start */\n      // FIXME: add test case\n      if (typeof iterator.return === 'function') {\n        try {\n          await iterator.return();\n        } catch (_e) {\n          /* ignore error */\n        }\n      }\n\n      throw error;\n      /* c8 ignore stop */\n    }\n  }\n\n  return {\n    async next() {\n      return mapResult(await iterator.next());\n    },\n\n    async return() {\n      // If iterator.return() does not exist, then type R must be undefined.\n      return typeof iterator.return === 'function'\n        ? mapResult(await iterator.return())\n        : {\n            value: undefined,\n            done: true,\n          };\n    },\n\n    async throw(error) {\n      if (typeof iterator.throw === 'function') {\n        return mapResult(await iterator.throw(error));\n      }\n\n      throw error;\n    },\n\n    [Symbol.asyncIterator]() {\n      return this;\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.createSourceEventStream = createSourceEventStream;\nexports.subscribe = subscribe;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _isAsyncIterable = require('../jsutils/isAsyncIterable.js');\n\nvar _Path = require('../jsutils/Path.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _locatedError = require('../error/locatedError.js');\n\nvar _collectFields = require('./collectFields.js');\n\nvar _execute = require('./execute.js');\n\nvar _mapAsyncIterator = require('./mapAsyncIterator.js');\n\nvar _values = require('./values.js');\n\n/**\n * Implements the \"Subscribe\" algorithm described in the GraphQL specification.\n *\n * Returns a Promise which resolves to either an AsyncIterator (if successful)\n * or an ExecutionResult (error). The promise will be rejected if the schema or\n * other arguments to this function are invalid, or if the resolved event stream\n * is not an async iterable.\n *\n * If the client-provided arguments to this function do not result in a\n * compliant subscription, a GraphQL Response (ExecutionResult) with\n * descriptive errors and no data will be returned.\n *\n * If the source stream could not be created due to faulty subscription\n * resolver logic or underlying systems, the promise will resolve to a single\n * ExecutionResult containing `errors` and no `data`.\n *\n * If the operation succeeded, the promise resolves to an AsyncIterator, which\n * yields a stream of ExecutionResults representing the response stream.\n *\n * Accepts either an object with named arguments, or individual arguments.\n */\nasync function subscribe(args) {\n  // Temporary for v15 to v16 migration. Remove in v17\n  arguments.length < 2 ||\n    (0, _devAssert.devAssert)(\n      false,\n      'graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.',\n    );\n  const resultOrStream = await createSourceEventStream(args);\n\n  if (!(0, _isAsyncIterable.isAsyncIterable)(resultOrStream)) {\n    return resultOrStream;\n  } // For each payload yielded from a subscription, map it over the normal\n  // GraphQL `execute` function, with `payload` as the rootValue.\n  // This implements the \"MapSourceToResponseEvent\" algorithm described in\n  // the GraphQL specification. The `execute` function provides the\n  // \"ExecuteSubscriptionEvent\" algorithm, as it is nearly identical to the\n  // \"ExecuteQuery\" algorithm, for which `execute` is also used.\n\n  const mapSourceToResponse = (payload) =>\n    (0, _execute.execute)({ ...args, rootValue: payload }); // Map every source value to a ExecutionResult value as described above.\n\n  return (0, _mapAsyncIterator.mapAsyncIterator)(\n    resultOrStream,\n    mapSourceToResponse,\n  );\n}\n\nfunction toNormalizedArgs(args) {\n  const firstArg = args[0];\n\n  if (firstArg && 'document' in firstArg) {\n    return firstArg;\n  }\n\n  return {\n    schema: firstArg,\n    // FIXME: when underlying TS bug fixed, see https://github.com/microsoft/TypeScript/issues/31613\n    document: args[1],\n    rootValue: args[2],\n    contextValue: args[3],\n    variableValues: args[4],\n    operationName: args[5],\n    subscribeFieldResolver: args[6],\n  };\n}\n/**\n * Implements the \"CreateSourceEventStream\" algorithm described in the\n * GraphQL specification, resolving the subscription source event stream.\n *\n * Returns a Promise which resolves to either an AsyncIterable (if successful)\n * or an ExecutionResult (error). The promise will be rejected if the schema or\n * other arguments to this function are invalid, or if the resolved event stream\n * is not an async iterable.\n *\n * If the client-provided arguments to this function do not result in a\n * compliant subscription, a GraphQL Response (ExecutionResult) with\n * descriptive errors and no data will be returned.\n *\n * If the the source stream could not be created due to faulty subscription\n * resolver logic or underlying systems, the promise will resolve to a single\n * ExecutionResult containing `errors` and no `data`.\n *\n * If the operation succeeded, the promise resolves to the AsyncIterable for the\n * event stream returned by the resolver.\n *\n * A Source Event Stream represents a sequence of events, each of which triggers\n * a GraphQL execution for that event.\n *\n * This may be useful when hosting the stateful subscription service in a\n * different process or machine than the stateless GraphQL execution engine,\n * or otherwise separating these two steps. For more on this, see the\n * \"Supporting Subscriptions at Scale\" information in the GraphQL specification.\n */\n\nasync function createSourceEventStream(...rawArgs) {\n  const args = toNormalizedArgs(rawArgs);\n  const { schema, document, variableValues } = args; // If arguments are missing or incorrectly typed, this is an internal\n  // developer mistake which should throw an early error.\n\n  (0, _execute.assertValidExecutionArguments)(schema, document, variableValues); // If a valid execution context cannot be created due to incorrect arguments,\n  // a \"Response\" with only errors is returned.\n\n  const exeContext = (0, _execute.buildExecutionContext)(args); // Return early errors if execution context failed.\n\n  if (!('schema' in exeContext)) {\n    return {\n      errors: exeContext,\n    };\n  }\n\n  try {\n    const eventStream = await executeSubscription(exeContext); // Assert field returned an event stream, otherwise yield an error.\n\n    if (!(0, _isAsyncIterable.isAsyncIterable)(eventStream)) {\n      throw new Error(\n        'Subscription field must return Async Iterable. ' +\n          `Received: ${(0, _inspect.inspect)(eventStream)}.`,\n      );\n    }\n\n    return eventStream;\n  } catch (error) {\n    // If it GraphQLError, report it as an ExecutionResult, containing only errors and no data.\n    // Otherwise treat the error as a system-class error and re-throw it.\n    if (error instanceof _GraphQLError.GraphQLError) {\n      return {\n        errors: [error],\n      };\n    }\n\n    throw error;\n  }\n}\n\nasync function executeSubscription(exeContext) {\n  const { schema, fragments, operation, variableValues, rootValue } =\n    exeContext;\n  const rootType = schema.getSubscriptionType();\n\n  if (rootType == null) {\n    throw new _GraphQLError.GraphQLError(\n      'Schema is not configured to execute subscription operation.',\n      {\n        nodes: operation,\n      },\n    );\n  }\n\n  const rootFields = (0, _collectFields.collectFields)(\n    schema,\n    fragments,\n    variableValues,\n    rootType,\n    operation.selectionSet,\n  );\n  const [responseName, fieldNodes] = [...rootFields.entries()][0];\n  const fieldDef = (0, _execute.getFieldDef)(schema, rootType, fieldNodes[0]);\n\n  if (!fieldDef) {\n    const fieldName = fieldNodes[0].name.value;\n    throw new _GraphQLError.GraphQLError(\n      `The subscription field \"${fieldName}\" is not defined.`,\n      {\n        nodes: fieldNodes,\n      },\n    );\n  }\n\n  const path = (0, _Path.addPath)(undefined, responseName, rootType.name);\n  const info = (0, _execute.buildResolveInfo)(\n    exeContext,\n    fieldDef,\n    fieldNodes,\n    rootType,\n    path,\n  );\n\n  try {\n    var _fieldDef$subscribe;\n\n    // Implements the \"ResolveFieldEventStream\" algorithm from GraphQL specification.\n    // It differs from \"ResolveFieldValue\" due to providing a different `resolveFn`.\n    // Build a JS object of arguments from the field.arguments AST, using the\n    // variables scope to fulfill any variable references.\n    const args = (0, _values.getArgumentValues)(\n      fieldDef,\n      fieldNodes[0],\n      variableValues,\n    ); // The resolve function's optional third argument is a context value that\n    // is provided to every resolve function within an execution. It is commonly\n    // used to represent an authenticated user, or request-specific caches.\n\n    const contextValue = exeContext.contextValue; // Call the `subscribe()` resolver or the default resolver to produce an\n    // AsyncIterable yielding raw payloads.\n\n    const resolveFn =\n      (_fieldDef$subscribe = fieldDef.subscribe) !== null &&\n      _fieldDef$subscribe !== void 0\n        ? _fieldDef$subscribe\n        : exeContext.subscribeFieldResolver;\n    const eventStream = await resolveFn(rootValue, args, contextValue, info);\n\n    if (eventStream instanceof Error) {\n      throw eventStream;\n    }\n\n    return eventStream;\n  } catch (error) {\n    throw (0, _locatedError.locatedError)(\n      error,\n      fieldNodes,\n      (0, _Path.pathToArray)(path),\n    );\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nObject.defineProperty(exports, 'createSourceEventStream', {\n  enumerable: true,\n  get: function () {\n    return _subscribe.createSourceEventStream;\n  },\n});\nObject.defineProperty(exports, 'defaultFieldResolver', {\n  enumerable: true,\n  get: function () {\n    return _execute.defaultFieldResolver;\n  },\n});\nObject.defineProperty(exports, 'defaultTypeResolver', {\n  enumerable: true,\n  get: function () {\n    return _execute.defaultTypeResolver;\n  },\n});\nObject.defineProperty(exports, 'execute', {\n  enumerable: true,\n  get: function () {\n    return _execute.execute;\n  },\n});\nObject.defineProperty(exports, 'executeSync', {\n  enumerable: true,\n  get: function () {\n    return _execute.executeSync;\n  },\n});\nObject.defineProperty(exports, 'getArgumentValues', {\n  enumerable: true,\n  get: function () {\n    return _values.getArgumentValues;\n  },\n});\nObject.defineProperty(exports, 'getDirectiveValues', {\n  enumerable: true,\n  get: function () {\n    return _values.getDirectiveValues;\n  },\n});\nObject.defineProperty(exports, 'getVariableValues', {\n  enumerable: true,\n  get: function () {\n    return _values.getVariableValues;\n  },\n});\nObject.defineProperty(exports, 'responsePathAsArray', {\n  enumerable: true,\n  get: function () {\n    return _Path.pathToArray;\n  },\n});\nObject.defineProperty(exports, 'subscribe', {\n  enumerable: true,\n  get: function () {\n    return _subscribe.subscribe;\n  },\n});\n\nvar _Path = require('../jsutils/Path.js');\n\nvar _execute = require('./execute.js');\n\nvar _subscribe = require('./subscribe.js');\n\nvar _values = require('./values.js');\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.NoDeprecatedCustomRule = NoDeprecatedCustomRule;\n\nvar _invariant = require('../../../jsutils/invariant.js');\n\nvar _GraphQLError = require('../../../error/GraphQLError.js');\n\nvar _definition = require('../../../type/definition.js');\n\n/**\n * No deprecated\n *\n * A GraphQL document is only valid if all selected fields and all used enum values have not been\n * deprecated.\n *\n * Note: This rule is optional and is not part of the Validation section of the GraphQL\n * Specification. The main purpose of this rule is detection of deprecated usages and not\n * necessarily to forbid their use when querying a service.\n */\nfunction NoDeprecatedCustomRule(context) {\n  return {\n    Field(node) {\n      const fieldDef = context.getFieldDef();\n      const deprecationReason =\n        fieldDef === null || fieldDef === void 0\n          ? void 0\n          : fieldDef.deprecationReason;\n\n      if (fieldDef && deprecationReason != null) {\n        const parentType = context.getParentType();\n        parentType != null || (0, _invariant.invariant)(false);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `The field ${parentType.name}.${fieldDef.name} is deprecated. ${deprecationReason}`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    Argument(node) {\n      const argDef = context.getArgument();\n      const deprecationReason =\n        argDef === null || argDef === void 0\n          ? void 0\n          : argDef.deprecationReason;\n\n      if (argDef && deprecationReason != null) {\n        const directiveDef = context.getDirective();\n\n        if (directiveDef != null) {\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `Directive \"@${directiveDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        } else {\n          const parentType = context.getParentType();\n          const fieldDef = context.getFieldDef();\n          (parentType != null && fieldDef != null) ||\n            (0, _invariant.invariant)(false);\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `Field \"${parentType.name}.${fieldDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    ObjectField(node) {\n      const inputObjectDef = (0, _definition.getNamedType)(\n        context.getParentInputType(),\n      );\n\n      if ((0, _definition.isInputObjectType)(inputObjectDef)) {\n        const inputFieldDef = inputObjectDef.getFields()[node.name.value];\n        const deprecationReason =\n          inputFieldDef === null || inputFieldDef === void 0\n            ? void 0\n            : inputFieldDef.deprecationReason;\n\n        if (deprecationReason != null) {\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `The input field ${inputObjectDef.name}.${inputFieldDef.name} is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    EnumValue(node) {\n      const enumValueDef = context.getEnumValue();\n      const deprecationReason =\n        enumValueDef === null || enumValueDef === void 0\n          ? void 0\n          : enumValueDef.deprecationReason;\n\n      if (enumValueDef && deprecationReason != null) {\n        const enumTypeDef = (0, _definition.getNamedType)(\n          context.getInputType(),\n        );\n        enumTypeDef != null || (0, _invariant.invariant)(false);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `The enum value \"${enumTypeDef.name}.${enumValueDef.name}\" is deprecated. ${deprecationReason}`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.NoSchemaIntrospectionCustomRule = NoSchemaIntrospectionCustomRule;\n\nvar _GraphQLError = require('../../../error/GraphQLError.js');\n\nvar _definition = require('../../../type/definition.js');\n\nvar _introspection = require('../../../type/introspection.js');\n\n/**\n * Prohibit introspection queries\n *\n * A GraphQL document is only valid if all fields selected are not fields that\n * return an introspection type.\n *\n * Note: This rule is optional and is not part of the Validation section of the\n * GraphQL Specification. This rule effectively disables introspection, which\n * does not reflect best practices and should only be done if absolutely necessary.\n */\nfunction NoSchemaIntrospectionCustomRule(context) {\n  return {\n    Field(node) {\n      const type = (0, _definition.getNamedType)(context.getType());\n\n      if (type && (0, _introspection.isIntrospectionType)(type)) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `GraphQL introspection has been disabled, but the requested query contained the field \"${node.name.value}\".`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nObject.defineProperty(exports, 'ExecutableDefinitionsRule', {\n  enumerable: true,\n  get: function () {\n    return _ExecutableDefinitionsRule.ExecutableDefinitionsRule;\n  },\n});\nObject.defineProperty(exports, 'FieldsOnCorrectTypeRule', {\n  enumerable: true,\n  get: function () {\n    return _FieldsOnCorrectTypeRule.FieldsOnCorrectTypeRule;\n  },\n});\nObject.defineProperty(exports, 'FragmentsOnCompositeTypesRule', {\n  enumerable: true,\n  get: function () {\n    return _FragmentsOnCompositeTypesRule.FragmentsOnCompositeTypesRule;\n  },\n});\nObject.defineProperty(exports, 'KnownArgumentNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _KnownArgumentNamesRule.KnownArgumentNamesRule;\n  },\n});\nObject.defineProperty(exports, 'KnownDirectivesRule', {\n  enumerable: true,\n  get: function () {\n    return _KnownDirectivesRule.KnownDirectivesRule;\n  },\n});\nObject.defineProperty(exports, 'KnownFragmentNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _KnownFragmentNamesRule.KnownFragmentNamesRule;\n  },\n});\nObject.defineProperty(exports, 'KnownTypeNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _KnownTypeNamesRule.KnownTypeNamesRule;\n  },\n});\nObject.defineProperty(exports, 'LoneAnonymousOperationRule', {\n  enumerable: true,\n  get: function () {\n    return _LoneAnonymousOperationRule.LoneAnonymousOperationRule;\n  },\n});\nObject.defineProperty(exports, 'LoneSchemaDefinitionRule', {\n  enumerable: true,\n  get: function () {\n    return _LoneSchemaDefinitionRule.LoneSchemaDefinitionRule;\n  },\n});\nObject.defineProperty(exports, 'NoDeprecatedCustomRule', {\n  enumerable: true,\n  get: function () {\n    return _NoDeprecatedCustomRule.NoDeprecatedCustomRule;\n  },\n});\nObject.defineProperty(exports, 'NoFragmentCyclesRule', {\n  enumerable: true,\n  get: function () {\n    return _NoFragmentCyclesRule.NoFragmentCyclesRule;\n  },\n});\nObject.defineProperty(exports, 'NoSchemaIntrospectionCustomRule', {\n  enumerable: true,\n  get: function () {\n    return _NoSchemaIntrospectionCustomRule.NoSchemaIntrospectionCustomRule;\n  },\n});\nObject.defineProperty(exports, 'NoUndefinedVariablesRule', {\n  enumerable: true,\n  get: function () {\n    return _NoUndefinedVariablesRule.NoUndefinedVariablesRule;\n  },\n});\nObject.defineProperty(exports, 'NoUnusedFragmentsRule', {\n  enumerable: true,\n  get: function () {\n    return _NoUnusedFragmentsRule.NoUnusedFragmentsRule;\n  },\n});\nObject.defineProperty(exports, 'NoUnusedVariablesRule', {\n  enumerable: true,\n  get: function () {\n    return _NoUnusedVariablesRule.NoUnusedVariablesRule;\n  },\n});\nObject.defineProperty(exports, 'OverlappingFieldsCanBeMergedRule', {\n  enumerable: true,\n  get: function () {\n    return _OverlappingFieldsCanBeMergedRule.OverlappingFieldsCanBeMergedRule;\n  },\n});\nObject.defineProperty(exports, 'PossibleFragmentSpreadsRule', {\n  enumerable: true,\n  get: function () {\n    return _PossibleFragmentSpreadsRule.PossibleFragmentSpreadsRule;\n  },\n});\nObject.defineProperty(exports, 'PossibleTypeExtensionsRule', {\n  enumerable: true,\n  get: function () {\n    return _PossibleTypeExtensionsRule.PossibleTypeExtensionsRule;\n  },\n});\nObject.defineProperty(exports, 'ProvidedRequiredArgumentsRule', {\n  enumerable: true,\n  get: function () {\n    return _ProvidedRequiredArgumentsRule.ProvidedRequiredArgumentsRule;\n  },\n});\nObject.defineProperty(exports, 'ScalarLeafsRule', {\n  enumerable: true,\n  get: function () {\n    return _ScalarLeafsRule.ScalarLeafsRule;\n  },\n});\nObject.defineProperty(exports, 'SingleFieldSubscriptionsRule', {\n  enumerable: true,\n  get: function () {\n    return _SingleFieldSubscriptionsRule.SingleFieldSubscriptionsRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueArgumentDefinitionNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _UniqueArgumentDefinitionNamesRule.UniqueArgumentDefinitionNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueArgumentNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _UniqueArgumentNamesRule.UniqueArgumentNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueDirectiveNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _UniqueDirectiveNamesRule.UniqueDirectiveNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueDirectivesPerLocationRule', {\n  enumerable: true,\n  get: function () {\n    return _UniqueDirectivesPerLocationRule.UniqueDirectivesPerLocationRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueEnumValueNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _UniqueEnumValueNamesRule.UniqueEnumValueNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueFieldDefinitionNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _UniqueFieldDefinitionNamesRule.UniqueFieldDefinitionNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueFragmentNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _UniqueFragmentNamesRule.UniqueFragmentNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueInputFieldNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _UniqueInputFieldNamesRule.UniqueInputFieldNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueOperationNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _UniqueOperationNamesRule.UniqueOperationNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueOperationTypesRule', {\n  enumerable: true,\n  get: function () {\n    return _UniqueOperationTypesRule.UniqueOperationTypesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueTypeNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _UniqueTypeNamesRule.UniqueTypeNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueVariableNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _UniqueVariableNamesRule.UniqueVariableNamesRule;\n  },\n});\nObject.defineProperty(exports, 'ValidationContext', {\n  enumerable: true,\n  get: function () {\n    return _ValidationContext.ValidationContext;\n  },\n});\nObject.defineProperty(exports, 'ValuesOfCorrectTypeRule', {\n  enumerable: true,\n  get: function () {\n    return _ValuesOfCorrectTypeRule.ValuesOfCorrectTypeRule;\n  },\n});\nObject.defineProperty(exports, 'VariablesAreInputTypesRule', {\n  enumerable: true,\n  get: function () {\n    return _VariablesAreInputTypesRule.VariablesAreInputTypesRule;\n  },\n});\nObject.defineProperty(exports, 'VariablesInAllowedPositionRule', {\n  enumerable: true,\n  get: function () {\n    return _VariablesInAllowedPositionRule.VariablesInAllowedPositionRule;\n  },\n});\nObject.defineProperty(exports, 'specifiedRules', {\n  enumerable: true,\n  get: function () {\n    return _specifiedRules.specifiedRules;\n  },\n});\nObject.defineProperty(exports, 'validate', {\n  enumerable: true,\n  get: function () {\n    return _validate.validate;\n  },\n});\n\nvar _validate = require('./validate.js');\n\nvar _ValidationContext = require('./ValidationContext.js');\n\nvar _specifiedRules = require('./specifiedRules.js');\n\nvar _ExecutableDefinitionsRule = require('./rules/ExecutableDefinitionsRule.js');\n\nvar _FieldsOnCorrectTypeRule = require('./rules/FieldsOnCorrectTypeRule.js');\n\nvar _FragmentsOnCompositeTypesRule = require('./rules/FragmentsOnCompositeTypesRule.js');\n\nvar _KnownArgumentNamesRule = require('./rules/KnownArgumentNamesRule.js');\n\nvar _KnownDirectivesRule = require('./rules/KnownDirectivesRule.js');\n\nvar _KnownFragmentNamesRule = require('./rules/KnownFragmentNamesRule.js');\n\nvar _KnownTypeNamesRule = require('./rules/KnownTypeNamesRule.js');\n\nvar _LoneAnonymousOperationRule = require('./rules/LoneAnonymousOperationRule.js');\n\nvar _NoFragmentCyclesRule = require('./rules/NoFragmentCyclesRule.js');\n\nvar _NoUndefinedVariablesRule = require('./rules/NoUndefinedVariablesRule.js');\n\nvar _NoUnusedFragmentsRule = require('./rules/NoUnusedFragmentsRule.js');\n\nvar _NoUnusedVariablesRule = require('./rules/NoUnusedVariablesRule.js');\n\nvar _OverlappingFieldsCanBeMergedRule = require('./rules/OverlappingFieldsCanBeMergedRule.js');\n\nvar _PossibleFragmentSpreadsRule = require('./rules/PossibleFragmentSpreadsRule.js');\n\nvar _ProvidedRequiredArgumentsRule = require('./rules/ProvidedRequiredArgumentsRule.js');\n\nvar _ScalarLeafsRule = require('./rules/ScalarLeafsRule.js');\n\nvar _SingleFieldSubscriptionsRule = require('./rules/SingleFieldSubscriptionsRule.js');\n\nvar _UniqueArgumentNamesRule = require('./rules/UniqueArgumentNamesRule.js');\n\nvar _UniqueDirectivesPerLocationRule = require('./rules/UniqueDirectivesPerLocationRule.js');\n\nvar _UniqueFragmentNamesRule = require('./rules/UniqueFragmentNamesRule.js');\n\nvar _UniqueInputFieldNamesRule = require('./rules/UniqueInputFieldNamesRule.js');\n\nvar _UniqueOperationNamesRule = require('./rules/UniqueOperationNamesRule.js');\n\nvar _UniqueVariableNamesRule = require('./rules/UniqueVariableNamesRule.js');\n\nvar _ValuesOfCorrectTypeRule = require('./rules/ValuesOfCorrectTypeRule.js');\n\nvar _VariablesAreInputTypesRule = require('./rules/VariablesAreInputTypesRule.js');\n\nvar _VariablesInAllowedPositionRule = require('./rules/VariablesInAllowedPositionRule.js');\n\nvar _LoneSchemaDefinitionRule = require('./rules/LoneSchemaDefinitionRule.js');\n\nvar _UniqueOperationTypesRule = require('./rules/UniqueOperationTypesRule.js');\n\nvar _UniqueTypeNamesRule = require('./rules/UniqueTypeNamesRule.js');\n\nvar _UniqueEnumValueNamesRule = require('./rules/UniqueEnumValueNamesRule.js');\n\nvar _UniqueFieldDefinitionNamesRule = require('./rules/UniqueFieldDefinitionNamesRule.js');\n\nvar _UniqueArgumentDefinitionNamesRule = require('./rules/UniqueArgumentDefinitionNamesRule.js');\n\nvar _UniqueDirectiveNamesRule = require('./rules/UniqueDirectiveNamesRule.js');\n\nvar _PossibleTypeExtensionsRule = require('./rules/PossibleTypeExtensionsRule.js');\n\nvar _NoDeprecatedCustomRule = require('./rules/custom/NoDeprecatedCustomRule.js');\n\nvar _NoSchemaIntrospectionCustomRule = require('./rules/custom/NoSchemaIntrospectionCustomRule.js');\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nObject.defineProperty(exports, 'GraphQLError', {\n  enumerable: true,\n  get: function () {\n    return _GraphQLError.GraphQLError;\n  },\n});\nObject.defineProperty(exports, 'formatError', {\n  enumerable: true,\n  get: function () {\n    return _GraphQLError.formatError;\n  },\n});\nObject.defineProperty(exports, 'locatedError', {\n  enumerable: true,\n  get: function () {\n    return _locatedError.locatedError;\n  },\n});\nObject.defineProperty(exports, 'printError', {\n  enumerable: true,\n  get: function () {\n    return _GraphQLError.printError;\n  },\n});\nObject.defineProperty(exports, 'syntaxError', {\n  enumerable: true,\n  get: function () {\n    return _syntaxError.syntaxError;\n  },\n});\n\nvar _GraphQLError = require('./GraphQLError.js');\n\nvar _syntaxError = require('./syntaxError.js');\n\nvar _locatedError = require('./locatedError.js');\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.getIntrospectionQuery = getIntrospectionQuery;\n\n/**\n * Produce the GraphQL query recommended for a full schema introspection.\n * Accepts optional IntrospectionOptions.\n */\nfunction getIntrospectionQuery(options) {\n  const optionsWithDefault = {\n    descriptions: true,\n    specifiedByUrl: false,\n    directiveIsRepeatable: false,\n    schemaDescription: false,\n    inputValueDeprecation: false,\n    ...options,\n  };\n  const descriptions = optionsWithDefault.descriptions ? 'description' : '';\n  const specifiedByUrl = optionsWithDefault.specifiedByUrl\n    ? 'specifiedByURL'\n    : '';\n  const directiveIsRepeatable = optionsWithDefault.directiveIsRepeatable\n    ? 'isRepeatable'\n    : '';\n  const schemaDescription = optionsWithDefault.schemaDescription\n    ? descriptions\n    : '';\n\n  function inputDeprecation(str) {\n    return optionsWithDefault.inputValueDeprecation ? str : '';\n  }\n\n  return `\n    query IntrospectionQuery {\n      __schema {\n        ${schemaDescription}\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          ${descriptions}\n          ${directiveIsRepeatable}\n          locations\n          args${inputDeprecation('(includeDeprecated: true)')} {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      ${descriptions}\n      ${specifiedByUrl}\n      fields(includeDeprecated: true) {\n        name\n        ${descriptions}\n        args${inputDeprecation('(includeDeprecated: true)')} {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields${inputDeprecation('(includeDeprecated: true)')} {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        ${descriptions}\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      ${descriptions}\n      type { ...TypeRef }\n      defaultValue\n      ${inputDeprecation('isDeprecated')}\n      ${inputDeprecation('deprecationReason')}\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                    ofType {\n                      kind\n                      name\n                      ofType {\n                        kind\n                        name\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.getOperationAST = getOperationAST;\n\nvar _kinds = require('../language/kinds.js');\n\n/**\n * Returns an operation AST given a document AST and optionally an operation\n * name. If a name is not provided, an operation is only returned if only one is\n * provided in the document.\n */\nfunction getOperationAST(documentAST, operationName) {\n  let operation = null;\n\n  for (const definition of documentAST.definitions) {\n    if (definition.kind === _kinds.Kind.OPERATION_DEFINITION) {\n      var _definition$name;\n\n      if (operationName == null) {\n        // If no operation name was provided, only return an Operation if there\n        // is one defined in the document. Upon encountering the second, return\n        // null.\n        if (operation) {\n          return null;\n        }\n\n        operation = definition;\n      } else if (\n        ((_definition$name = definition.name) === null ||\n        _definition$name === void 0\n          ? void 0\n          : _definition$name.value) === operationName\n      ) {\n        return definition;\n      }\n    }\n  }\n\n  return operation;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.getOperationRootType = getOperationRootType;\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\n/**\n * Extracts the root type of the operation from the schema.\n *\n * @deprecated Please use `GraphQLSchema.getRootType` instead. Will be removed in v17\n */\nfunction getOperationRootType(schema, operation) {\n  if (operation.operation === 'query') {\n    const queryType = schema.getQueryType();\n\n    if (!queryType) {\n      throw new _GraphQLError.GraphQLError(\n        'Schema does not define the required query root type.',\n        {\n          nodes: operation,\n        },\n      );\n    }\n\n    return queryType;\n  }\n\n  if (operation.operation === 'mutation') {\n    const mutationType = schema.getMutationType();\n\n    if (!mutationType) {\n      throw new _GraphQLError.GraphQLError(\n        'Schema is not configured for mutations.',\n        {\n          nodes: operation,\n        },\n      );\n    }\n\n    return mutationType;\n  }\n\n  if (operation.operation === 'subscription') {\n    const subscriptionType = schema.getSubscriptionType();\n\n    if (!subscriptionType) {\n      throw new _GraphQLError.GraphQLError(\n        'Schema is not configured for subscriptions.',\n        {\n          nodes: operation,\n        },\n      );\n    }\n\n    return subscriptionType;\n  }\n\n  throw new _GraphQLError.GraphQLError(\n    'Can only have query, mutation and subscription operations.',\n    {\n      nodes: operation,\n    },\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.introspectionFromSchema = introspectionFromSchema;\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _parser = require('../language/parser.js');\n\nvar _execute = require('../execution/execute.js');\n\nvar _getIntrospectionQuery = require('./getIntrospectionQuery.js');\n\n/**\n * Build an IntrospectionQuery from a GraphQLSchema\n *\n * IntrospectionQuery is useful for utilities that care about type and field\n * relationships, but do not need to traverse through those relationships.\n *\n * This is the inverse of buildClientSchema. The primary use case is outside\n * of the server context, for instance when doing schema comparisons.\n */\nfunction introspectionFromSchema(schema, options) {\n  const optionsWithDefaults = {\n    specifiedByUrl: true,\n    directiveIsRepeatable: true,\n    schemaDescription: true,\n    inputValueDeprecation: true,\n    ...options,\n  };\n  const document = (0, _parser.parse)(\n    (0, _getIntrospectionQuery.getIntrospectionQuery)(optionsWithDefaults),\n  );\n  const result = (0, _execute.executeSync)({\n    schema,\n    document,\n  });\n  (!result.errors && result.data) || (0, _invariant.invariant)(false);\n  return result.data;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.buildClientSchema = buildClientSchema;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _keyValMap = require('../jsutils/keyValMap.js');\n\nvar _parser = require('../language/parser.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _directives = require('../type/directives.js');\n\nvar _introspection = require('../type/introspection.js');\n\nvar _scalars = require('../type/scalars.js');\n\nvar _schema = require('../type/schema.js');\n\nvar _valueFromAST = require('./valueFromAST.js');\n\n/**\n * Build a GraphQLSchema for use by client tools.\n *\n * Given the result of a client running the introspection query, creates and\n * returns a GraphQLSchema instance which can be then used with all graphql-js\n * tools, but cannot be used to execute a query, as introspection does not\n * represent the \"resolver\", \"parse\" or \"serialize\" functions or any other\n * server-internal mechanisms.\n *\n * This function expects a complete introspection result. Don't forget to check\n * the \"errors\" field of a server response before calling this function.\n */\nfunction buildClientSchema(introspection, options) {\n  ((0, _isObjectLike.isObjectLike)(introspection) &&\n    (0, _isObjectLike.isObjectLike)(introspection.__schema)) ||\n    (0, _devAssert.devAssert)(\n      false,\n      `Invalid or incomplete introspection result. Ensure that you are passing \"data\" property of introspection response and no \"errors\" was returned alongside: ${(0,\n      _inspect.inspect)(introspection)}.`,\n    ); // Get the schema from the introspection result.\n\n  const schemaIntrospection = introspection.__schema; // Iterate through all types, getting the type definition for each.\n\n  const typeMap = (0, _keyValMap.keyValMap)(\n    schemaIntrospection.types,\n    (typeIntrospection) => typeIntrospection.name,\n    (typeIntrospection) => buildType(typeIntrospection),\n  ); // Include standard types only if they are used.\n\n  for (const stdType of [\n    ..._scalars.specifiedScalarTypes,\n    ..._introspection.introspectionTypes,\n  ]) {\n    if (typeMap[stdType.name]) {\n      typeMap[stdType.name] = stdType;\n    }\n  } // Get the root Query, Mutation, and Subscription types.\n\n  const queryType = schemaIntrospection.queryType\n    ? getObjectType(schemaIntrospection.queryType)\n    : null;\n  const mutationType = schemaIntrospection.mutationType\n    ? getObjectType(schemaIntrospection.mutationType)\n    : null;\n  const subscriptionType = schemaIntrospection.subscriptionType\n    ? getObjectType(schemaIntrospection.subscriptionType)\n    : null; // Get the directives supported by Introspection, assuming empty-set if\n  // directives were not queried for.\n\n  const directives = schemaIntrospection.directives\n    ? schemaIntrospection.directives.map(buildDirective)\n    : []; // Then produce and return a Schema with these types.\n\n  return new _schema.GraphQLSchema({\n    description: schemaIntrospection.description,\n    query: queryType,\n    mutation: mutationType,\n    subscription: subscriptionType,\n    types: Object.values(typeMap),\n    directives,\n    assumeValid:\n      options === null || options === void 0 ? void 0 : options.assumeValid,\n  }); // Given a type reference in introspection, return the GraphQLType instance.\n  // preferring cached instances before building new instances.\n\n  function getType(typeRef) {\n    if (typeRef.kind === _introspection.TypeKind.LIST) {\n      const itemRef = typeRef.ofType;\n\n      if (!itemRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n\n      return new _definition.GraphQLList(getType(itemRef));\n    }\n\n    if (typeRef.kind === _introspection.TypeKind.NON_NULL) {\n      const nullableRef = typeRef.ofType;\n\n      if (!nullableRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n\n      const nullableType = getType(nullableRef);\n      return new _definition.GraphQLNonNull(\n        (0, _definition.assertNullableType)(nullableType),\n      );\n    }\n\n    return getNamedType(typeRef);\n  }\n\n  function getNamedType(typeRef) {\n    const typeName = typeRef.name;\n\n    if (!typeName) {\n      throw new Error(\n        `Unknown type reference: ${(0, _inspect.inspect)(typeRef)}.`,\n      );\n    }\n\n    const type = typeMap[typeName];\n\n    if (!type) {\n      throw new Error(\n        `Invalid or incomplete schema, unknown type: ${typeName}. Ensure that a full introspection query is used in order to build a client schema.`,\n      );\n    }\n\n    return type;\n  }\n\n  function getObjectType(typeRef) {\n    return (0, _definition.assertObjectType)(getNamedType(typeRef));\n  }\n\n  function getInterfaceType(typeRef) {\n    return (0, _definition.assertInterfaceType)(getNamedType(typeRef));\n  } // Given a type's introspection result, construct the correct\n  // GraphQLType instance.\n\n  function buildType(type) {\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    if (type != null && type.name != null && type.kind != null) {\n      // FIXME: Properly type IntrospectionType, it's a breaking change so fix in v17\n      // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n      switch (type.kind) {\n        case _introspection.TypeKind.SCALAR:\n          return buildScalarDef(type);\n\n        case _introspection.TypeKind.OBJECT:\n          return buildObjectDef(type);\n\n        case _introspection.TypeKind.INTERFACE:\n          return buildInterfaceDef(type);\n\n        case _introspection.TypeKind.UNION:\n          return buildUnionDef(type);\n\n        case _introspection.TypeKind.ENUM:\n          return buildEnumDef(type);\n\n        case _introspection.TypeKind.INPUT_OBJECT:\n          return buildInputObjectDef(type);\n      }\n    }\n\n    const typeStr = (0, _inspect.inspect)(type);\n    throw new Error(\n      `Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ${typeStr}.`,\n    );\n  }\n\n  function buildScalarDef(scalarIntrospection) {\n    return new _definition.GraphQLScalarType({\n      name: scalarIntrospection.name,\n      description: scalarIntrospection.description,\n      specifiedByURL: scalarIntrospection.specifiedByURL,\n    });\n  }\n\n  function buildImplementationsList(implementingIntrospection) {\n    // TODO: Temporary workaround until GraphQL ecosystem will fully support\n    // 'interfaces' on interface types.\n    if (\n      implementingIntrospection.interfaces === null &&\n      implementingIntrospection.kind === _introspection.TypeKind.INTERFACE\n    ) {\n      return [];\n    }\n\n    if (!implementingIntrospection.interfaces) {\n      const implementingIntrospectionStr = (0, _inspect.inspect)(\n        implementingIntrospection,\n      );\n      throw new Error(\n        `Introspection result missing interfaces: ${implementingIntrospectionStr}.`,\n      );\n    }\n\n    return implementingIntrospection.interfaces.map(getInterfaceType);\n  }\n\n  function buildObjectDef(objectIntrospection) {\n    return new _definition.GraphQLObjectType({\n      name: objectIntrospection.name,\n      description: objectIntrospection.description,\n      interfaces: () => buildImplementationsList(objectIntrospection),\n      fields: () => buildFieldDefMap(objectIntrospection),\n    });\n  }\n\n  function buildInterfaceDef(interfaceIntrospection) {\n    return new _definition.GraphQLInterfaceType({\n      name: interfaceIntrospection.name,\n      description: interfaceIntrospection.description,\n      interfaces: () => buildImplementationsList(interfaceIntrospection),\n      fields: () => buildFieldDefMap(interfaceIntrospection),\n    });\n  }\n\n  function buildUnionDef(unionIntrospection) {\n    if (!unionIntrospection.possibleTypes) {\n      const unionIntrospectionStr = (0, _inspect.inspect)(unionIntrospection);\n      throw new Error(\n        `Introspection result missing possibleTypes: ${unionIntrospectionStr}.`,\n      );\n    }\n\n    return new _definition.GraphQLUnionType({\n      name: unionIntrospection.name,\n      description: unionIntrospection.description,\n      types: () => unionIntrospection.possibleTypes.map(getObjectType),\n    });\n  }\n\n  function buildEnumDef(enumIntrospection) {\n    if (!enumIntrospection.enumValues) {\n      const enumIntrospectionStr = (0, _inspect.inspect)(enumIntrospection);\n      throw new Error(\n        `Introspection result missing enumValues: ${enumIntrospectionStr}.`,\n      );\n    }\n\n    return new _definition.GraphQLEnumType({\n      name: enumIntrospection.name,\n      description: enumIntrospection.description,\n      values: (0, _keyValMap.keyValMap)(\n        enumIntrospection.enumValues,\n        (valueIntrospection) => valueIntrospection.name,\n        (valueIntrospection) => ({\n          description: valueIntrospection.description,\n          deprecationReason: valueIntrospection.deprecationReason,\n        }),\n      ),\n    });\n  }\n\n  function buildInputObjectDef(inputObjectIntrospection) {\n    if (!inputObjectIntrospection.inputFields) {\n      const inputObjectIntrospectionStr = (0, _inspect.inspect)(\n        inputObjectIntrospection,\n      );\n      throw new Error(\n        `Introspection result missing inputFields: ${inputObjectIntrospectionStr}.`,\n      );\n    }\n\n    return new _definition.GraphQLInputObjectType({\n      name: inputObjectIntrospection.name,\n      description: inputObjectIntrospection.description,\n      fields: () => buildInputValueDefMap(inputObjectIntrospection.inputFields),\n    });\n  }\n\n  function buildFieldDefMap(typeIntrospection) {\n    if (!typeIntrospection.fields) {\n      throw new Error(\n        `Introspection result missing fields: ${(0, _inspect.inspect)(\n          typeIntrospection,\n        )}.`,\n      );\n    }\n\n    return (0, _keyValMap.keyValMap)(\n      typeIntrospection.fields,\n      (fieldIntrospection) => fieldIntrospection.name,\n      buildField,\n    );\n  }\n\n  function buildField(fieldIntrospection) {\n    const type = getType(fieldIntrospection.type);\n\n    if (!(0, _definition.isOutputType)(type)) {\n      const typeStr = (0, _inspect.inspect)(type);\n      throw new Error(\n        `Introspection must provide output type for fields, but received: ${typeStr}.`,\n      );\n    }\n\n    if (!fieldIntrospection.args) {\n      const fieldIntrospectionStr = (0, _inspect.inspect)(fieldIntrospection);\n      throw new Error(\n        `Introspection result missing field args: ${fieldIntrospectionStr}.`,\n      );\n    }\n\n    return {\n      description: fieldIntrospection.description,\n      deprecationReason: fieldIntrospection.deprecationReason,\n      type,\n      args: buildInputValueDefMap(fieldIntrospection.args),\n    };\n  }\n\n  function buildInputValueDefMap(inputValueIntrospections) {\n    return (0, _keyValMap.keyValMap)(\n      inputValueIntrospections,\n      (inputValue) => inputValue.name,\n      buildInputValue,\n    );\n  }\n\n  function buildInputValue(inputValueIntrospection) {\n    const type = getType(inputValueIntrospection.type);\n\n    if (!(0, _definition.isInputType)(type)) {\n      const typeStr = (0, _inspect.inspect)(type);\n      throw new Error(\n        `Introspection must provide input type for arguments, but received: ${typeStr}.`,\n      );\n    }\n\n    const defaultValue =\n      inputValueIntrospection.defaultValue != null\n        ? (0, _valueFromAST.valueFromAST)(\n            (0, _parser.parseValue)(inputValueIntrospection.defaultValue),\n            type,\n          )\n        : undefined;\n    return {\n      description: inputValueIntrospection.description,\n      type,\n      defaultValue,\n      deprecationReason: inputValueIntrospection.deprecationReason,\n    };\n  }\n\n  function buildDirective(directiveIntrospection) {\n    if (!directiveIntrospection.args) {\n      const directiveIntrospectionStr = (0, _inspect.inspect)(\n        directiveIntrospection,\n      );\n      throw new Error(\n        `Introspection result missing directive args: ${directiveIntrospectionStr}.`,\n      );\n    }\n\n    if (!directiveIntrospection.locations) {\n      const directiveIntrospectionStr = (0, _inspect.inspect)(\n        directiveIntrospection,\n      );\n      throw new Error(\n        `Introspection result missing directive locations: ${directiveIntrospectionStr}.`,\n      );\n    }\n\n    return new _directives.GraphQLDirective({\n      name: directiveIntrospection.name,\n      description: directiveIntrospection.description,\n      isRepeatable: directiveIntrospection.isRepeatable,\n      locations: directiveIntrospection.locations.slice(),\n      args: buildInputValueDefMap(directiveIntrospection.args),\n    });\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.extendSchema = extendSchema;\nexports.extendSchemaImpl = extendSchemaImpl;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _keyMap = require('../jsutils/keyMap.js');\n\nvar _mapValue = require('../jsutils/mapValue.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _predicates = require('../language/predicates.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _directives = require('../type/directives.js');\n\nvar _introspection = require('../type/introspection.js');\n\nvar _scalars = require('../type/scalars.js');\n\nvar _schema = require('../type/schema.js');\n\nvar _validate = require('../validation/validate.js');\n\nvar _values = require('../execution/values.js');\n\nvar _valueFromAST = require('./valueFromAST.js');\n\n/**\n * Produces a new schema given an existing schema and a document which may\n * contain GraphQL type extensions and definitions. The original schema will\n * remain unaltered.\n *\n * Because a schema represents a graph of references, a schema cannot be\n * extended without effectively making an entire copy. We do not know until it's\n * too late if subgraphs remain unchanged.\n *\n * This algorithm copies the provided schema, applying extensions while\n * producing the copy. The original schema remains unaltered.\n */\nfunction extendSchema(schema, documentAST, options) {\n  (0, _schema.assertSchema)(schema);\n  (documentAST != null && documentAST.kind === _kinds.Kind.DOCUMENT) ||\n    (0, _devAssert.devAssert)(false, 'Must provide valid Document AST.');\n\n  if (\n    (options === null || options === void 0 ? void 0 : options.assumeValid) !==\n      true &&\n    (options === null || options === void 0\n      ? void 0\n      : options.assumeValidSDL) !== true\n  ) {\n    (0, _validate.assertValidSDLExtension)(documentAST, schema);\n  }\n\n  const schemaConfig = schema.toConfig();\n  const extendedConfig = extendSchemaImpl(schemaConfig, documentAST, options);\n  return schemaConfig === extendedConfig\n    ? schema\n    : new _schema.GraphQLSchema(extendedConfig);\n}\n/**\n * @internal\n */\n\nfunction extendSchemaImpl(schemaConfig, documentAST, options) {\n  var _schemaDef, _schemaDef$descriptio, _schemaDef2, _options$assumeValid;\n\n  // Collect the type definitions and extensions found in the document.\n  const typeDefs = [];\n  const typeExtensionsMap = Object.create(null); // New directives and types are separate because a directives and types can\n  // have the same name. For example, a type named \"skip\".\n\n  const directiveDefs = [];\n  let schemaDef; // Schema extensions are collected which may add additional operation types.\n\n  const schemaExtensions = [];\n\n  for (const def of documentAST.definitions) {\n    if (def.kind === _kinds.Kind.SCHEMA_DEFINITION) {\n      schemaDef = def;\n    } else if (def.kind === _kinds.Kind.SCHEMA_EXTENSION) {\n      schemaExtensions.push(def);\n    } else if ((0, _predicates.isTypeDefinitionNode)(def)) {\n      typeDefs.push(def);\n    } else if ((0, _predicates.isTypeExtensionNode)(def)) {\n      const extendedTypeName = def.name.value;\n      const existingTypeExtensions = typeExtensionsMap[extendedTypeName];\n      typeExtensionsMap[extendedTypeName] = existingTypeExtensions\n        ? existingTypeExtensions.concat([def])\n        : [def];\n    } else if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      directiveDefs.push(def);\n    }\n  } // If this document contains no new types, extensions, or directives then\n  // return the same unmodified GraphQLSchema instance.\n\n  if (\n    Object.keys(typeExtensionsMap).length === 0 &&\n    typeDefs.length === 0 &&\n    directiveDefs.length === 0 &&\n    schemaExtensions.length === 0 &&\n    schemaDef == null\n  ) {\n    return schemaConfig;\n  }\n\n  const typeMap = Object.create(null);\n\n  for (const existingType of schemaConfig.types) {\n    typeMap[existingType.name] = extendNamedType(existingType);\n  }\n\n  for (const typeNode of typeDefs) {\n    var _stdTypeMap$name;\n\n    const name = typeNode.name.value;\n    typeMap[name] =\n      (_stdTypeMap$name = stdTypeMap[name]) !== null &&\n      _stdTypeMap$name !== void 0\n        ? _stdTypeMap$name\n        : buildType(typeNode);\n  }\n\n  const operationTypes = {\n    // Get the extended root operation types.\n    query: schemaConfig.query && replaceNamedType(schemaConfig.query),\n    mutation: schemaConfig.mutation && replaceNamedType(schemaConfig.mutation),\n    subscription:\n      schemaConfig.subscription && replaceNamedType(schemaConfig.subscription),\n    // Then, incorporate schema definition and all schema extensions.\n    ...(schemaDef && getOperationTypes([schemaDef])),\n    ...getOperationTypes(schemaExtensions),\n  }; // Then produce and return a Schema config with these types.\n\n  return {\n    description:\n      (_schemaDef = schemaDef) === null || _schemaDef === void 0\n        ? void 0\n        : (_schemaDef$descriptio = _schemaDef.description) === null ||\n          _schemaDef$descriptio === void 0\n        ? void 0\n        : _schemaDef$descriptio.value,\n    ...operationTypes,\n    types: Object.values(typeMap),\n    directives: [\n      ...schemaConfig.directives.map(replaceDirective),\n      ...directiveDefs.map(buildDirective),\n    ],\n    extensions: Object.create(null),\n    astNode:\n      (_schemaDef2 = schemaDef) !== null && _schemaDef2 !== void 0\n        ? _schemaDef2\n        : schemaConfig.astNode,\n    extensionASTNodes: schemaConfig.extensionASTNodes.concat(schemaExtensions),\n    assumeValid:\n      (_options$assumeValid =\n        options === null || options === void 0\n          ? void 0\n          : options.assumeValid) !== null && _options$assumeValid !== void 0\n        ? _options$assumeValid\n        : false,\n  }; // Below are functions used for producing this schema that have closed over\n  // this scope and have access to the schema, cache, and newly defined types.\n\n  function replaceType(type) {\n    if ((0, _definition.isListType)(type)) {\n      // @ts-expect-error\n      return new _definition.GraphQLList(replaceType(type.ofType));\n    }\n\n    if ((0, _definition.isNonNullType)(type)) {\n      // @ts-expect-error\n      return new _definition.GraphQLNonNull(replaceType(type.ofType));\n    } // @ts-expect-error FIXME\n\n    return replaceNamedType(type);\n  }\n\n  function replaceNamedType(type) {\n    // Note: While this could make early assertions to get the correctly\n    // typed values, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    return typeMap[type.name];\n  }\n\n  function replaceDirective(directive) {\n    const config = directive.toConfig();\n    return new _directives.GraphQLDirective({\n      ...config,\n      args: (0, _mapValue.mapValue)(config.args, extendArg),\n    });\n  }\n\n  function extendNamedType(type) {\n    if (\n      (0, _introspection.isIntrospectionType)(type) ||\n      (0, _scalars.isSpecifiedScalarType)(type)\n    ) {\n      // Builtin types are not extended.\n      return type;\n    }\n\n    if ((0, _definition.isScalarType)(type)) {\n      return extendScalarType(type);\n    }\n\n    if ((0, _definition.isObjectType)(type)) {\n      return extendObjectType(type);\n    }\n\n    if ((0, _definition.isInterfaceType)(type)) {\n      return extendInterfaceType(type);\n    }\n\n    if ((0, _definition.isUnionType)(type)) {\n      return extendUnionType(type);\n    }\n\n    if ((0, _definition.isEnumType)(type)) {\n      return extendEnumType(type);\n    }\n\n    if ((0, _definition.isInputObjectType)(type)) {\n      return extendInputObjectType(type);\n    }\n    /* c8 ignore next 3 */\n    // Not reachable, all possible type definition nodes have been considered.\n\n    false ||\n      (0, _invariant.invariant)(\n        false,\n        'Unexpected type: ' + (0, _inspect.inspect)(type),\n      );\n  }\n\n  function extendInputObjectType(type) {\n    var _typeExtensionsMap$co;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co !== void 0\n        ? _typeExtensionsMap$co\n        : [];\n    return new _definition.GraphQLInputObjectType({\n      ...config,\n      fields: () => ({\n        ...(0, _mapValue.mapValue)(config.fields, (field) => ({\n          ...field,\n          type: replaceType(field.type),\n        })),\n        ...buildInputFieldMap(extensions),\n      }),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendEnumType(type) {\n    var _typeExtensionsMap$ty;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$ty = typeExtensionsMap[type.name]) !== null &&\n      _typeExtensionsMap$ty !== void 0\n        ? _typeExtensionsMap$ty\n        : [];\n    return new _definition.GraphQLEnumType({\n      ...config,\n      values: { ...config.values, ...buildEnumValueMap(extensions) },\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendScalarType(type) {\n    var _typeExtensionsMap$co2;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co2 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co2 !== void 0\n        ? _typeExtensionsMap$co2\n        : [];\n    let specifiedByURL = config.specifiedByURL;\n\n    for (const extensionNode of extensions) {\n      var _getSpecifiedByURL;\n\n      specifiedByURL =\n        (_getSpecifiedByURL = getSpecifiedByURL(extensionNode)) !== null &&\n        _getSpecifiedByURL !== void 0\n          ? _getSpecifiedByURL\n          : specifiedByURL;\n    }\n\n    return new _definition.GraphQLScalarType({\n      ...config,\n      specifiedByURL,\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendObjectType(type) {\n    var _typeExtensionsMap$co3;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co3 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co3 !== void 0\n        ? _typeExtensionsMap$co3\n        : [];\n    return new _definition.GraphQLObjectType({\n      ...config,\n      interfaces: () => [\n        ...type.getInterfaces().map(replaceNamedType),\n        ...buildInterfaces(extensions),\n      ],\n      fields: () => ({\n        ...(0, _mapValue.mapValue)(config.fields, extendField),\n        ...buildFieldMap(extensions),\n      }),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendInterfaceType(type) {\n    var _typeExtensionsMap$co4;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co4 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co4 !== void 0\n        ? _typeExtensionsMap$co4\n        : [];\n    return new _definition.GraphQLInterfaceType({\n      ...config,\n      interfaces: () => [\n        ...type.getInterfaces().map(replaceNamedType),\n        ...buildInterfaces(extensions),\n      ],\n      fields: () => ({\n        ...(0, _mapValue.mapValue)(config.fields, extendField),\n        ...buildFieldMap(extensions),\n      }),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendUnionType(type) {\n    var _typeExtensionsMap$co5;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co5 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co5 !== void 0\n        ? _typeExtensionsMap$co5\n        : [];\n    return new _definition.GraphQLUnionType({\n      ...config,\n      types: () => [\n        ...type.getTypes().map(replaceNamedType),\n        ...buildUnionTypes(extensions),\n      ],\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendField(field) {\n    return {\n      ...field,\n      type: replaceType(field.type),\n      args: field.args && (0, _mapValue.mapValue)(field.args, extendArg),\n    };\n  }\n\n  function extendArg(arg) {\n    return { ...arg, type: replaceType(arg.type) };\n  }\n\n  function getOperationTypes(nodes) {\n    const opTypes = {};\n\n    for (const node of nodes) {\n      var _node$operationTypes;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const operationTypesNodes =\n        /* c8 ignore next */\n        (_node$operationTypes = node.operationTypes) !== null &&\n        _node$operationTypes !== void 0\n          ? _node$operationTypes\n          : [];\n\n      for (const operationType of operationTypesNodes) {\n        // Note: While this could make early assertions to get the correctly\n        // typed values below, that would throw immediately while type system\n        // validation with validateSchema() will produce more actionable results.\n        // @ts-expect-error\n        opTypes[operationType.operation] = getNamedType(operationType.type);\n      }\n    }\n\n    return opTypes;\n  }\n\n  function getNamedType(node) {\n    var _stdTypeMap$name2;\n\n    const name = node.name.value;\n    const type =\n      (_stdTypeMap$name2 = stdTypeMap[name]) !== null &&\n      _stdTypeMap$name2 !== void 0\n        ? _stdTypeMap$name2\n        : typeMap[name];\n\n    if (type === undefined) {\n      throw new Error(`Unknown type: \"${name}\".`);\n    }\n\n    return type;\n  }\n\n  function getWrappedType(node) {\n    if (node.kind === _kinds.Kind.LIST_TYPE) {\n      return new _definition.GraphQLList(getWrappedType(node.type));\n    }\n\n    if (node.kind === _kinds.Kind.NON_NULL_TYPE) {\n      return new _definition.GraphQLNonNull(getWrappedType(node.type));\n    }\n\n    return getNamedType(node);\n  }\n\n  function buildDirective(node) {\n    var _node$description;\n\n    return new _directives.GraphQLDirective({\n      name: node.name.value,\n      description:\n        (_node$description = node.description) === null ||\n        _node$description === void 0\n          ? void 0\n          : _node$description.value,\n      // @ts-expect-error\n      locations: node.locations.map(({ value }) => value),\n      isRepeatable: node.repeatable,\n      args: buildArgumentMap(node.arguments),\n      astNode: node,\n    });\n  }\n\n  function buildFieldMap(nodes) {\n    const fieldConfigMap = Object.create(null);\n\n    for (const node of nodes) {\n      var _node$fields;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const nodeFields =\n        /* c8 ignore next */\n        (_node$fields = node.fields) !== null && _node$fields !== void 0\n          ? _node$fields\n          : [];\n\n      for (const field of nodeFields) {\n        var _field$description;\n\n        fieldConfigMap[field.name.value] = {\n          // Note: While this could make assertions to get the correctly typed\n          // value, that would throw immediately while type system validation\n          // with validateSchema() will produce more actionable results.\n          type: getWrappedType(field.type),\n          description:\n            (_field$description = field.description) === null ||\n            _field$description === void 0\n              ? void 0\n              : _field$description.value,\n          args: buildArgumentMap(field.arguments),\n          deprecationReason: getDeprecationReason(field),\n          astNode: field,\n        };\n      }\n    }\n\n    return fieldConfigMap;\n  }\n\n  function buildArgumentMap(args) {\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\n    const argsNodes =\n      /* c8 ignore next */\n      args !== null && args !== void 0 ? args : [];\n    const argConfigMap = Object.create(null);\n\n    for (const arg of argsNodes) {\n      var _arg$description;\n\n      // Note: While this could make assertions to get the correctly typed\n      // value, that would throw immediately while type system validation\n      // with validateSchema() will produce more actionable results.\n      const type = getWrappedType(arg.type);\n      argConfigMap[arg.name.value] = {\n        type,\n        description:\n          (_arg$description = arg.description) === null ||\n          _arg$description === void 0\n            ? void 0\n            : _arg$description.value,\n        defaultValue: (0, _valueFromAST.valueFromAST)(arg.defaultValue, type),\n        deprecationReason: getDeprecationReason(arg),\n        astNode: arg,\n      };\n    }\n\n    return argConfigMap;\n  }\n\n  function buildInputFieldMap(nodes) {\n    const inputFieldMap = Object.create(null);\n\n    for (const node of nodes) {\n      var _node$fields2;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const fieldsNodes =\n        /* c8 ignore next */\n        (_node$fields2 = node.fields) !== null && _node$fields2 !== void 0\n          ? _node$fields2\n          : [];\n\n      for (const field of fieldsNodes) {\n        var _field$description2;\n\n        // Note: While this could make assertions to get the correctly typed\n        // value, that would throw immediately while type system validation\n        // with validateSchema() will produce more actionable results.\n        const type = getWrappedType(field.type);\n        inputFieldMap[field.name.value] = {\n          type,\n          description:\n            (_field$description2 = field.description) === null ||\n            _field$description2 === void 0\n              ? void 0\n              : _field$description2.value,\n          defaultValue: (0, _valueFromAST.valueFromAST)(\n            field.defaultValue,\n            type,\n          ),\n          deprecationReason: getDeprecationReason(field),\n          astNode: field,\n        };\n      }\n    }\n\n    return inputFieldMap;\n  }\n\n  function buildEnumValueMap(nodes) {\n    const enumValueMap = Object.create(null);\n\n    for (const node of nodes) {\n      var _node$values;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const valuesNodes =\n        /* c8 ignore next */\n        (_node$values = node.values) !== null && _node$values !== void 0\n          ? _node$values\n          : [];\n\n      for (const value of valuesNodes) {\n        var _value$description;\n\n        enumValueMap[value.name.value] = {\n          description:\n            (_value$description = value.description) === null ||\n            _value$description === void 0\n              ? void 0\n              : _value$description.value,\n          deprecationReason: getDeprecationReason(value),\n          astNode: value,\n        };\n      }\n    }\n\n    return enumValueMap;\n  }\n\n  function buildInterfaces(nodes) {\n    // Note: While this could make assertions to get the correctly typed\n    // values below, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    // @ts-expect-error\n    return nodes.flatMap(\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      (node) => {\n        var _node$interfaces$map, _node$interfaces;\n\n        return (\n          /* c8 ignore next */\n          (_node$interfaces$map =\n            (_node$interfaces = node.interfaces) === null ||\n            _node$interfaces === void 0\n              ? void 0\n              : _node$interfaces.map(getNamedType)) !== null &&\n            _node$interfaces$map !== void 0\n            ? _node$interfaces$map\n            : []\n        );\n      },\n    );\n  }\n\n  function buildUnionTypes(nodes) {\n    // Note: While this could make assertions to get the correctly typed\n    // values below, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    // @ts-expect-error\n    return nodes.flatMap(\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      (node) => {\n        var _node$types$map, _node$types;\n\n        return (\n          /* c8 ignore next */\n          (_node$types$map =\n            (_node$types = node.types) === null || _node$types === void 0\n              ? void 0\n              : _node$types.map(getNamedType)) !== null &&\n            _node$types$map !== void 0\n            ? _node$types$map\n            : []\n        );\n      },\n    );\n  }\n\n  function buildType(astNode) {\n    var _typeExtensionsMap$na;\n\n    const name = astNode.name.value;\n    const extensionASTNodes =\n      (_typeExtensionsMap$na = typeExtensionsMap[name]) !== null &&\n      _typeExtensionsMap$na !== void 0\n        ? _typeExtensionsMap$na\n        : [];\n\n    switch (astNode.kind) {\n      case _kinds.Kind.OBJECT_TYPE_DEFINITION: {\n        var _astNode$description;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new _definition.GraphQLObjectType({\n          name,\n          description:\n            (_astNode$description = astNode.description) === null ||\n            _astNode$description === void 0\n              ? void 0\n              : _astNode$description.value,\n          interfaces: () => buildInterfaces(allNodes),\n          fields: () => buildFieldMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case _kinds.Kind.INTERFACE_TYPE_DEFINITION: {\n        var _astNode$description2;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new _definition.GraphQLInterfaceType({\n          name,\n          description:\n            (_astNode$description2 = astNode.description) === null ||\n            _astNode$description2 === void 0\n              ? void 0\n              : _astNode$description2.value,\n          interfaces: () => buildInterfaces(allNodes),\n          fields: () => buildFieldMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case _kinds.Kind.ENUM_TYPE_DEFINITION: {\n        var _astNode$description3;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new _definition.GraphQLEnumType({\n          name,\n          description:\n            (_astNode$description3 = astNode.description) === null ||\n            _astNode$description3 === void 0\n              ? void 0\n              : _astNode$description3.value,\n          values: buildEnumValueMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case _kinds.Kind.UNION_TYPE_DEFINITION: {\n        var _astNode$description4;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new _definition.GraphQLUnionType({\n          name,\n          description:\n            (_astNode$description4 = astNode.description) === null ||\n            _astNode$description4 === void 0\n              ? void 0\n              : _astNode$description4.value,\n          types: () => buildUnionTypes(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case _kinds.Kind.SCALAR_TYPE_DEFINITION: {\n        var _astNode$description5;\n\n        return new _definition.GraphQLScalarType({\n          name,\n          description:\n            (_astNode$description5 = astNode.description) === null ||\n            _astNode$description5 === void 0\n              ? void 0\n              : _astNode$description5.value,\n          specifiedByURL: getSpecifiedByURL(astNode),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION: {\n        var _astNode$description6;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new _definition.GraphQLInputObjectType({\n          name,\n          description:\n            (_astNode$description6 = astNode.description) === null ||\n            _astNode$description6 === void 0\n              ? void 0\n              : _astNode$description6.value,\n          fields: () => buildInputFieldMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n    }\n  }\n}\n\nconst stdTypeMap = (0, _keyMap.keyMap)(\n  [..._scalars.specifiedScalarTypes, ..._introspection.introspectionTypes],\n  (type) => type.name,\n);\n/**\n * Given a field or enum value node, returns the string value for the\n * deprecation reason.\n */\n\nfunction getDeprecationReason(node) {\n  const deprecated = (0, _values.getDirectiveValues)(\n    _directives.GraphQLDeprecatedDirective,\n    node,\n  ); // @ts-expect-error validated by `getDirectiveValues`\n\n  return deprecated === null || deprecated === void 0\n    ? void 0\n    : deprecated.reason;\n}\n/**\n * Given a scalar node, returns the string value for the specifiedByURL.\n */\n\nfunction getSpecifiedByURL(node) {\n  const specifiedBy = (0, _values.getDirectiveValues)(\n    _directives.GraphQLSpecifiedByDirective,\n    node,\n  ); // @ts-expect-error validated by `getDirectiveValues`\n\n  return specifiedBy === null || specifiedBy === void 0\n    ? void 0\n    : specifiedBy.url;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.buildASTSchema = buildASTSchema;\nexports.buildSchema = buildSchema;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _parser = require('../language/parser.js');\n\nvar _directives = require('../type/directives.js');\n\nvar _schema = require('../type/schema.js');\n\nvar _validate = require('../validation/validate.js');\n\nvar _extendSchema = require('./extendSchema.js');\n\n/**\n * This takes the ast of a schema document produced by the parse function in\n * src/language/parser.js.\n *\n * If no schema definition is provided, then it will look for types named Query,\n * Mutation and Subscription.\n *\n * Given that AST it constructs a GraphQLSchema. The resulting schema\n * has no resolve methods, so execution will use default resolvers.\n */\nfunction buildASTSchema(documentAST, options) {\n  (documentAST != null && documentAST.kind === _kinds.Kind.DOCUMENT) ||\n    (0, _devAssert.devAssert)(false, 'Must provide valid Document AST.');\n\n  if (\n    (options === null || options === void 0 ? void 0 : options.assumeValid) !==\n      true &&\n    (options === null || options === void 0\n      ? void 0\n      : options.assumeValidSDL) !== true\n  ) {\n    (0, _validate.assertValidSDL)(documentAST);\n  }\n\n  const emptySchemaConfig = {\n    description: undefined,\n    types: [],\n    directives: [],\n    extensions: Object.create(null),\n    extensionASTNodes: [],\n    assumeValid: false,\n  };\n  const config = (0, _extendSchema.extendSchemaImpl)(\n    emptySchemaConfig,\n    documentAST,\n    options,\n  );\n\n  if (config.astNode == null) {\n    for (const type of config.types) {\n      switch (type.name) {\n        // Note: While this could make early assertions to get the correctly\n        // typed values below, that would throw immediately while type system\n        // validation with validateSchema() will produce more actionable results.\n        case 'Query':\n          // @ts-expect-error validated in `validateSchema`\n          config.query = type;\n          break;\n\n        case 'Mutation':\n          // @ts-expect-error validated in `validateSchema`\n          config.mutation = type;\n          break;\n\n        case 'Subscription':\n          // @ts-expect-error validated in `validateSchema`\n          config.subscription = type;\n          break;\n      }\n    }\n  }\n\n  const directives = [\n    ...config.directives, // If specified directives were not explicitly declared, add them.\n    ..._directives.specifiedDirectives.filter((stdDirective) =>\n      config.directives.every(\n        (directive) => directive.name !== stdDirective.name,\n      ),\n    ),\n  ];\n  return new _schema.GraphQLSchema({ ...config, directives });\n}\n/**\n * A helper function to build a GraphQLSchema directly from a source\n * document.\n */\n\nfunction buildSchema(source, options) {\n  const document = (0, _parser.parse)(source, {\n    noLocation:\n      options === null || options === void 0 ? void 0 : options.noLocation,\n    allowLegacyFragmentVariables:\n      options === null || options === void 0\n        ? void 0\n        : options.allowLegacyFragmentVariables,\n  });\n  return buildASTSchema(document, {\n    assumeValidSDL:\n      options === null || options === void 0 ? void 0 : options.assumeValidSDL,\n    assumeValid:\n      options === null || options === void 0 ? void 0 : options.assumeValid,\n  });\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.lexicographicSortSchema = lexicographicSortSchema;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _keyValMap = require('../jsutils/keyValMap.js');\n\nvar _naturalCompare = require('../jsutils/naturalCompare.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _directives = require('../type/directives.js');\n\nvar _introspection = require('../type/introspection.js');\n\nvar _schema = require('../type/schema.js');\n\n/**\n * Sort GraphQLSchema.\n *\n * This function returns a sorted copy of the given GraphQLSchema.\n */\nfunction lexicographicSortSchema(schema) {\n  const schemaConfig = schema.toConfig();\n  const typeMap = (0, _keyValMap.keyValMap)(\n    sortByName(schemaConfig.types),\n    (type) => type.name,\n    sortNamedType,\n  );\n  return new _schema.GraphQLSchema({\n    ...schemaConfig,\n    types: Object.values(typeMap),\n    directives: sortByName(schemaConfig.directives).map(sortDirective),\n    query: replaceMaybeType(schemaConfig.query),\n    mutation: replaceMaybeType(schemaConfig.mutation),\n    subscription: replaceMaybeType(schemaConfig.subscription),\n  });\n\n  function replaceType(type) {\n    if ((0, _definition.isListType)(type)) {\n      // @ts-expect-error\n      return new _definition.GraphQLList(replaceType(type.ofType));\n    } else if ((0, _definition.isNonNullType)(type)) {\n      // @ts-expect-error\n      return new _definition.GraphQLNonNull(replaceType(type.ofType));\n    } // @ts-expect-error FIXME: TS Conversion\n\n    return replaceNamedType(type);\n  }\n\n  function replaceNamedType(type) {\n    return typeMap[type.name];\n  }\n\n  function replaceMaybeType(maybeType) {\n    return maybeType && replaceNamedType(maybeType);\n  }\n\n  function sortDirective(directive) {\n    const config = directive.toConfig();\n    return new _directives.GraphQLDirective({\n      ...config,\n      locations: sortBy(config.locations, (x) => x),\n      args: sortArgs(config.args),\n    });\n  }\n\n  function sortArgs(args) {\n    return sortObjMap(args, (arg) => ({ ...arg, type: replaceType(arg.type) }));\n  }\n\n  function sortFields(fieldsMap) {\n    return sortObjMap(fieldsMap, (field) => ({\n      ...field,\n      type: replaceType(field.type),\n      args: field.args && sortArgs(field.args),\n    }));\n  }\n\n  function sortInputFields(fieldsMap) {\n    return sortObjMap(fieldsMap, (field) => ({\n      ...field,\n      type: replaceType(field.type),\n    }));\n  }\n\n  function sortTypes(array) {\n    return sortByName(array).map(replaceNamedType);\n  }\n\n  function sortNamedType(type) {\n    if (\n      (0, _definition.isScalarType)(type) ||\n      (0, _introspection.isIntrospectionType)(type)\n    ) {\n      return type;\n    }\n\n    if ((0, _definition.isObjectType)(type)) {\n      const config = type.toConfig();\n      return new _definition.GraphQLObjectType({\n        ...config,\n        interfaces: () => sortTypes(config.interfaces),\n        fields: () => sortFields(config.fields),\n      });\n    }\n\n    if ((0, _definition.isInterfaceType)(type)) {\n      const config = type.toConfig();\n      return new _definition.GraphQLInterfaceType({\n        ...config,\n        interfaces: () => sortTypes(config.interfaces),\n        fields: () => sortFields(config.fields),\n      });\n    }\n\n    if ((0, _definition.isUnionType)(type)) {\n      const config = type.toConfig();\n      return new _definition.GraphQLUnionType({\n        ...config,\n        types: () => sortTypes(config.types),\n      });\n    }\n\n    if ((0, _definition.isEnumType)(type)) {\n      const config = type.toConfig();\n      return new _definition.GraphQLEnumType({\n        ...config,\n        values: sortObjMap(config.values, (value) => value),\n      });\n    }\n\n    if ((0, _definition.isInputObjectType)(type)) {\n      const config = type.toConfig();\n      return new _definition.GraphQLInputObjectType({\n        ...config,\n        fields: () => sortInputFields(config.fields),\n      });\n    }\n    /* c8 ignore next 3 */\n    // Not reachable, all possible types have been considered.\n\n    false ||\n      (0, _invariant.invariant)(\n        false,\n        'Unexpected type: ' + (0, _inspect.inspect)(type),\n      );\n  }\n}\n\nfunction sortObjMap(map, sortValueFn) {\n  const sortedMap = Object.create(null);\n\n  for (const key of Object.keys(map).sort(_naturalCompare.naturalCompare)) {\n    sortedMap[key] = sortValueFn(map[key]);\n  }\n\n  return sortedMap;\n}\n\nfunction sortByName(array) {\n  return sortBy(array, (obj) => obj.name);\n}\n\nfunction sortBy(array, mapToKey) {\n  return array.slice().sort((obj1, obj2) => {\n    const key1 = mapToKey(obj1);\n    const key2 = mapToKey(obj2);\n    return (0, _naturalCompare.naturalCompare)(key1, key2);\n  });\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.printIntrospectionSchema = printIntrospectionSchema;\nexports.printSchema = printSchema;\nexports.printType = printType;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _blockString = require('../language/blockString.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _printer = require('../language/printer.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _directives = require('../type/directives.js');\n\nvar _introspection = require('../type/introspection.js');\n\nvar _scalars = require('../type/scalars.js');\n\nvar _astFromValue = require('./astFromValue.js');\n\nfunction printSchema(schema) {\n  return printFilteredSchema(\n    schema,\n    (n) => !(0, _directives.isSpecifiedDirective)(n),\n    isDefinedType,\n  );\n}\n\nfunction printIntrospectionSchema(schema) {\n  return printFilteredSchema(\n    schema,\n    _directives.isSpecifiedDirective,\n    _introspection.isIntrospectionType,\n  );\n}\n\nfunction isDefinedType(type) {\n  return (\n    !(0, _scalars.isSpecifiedScalarType)(type) &&\n    !(0, _introspection.isIntrospectionType)(type)\n  );\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter) {\n  const directives = schema.getDirectives().filter(directiveFilter);\n  const types = Object.values(schema.getTypeMap()).filter(typeFilter);\n  return [\n    printSchemaDefinition(schema),\n    ...directives.map((directive) => printDirective(directive)),\n    ...types.map((type) => printType(type)),\n  ]\n    .filter(Boolean)\n    .join('\\n\\n');\n}\n\nfunction printSchemaDefinition(schema) {\n  if (schema.description == null && isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  const operationTypes = [];\n  const queryType = schema.getQueryType();\n\n  if (queryType) {\n    operationTypes.push(`  query: ${queryType.name}`);\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType) {\n    operationTypes.push(`  mutation: ${mutationType.name}`);\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType) {\n    operationTypes.push(`  subscription: ${subscriptionType.name}`);\n  }\n\n  return printDescription(schema) + `schema {\\n${operationTypes.join('\\n')}\\n}`;\n}\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n * ```graphql\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *     subscription: Subscription\n *   }\n * ```\n *\n * When using this naming convention, the schema description can be omitted.\n */\n\nfunction isSchemaOfCommonNames(schema) {\n  const queryType = schema.getQueryType();\n\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction printType(type) {\n  if ((0, _definition.isScalarType)(type)) {\n    return printScalar(type);\n  }\n\n  if ((0, _definition.isObjectType)(type)) {\n    return printObject(type);\n  }\n\n  if ((0, _definition.isInterfaceType)(type)) {\n    return printInterface(type);\n  }\n\n  if ((0, _definition.isUnionType)(type)) {\n    return printUnion(type);\n  }\n\n  if ((0, _definition.isEnumType)(type)) {\n    return printEnum(type);\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    return printInputObject(type);\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Unexpected type: ' + (0, _inspect.inspect)(type),\n    );\n}\n\nfunction printScalar(type) {\n  return (\n    printDescription(type) + `scalar ${type.name}` + printSpecifiedByURL(type)\n  );\n}\n\nfunction printImplementedInterfaces(type) {\n  const interfaces = type.getInterfaces();\n  return interfaces.length\n    ? ' implements ' + interfaces.map((i) => i.name).join(' & ')\n    : '';\n}\n\nfunction printObject(type) {\n  return (\n    printDescription(type) +\n    `type ${type.name}` +\n    printImplementedInterfaces(type) +\n    printFields(type)\n  );\n}\n\nfunction printInterface(type) {\n  return (\n    printDescription(type) +\n    `interface ${type.name}` +\n    printImplementedInterfaces(type) +\n    printFields(type)\n  );\n}\n\nfunction printUnion(type) {\n  const types = type.getTypes();\n  const possibleTypes = types.length ? ' = ' + types.join(' | ') : '';\n  return printDescription(type) + 'union ' + type.name + possibleTypes;\n}\n\nfunction printEnum(type) {\n  const values = type\n    .getValues()\n    .map(\n      (value, i) =>\n        printDescription(value, '  ', !i) +\n        '  ' +\n        value.name +\n        printDeprecated(value.deprecationReason),\n    );\n  return printDescription(type) + `enum ${type.name}` + printBlock(values);\n}\n\nfunction printInputObject(type) {\n  const fields = Object.values(type.getFields()).map(\n    (f, i) => printDescription(f, '  ', !i) + '  ' + printInputValue(f),\n  );\n  return printDescription(type) + `input ${type.name}` + printBlock(fields);\n}\n\nfunction printFields(type) {\n  const fields = Object.values(type.getFields()).map(\n    (f, i) =>\n      printDescription(f, '  ', !i) +\n      '  ' +\n      f.name +\n      printArgs(f.args, '  ') +\n      ': ' +\n      String(f.type) +\n      printDeprecated(f.deprecationReason),\n  );\n  return printBlock(fields);\n}\n\nfunction printBlock(items) {\n  return items.length !== 0 ? ' {\\n' + items.join('\\n') + '\\n}' : '';\n}\n\nfunction printArgs(args, indentation = '') {\n  if (args.length === 0) {\n    return '';\n  } // If every arg does not have a description, print them on one line.\n\n  if (args.every((arg) => !arg.description)) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return (\n    '(\\n' +\n    args\n      .map(\n        (arg, i) =>\n          printDescription(arg, '  ' + indentation, !i) +\n          '  ' +\n          indentation +\n          printInputValue(arg),\n      )\n      .join('\\n') +\n    '\\n' +\n    indentation +\n    ')'\n  );\n}\n\nfunction printInputValue(arg) {\n  const defaultAST = (0, _astFromValue.astFromValue)(\n    arg.defaultValue,\n    arg.type,\n  );\n  let argDecl = arg.name + ': ' + String(arg.type);\n\n  if (defaultAST) {\n    argDecl += ` = ${(0, _printer.print)(defaultAST)}`;\n  }\n\n  return argDecl + printDeprecated(arg.deprecationReason);\n}\n\nfunction printDirective(directive) {\n  return (\n    printDescription(directive) +\n    'directive @' +\n    directive.name +\n    printArgs(directive.args) +\n    (directive.isRepeatable ? ' repeatable' : '') +\n    ' on ' +\n    directive.locations.join(' | ')\n  );\n}\n\nfunction printDeprecated(reason) {\n  if (reason == null) {\n    return '';\n  }\n\n  if (reason !== _directives.DEFAULT_DEPRECATION_REASON) {\n    const astValue = (0, _printer.print)({\n      kind: _kinds.Kind.STRING,\n      value: reason,\n    });\n    return ` @deprecated(reason: ${astValue})`;\n  }\n\n  return ' @deprecated';\n}\n\nfunction printSpecifiedByURL(scalar) {\n  if (scalar.specifiedByURL == null) {\n    return '';\n  }\n\n  const astValue = (0, _printer.print)({\n    kind: _kinds.Kind.STRING,\n    value: scalar.specifiedByURL,\n  });\n  return ` @specifiedBy(url: ${astValue})`;\n}\n\nfunction printDescription(def, indentation = '', firstInBlock = true) {\n  const { description } = def;\n\n  if (description == null) {\n    return '';\n  }\n\n  const blockString = (0, _printer.print)({\n    kind: _kinds.Kind.STRING,\n    value: description,\n    block: (0, _blockString.isPrintableAsBlockString)(description),\n  });\n  const prefix =\n    indentation && !firstInBlock ? '\\n' + indentation : indentation;\n  return prefix + blockString.replace(/\\n/g, '\\n' + indentation) + '\\n';\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.concatAST = concatAST;\n\nvar _kinds = require('../language/kinds.js');\n\n/**\n * Provided a collection of ASTs, presumably each from different files,\n * concatenate the ASTs together into batched AST, useful for validating many\n * GraphQL source files which together represent one conceptual application.\n */\nfunction concatAST(documents) {\n  const definitions = [];\n\n  for (const doc of documents) {\n    definitions.push(...doc.definitions);\n  }\n\n  return {\n    kind: _kinds.Kind.DOCUMENT,\n    definitions,\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.separateOperations = separateOperations;\n\nvar _kinds = require('../language/kinds.js');\n\nvar _visitor = require('../language/visitor.js');\n\n/**\n * separateOperations accepts a single AST document which may contain many\n * operations and fragments and returns a collection of AST documents each of\n * which contains a single operation as well the fragment definitions it\n * refers to.\n */\nfunction separateOperations(documentAST) {\n  const operations = [];\n  const depGraph = Object.create(null); // Populate metadata and build a dependency graph.\n\n  for (const definitionNode of documentAST.definitions) {\n    switch (definitionNode.kind) {\n      case _kinds.Kind.OPERATION_DEFINITION:\n        operations.push(definitionNode);\n        break;\n\n      case _kinds.Kind.FRAGMENT_DEFINITION:\n        depGraph[definitionNode.name.value] = collectDependencies(\n          definitionNode.selectionSet,\n        );\n        break;\n\n      default: // ignore non-executable definitions\n    }\n  } // For each operation, produce a new synthesized AST which includes only what\n  // is necessary for completing that operation.\n\n  const separatedDocumentASTs = Object.create(null);\n\n  for (const operation of operations) {\n    const dependencies = new Set();\n\n    for (const fragmentName of collectDependencies(operation.selectionSet)) {\n      collectTransitiveDependencies(dependencies, depGraph, fragmentName);\n    } // Provides the empty string for anonymous operations.\n\n    const operationName = operation.name ? operation.name.value : ''; // The list of definition nodes to be included for this operation, sorted\n    // to retain the same order as the original document.\n\n    separatedDocumentASTs[operationName] = {\n      kind: _kinds.Kind.DOCUMENT,\n      definitions: documentAST.definitions.filter(\n        (node) =>\n          node === operation ||\n          (node.kind === _kinds.Kind.FRAGMENT_DEFINITION &&\n            dependencies.has(node.name.value)),\n      ),\n    };\n  }\n\n  return separatedDocumentASTs;\n}\n\n// From a dependency graph, collects a list of transitive dependencies by\n// recursing through a dependency graph.\nfunction collectTransitiveDependencies(collected, depGraph, fromName) {\n  if (!collected.has(fromName)) {\n    collected.add(fromName);\n    const immediateDeps = depGraph[fromName];\n\n    if (immediateDeps !== undefined) {\n      for (const toName of immediateDeps) {\n        collectTransitiveDependencies(collected, depGraph, toName);\n      }\n    }\n  }\n}\n\nfunction collectDependencies(selectionSet) {\n  const dependencies = [];\n  (0, _visitor.visit)(selectionSet, {\n    FragmentSpread(node) {\n      dependencies.push(node.name.value);\n    },\n  });\n  return dependencies;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.stripIgnoredCharacters = stripIgnoredCharacters;\n\nvar _blockString = require('../language/blockString.js');\n\nvar _lexer = require('../language/lexer.js');\n\nvar _source = require('../language/source.js');\n\nvar _tokenKind = require('../language/tokenKind.js');\n\n/**\n * Strips characters that are not significant to the validity or execution\n * of a GraphQL document:\n *   - UnicodeBOM\n *   - WhiteSpace\n *   - LineTerminator\n *   - Comment\n *   - Comma\n *   - BlockString indentation\n *\n * Note: It is required to have a delimiter character between neighboring\n * non-punctuator tokens and this function always uses single space as delimiter.\n *\n * It is guaranteed that both input and output documents if parsed would result\n * in the exact same AST except for nodes location.\n *\n * Warning: It is guaranteed that this function will always produce stable results.\n * However, it's not guaranteed that it will stay the same between different\n * releases due to bugfixes or changes in the GraphQL specification.\n *\n * Query example:\n *\n * ```graphql\n * query SomeQuery($foo: String!, $bar: String) {\n *   someField(foo: $foo, bar: $bar) {\n *     a\n *     b {\n *       c\n *       d\n *     }\n *   }\n * }\n * ```\n *\n * Becomes:\n *\n * ```graphql\n * query SomeQuery($foo:String!$bar:String){someField(foo:$foo bar:$bar){a b{c d}}}\n * ```\n *\n * SDL example:\n *\n * ```graphql\n * \"\"\"\n * Type description\n * \"\"\"\n * type Foo {\n *   \"\"\"\n *   Field description\n *   \"\"\"\n *   bar: String\n * }\n * ```\n *\n * Becomes:\n *\n * ```graphql\n * \"\"\"Type description\"\"\" type Foo{\"\"\"Field description\"\"\" bar:String}\n * ```\n */\nfunction stripIgnoredCharacters(source) {\n  const sourceObj = (0, _source.isSource)(source)\n    ? source\n    : new _source.Source(source);\n  const body = sourceObj.body;\n  const lexer = new _lexer.Lexer(sourceObj);\n  let strippedBody = '';\n  let wasLastAddedTokenNonPunctuator = false;\n\n  while (lexer.advance().kind !== _tokenKind.TokenKind.EOF) {\n    const currentToken = lexer.token;\n    const tokenKind = currentToken.kind;\n    /**\n     * Every two non-punctuator tokens should have space between them.\n     * Also prevent case of non-punctuator token following by spread resulting\n     * in invalid token (e.g. `1...` is invalid Float token).\n     */\n\n    const isNonPunctuator = !(0, _lexer.isPunctuatorTokenKind)(\n      currentToken.kind,\n    );\n\n    if (wasLastAddedTokenNonPunctuator) {\n      if (\n        isNonPunctuator ||\n        currentToken.kind === _tokenKind.TokenKind.SPREAD\n      ) {\n        strippedBody += ' ';\n      }\n    }\n\n    const tokenBody = body.slice(currentToken.start, currentToken.end);\n\n    if (tokenKind === _tokenKind.TokenKind.BLOCK_STRING) {\n      strippedBody += (0, _blockString.printBlockString)(currentToken.value, {\n        minimize: true,\n      });\n    } else {\n      strippedBody += tokenBody;\n    }\n\n    wasLastAddedTokenNonPunctuator = isNonPunctuator;\n  }\n\n  return strippedBody;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.assertValidName = assertValidName;\nexports.isValidNameError = isValidNameError;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _assertName = require('../type/assertName.js');\n\n/* c8 ignore start */\n\n/**\n * Upholds the spec rules about naming.\n * @deprecated Please use `assertName` instead. Will be removed in v17\n */\nfunction assertValidName(name) {\n  const error = isValidNameError(name);\n\n  if (error) {\n    throw error;\n  }\n\n  return name;\n}\n/**\n * Returns an Error if a name is invalid.\n * @deprecated Please use `assertName` instead. Will be removed in v17\n */\n\nfunction isValidNameError(name) {\n  typeof name === 'string' ||\n    (0, _devAssert.devAssert)(false, 'Expected name to be a string.');\n\n  if (name.startsWith('__')) {\n    return new _GraphQLError.GraphQLError(\n      `Name \"${name}\" must not begin with \"__\", which is reserved by GraphQL introspection.`,\n    );\n  }\n\n  try {\n    (0, _assertName.assertName)(name);\n  } catch (error) {\n    return error;\n  }\n}\n/* c8 ignore stop */\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.DangerousChangeType = exports.BreakingChangeType = void 0;\nexports.findBreakingChanges = findBreakingChanges;\nexports.findDangerousChanges = findDangerousChanges;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _keyMap = require('../jsutils/keyMap.js');\n\nvar _printer = require('../language/printer.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _scalars = require('../type/scalars.js');\n\nvar _astFromValue = require('./astFromValue.js');\n\nvar _sortValueNode = require('./sortValueNode.js');\n\nvar BreakingChangeType;\nexports.BreakingChangeType = BreakingChangeType;\n\n(function (BreakingChangeType) {\n  BreakingChangeType['TYPE_REMOVED'] = 'TYPE_REMOVED';\n  BreakingChangeType['TYPE_CHANGED_KIND'] = 'TYPE_CHANGED_KIND';\n  BreakingChangeType['TYPE_REMOVED_FROM_UNION'] = 'TYPE_REMOVED_FROM_UNION';\n  BreakingChangeType['VALUE_REMOVED_FROM_ENUM'] = 'VALUE_REMOVED_FROM_ENUM';\n  BreakingChangeType['REQUIRED_INPUT_FIELD_ADDED'] =\n    'REQUIRED_INPUT_FIELD_ADDED';\n  BreakingChangeType['IMPLEMENTED_INTERFACE_REMOVED'] =\n    'IMPLEMENTED_INTERFACE_REMOVED';\n  BreakingChangeType['FIELD_REMOVED'] = 'FIELD_REMOVED';\n  BreakingChangeType['FIELD_CHANGED_KIND'] = 'FIELD_CHANGED_KIND';\n  BreakingChangeType['REQUIRED_ARG_ADDED'] = 'REQUIRED_ARG_ADDED';\n  BreakingChangeType['ARG_REMOVED'] = 'ARG_REMOVED';\n  BreakingChangeType['ARG_CHANGED_KIND'] = 'ARG_CHANGED_KIND';\n  BreakingChangeType['DIRECTIVE_REMOVED'] = 'DIRECTIVE_REMOVED';\n  BreakingChangeType['DIRECTIVE_ARG_REMOVED'] = 'DIRECTIVE_ARG_REMOVED';\n  BreakingChangeType['REQUIRED_DIRECTIVE_ARG_ADDED'] =\n    'REQUIRED_DIRECTIVE_ARG_ADDED';\n  BreakingChangeType['DIRECTIVE_REPEATABLE_REMOVED'] =\n    'DIRECTIVE_REPEATABLE_REMOVED';\n  BreakingChangeType['DIRECTIVE_LOCATION_REMOVED'] =\n    'DIRECTIVE_LOCATION_REMOVED';\n})(\n  BreakingChangeType || (exports.BreakingChangeType = BreakingChangeType = {}),\n);\n\nvar DangerousChangeType;\nexports.DangerousChangeType = DangerousChangeType;\n\n(function (DangerousChangeType) {\n  DangerousChangeType['VALUE_ADDED_TO_ENUM'] = 'VALUE_ADDED_TO_ENUM';\n  DangerousChangeType['TYPE_ADDED_TO_UNION'] = 'TYPE_ADDED_TO_UNION';\n  DangerousChangeType['OPTIONAL_INPUT_FIELD_ADDED'] =\n    'OPTIONAL_INPUT_FIELD_ADDED';\n  DangerousChangeType['OPTIONAL_ARG_ADDED'] = 'OPTIONAL_ARG_ADDED';\n  DangerousChangeType['IMPLEMENTED_INTERFACE_ADDED'] =\n    'IMPLEMENTED_INTERFACE_ADDED';\n  DangerousChangeType['ARG_DEFAULT_VALUE_CHANGE'] = 'ARG_DEFAULT_VALUE_CHANGE';\n})(\n  DangerousChangeType ||\n    (exports.DangerousChangeType = DangerousChangeType = {}),\n);\n\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of breaking changes covered by the other functions down below.\n */\nfunction findBreakingChanges(oldSchema, newSchema) {\n  // @ts-expect-error\n  return findSchemaChanges(oldSchema, newSchema).filter(\n    (change) => change.type in BreakingChangeType,\n  );\n}\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of potentially dangerous changes covered by the other functions down below.\n */\n\nfunction findDangerousChanges(oldSchema, newSchema) {\n  // @ts-expect-error\n  return findSchemaChanges(oldSchema, newSchema).filter(\n    (change) => change.type in DangerousChangeType,\n  );\n}\n\nfunction findSchemaChanges(oldSchema, newSchema) {\n  return [\n    ...findTypeChanges(oldSchema, newSchema),\n    ...findDirectiveChanges(oldSchema, newSchema),\n  ];\n}\n\nfunction findDirectiveChanges(oldSchema, newSchema) {\n  const schemaChanges = [];\n  const directivesDiff = diff(\n    oldSchema.getDirectives(),\n    newSchema.getDirectives(),\n  );\n\n  for (const oldDirective of directivesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.DIRECTIVE_REMOVED,\n      description: `${oldDirective.name} was removed.`,\n    });\n  }\n\n  for (const [oldDirective, newDirective] of directivesDiff.persisted) {\n    const argsDiff = diff(oldDirective.args, newDirective.args);\n\n    for (const newArg of argsDiff.added) {\n      if ((0, _definition.isRequiredArgument)(newArg)) {\n        schemaChanges.push({\n          type: BreakingChangeType.REQUIRED_DIRECTIVE_ARG_ADDED,\n          description: `A required arg ${newArg.name} on directive ${oldDirective.name} was added.`,\n        });\n      }\n    }\n\n    for (const oldArg of argsDiff.removed) {\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_ARG_REMOVED,\n        description: `${oldArg.name} was removed from ${oldDirective.name}.`,\n      });\n    }\n\n    if (oldDirective.isRepeatable && !newDirective.isRepeatable) {\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_REPEATABLE_REMOVED,\n        description: `Repeatable flag was removed from ${oldDirective.name}.`,\n      });\n    }\n\n    for (const location of oldDirective.locations) {\n      if (!newDirective.locations.includes(location)) {\n        schemaChanges.push({\n          type: BreakingChangeType.DIRECTIVE_LOCATION_REMOVED,\n          description: `${location} was removed from ${oldDirective.name}.`,\n        });\n      }\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findTypeChanges(oldSchema, newSchema) {\n  const schemaChanges = [];\n  const typesDiff = diff(\n    Object.values(oldSchema.getTypeMap()),\n    Object.values(newSchema.getTypeMap()),\n  );\n\n  for (const oldType of typesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED,\n      description: (0, _scalars.isSpecifiedScalarType)(oldType)\n        ? `Standard scalar ${oldType.name} was removed because it is not referenced anymore.`\n        : `${oldType.name} was removed.`,\n    });\n  }\n\n  for (const [oldType, newType] of typesDiff.persisted) {\n    if (\n      (0, _definition.isEnumType)(oldType) &&\n      (0, _definition.isEnumType)(newType)\n    ) {\n      schemaChanges.push(...findEnumTypeChanges(oldType, newType));\n    } else if (\n      (0, _definition.isUnionType)(oldType) &&\n      (0, _definition.isUnionType)(newType)\n    ) {\n      schemaChanges.push(...findUnionTypeChanges(oldType, newType));\n    } else if (\n      (0, _definition.isInputObjectType)(oldType) &&\n      (0, _definition.isInputObjectType)(newType)\n    ) {\n      schemaChanges.push(...findInputObjectTypeChanges(oldType, newType));\n    } else if (\n      (0, _definition.isObjectType)(oldType) &&\n      (0, _definition.isObjectType)(newType)\n    ) {\n      schemaChanges.push(\n        ...findFieldChanges(oldType, newType),\n        ...findImplementedInterfacesChanges(oldType, newType),\n      );\n    } else if (\n      (0, _definition.isInterfaceType)(oldType) &&\n      (0, _definition.isInterfaceType)(newType)\n    ) {\n      schemaChanges.push(\n        ...findFieldChanges(oldType, newType),\n        ...findImplementedInterfacesChanges(oldType, newType),\n      );\n    } else if (oldType.constructor !== newType.constructor) {\n      schemaChanges.push({\n        type: BreakingChangeType.TYPE_CHANGED_KIND,\n        description:\n          `${oldType.name} changed from ` +\n          `${typeKindName(oldType)} to ${typeKindName(newType)}.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findInputObjectTypeChanges(oldType, newType) {\n  const schemaChanges = [];\n  const fieldsDiff = diff(\n    Object.values(oldType.getFields()),\n    Object.values(newType.getFields()),\n  );\n\n  for (const newField of fieldsDiff.added) {\n    if ((0, _definition.isRequiredInputField)(newField)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_INPUT_FIELD_ADDED,\n        description: `A required field ${newField.name} on input type ${oldType.name} was added.`,\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_INPUT_FIELD_ADDED,\n        description: `An optional field ${newField.name} on input type ${oldType.name} was added.`,\n      });\n    }\n  }\n\n  for (const oldField of fieldsDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: `${oldType.name}.${oldField.name} was removed.`,\n    });\n  }\n\n  for (const [oldField, newField] of fieldsDiff.persisted) {\n    const isSafe = isChangeSafeForInputObjectFieldOrFieldArg(\n      oldField.type,\n      newField.type,\n    );\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description:\n          `${oldType.name}.${oldField.name} changed type from ` +\n          `${String(oldField.type)} to ${String(newField.type)}.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findUnionTypeChanges(oldType, newType) {\n  const schemaChanges = [];\n  const possibleTypesDiff = diff(oldType.getTypes(), newType.getTypes());\n\n  for (const newPossibleType of possibleTypesDiff.added) {\n    schemaChanges.push({\n      type: DangerousChangeType.TYPE_ADDED_TO_UNION,\n      description: `${newPossibleType.name} was added to union type ${oldType.name}.`,\n    });\n  }\n\n  for (const oldPossibleType of possibleTypesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED_FROM_UNION,\n      description: `${oldPossibleType.name} was removed from union type ${oldType.name}.`,\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findEnumTypeChanges(oldType, newType) {\n  const schemaChanges = [];\n  const valuesDiff = diff(oldType.getValues(), newType.getValues());\n\n  for (const newValue of valuesDiff.added) {\n    schemaChanges.push({\n      type: DangerousChangeType.VALUE_ADDED_TO_ENUM,\n      description: `${newValue.name} was added to enum type ${oldType.name}.`,\n    });\n  }\n\n  for (const oldValue of valuesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.VALUE_REMOVED_FROM_ENUM,\n      description: `${oldValue.name} was removed from enum type ${oldType.name}.`,\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findImplementedInterfacesChanges(oldType, newType) {\n  const schemaChanges = [];\n  const interfacesDiff = diff(oldType.getInterfaces(), newType.getInterfaces());\n\n  for (const newInterface of interfacesDiff.added) {\n    schemaChanges.push({\n      type: DangerousChangeType.IMPLEMENTED_INTERFACE_ADDED,\n      description: `${newInterface.name} added to interfaces implemented by ${oldType.name}.`,\n    });\n  }\n\n  for (const oldInterface of interfacesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.IMPLEMENTED_INTERFACE_REMOVED,\n      description: `${oldType.name} no longer implements interface ${oldInterface.name}.`,\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findFieldChanges(oldType, newType) {\n  const schemaChanges = [];\n  const fieldsDiff = diff(\n    Object.values(oldType.getFields()),\n    Object.values(newType.getFields()),\n  );\n\n  for (const oldField of fieldsDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: `${oldType.name}.${oldField.name} was removed.`,\n    });\n  }\n\n  for (const [oldField, newField] of fieldsDiff.persisted) {\n    schemaChanges.push(...findArgChanges(oldType, oldField, newField));\n    const isSafe = isChangeSafeForObjectOrInterfaceField(\n      oldField.type,\n      newField.type,\n    );\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description:\n          `${oldType.name}.${oldField.name} changed type from ` +\n          `${String(oldField.type)} to ${String(newField.type)}.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findArgChanges(oldType, oldField, newField) {\n  const schemaChanges = [];\n  const argsDiff = diff(oldField.args, newField.args);\n\n  for (const oldArg of argsDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.ARG_REMOVED,\n      description: `${oldType.name}.${oldField.name} arg ${oldArg.name} was removed.`,\n    });\n  }\n\n  for (const [oldArg, newArg] of argsDiff.persisted) {\n    const isSafe = isChangeSafeForInputObjectFieldOrFieldArg(\n      oldArg.type,\n      newArg.type,\n    );\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.ARG_CHANGED_KIND,\n        description:\n          `${oldType.name}.${oldField.name} arg ${oldArg.name} has changed type from ` +\n          `${String(oldArg.type)} to ${String(newArg.type)}.`,\n      });\n    } else if (oldArg.defaultValue !== undefined) {\n      if (newArg.defaultValue === undefined) {\n        schemaChanges.push({\n          type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n          description: `${oldType.name}.${oldField.name} arg ${oldArg.name} defaultValue was removed.`,\n        });\n      } else {\n        // Since we looking only for client's observable changes we should\n        // compare default values in the same representation as they are\n        // represented inside introspection.\n        const oldValueStr = stringifyValue(oldArg.defaultValue, oldArg.type);\n        const newValueStr = stringifyValue(newArg.defaultValue, newArg.type);\n\n        if (oldValueStr !== newValueStr) {\n          schemaChanges.push({\n            type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n            description: `${oldType.name}.${oldField.name} arg ${oldArg.name} has changed defaultValue from ${oldValueStr} to ${newValueStr}.`,\n          });\n        }\n      }\n    }\n  }\n\n  for (const newArg of argsDiff.added) {\n    if ((0, _definition.isRequiredArgument)(newArg)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_ARG_ADDED,\n        description: `A required arg ${newArg.name} on ${oldType.name}.${oldField.name} was added.`,\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_ARG_ADDED,\n        description: `An optional arg ${newArg.name} on ${oldType.name}.${oldField.name} was added.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction isChangeSafeForObjectOrInterfaceField(oldType, newType) {\n  if ((0, _definition.isListType)(oldType)) {\n    return (\n      // if they're both lists, make sure the underlying types are compatible\n      ((0, _definition.isListType)(newType) &&\n        isChangeSafeForObjectOrInterfaceField(\n          oldType.ofType,\n          newType.ofType,\n        )) || // moving from nullable to non-null of the same underlying type is safe\n      ((0, _definition.isNonNullType)(newType) &&\n        isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType))\n    );\n  }\n\n  if ((0, _definition.isNonNullType)(oldType)) {\n    // if they're both non-null, make sure the underlying types are compatible\n    return (\n      (0, _definition.isNonNullType)(newType) &&\n      isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType)\n    );\n  }\n\n  return (\n    // if they're both named types, see if their names are equivalent\n    ((0, _definition.isNamedType)(newType) && oldType.name === newType.name) || // moving from nullable to non-null of the same underlying type is safe\n    ((0, _definition.isNonNullType)(newType) &&\n      isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType))\n  );\n}\n\nfunction isChangeSafeForInputObjectFieldOrFieldArg(oldType, newType) {\n  if ((0, _definition.isListType)(oldType)) {\n    // if they're both lists, make sure the underlying types are compatible\n    return (\n      (0, _definition.isListType)(newType) &&\n      isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType)\n    );\n  }\n\n  if ((0, _definition.isNonNullType)(oldType)) {\n    return (\n      // if they're both non-null, make sure the underlying types are\n      // compatible\n      ((0, _definition.isNonNullType)(newType) &&\n        isChangeSafeForInputObjectFieldOrFieldArg(\n          oldType.ofType,\n          newType.ofType,\n        )) || // moving from non-null to nullable of the same underlying type is safe\n      (!(0, _definition.isNonNullType)(newType) &&\n        isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType))\n    );\n  } // if they're both named types, see if their names are equivalent\n\n  return (0, _definition.isNamedType)(newType) && oldType.name === newType.name;\n}\n\nfunction typeKindName(type) {\n  if ((0, _definition.isScalarType)(type)) {\n    return 'a Scalar type';\n  }\n\n  if ((0, _definition.isObjectType)(type)) {\n    return 'an Object type';\n  }\n\n  if ((0, _definition.isInterfaceType)(type)) {\n    return 'an Interface type';\n  }\n\n  if ((0, _definition.isUnionType)(type)) {\n    return 'a Union type';\n  }\n\n  if ((0, _definition.isEnumType)(type)) {\n    return 'an Enum type';\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    return 'an Input type';\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Unexpected type: ' + (0, _inspect.inspect)(type),\n    );\n}\n\nfunction stringifyValue(value, type) {\n  const ast = (0, _astFromValue.astFromValue)(value, type);\n  ast != null || (0, _invariant.invariant)(false);\n  return (0, _printer.print)((0, _sortValueNode.sortValueNode)(ast));\n}\n\nfunction diff(oldArray, newArray) {\n  const added = [];\n  const removed = [];\n  const persisted = [];\n  const oldMap = (0, _keyMap.keyMap)(oldArray, ({ name }) => name);\n  const newMap = (0, _keyMap.keyMap)(newArray, ({ name }) => name);\n\n  for (const oldItem of oldArray) {\n    const newItem = newMap[oldItem.name];\n\n    if (newItem === undefined) {\n      removed.push(oldItem);\n    } else {\n      persisted.push([oldItem, newItem]);\n    }\n  }\n\n  for (const newItem of newArray) {\n    if (oldMap[newItem.name] === undefined) {\n      added.push(newItem);\n    }\n  }\n\n  return {\n    added,\n    persisted,\n    removed,\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nObject.defineProperty(exports, 'BreakingChangeType', {\n  enumerable: true,\n  get: function () {\n    return _findBreakingChanges.BreakingChangeType;\n  },\n});\nObject.defineProperty(exports, 'DangerousChangeType', {\n  enumerable: true,\n  get: function () {\n    return _findBreakingChanges.DangerousChangeType;\n  },\n});\nObject.defineProperty(exports, 'TypeInfo', {\n  enumerable: true,\n  get: function () {\n    return _TypeInfo.TypeInfo;\n  },\n});\nObject.defineProperty(exports, 'assertValidName', {\n  enumerable: true,\n  get: function () {\n    return _assertValidName.assertValidName;\n  },\n});\nObject.defineProperty(exports, 'astFromValue', {\n  enumerable: true,\n  get: function () {\n    return _astFromValue.astFromValue;\n  },\n});\nObject.defineProperty(exports, 'buildASTSchema', {\n  enumerable: true,\n  get: function () {\n    return _buildASTSchema.buildASTSchema;\n  },\n});\nObject.defineProperty(exports, 'buildClientSchema', {\n  enumerable: true,\n  get: function () {\n    return _buildClientSchema.buildClientSchema;\n  },\n});\nObject.defineProperty(exports, 'buildSchema', {\n  enumerable: true,\n  get: function () {\n    return _buildASTSchema.buildSchema;\n  },\n});\nObject.defineProperty(exports, 'coerceInputValue', {\n  enumerable: true,\n  get: function () {\n    return _coerceInputValue.coerceInputValue;\n  },\n});\nObject.defineProperty(exports, 'concatAST', {\n  enumerable: true,\n  get: function () {\n    return _concatAST.concatAST;\n  },\n});\nObject.defineProperty(exports, 'doTypesOverlap', {\n  enumerable: true,\n  get: function () {\n    return _typeComparators.doTypesOverlap;\n  },\n});\nObject.defineProperty(exports, 'extendSchema', {\n  enumerable: true,\n  get: function () {\n    return _extendSchema.extendSchema;\n  },\n});\nObject.defineProperty(exports, 'findBreakingChanges', {\n  enumerable: true,\n  get: function () {\n    return _findBreakingChanges.findBreakingChanges;\n  },\n});\nObject.defineProperty(exports, 'findDangerousChanges', {\n  enumerable: true,\n  get: function () {\n    return _findBreakingChanges.findDangerousChanges;\n  },\n});\nObject.defineProperty(exports, 'getIntrospectionQuery', {\n  enumerable: true,\n  get: function () {\n    return _getIntrospectionQuery.getIntrospectionQuery;\n  },\n});\nObject.defineProperty(exports, 'getOperationAST', {\n  enumerable: true,\n  get: function () {\n    return _getOperationAST.getOperationAST;\n  },\n});\nObject.defineProperty(exports, 'getOperationRootType', {\n  enumerable: true,\n  get: function () {\n    return _getOperationRootType.getOperationRootType;\n  },\n});\nObject.defineProperty(exports, 'introspectionFromSchema', {\n  enumerable: true,\n  get: function () {\n    return _introspectionFromSchema.introspectionFromSchema;\n  },\n});\nObject.defineProperty(exports, 'isEqualType', {\n  enumerable: true,\n  get: function () {\n    return _typeComparators.isEqualType;\n  },\n});\nObject.defineProperty(exports, 'isTypeSubTypeOf', {\n  enumerable: true,\n  get: function () {\n    return _typeComparators.isTypeSubTypeOf;\n  },\n});\nObject.defineProperty(exports, 'isValidNameError', {\n  enumerable: true,\n  get: function () {\n    return _assertValidName.isValidNameError;\n  },\n});\nObject.defineProperty(exports, 'lexicographicSortSchema', {\n  enumerable: true,\n  get: function () {\n    return _lexicographicSortSchema.lexicographicSortSchema;\n  },\n});\nObject.defineProperty(exports, 'printIntrospectionSchema', {\n  enumerable: true,\n  get: function () {\n    return _printSchema.printIntrospectionSchema;\n  },\n});\nObject.defineProperty(exports, 'printSchema', {\n  enumerable: true,\n  get: function () {\n    return _printSchema.printSchema;\n  },\n});\nObject.defineProperty(exports, 'printType', {\n  enumerable: true,\n  get: function () {\n    return _printSchema.printType;\n  },\n});\nObject.defineProperty(exports, 'separateOperations', {\n  enumerable: true,\n  get: function () {\n    return _separateOperations.separateOperations;\n  },\n});\nObject.defineProperty(exports, 'stripIgnoredCharacters', {\n  enumerable: true,\n  get: function () {\n    return _stripIgnoredCharacters.stripIgnoredCharacters;\n  },\n});\nObject.defineProperty(exports, 'typeFromAST', {\n  enumerable: true,\n  get: function () {\n    return _typeFromAST.typeFromAST;\n  },\n});\nObject.defineProperty(exports, 'valueFromAST', {\n  enumerable: true,\n  get: function () {\n    return _valueFromAST.valueFromAST;\n  },\n});\nObject.defineProperty(exports, 'valueFromASTUntyped', {\n  enumerable: true,\n  get: function () {\n    return _valueFromASTUntyped.valueFromASTUntyped;\n  },\n});\nObject.defineProperty(exports, 'visitWithTypeInfo', {\n  enumerable: true,\n  get: function () {\n    return _TypeInfo.visitWithTypeInfo;\n  },\n});\n\nvar _getIntrospectionQuery = require('./getIntrospectionQuery.js');\n\nvar _getOperationAST = require('./getOperationAST.js');\n\nvar _getOperationRootType = require('./getOperationRootType.js');\n\nvar _introspectionFromSchema = require('./introspectionFromSchema.js');\n\nvar _buildClientSchema = require('./buildClientSchema.js');\n\nvar _buildASTSchema = require('./buildASTSchema.js');\n\nvar _extendSchema = require('./extendSchema.js');\n\nvar _lexicographicSortSchema = require('./lexicographicSortSchema.js');\n\nvar _printSchema = require('./printSchema.js');\n\nvar _typeFromAST = require('./typeFromAST.js');\n\nvar _valueFromAST = require('./valueFromAST.js');\n\nvar _valueFromASTUntyped = require('./valueFromASTUntyped.js');\n\nvar _astFromValue = require('./astFromValue.js');\n\nvar _TypeInfo = require('./TypeInfo.js');\n\nvar _coerceInputValue = require('./coerceInputValue.js');\n\nvar _concatAST = require('./concatAST.js');\n\nvar _separateOperations = require('./separateOperations.js');\n\nvar _stripIgnoredCharacters = require('./stripIgnoredCharacters.js');\n\nvar _typeComparators = require('./typeComparators.js');\n\nvar _assertValidName = require('./assertValidName.js');\n\nvar _findBreakingChanges = require('./findBreakingChanges.js');\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nObject.defineProperty(exports, 'BREAK', {\n  enumerable: true,\n  get: function () {\n    return _index2.BREAK;\n  },\n});\nObject.defineProperty(exports, 'BreakingChangeType', {\n  enumerable: true,\n  get: function () {\n    return _index6.BreakingChangeType;\n  },\n});\nObject.defineProperty(exports, 'DEFAULT_DEPRECATION_REASON', {\n  enumerable: true,\n  get: function () {\n    return _index.DEFAULT_DEPRECATION_REASON;\n  },\n});\nObject.defineProperty(exports, 'DangerousChangeType', {\n  enumerable: true,\n  get: function () {\n    return _index6.DangerousChangeType;\n  },\n});\nObject.defineProperty(exports, 'DirectiveLocation', {\n  enumerable: true,\n  get: function () {\n    return _index2.DirectiveLocation;\n  },\n});\nObject.defineProperty(exports, 'ExecutableDefinitionsRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.ExecutableDefinitionsRule;\n  },\n});\nObject.defineProperty(exports, 'FieldsOnCorrectTypeRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.FieldsOnCorrectTypeRule;\n  },\n});\nObject.defineProperty(exports, 'FragmentsOnCompositeTypesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.FragmentsOnCompositeTypesRule;\n  },\n});\nObject.defineProperty(exports, 'GRAPHQL_MAX_INT', {\n  enumerable: true,\n  get: function () {\n    return _index.GRAPHQL_MAX_INT;\n  },\n});\nObject.defineProperty(exports, 'GRAPHQL_MIN_INT', {\n  enumerable: true,\n  get: function () {\n    return _index.GRAPHQL_MIN_INT;\n  },\n});\nObject.defineProperty(exports, 'GraphQLBoolean', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLBoolean;\n  },\n});\nObject.defineProperty(exports, 'GraphQLDeprecatedDirective', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLDeprecatedDirective;\n  },\n});\nObject.defineProperty(exports, 'GraphQLDirective', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLDirective;\n  },\n});\nObject.defineProperty(exports, 'GraphQLEnumType', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLEnumType;\n  },\n});\nObject.defineProperty(exports, 'GraphQLError', {\n  enumerable: true,\n  get: function () {\n    return _index5.GraphQLError;\n  },\n});\nObject.defineProperty(exports, 'GraphQLFloat', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLFloat;\n  },\n});\nObject.defineProperty(exports, 'GraphQLID', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLID;\n  },\n});\nObject.defineProperty(exports, 'GraphQLIncludeDirective', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLIncludeDirective;\n  },\n});\nObject.defineProperty(exports, 'GraphQLInputObjectType', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLInputObjectType;\n  },\n});\nObject.defineProperty(exports, 'GraphQLInt', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLInt;\n  },\n});\nObject.defineProperty(exports, 'GraphQLInterfaceType', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLInterfaceType;\n  },\n});\nObject.defineProperty(exports, 'GraphQLList', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLList;\n  },\n});\nObject.defineProperty(exports, 'GraphQLNonNull', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLNonNull;\n  },\n});\nObject.defineProperty(exports, 'GraphQLObjectType', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLObjectType;\n  },\n});\nObject.defineProperty(exports, 'GraphQLScalarType', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLScalarType;\n  },\n});\nObject.defineProperty(exports, 'GraphQLSchema', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLSchema;\n  },\n});\nObject.defineProperty(exports, 'GraphQLSkipDirective', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLSkipDirective;\n  },\n});\nObject.defineProperty(exports, 'GraphQLSpecifiedByDirective', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLSpecifiedByDirective;\n  },\n});\nObject.defineProperty(exports, 'GraphQLString', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLString;\n  },\n});\nObject.defineProperty(exports, 'GraphQLUnionType', {\n  enumerable: true,\n  get: function () {\n    return _index.GraphQLUnionType;\n  },\n});\nObject.defineProperty(exports, 'Kind', {\n  enumerable: true,\n  get: function () {\n    return _index2.Kind;\n  },\n});\nObject.defineProperty(exports, 'KnownArgumentNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.KnownArgumentNamesRule;\n  },\n});\nObject.defineProperty(exports, 'KnownDirectivesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.KnownDirectivesRule;\n  },\n});\nObject.defineProperty(exports, 'KnownFragmentNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.KnownFragmentNamesRule;\n  },\n});\nObject.defineProperty(exports, 'KnownTypeNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.KnownTypeNamesRule;\n  },\n});\nObject.defineProperty(exports, 'Lexer', {\n  enumerable: true,\n  get: function () {\n    return _index2.Lexer;\n  },\n});\nObject.defineProperty(exports, 'Location', {\n  enumerable: true,\n  get: function () {\n    return _index2.Location;\n  },\n});\nObject.defineProperty(exports, 'LoneAnonymousOperationRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.LoneAnonymousOperationRule;\n  },\n});\nObject.defineProperty(exports, 'LoneSchemaDefinitionRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.LoneSchemaDefinitionRule;\n  },\n});\nObject.defineProperty(exports, 'NoDeprecatedCustomRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.NoDeprecatedCustomRule;\n  },\n});\nObject.defineProperty(exports, 'NoFragmentCyclesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.NoFragmentCyclesRule;\n  },\n});\nObject.defineProperty(exports, 'NoSchemaIntrospectionCustomRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.NoSchemaIntrospectionCustomRule;\n  },\n});\nObject.defineProperty(exports, 'NoUndefinedVariablesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.NoUndefinedVariablesRule;\n  },\n});\nObject.defineProperty(exports, 'NoUnusedFragmentsRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.NoUnusedFragmentsRule;\n  },\n});\nObject.defineProperty(exports, 'NoUnusedVariablesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.NoUnusedVariablesRule;\n  },\n});\nObject.defineProperty(exports, 'OperationTypeNode', {\n  enumerable: true,\n  get: function () {\n    return _index2.OperationTypeNode;\n  },\n});\nObject.defineProperty(exports, 'OverlappingFieldsCanBeMergedRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.OverlappingFieldsCanBeMergedRule;\n  },\n});\nObject.defineProperty(exports, 'PossibleFragmentSpreadsRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.PossibleFragmentSpreadsRule;\n  },\n});\nObject.defineProperty(exports, 'PossibleTypeExtensionsRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.PossibleTypeExtensionsRule;\n  },\n});\nObject.defineProperty(exports, 'ProvidedRequiredArgumentsRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.ProvidedRequiredArgumentsRule;\n  },\n});\nObject.defineProperty(exports, 'ScalarLeafsRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.ScalarLeafsRule;\n  },\n});\nObject.defineProperty(exports, 'SchemaMetaFieldDef', {\n  enumerable: true,\n  get: function () {\n    return _index.SchemaMetaFieldDef;\n  },\n});\nObject.defineProperty(exports, 'SingleFieldSubscriptionsRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.SingleFieldSubscriptionsRule;\n  },\n});\nObject.defineProperty(exports, 'Source', {\n  enumerable: true,\n  get: function () {\n    return _index2.Source;\n  },\n});\nObject.defineProperty(exports, 'Token', {\n  enumerable: true,\n  get: function () {\n    return _index2.Token;\n  },\n});\nObject.defineProperty(exports, 'TokenKind', {\n  enumerable: true,\n  get: function () {\n    return _index2.TokenKind;\n  },\n});\nObject.defineProperty(exports, 'TypeInfo', {\n  enumerable: true,\n  get: function () {\n    return _index6.TypeInfo;\n  },\n});\nObject.defineProperty(exports, 'TypeKind', {\n  enumerable: true,\n  get: function () {\n    return _index.TypeKind;\n  },\n});\nObject.defineProperty(exports, 'TypeMetaFieldDef', {\n  enumerable: true,\n  get: function () {\n    return _index.TypeMetaFieldDef;\n  },\n});\nObject.defineProperty(exports, 'TypeNameMetaFieldDef', {\n  enumerable: true,\n  get: function () {\n    return _index.TypeNameMetaFieldDef;\n  },\n});\nObject.defineProperty(exports, 'UniqueArgumentDefinitionNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.UniqueArgumentDefinitionNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueArgumentNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.UniqueArgumentNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueDirectiveNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.UniqueDirectiveNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueDirectivesPerLocationRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.UniqueDirectivesPerLocationRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueEnumValueNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.UniqueEnumValueNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueFieldDefinitionNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.UniqueFieldDefinitionNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueFragmentNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.UniqueFragmentNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueInputFieldNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.UniqueInputFieldNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueOperationNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.UniqueOperationNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueOperationTypesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.UniqueOperationTypesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueTypeNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.UniqueTypeNamesRule;\n  },\n});\nObject.defineProperty(exports, 'UniqueVariableNamesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.UniqueVariableNamesRule;\n  },\n});\nObject.defineProperty(exports, 'ValidationContext', {\n  enumerable: true,\n  get: function () {\n    return _index4.ValidationContext;\n  },\n});\nObject.defineProperty(exports, 'ValuesOfCorrectTypeRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.ValuesOfCorrectTypeRule;\n  },\n});\nObject.defineProperty(exports, 'VariablesAreInputTypesRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.VariablesAreInputTypesRule;\n  },\n});\nObject.defineProperty(exports, 'VariablesInAllowedPositionRule', {\n  enumerable: true,\n  get: function () {\n    return _index4.VariablesInAllowedPositionRule;\n  },\n});\nObject.defineProperty(exports, '__Directive', {\n  enumerable: true,\n  get: function () {\n    return _index.__Directive;\n  },\n});\nObject.defineProperty(exports, '__DirectiveLocation', {\n  enumerable: true,\n  get: function () {\n    return _index.__DirectiveLocation;\n  },\n});\nObject.defineProperty(exports, '__EnumValue', {\n  enumerable: true,\n  get: function () {\n    return _index.__EnumValue;\n  },\n});\nObject.defineProperty(exports, '__Field', {\n  enumerable: true,\n  get: function () {\n    return _index.__Field;\n  },\n});\nObject.defineProperty(exports, '__InputValue', {\n  enumerable: true,\n  get: function () {\n    return _index.__InputValue;\n  },\n});\nObject.defineProperty(exports, '__Schema', {\n  enumerable: true,\n  get: function () {\n    return _index.__Schema;\n  },\n});\nObject.defineProperty(exports, '__Type', {\n  enumerable: true,\n  get: function () {\n    return _index.__Type;\n  },\n});\nObject.defineProperty(exports, '__TypeKind', {\n  enumerable: true,\n  get: function () {\n    return _index.__TypeKind;\n  },\n});\nObject.defineProperty(exports, 'assertAbstractType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertAbstractType;\n  },\n});\nObject.defineProperty(exports, 'assertCompositeType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertCompositeType;\n  },\n});\nObject.defineProperty(exports, 'assertDirective', {\n  enumerable: true,\n  get: function () {\n    return _index.assertDirective;\n  },\n});\nObject.defineProperty(exports, 'assertEnumType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertEnumType;\n  },\n});\nObject.defineProperty(exports, 'assertEnumValueName', {\n  enumerable: true,\n  get: function () {\n    return _index.assertEnumValueName;\n  },\n});\nObject.defineProperty(exports, 'assertInputObjectType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertInputObjectType;\n  },\n});\nObject.defineProperty(exports, 'assertInputType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertInputType;\n  },\n});\nObject.defineProperty(exports, 'assertInterfaceType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertInterfaceType;\n  },\n});\nObject.defineProperty(exports, 'assertLeafType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertLeafType;\n  },\n});\nObject.defineProperty(exports, 'assertListType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertListType;\n  },\n});\nObject.defineProperty(exports, 'assertName', {\n  enumerable: true,\n  get: function () {\n    return _index.assertName;\n  },\n});\nObject.defineProperty(exports, 'assertNamedType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertNamedType;\n  },\n});\nObject.defineProperty(exports, 'assertNonNullType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertNonNullType;\n  },\n});\nObject.defineProperty(exports, 'assertNullableType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertNullableType;\n  },\n});\nObject.defineProperty(exports, 'assertObjectType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertObjectType;\n  },\n});\nObject.defineProperty(exports, 'assertOutputType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertOutputType;\n  },\n});\nObject.defineProperty(exports, 'assertScalarType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertScalarType;\n  },\n});\nObject.defineProperty(exports, 'assertSchema', {\n  enumerable: true,\n  get: function () {\n    return _index.assertSchema;\n  },\n});\nObject.defineProperty(exports, 'assertType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertType;\n  },\n});\nObject.defineProperty(exports, 'assertUnionType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertUnionType;\n  },\n});\nObject.defineProperty(exports, 'assertValidName', {\n  enumerable: true,\n  get: function () {\n    return _index6.assertValidName;\n  },\n});\nObject.defineProperty(exports, 'assertValidSchema', {\n  enumerable: true,\n  get: function () {\n    return _index.assertValidSchema;\n  },\n});\nObject.defineProperty(exports, 'assertWrappingType', {\n  enumerable: true,\n  get: function () {\n    return _index.assertWrappingType;\n  },\n});\nObject.defineProperty(exports, 'astFromValue', {\n  enumerable: true,\n  get: function () {\n    return _index6.astFromValue;\n  },\n});\nObject.defineProperty(exports, 'buildASTSchema', {\n  enumerable: true,\n  get: function () {\n    return _index6.buildASTSchema;\n  },\n});\nObject.defineProperty(exports, 'buildClientSchema', {\n  enumerable: true,\n  get: function () {\n    return _index6.buildClientSchema;\n  },\n});\nObject.defineProperty(exports, 'buildSchema', {\n  enumerable: true,\n  get: function () {\n    return _index6.buildSchema;\n  },\n});\nObject.defineProperty(exports, 'coerceInputValue', {\n  enumerable: true,\n  get: function () {\n    return _index6.coerceInputValue;\n  },\n});\nObject.defineProperty(exports, 'concatAST', {\n  enumerable: true,\n  get: function () {\n    return _index6.concatAST;\n  },\n});\nObject.defineProperty(exports, 'createSourceEventStream', {\n  enumerable: true,\n  get: function () {\n    return _index3.createSourceEventStream;\n  },\n});\nObject.defineProperty(exports, 'defaultFieldResolver', {\n  enumerable: true,\n  get: function () {\n    return _index3.defaultFieldResolver;\n  },\n});\nObject.defineProperty(exports, 'defaultTypeResolver', {\n  enumerable: true,\n  get: function () {\n    return _index3.defaultTypeResolver;\n  },\n});\nObject.defineProperty(exports, 'doTypesOverlap', {\n  enumerable: true,\n  get: function () {\n    return _index6.doTypesOverlap;\n  },\n});\nObject.defineProperty(exports, 'execute', {\n  enumerable: true,\n  get: function () {\n    return _index3.execute;\n  },\n});\nObject.defineProperty(exports, 'executeSync', {\n  enumerable: true,\n  get: function () {\n    return _index3.executeSync;\n  },\n});\nObject.defineProperty(exports, 'extendSchema', {\n  enumerable: true,\n  get: function () {\n    return _index6.extendSchema;\n  },\n});\nObject.defineProperty(exports, 'findBreakingChanges', {\n  enumerable: true,\n  get: function () {\n    return _index6.findBreakingChanges;\n  },\n});\nObject.defineProperty(exports, 'findDangerousChanges', {\n  enumerable: true,\n  get: function () {\n    return _index6.findDangerousChanges;\n  },\n});\nObject.defineProperty(exports, 'formatError', {\n  enumerable: true,\n  get: function () {\n    return _index5.formatError;\n  },\n});\nObject.defineProperty(exports, 'getArgumentValues', {\n  enumerable: true,\n  get: function () {\n    return _index3.getArgumentValues;\n  },\n});\nObject.defineProperty(exports, 'getDirectiveValues', {\n  enumerable: true,\n  get: function () {\n    return _index3.getDirectiveValues;\n  },\n});\nObject.defineProperty(exports, 'getEnterLeaveForKind', {\n  enumerable: true,\n  get: function () {\n    return _index2.getEnterLeaveForKind;\n  },\n});\nObject.defineProperty(exports, 'getIntrospectionQuery', {\n  enumerable: true,\n  get: function () {\n    return _index6.getIntrospectionQuery;\n  },\n});\nObject.defineProperty(exports, 'getLocation', {\n  enumerable: true,\n  get: function () {\n    return _index2.getLocation;\n  },\n});\nObject.defineProperty(exports, 'getNamedType', {\n  enumerable: true,\n  get: function () {\n    return _index.getNamedType;\n  },\n});\nObject.defineProperty(exports, 'getNullableType', {\n  enumerable: true,\n  get: function () {\n    return _index.getNullableType;\n  },\n});\nObject.defineProperty(exports, 'getOperationAST', {\n  enumerable: true,\n  get: function () {\n    return _index6.getOperationAST;\n  },\n});\nObject.defineProperty(exports, 'getOperationRootType', {\n  enumerable: true,\n  get: function () {\n    return _index6.getOperationRootType;\n  },\n});\nObject.defineProperty(exports, 'getVariableValues', {\n  enumerable: true,\n  get: function () {\n    return _index3.getVariableValues;\n  },\n});\nObject.defineProperty(exports, 'getVisitFn', {\n  enumerable: true,\n  get: function () {\n    return _index2.getVisitFn;\n  },\n});\nObject.defineProperty(exports, 'graphql', {\n  enumerable: true,\n  get: function () {\n    return _graphql.graphql;\n  },\n});\nObject.defineProperty(exports, 'graphqlSync', {\n  enumerable: true,\n  get: function () {\n    return _graphql.graphqlSync;\n  },\n});\nObject.defineProperty(exports, 'introspectionFromSchema', {\n  enumerable: true,\n  get: function () {\n    return _index6.introspectionFromSchema;\n  },\n});\nObject.defineProperty(exports, 'introspectionTypes', {\n  enumerable: true,\n  get: function () {\n    return _index.introspectionTypes;\n  },\n});\nObject.defineProperty(exports, 'isAbstractType', {\n  enumerable: true,\n  get: function () {\n    return _index.isAbstractType;\n  },\n});\nObject.defineProperty(exports, 'isCompositeType', {\n  enumerable: true,\n  get: function () {\n    return _index.isCompositeType;\n  },\n});\nObject.defineProperty(exports, 'isConstValueNode', {\n  enumerable: true,\n  get: function () {\n    return _index2.isConstValueNode;\n  },\n});\nObject.defineProperty(exports, 'isDefinitionNode', {\n  enumerable: true,\n  get: function () {\n    return _index2.isDefinitionNode;\n  },\n});\nObject.defineProperty(exports, 'isDirective', {\n  enumerable: true,\n  get: function () {\n    return _index.isDirective;\n  },\n});\nObject.defineProperty(exports, 'isEnumType', {\n  enumerable: true,\n  get: function () {\n    return _index.isEnumType;\n  },\n});\nObject.defineProperty(exports, 'isEqualType', {\n  enumerable: true,\n  get: function () {\n    return _index6.isEqualType;\n  },\n});\nObject.defineProperty(exports, 'isExecutableDefinitionNode', {\n  enumerable: true,\n  get: function () {\n    return _index2.isExecutableDefinitionNode;\n  },\n});\nObject.defineProperty(exports, 'isInputObjectType', {\n  enumerable: true,\n  get: function () {\n    return _index.isInputObjectType;\n  },\n});\nObject.defineProperty(exports, 'isInputType', {\n  enumerable: true,\n  get: function () {\n    return _index.isInputType;\n  },\n});\nObject.defineProperty(exports, 'isInterfaceType', {\n  enumerable: true,\n  get: function () {\n    return _index.isInterfaceType;\n  },\n});\nObject.defineProperty(exports, 'isIntrospectionType', {\n  enumerable: true,\n  get: function () {\n    return _index.isIntrospectionType;\n  },\n});\nObject.defineProperty(exports, 'isLeafType', {\n  enumerable: true,\n  get: function () {\n    return _index.isLeafType;\n  },\n});\nObject.defineProperty(exports, 'isListType', {\n  enumerable: true,\n  get: function () {\n    return _index.isListType;\n  },\n});\nObject.defineProperty(exports, 'isNamedType', {\n  enumerable: true,\n  get: function () {\n    return _index.isNamedType;\n  },\n});\nObject.defineProperty(exports, 'isNonNullType', {\n  enumerable: true,\n  get: function () {\n    return _index.isNonNullType;\n  },\n});\nObject.defineProperty(exports, 'isNullableType', {\n  enumerable: true,\n  get: function () {\n    return _index.isNullableType;\n  },\n});\nObject.defineProperty(exports, 'isObjectType', {\n  enumerable: true,\n  get: function () {\n    return _index.isObjectType;\n  },\n});\nObject.defineProperty(exports, 'isOutputType', {\n  enumerable: true,\n  get: function () {\n    return _index.isOutputType;\n  },\n});\nObject.defineProperty(exports, 'isRequiredArgument', {\n  enumerable: true,\n  get: function () {\n    return _index.isRequiredArgument;\n  },\n});\nObject.defineProperty(exports, 'isRequiredInputField', {\n  enumerable: true,\n  get: function () {\n    return _index.isRequiredInputField;\n  },\n});\nObject.defineProperty(exports, 'isScalarType', {\n  enumerable: true,\n  get: function () {\n    return _index.isScalarType;\n  },\n});\nObject.defineProperty(exports, 'isSchema', {\n  enumerable: true,\n  get: function () {\n    return _index.isSchema;\n  },\n});\nObject.defineProperty(exports, 'isSelectionNode', {\n  enumerable: true,\n  get: function () {\n    return _index2.isSelectionNode;\n  },\n});\nObject.defineProperty(exports, 'isSpecifiedDirective', {\n  enumerable: true,\n  get: function () {\n    return _index.isSpecifiedDirective;\n  },\n});\nObject.defineProperty(exports, 'isSpecifiedScalarType', {\n  enumerable: true,\n  get: function () {\n    return _index.isSpecifiedScalarType;\n  },\n});\nObject.defineProperty(exports, 'isType', {\n  enumerable: true,\n  get: function () {\n    return _index.isType;\n  },\n});\nObject.defineProperty(exports, 'isTypeDefinitionNode', {\n  enumerable: true,\n  get: function () {\n    return _index2.isTypeDefinitionNode;\n  },\n});\nObject.defineProperty(exports, 'isTypeExtensionNode', {\n  enumerable: true,\n  get: function () {\n    return _index2.isTypeExtensionNode;\n  },\n});\nObject.defineProperty(exports, 'isTypeNode', {\n  enumerable: true,\n  get: function () {\n    return _index2.isTypeNode;\n  },\n});\nObject.defineProperty(exports, 'isTypeSubTypeOf', {\n  enumerable: true,\n  get: function () {\n    return _index6.isTypeSubTypeOf;\n  },\n});\nObject.defineProperty(exports, 'isTypeSystemDefinitionNode', {\n  enumerable: true,\n  get: function () {\n    return _index2.isTypeSystemDefinitionNode;\n  },\n});\nObject.defineProperty(exports, 'isTypeSystemExtensionNode', {\n  enumerable: true,\n  get: function () {\n    return _index2.isTypeSystemExtensionNode;\n  },\n});\nObject.defineProperty(exports, 'isUnionType', {\n  enumerable: true,\n  get: function () {\n    return _index.isUnionType;\n  },\n});\nObject.defineProperty(exports, 'isValidNameError', {\n  enumerable: true,\n  get: function () {\n    return _index6.isValidNameError;\n  },\n});\nObject.defineProperty(exports, 'isValueNode', {\n  enumerable: true,\n  get: function () {\n    return _index2.isValueNode;\n  },\n});\nObject.defineProperty(exports, 'isWrappingType', {\n  enumerable: true,\n  get: function () {\n    return _index.isWrappingType;\n  },\n});\nObject.defineProperty(exports, 'lexicographicSortSchema', {\n  enumerable: true,\n  get: function () {\n    return _index6.lexicographicSortSchema;\n  },\n});\nObject.defineProperty(exports, 'locatedError', {\n  enumerable: true,\n  get: function () {\n    return _index5.locatedError;\n  },\n});\nObject.defineProperty(exports, 'parse', {\n  enumerable: true,\n  get: function () {\n    return _index2.parse;\n  },\n});\nObject.defineProperty(exports, 'parseConstValue', {\n  enumerable: true,\n  get: function () {\n    return _index2.parseConstValue;\n  },\n});\nObject.defineProperty(exports, 'parseType', {\n  enumerable: true,\n  get: function () {\n    return _index2.parseType;\n  },\n});\nObject.defineProperty(exports, 'parseValue', {\n  enumerable: true,\n  get: function () {\n    return _index2.parseValue;\n  },\n});\nObject.defineProperty(exports, 'print', {\n  enumerable: true,\n  get: function () {\n    return _index2.print;\n  },\n});\nObject.defineProperty(exports, 'printError', {\n  enumerable: true,\n  get: function () {\n    return _index5.printError;\n  },\n});\nObject.defineProperty(exports, 'printIntrospectionSchema', {\n  enumerable: true,\n  get: function () {\n    return _index6.printIntrospectionSchema;\n  },\n});\nObject.defineProperty(exports, 'printLocation', {\n  enumerable: true,\n  get: function () {\n    return _index2.printLocation;\n  },\n});\nObject.defineProperty(exports, 'printSchema', {\n  enumerable: true,\n  get: function () {\n    return _index6.printSchema;\n  },\n});\nObject.defineProperty(exports, 'printSourceLocation', {\n  enumerable: true,\n  get: function () {\n    return _index2.printSourceLocation;\n  },\n});\nObject.defineProperty(exports, 'printType', {\n  enumerable: true,\n  get: function () {\n    return _index6.printType;\n  },\n});\nObject.defineProperty(exports, 'resolveObjMapThunk', {\n  enumerable: true,\n  get: function () {\n    return _index.resolveObjMapThunk;\n  },\n});\nObject.defineProperty(exports, 'resolveReadonlyArrayThunk', {\n  enumerable: true,\n  get: function () {\n    return _index.resolveReadonlyArrayThunk;\n  },\n});\nObject.defineProperty(exports, 'responsePathAsArray', {\n  enumerable: true,\n  get: function () {\n    return _index3.responsePathAsArray;\n  },\n});\nObject.defineProperty(exports, 'separateOperations', {\n  enumerable: true,\n  get: function () {\n    return _index6.separateOperations;\n  },\n});\nObject.defineProperty(exports, 'specifiedDirectives', {\n  enumerable: true,\n  get: function () {\n    return _index.specifiedDirectives;\n  },\n});\nObject.defineProperty(exports, 'specifiedRules', {\n  enumerable: true,\n  get: function () {\n    return _index4.specifiedRules;\n  },\n});\nObject.defineProperty(exports, 'specifiedScalarTypes', {\n  enumerable: true,\n  get: function () {\n    return _index.specifiedScalarTypes;\n  },\n});\nObject.defineProperty(exports, 'stripIgnoredCharacters', {\n  enumerable: true,\n  get: function () {\n    return _index6.stripIgnoredCharacters;\n  },\n});\nObject.defineProperty(exports, 'subscribe', {\n  enumerable: true,\n  get: function () {\n    return _index3.subscribe;\n  },\n});\nObject.defineProperty(exports, 'syntaxError', {\n  enumerable: true,\n  get: function () {\n    return _index5.syntaxError;\n  },\n});\nObject.defineProperty(exports, 'typeFromAST', {\n  enumerable: true,\n  get: function () {\n    return _index6.typeFromAST;\n  },\n});\nObject.defineProperty(exports, 'validate', {\n  enumerable: true,\n  get: function () {\n    return _index4.validate;\n  },\n});\nObject.defineProperty(exports, 'validateSchema', {\n  enumerable: true,\n  get: function () {\n    return _index.validateSchema;\n  },\n});\nObject.defineProperty(exports, 'valueFromAST', {\n  enumerable: true,\n  get: function () {\n    return _index6.valueFromAST;\n  },\n});\nObject.defineProperty(exports, 'valueFromASTUntyped', {\n  enumerable: true,\n  get: function () {\n    return _index6.valueFromASTUntyped;\n  },\n});\nObject.defineProperty(exports, 'version', {\n  enumerable: true,\n  get: function () {\n    return _version.version;\n  },\n});\nObject.defineProperty(exports, 'versionInfo', {\n  enumerable: true,\n  get: function () {\n    return _version.versionInfo;\n  },\n});\nObject.defineProperty(exports, 'visit', {\n  enumerable: true,\n  get: function () {\n    return _index2.visit;\n  },\n});\nObject.defineProperty(exports, 'visitInParallel', {\n  enumerable: true,\n  get: function () {\n    return _index2.visitInParallel;\n  },\n});\nObject.defineProperty(exports, 'visitWithTypeInfo', {\n  enumerable: true,\n  get: function () {\n    return _index6.visitWithTypeInfo;\n  },\n});\n\nvar _version = require('./version.js');\n\nvar _graphql = require('./graphql.js');\n\nvar _index = require('./type/index.js');\n\nvar _index2 = require('./language/index.js');\n\nvar _index3 = require('./execution/index.js');\n\nvar _index4 = require('./validation/index.js');\n\nvar _index5 = require('./error/index.js');\n\nvar _index6 = require('./utilities/index.js');\n", "// A [trie](https://en.wikipedia.org/wiki/Trie) data structure that holds\n// object keys weakly, yet can also hold non-object keys, unlike the\n// native `WeakMap`.\n// If no makeData function is supplied, the looked-up data will be an empty,\n// null-prototype Object.\nvar defaultMakeData = function () { return Object.create(null); };\n// Useful for processing arguments objects as well as arrays.\nvar _a = Array.prototype, forEach = _a.forEach, slice = _a.slice;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar Trie = /** @class */ (function () {\n    function Trie(weakness, makeData) {\n        if (weakness === void 0) { weakness = true; }\n        if (makeData === void 0) { makeData = defaultMakeData; }\n        this.weakness = weakness;\n        this.makeData = makeData;\n    }\n    Trie.prototype.lookup = function () {\n        return this.lookupArray(arguments);\n    };\n    Trie.prototype.lookupArray = function (array) {\n        var node = this;\n        forEach.call(array, function (key) { return node = node.getChildTrie(key); });\n        return hasOwnProperty.call(node, \"data\")\n            ? node.data\n            : node.data = this.makeData(slice.call(array));\n    };\n    Trie.prototype.peek = function () {\n        return this.peekArray(arguments);\n    };\n    Trie.prototype.peekArray = function (array) {\n        var node = this;\n        for (var i = 0, len = array.length; node && i < len; ++i) {\n            var map = node.mapFor(array[i], false);\n            node = map && map.get(array[i]);\n        }\n        return node && node.data;\n    };\n    Trie.prototype.remove = function () {\n        return this.removeArray(arguments);\n    };\n    Trie.prototype.removeArray = function (array) {\n        var data;\n        if (array.length) {\n            var head = array[0];\n            var map = this.mapFor(head, false);\n            var child = map && map.get(head);\n            if (child) {\n                data = child.removeArray(slice.call(array, 1));\n                if (!child.data && !child.weak && !(child.strong && child.strong.size)) {\n                    map.delete(head);\n                }\n            }\n        }\n        else {\n            data = this.data;\n            delete this.data;\n        }\n        return data;\n    };\n    Trie.prototype.getChildTrie = function (key) {\n        var map = this.mapFor(key, true);\n        var child = map.get(key);\n        if (!child)\n            map.set(key, child = new Trie(this.weakness, this.makeData));\n        return child;\n    };\n    Trie.prototype.mapFor = function (key, create) {\n        return this.weakness && isObjRef(key)\n            ? this.weak || (create ? this.weak = new WeakMap : void 0)\n            : this.strong || (create ? this.strong = new Map : void 0);\n    };\n    return Trie;\n}());\nexport { Trie };\nfunction isObjRef(value) {\n    switch (typeof value) {\n        case \"object\":\n            if (value === null)\n                break;\n        // Fall through to return true...\n        case \"function\":\n            return true;\n    }\n    return false;\n}\n//# sourceMappingURL=index.js.map", "function defaultDispose() { }\nvar StrongCache = /** @class */ (function () {\n    function StrongCache(max, dispose) {\n        if (max === void 0) { max = Infinity; }\n        if (dispose === void 0) { dispose = defaultDispose; }\n        this.max = max;\n        this.dispose = dispose;\n        this.map = new Map();\n        this.newest = null;\n        this.oldest = null;\n    }\n    StrongCache.prototype.has = function (key) {\n        return this.map.has(key);\n    };\n    StrongCache.prototype.get = function (key) {\n        var node = this.getNode(key);\n        return node && node.value;\n    };\n    Object.defineProperty(StrongCache.prototype, \"size\", {\n        get: function () {\n            return this.map.size;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    StrongCache.prototype.getNode = function (key) {\n        var node = this.map.get(key);\n        if (node && node !== this.newest) {\n            var older = node.older, newer = node.newer;\n            if (newer) {\n                newer.older = older;\n            }\n            if (older) {\n                older.newer = newer;\n            }\n            node.older = this.newest;\n            node.older.newer = node;\n            node.newer = null;\n            this.newest = node;\n            if (node === this.oldest) {\n                this.oldest = newer;\n            }\n        }\n        return node;\n    };\n    StrongCache.prototype.set = function (key, value) {\n        var node = this.getNode(key);\n        if (node) {\n            return node.value = value;\n        }\n        node = {\n            key: key,\n            value: value,\n            newer: null,\n            older: this.newest\n        };\n        if (this.newest) {\n            this.newest.newer = node;\n        }\n        this.newest = node;\n        this.oldest = this.oldest || node;\n        this.map.set(key, node);\n        return node.value;\n    };\n    StrongCache.prototype.clean = function () {\n        while (this.oldest && this.map.size > this.max) {\n            this.delete(this.oldest.key);\n        }\n    };\n    StrongCache.prototype.delete = function (key) {\n        var node = this.map.get(key);\n        if (node) {\n            if (node === this.newest) {\n                this.newest = node.older;\n            }\n            if (node === this.oldest) {\n                this.oldest = node.newer;\n            }\n            if (node.newer) {\n                node.newer.older = node.older;\n            }\n            if (node.older) {\n                node.older.newer = node.newer;\n            }\n            this.map.delete(key);\n            this.dispose(node.value, key);\n            return true;\n        }\n        return false;\n    };\n    return StrongCache;\n}());\nexport { StrongCache };\n//# sourceMappingURL=strong.js.map", "function noop() { }\nvar defaultDispose = noop;\nvar _WeakRef = typeof WeakRef !== \"undefined\"\n    ? WeakRef\n    : function (value) {\n        return { deref: function () { return value; } };\n    };\nvar _WeakMap = typeof WeakMap !== \"undefined\" ? WeakMap : Map;\nvar _FinalizationRegistry = typeof FinalizationRegistry !== \"undefined\"\n    ? FinalizationRegistry\n    : function () {\n        return {\n            register: noop,\n            unregister: noop,\n        };\n    };\nvar finalizationBatchSize = 10024;\nvar WeakCache = /** @class */ (function () {\n    function WeakCache(max, dispose) {\n        if (max === void 0) { max = Infinity; }\n        if (dispose === void 0) { dispose = defaultDispose; }\n        var _this = this;\n        this.max = max;\n        this.dispose = dispose;\n        this.map = new _WeakMap();\n        this.newest = null;\n        this.oldest = null;\n        this.unfinalizedNodes = new Set();\n        this.finalizationScheduled = false;\n        this.size = 0;\n        this.finalize = function () {\n            var iterator = _this.unfinalizedNodes.values();\n            for (var i = 0; i < finalizationBatchSize; i++) {\n                var node = iterator.next().value;\n                if (!node)\n                    break;\n                _this.unfinalizedNodes.delete(node);\n                var key = node.key;\n                delete node.key;\n                node.keyRef = new _WeakRef(key);\n                _this.registry.register(key, node, node);\n            }\n            if (_this.unfinalizedNodes.size > 0) {\n                queueMicrotask(_this.finalize);\n            }\n            else {\n                _this.finalizationScheduled = false;\n            }\n        };\n        this.registry = new _FinalizationRegistry(this.deleteNode.bind(this));\n    }\n    WeakCache.prototype.has = function (key) {\n        return this.map.has(key);\n    };\n    WeakCache.prototype.get = function (key) {\n        var node = this.getNode(key);\n        return node && node.value;\n    };\n    WeakCache.prototype.getNode = function (key) {\n        var node = this.map.get(key);\n        if (node && node !== this.newest) {\n            var older = node.older, newer = node.newer;\n            if (newer) {\n                newer.older = older;\n            }\n            if (older) {\n                older.newer = newer;\n            }\n            node.older = this.newest;\n            node.older.newer = node;\n            node.newer = null;\n            this.newest = node;\n            if (node === this.oldest) {\n                this.oldest = newer;\n            }\n        }\n        return node;\n    };\n    WeakCache.prototype.set = function (key, value) {\n        var node = this.getNode(key);\n        if (node) {\n            return (node.value = value);\n        }\n        node = {\n            key: key,\n            value: value,\n            newer: null,\n            older: this.newest,\n        };\n        if (this.newest) {\n            this.newest.newer = node;\n        }\n        this.newest = node;\n        this.oldest = this.oldest || node;\n        this.scheduleFinalization(node);\n        this.map.set(key, node);\n        this.size++;\n        return node.value;\n    };\n    WeakCache.prototype.clean = function () {\n        while (this.oldest && this.size > this.max) {\n            this.deleteNode(this.oldest);\n        }\n    };\n    WeakCache.prototype.deleteNode = function (node) {\n        if (node === this.newest) {\n            this.newest = node.older;\n        }\n        if (node === this.oldest) {\n            this.oldest = node.newer;\n        }\n        if (node.newer) {\n            node.newer.older = node.older;\n        }\n        if (node.older) {\n            node.older.newer = node.newer;\n        }\n        this.size--;\n        var key = node.key || (node.keyRef && node.keyRef.deref());\n        this.dispose(node.value, key);\n        if (!node.keyRef) {\n            this.unfinalizedNodes.delete(node);\n        }\n        else {\n            this.registry.unregister(node);\n        }\n        if (key)\n            this.map.delete(key);\n    };\n    WeakCache.prototype.delete = function (key) {\n        var node = this.map.get(key);\n        if (node) {\n            this.deleteNode(node);\n            return true;\n        }\n        return false;\n    };\n    WeakCache.prototype.scheduleFinalization = function (node) {\n        this.unfinalizedNodes.add(node);\n        if (!this.finalizationScheduled) {\n            this.finalizationScheduled = true;\n            queueMicrotask(this.finalize);\n        }\n    };\n    return WeakCache;\n}());\nexport { WeakCache };\n//# sourceMappingURL=weak.js.map", "// A [trie](https://en.wikipedia.org/wiki/Trie) data structure that holds\n// object keys weakly, yet can also hold non-object keys, unlike the\n// native `WeakMap`.\n// If no makeData function is supplied, the looked-up data will be an empty,\n// null-prototype Object.\nvar defaultMakeData = function () { return Object.create(null); };\n// Useful for processing arguments objects as well as arrays.\nvar _a = Array.prototype, forEach = _a.forEach, slice = _a.slice;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar Trie = /** @class */ (function () {\n    function Trie(weakness, makeData) {\n        if (weakness === void 0) { weakness = true; }\n        if (makeData === void 0) { makeData = defaultMakeData; }\n        this.weakness = weakness;\n        this.makeData = makeData;\n    }\n    Trie.prototype.lookup = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i] = arguments[_i];\n        }\n        return this.lookupArray(array);\n    };\n    Trie.prototype.lookupArray = function (array) {\n        var node = this;\n        forEach.call(array, function (key) { return node = node.getChildTrie(key); });\n        return hasOwnProperty.call(node, \"data\")\n            ? node.data\n            : node.data = this.makeData(slice.call(array));\n    };\n    Trie.prototype.peek = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i] = arguments[_i];\n        }\n        return this.peekArray(array);\n    };\n    Trie.prototype.peekArray = function (array) {\n        var node = this;\n        for (var i = 0, len = array.length; node && i < len; ++i) {\n            var map = this.weakness && isObjRef(array[i]) ? node.weak : node.strong;\n            node = map && map.get(array[i]);\n        }\n        return node && node.data;\n    };\n    Trie.prototype.getChildTrie = function (key) {\n        var map = this.weakness && isObjRef(key)\n            ? this.weak || (this.weak = new WeakMap())\n            : this.strong || (this.strong = new Map());\n        var child = map.get(key);\n        if (!child)\n            map.set(key, child = new Trie(this.weakness, this.makeData));\n        return child;\n    };\n    return Trie;\n}());\nexport { Trie };\nfunction isObjRef(value) {\n    switch (typeof value) {\n        case \"object\":\n            if (value === null)\n                break;\n        // Fall through to return true...\n        case \"function\":\n            return true;\n    }\n    return false;\n}\n//# sourceMappingURL=index.js.map", "// This currentContext variable will only be used if the makeSlotClass\n// function is called, which happens only if this is the first copy of the\n// @wry/context package to be imported.\nvar currentContext = null;\n// This unique internal object is used to denote the absence of a value\n// for a given Slot, and is never exposed to outside code.\nvar MISSING_VALUE = {};\nvar idCounter = 1;\n// Although we can't do anything about the cost of duplicated code from\n// accidentally bundling multiple copies of the @wry/context package, we can\n// avoid creating the Slot class more than once using makeSlotClass.\nvar makeSlotClass = function () { return /** @class */ (function () {\n    function Slot() {\n        // If you have a Slot object, you can find out its slot.id, but you cannot\n        // guess the slot.id of a Slot you don't have access to, thanks to the\n        // randomized suffix.\n        this.id = [\n            \"slot\",\n            idCounter++,\n            Date.now(),\n            Math.random().toString(36).slice(2),\n        ].join(\":\");\n    }\n    Slot.prototype.hasValue = function () {\n        for (var context_1 = currentContext; context_1; context_1 = context_1.parent) {\n            // We use the Slot object iself as a key to its value, which means the\n            // value cannot be obtained without a reference to the Slot object.\n            if (this.id in context_1.slots) {\n                var value = context_1.slots[this.id];\n                if (value === MISSING_VALUE)\n                    break;\n                if (context_1 !== currentContext) {\n                    // Cache the value in currentContext.slots so the next lookup will\n                    // be faster. This caching is safe because the tree of contexts and\n                    // the values of the slots are logically immutable.\n                    currentContext.slots[this.id] = value;\n                }\n                return true;\n            }\n        }\n        if (currentContext) {\n            // If a value was not found for this Slot, it's never going to be found\n            // no matter how many times we look it up, so we might as well cache\n            // the absence of the value, too.\n            currentContext.slots[this.id] = MISSING_VALUE;\n        }\n        return false;\n    };\n    Slot.prototype.getValue = function () {\n        if (this.hasValue()) {\n            return currentContext.slots[this.id];\n        }\n    };\n    Slot.prototype.withValue = function (value, callback, \n    // Given the prevalence of arrow functions, specifying arguments is likely\n    // to be much more common than specifying `this`, hence this ordering:\n    args, thisArg) {\n        var _a;\n        var slots = (_a = {\n                __proto__: null\n            },\n            _a[this.id] = value,\n            _a);\n        var parent = currentContext;\n        currentContext = { parent: parent, slots: slots };\n        try {\n            // Function.prototype.apply allows the arguments array argument to be\n            // omitted or undefined, so args! is fine here.\n            return callback.apply(thisArg, args);\n        }\n        finally {\n            currentContext = parent;\n        }\n    };\n    // Capture the current context and wrap a callback function so that it\n    // reestablishes the captured context when called.\n    Slot.bind = function (callback) {\n        var context = currentContext;\n        return function () {\n            var saved = currentContext;\n            try {\n                currentContext = context;\n                return callback.apply(this, arguments);\n            }\n            finally {\n                currentContext = saved;\n            }\n        };\n    };\n    // Immediately run a callback function without any captured context.\n    Slot.noContext = function (callback, \n    // Given the prevalence of arrow functions, specifying arguments is likely\n    // to be much more common than specifying `this`, hence this ordering:\n    args, thisArg) {\n        if (currentContext) {\n            var saved = currentContext;\n            try {\n                currentContext = null;\n                // Function.prototype.apply allows the arguments array argument to be\n                // omitted or undefined, so args! is fine here.\n                return callback.apply(thisArg, args);\n            }\n            finally {\n                currentContext = saved;\n            }\n        }\n        else {\n            return callback.apply(thisArg, args);\n        }\n    };\n    return Slot;\n}()); };\nfunction maybe(fn) {\n    try {\n        return fn();\n    }\n    catch (ignored) { }\n}\n// We store a single global implementation of the Slot class as a permanent\n// non-enumerable property of the globalThis object. This obfuscation does\n// nothing to prevent access to the Slot class, but at least it ensures the\n// implementation (i.e. currentContext) cannot be tampered with, and all copies\n// of the @wry/context package (hopefully just one) will share the same Slot\n// implementation. Since the first copy of the @wry/context package to be\n// imported wins, this technique imposes a steep cost for any future breaking\n// changes to the Slot class.\nvar globalKey = \"@wry/context:Slot\";\nvar host = \n// Prefer globalThis when available.\n// https://github.com/benjamn/wryware/issues/347\nmaybe(function () { return globalThis; }) ||\n    // Fall back to global, which works in Node.js and may be converted by some\n    // bundlers to the appropriate identifier (window, self, ...) depending on the\n    // bundling target. https://github.com/endojs/endo/issues/576#issuecomment-1178515224\n    maybe(function () { return global; }) ||\n    // Otherwise, use a dummy host that's local to this module. We used to fall\n    // back to using the Array constructor as a namespace, but that was flagged in\n    // https://github.com/benjamn/wryware/issues/347, and can be avoided.\n    Object.create(null);\n// Whichever globalHost we're using, make TypeScript happy about the additional\n// globalKey property.\nvar globalHost = host;\nexport var Slot = globalHost[globalKey] ||\n    // Earlier versions of this package stored the globalKey property on the Array\n    // constructor, so we check there as well, to prevent Slot class duplication.\n    Array[globalKey] ||\n    (function (Slot) {\n        try {\n            Object.defineProperty(globalHost, globalKey, {\n                value: Slot,\n                enumerable: false,\n                writable: false,\n                // When it was possible for globalHost to be the Array constructor (a\n                // legacy Slot dedup strategy), it was important for the property to be\n                // configurable:true so it could be deleted. That does not seem to be as\n                // important when globalHost is the global object, but I don't want to\n                // cause similar problems again, and configurable:true seems safest.\n                // https://github.com/endojs/endo/issues/576#issuecomment-1178274008\n                configurable: true\n            });\n        }\n        finally {\n            return Slot;\n        }\n    })(makeSlotClass());\n//# sourceMappingURL=slot.js.map", "import { Slot } from \"./slot.js\";\nexport { Slot };\nexport var bind = Slot.bind, noContext = Slot.noContext;\n// Like global.setTimeout, except the callback runs with captured context.\nexport { setTimeoutWithContext as setTimeout };\nfunction setTimeoutWithContext(callback, delay) {\n    return setTimeout(bind(callback), delay);\n}\n// Turn any generator function into an async function (using yield instead\n// of await), with context automatically preserved across yields.\nexport function asyncFromGen(genFn) {\n    return function () {\n        var gen = genFn.apply(this, arguments);\n        var boundNext = bind(gen.next);\n        var boundThrow = bind(gen.throw);\n        return new Promise(function (resolve, reject) {\n            function invoke(method, argument) {\n                try {\n                    var result = method.call(gen, argument);\n                }\n                catch (error) {\n                    return reject(error);\n                }\n                var next = result.done ? resolve : invokeNext;\n                if (isPromiseLike(result.value)) {\n                    result.value.then(next, result.done ? reject : invokeThrow);\n                }\n                else {\n                    next(result.value);\n                }\n            }\n            var invokeNext = function (value) { return invoke(boundNext, value); };\n            var invokeThrow = function (error) { return invoke(boundThrow, error); };\n            invokeNext();\n        });\n    };\n}\nfunction isPromiseLike(value) {\n    return value && typeof value.then === \"function\";\n}\n// If you use the fibers npm package to implement coroutines in Node.js,\n// you should call this function at least once to ensure context management\n// remains coherent across any yields.\nvar wrappedFibers = [];\nexport function wrapYieldingFiberMethods(Fiber) {\n    // There can be only one implementation of Fiber per process, so this array\n    // should never grow longer than one element.\n    if (wrappedFibers.indexOf(Fiber) < 0) {\n        var wrap = function (obj, method) {\n            var fn = obj[method];\n            obj[method] = function () {\n                return noContext(fn, arguments, this);\n            };\n        };\n        // These methods can yield, according to\n        // https://github.com/laverdet/node-fibers/blob/ddebed9b8ae3883e57f822e2108e6943e5c8d2a8/fibers.js#L97-L100\n        wrap(Fiber, \"yield\");\n        wrap(Fiber.prototype, \"run\");\n        wrap(Fiber.prototype, \"throwInto\");\n        wrappedFibers.push(Fiber);\n    }\n    return Fiber;\n}\n//# sourceMappingURL=index.js.map", "import { Slot } from \"@wry/context\";\nexport var parentEntrySlot = new Slot();\nexport function nonReactive(fn) {\n    return parentEntrySlot.withValue(void 0, fn);\n}\nexport { Slot };\nexport { bind as bindContext, noContext, setTimeout, asyncFromGen, } from \"@wry/context\";\n//# sourceMappingURL=context.js.map", "export var hasOwnProperty = Object.prototype.hasOwnProperty;\nexport var arrayFromSet = Array.from ||\n    function (set) {\n        var array = [];\n        set.forEach(function (item) { return array.push(item); });\n        return array;\n    };\nexport function maybeUnsubscribe(entryOrDep) {\n    var unsubscribe = entryOrDep.unsubscribe;\n    if (typeof unsubscribe === \"function\") {\n        entryOrDep.unsubscribe = void 0;\n        unsubscribe();\n    }\n}\n//# sourceMappingURL=helpers.js.map", "import { parentEntrySlot } from \"./context.js\";\nimport { maybeUnsubscribe, arrayFromSet } from \"./helpers.js\";\nvar emptySetPool = [];\nvar POOL_TARGET_SIZE = 100;\n// Since this package might be used browsers, we should avoid using the\n// Node built-in assert module.\nfunction assert(condition, optionalMessage) {\n    if (!condition) {\n        throw new Error(optionalMessage || \"assertion failure\");\n    }\n}\nfunction valueIs(a, b) {\n    var len = a.length;\n    return (\n    // Unknown values are not equal to each other.\n    len > 0 &&\n        // Both values must be ordinary (or both exceptional) to be equal.\n        len === b.length &&\n        // The underlying value or exception must be the same.\n        a[len - 1] === b[len - 1]);\n}\nfunction valueGet(value) {\n    switch (value.length) {\n        case 0: throw new Error(\"unknown value\");\n        case 1: return value[0];\n        case 2: throw value[1];\n    }\n}\nfunction valueCopy(value) {\n    return value.slice(0);\n}\nexport var Entry = /** @class */ (function () {\n    function Entry(fn) {\n        this.fn = fn;\n        this.parents = new Set();\n        this.childValues = new Map();\n        // When this Entry has children that are dirty, this property becomes\n        // a Set containing other Entry objects, borrowed from emptySetPool.\n        // When the set becomes empty, it gets recycled back to emptySetPool.\n        this.dirtyChildren = null;\n        this.dirty = true;\n        this.recomputing = false;\n        this.value = [];\n        this.deps = null;\n        ++Entry.count;\n    }\n    Entry.prototype.peek = function () {\n        if (this.value.length === 1 && !mightBeDirty(this)) {\n            rememberParent(this);\n            return this.value[0];\n        }\n    };\n    // This is the most important method of the Entry API, because it\n    // determines whether the cached this.value can be returned immediately,\n    // or must be recomputed. The overall performance of the caching system\n    // depends on the truth of the following observations: (1) this.dirty is\n    // usually false, (2) this.dirtyChildren is usually null/empty, and thus\n    // (3) valueGet(this.value) is usually returned without recomputation.\n    Entry.prototype.recompute = function (args) {\n        assert(!this.recomputing, \"already recomputing\");\n        rememberParent(this);\n        return mightBeDirty(this)\n            ? reallyRecompute(this, args)\n            : valueGet(this.value);\n    };\n    Entry.prototype.setDirty = function () {\n        if (this.dirty)\n            return;\n        this.dirty = true;\n        reportDirty(this);\n        // We can go ahead and unsubscribe here, since any further dirty\n        // notifications we receive will be redundant, and unsubscribing may\n        // free up some resources, e.g. file watchers.\n        maybeUnsubscribe(this);\n    };\n    Entry.prototype.dispose = function () {\n        var _this = this;\n        this.setDirty();\n        // Sever any dependency relationships with our own children, so those\n        // children don't retain this parent Entry in their child.parents sets,\n        // thereby preventing it from being fully garbage collected.\n        forgetChildren(this);\n        // Because this entry has been kicked out of the cache (in index.js),\n        // we've lost the ability to find out if/when this entry becomes dirty,\n        // whether that happens through a subscription, because of a direct call\n        // to entry.setDirty(), or because one of its children becomes dirty.\n        // Because of this loss of future information, we have to assume the\n        // worst (that this entry might have become dirty very soon), so we must\n        // immediately mark this entry's parents as dirty. Normally we could\n        // just call entry.setDirty() rather than calling parent.setDirty() for\n        // each parent, but that would leave this entry in parent.childValues\n        // and parent.dirtyChildren, which would prevent the child from being\n        // truly forgotten.\n        eachParent(this, function (parent, child) {\n            parent.setDirty();\n            forgetChild(parent, _this);\n        });\n    };\n    Entry.prototype.forget = function () {\n        // The code that creates Entry objects in index.ts will replace this method\n        // with one that actually removes the Entry from the cache, which will also\n        // trigger the entry.dispose method.\n        this.dispose();\n    };\n    Entry.prototype.dependOn = function (dep) {\n        dep.add(this);\n        if (!this.deps) {\n            this.deps = emptySetPool.pop() || new Set();\n        }\n        this.deps.add(dep);\n    };\n    Entry.prototype.forgetDeps = function () {\n        var _this = this;\n        if (this.deps) {\n            arrayFromSet(this.deps).forEach(function (dep) { return dep.delete(_this); });\n            this.deps.clear();\n            emptySetPool.push(this.deps);\n            this.deps = null;\n        }\n    };\n    Entry.count = 0;\n    return Entry;\n}());\nfunction rememberParent(child) {\n    var parent = parentEntrySlot.getValue();\n    if (parent) {\n        child.parents.add(parent);\n        if (!parent.childValues.has(child)) {\n            parent.childValues.set(child, []);\n        }\n        if (mightBeDirty(child)) {\n            reportDirtyChild(parent, child);\n        }\n        else {\n            reportCleanChild(parent, child);\n        }\n        return parent;\n    }\n}\nfunction reallyRecompute(entry, args) {\n    forgetChildren(entry);\n    // Set entry as the parent entry while calling recomputeNewValue(entry).\n    parentEntrySlot.withValue(entry, recomputeNewValue, [entry, args]);\n    if (maybeSubscribe(entry, args)) {\n        // If we successfully recomputed entry.value and did not fail to\n        // (re)subscribe, then this Entry is no longer explicitly dirty.\n        setClean(entry);\n    }\n    return valueGet(entry.value);\n}\nfunction recomputeNewValue(entry, args) {\n    entry.recomputing = true;\n    var normalizeResult = entry.normalizeResult;\n    var oldValueCopy;\n    if (normalizeResult && entry.value.length === 1) {\n        oldValueCopy = valueCopy(entry.value);\n    }\n    // Make entry.value an empty array, representing an unknown value.\n    entry.value.length = 0;\n    try {\n        // If entry.fn succeeds, entry.value will become a normal Value.\n        entry.value[0] = entry.fn.apply(null, args);\n        // If we have a viable oldValueCopy to compare with the (successfully\n        // recomputed) new entry.value, and they are not already === identical, give\n        // normalizeResult a chance to pick/choose/reuse parts of oldValueCopy[0]\n        // and/or entry.value[0] to determine the final cached entry.value.\n        if (normalizeResult && oldValueCopy && !valueIs(oldValueCopy, entry.value)) {\n            try {\n                entry.value[0] = normalizeResult(entry.value[0], oldValueCopy[0]);\n            }\n            catch (_a) {\n                // If normalizeResult throws, just use the newer value, rather than\n                // saving the exception as entry.value[1].\n            }\n        }\n    }\n    catch (e) {\n        // If entry.fn throws, entry.value will hold that exception.\n        entry.value[1] = e;\n    }\n    // Either way, this line is always reached.\n    entry.recomputing = false;\n}\nfunction mightBeDirty(entry) {\n    return entry.dirty || !!(entry.dirtyChildren && entry.dirtyChildren.size);\n}\nfunction setClean(entry) {\n    entry.dirty = false;\n    if (mightBeDirty(entry)) {\n        // This Entry may still have dirty children, in which case we can't\n        // let our parents know we're clean just yet.\n        return;\n    }\n    reportClean(entry);\n}\nfunction reportDirty(child) {\n    eachParent(child, reportDirtyChild);\n}\nfunction reportClean(child) {\n    eachParent(child, reportCleanChild);\n}\nfunction eachParent(child, callback) {\n    var parentCount = child.parents.size;\n    if (parentCount) {\n        var parents = arrayFromSet(child.parents);\n        for (var i = 0; i < parentCount; ++i) {\n            callback(parents[i], child);\n        }\n    }\n}\n// Let a parent Entry know that one of its children may be dirty.\nfunction reportDirtyChild(parent, child) {\n    // Must have called rememberParent(child) before calling\n    // reportDirtyChild(parent, child).\n    assert(parent.childValues.has(child));\n    assert(mightBeDirty(child));\n    var parentWasClean = !mightBeDirty(parent);\n    if (!parent.dirtyChildren) {\n        parent.dirtyChildren = emptySetPool.pop() || new Set;\n    }\n    else if (parent.dirtyChildren.has(child)) {\n        // If we already know this child is dirty, then we must have already\n        // informed our own parents that we are dirty, so we can terminate\n        // the recursion early.\n        return;\n    }\n    parent.dirtyChildren.add(child);\n    // If parent was clean before, it just became (possibly) dirty (according to\n    // mightBeDirty), since we just added child to parent.dirtyChildren.\n    if (parentWasClean) {\n        reportDirty(parent);\n    }\n}\n// Let a parent Entry know that one of its children is no longer dirty.\nfunction reportCleanChild(parent, child) {\n    // Must have called rememberChild(child) before calling\n    // reportCleanChild(parent, child).\n    assert(parent.childValues.has(child));\n    assert(!mightBeDirty(child));\n    var childValue = parent.childValues.get(child);\n    if (childValue.length === 0) {\n        parent.childValues.set(child, valueCopy(child.value));\n    }\n    else if (!valueIs(childValue, child.value)) {\n        parent.setDirty();\n    }\n    removeDirtyChild(parent, child);\n    if (mightBeDirty(parent)) {\n        return;\n    }\n    reportClean(parent);\n}\nfunction removeDirtyChild(parent, child) {\n    var dc = parent.dirtyChildren;\n    if (dc) {\n        dc.delete(child);\n        if (dc.size === 0) {\n            if (emptySetPool.length < POOL_TARGET_SIZE) {\n                emptySetPool.push(dc);\n            }\n            parent.dirtyChildren = null;\n        }\n    }\n}\n// Removes all children from this entry and returns an array of the\n// removed children.\nfunction forgetChildren(parent) {\n    if (parent.childValues.size > 0) {\n        parent.childValues.forEach(function (_value, child) {\n            forgetChild(parent, child);\n        });\n    }\n    // Remove this parent Entry from any sets to which it was added by the\n    // addToSet method.\n    parent.forgetDeps();\n    // After we forget all our children, this.dirtyChildren must be empty\n    // and therefore must have been reset to null.\n    assert(parent.dirtyChildren === null);\n}\nfunction forgetChild(parent, child) {\n    child.parents.delete(parent);\n    parent.childValues.delete(child);\n    removeDirtyChild(parent, child);\n}\nfunction maybeSubscribe(entry, args) {\n    if (typeof entry.subscribe === \"function\") {\n        try {\n            maybeUnsubscribe(entry); // Prevent double subscriptions.\n            entry.unsubscribe = entry.subscribe.apply(null, args);\n        }\n        catch (e) {\n            // If this Entry has a subscribe function and it threw an exception\n            // (or an unsubscribe function it previously returned now throws),\n            // return false to indicate that we were not able to subscribe (or\n            // unsubscribe), and this Entry should remain dirty.\n            entry.setDirty();\n            return false;\n        }\n    }\n    // Returning true indicates either that there was no entry.subscribe\n    // function or that it succeeded.\n    return true;\n}\n//# sourceMappingURL=entry.js.map", "import { parentEntrySlot } from \"./context.js\";\nimport { hasOwnProperty, maybeUnsubscribe, arrayFromSet, } from \"./helpers.js\";\nvar EntryMethods = {\n    setDirty: true,\n    dispose: true,\n    forget: true, // Fully remove parent Entry from LRU cache and computation graph\n};\nexport function dep(options) {\n    var depsByKey = new Map();\n    var subscribe = options && options.subscribe;\n    function depend(key) {\n        var parent = parentEntrySlot.getValue();\n        if (parent) {\n            var dep_1 = depsByKey.get(key);\n            if (!dep_1) {\n                depsByKey.set(key, dep_1 = new Set);\n            }\n            parent.dependOn(dep_1);\n            if (typeof subscribe === \"function\") {\n                maybeUnsubscribe(dep_1);\n                dep_1.unsubscribe = subscribe(key);\n            }\n        }\n    }\n    depend.dirty = function dirty(key, entryMethodName) {\n        var dep = depsByKey.get(key);\n        if (dep) {\n            var m_1 = (entryMethodName &&\n                hasOwnProperty.call(EntryMethods, entryMethodName)) ? entryMethodName : \"setDirty\";\n            // We have to use arrayFromSet(dep).forEach instead of dep.forEach,\n            // because modifying a Set while iterating over it can cause elements in\n            // the Set to be removed from the Set before they've been iterated over.\n            arrayFromSet(dep).forEach(function (entry) { return entry[m_1](); });\n            depsByKey.delete(key);\n            maybeUnsubscribe(dep);\n        }\n    };\n    return depend;\n}\n//# sourceMappingURL=dep.js.map", "import { Trie } from \"@wry/trie\";\nimport { StrongCache } from \"@wry/caches\";\nimport { Entry } from \"./entry.js\";\nimport { parentEntrySlot } from \"./context.js\";\n// These helper functions are important for making optimism work with\n// asynchronous code. In order to register parent-child dependencies,\n// optimism needs to know about any currently active parent computations.\n// In ordinary synchronous code, the parent context is implicit in the\n// execution stack, but asynchronous code requires some extra guidance in\n// order to propagate context from one async task segment to the next.\nexport { bindContext, noContext, nonReactive, setTimeout, asyncFromGen, Slot, } from \"./context.js\";\n// A lighter-weight dependency, similar to OptimisticWrapperFunction, except\n// with only one argument, no makeCacheKey, no wrapped function to recompute,\n// and no result value. Useful for representing dependency leaves in the graph\n// of computation. Subscriptions are supported.\nexport { dep } from \"./dep.js\";\n// The defaultMakeCacheKey function is remarkably powerful, because it gives\n// a unique object for any shallow-identical list of arguments. If you need\n// to implement a custom makeCacheKey function, you may find it helpful to\n// delegate the final work to defaultMakeCacheKey, which is why we export it\n// here. However, you may want to avoid defaultMakeCacheKey if your runtime\n// does not support WeakMap, or you have the ability to return a string key.\n// In those cases, just write your own custom makeCacheKey functions.\nvar defaultKeyTrie;\nexport function defaultMakeCacheKey() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var trie = defaultKeyTrie || (defaultKeyTrie = new Trie(typeof WeakMap === \"function\"));\n    return trie.lookupArray(args);\n}\n// If you're paranoid about memory leaks, or you want to avoid using WeakMap\n// under the hood, but you still need the behavior of defaultMakeCacheKey,\n// import this constructor to create your own tries.\nexport { Trie as KeyTrie };\n;\nvar caches = new Set();\nexport function wrap(originalFunction, _a) {\n    var _b = _a === void 0 ? Object.create(null) : _a, _c = _b.max, max = _c === void 0 ? Math.pow(2, 16) : _c, keyArgs = _b.keyArgs, _d = _b.makeCacheKey, makeCacheKey = _d === void 0 ? defaultMakeCacheKey : _d, normalizeResult = _b.normalizeResult, subscribe = _b.subscribe, _e = _b.cache, cacheOption = _e === void 0 ? StrongCache : _e;\n    var cache = typeof cacheOption === \"function\"\n        ? new cacheOption(max, function (entry) { return entry.dispose(); })\n        : cacheOption;\n    var optimistic = function () {\n        var key = makeCacheKey.apply(null, keyArgs ? keyArgs.apply(null, arguments) : arguments);\n        if (key === void 0) {\n            return originalFunction.apply(null, arguments);\n        }\n        var entry = cache.get(key);\n        if (!entry) {\n            cache.set(key, entry = new Entry(originalFunction));\n            entry.normalizeResult = normalizeResult;\n            entry.subscribe = subscribe;\n            // Give the Entry the ability to trigger cache.delete(key), even though\n            // the Entry itself does not know about key or cache.\n            entry.forget = function () { return cache.delete(key); };\n        }\n        var value = entry.recompute(Array.prototype.slice.call(arguments));\n        // Move this entry to the front of the least-recently used queue,\n        // since we just finished computing its value.\n        cache.set(key, entry);\n        caches.add(cache);\n        // Clean up any excess entries in the cache, but only if there is no\n        // active parent entry, meaning we're not in the middle of a larger\n        // computation that might be flummoxed by the cleaning.\n        if (!parentEntrySlot.hasValue()) {\n            caches.forEach(function (cache) { return cache.clean(); });\n            caches.clear();\n        }\n        return value;\n    };\n    Object.defineProperty(optimistic, \"size\", {\n        get: function () { return cache.size; },\n        configurable: false,\n        enumerable: false,\n    });\n    Object.freeze(optimistic.options = {\n        max: max,\n        keyArgs: keyArgs,\n        makeCacheKey: makeCacheKey,\n        normalizeResult: normalizeResult,\n        subscribe: subscribe,\n        cache: cache,\n    });\n    function dirtyKey(key) {\n        var entry = key && cache.get(key);\n        if (entry) {\n            entry.setDirty();\n        }\n    }\n    optimistic.dirtyKey = dirtyKey;\n    optimistic.dirty = function dirty() {\n        dirtyKey(makeCacheKey.apply(null, arguments));\n    };\n    function peekKey(key) {\n        var entry = key && cache.get(key);\n        if (entry) {\n            return entry.peek();\n        }\n    }\n    optimistic.peekKey = peekKey;\n    optimistic.peek = function peek() {\n        return peekKey(makeCacheKey.apply(null, arguments));\n    };\n    function forgetKey(key) {\n        return key ? cache.delete(key) : false;\n    }\n    optimistic.forgetKey = forgetKey;\n    optimistic.forget = function forget() {\n        return forgetKey(makeCacheKey.apply(null, arguments));\n    };\n    optimistic.makeCacheKey = makeCacheKey;\n    optimistic.getKey = keyArgs ? function getKey() {\n        return makeCacheKey.apply(null, keyArgs.apply(null, arguments));\n    } : makeCacheKey;\n    return Object.freeze(optimistic);\n}\n//# sourceMappingURL=index.js.map", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Observable = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// === Symbol Support ===\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\n\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\n\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\nvar SymbolIterator = getSymbol('iterator');\nvar SymbolObservable = getSymbol('observable');\nvar SymbolSpecies = getSymbol('species'); // === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n  if (value == null) return undefined;\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n\n  if (ctor !== undefined) {\n    ctor = ctor[SymbolSpecies];\n\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n\n  if (!queue) {\n    return;\n  }\n\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({\n      type: type,\n      value: value\n    });\n\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{\n      type: type,\n      value: value\n    }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription =\n/*#__PURE__*/\nfunction () {\n  function Subscription(observer, subscriber) {\n    _classCallCheck(this, Subscription);\n\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  _createClass(Subscription, [{\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      if (this._state !== 'closed') {\n        closeSubscription(this);\n        cleanupSubscription(this);\n      }\n    }\n  }, {\n    key: \"closed\",\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver =\n/*#__PURE__*/\nfunction () {\n  function SubscriptionObserver(subscription) {\n    _classCallCheck(this, SubscriptionObserver);\n\n    this._subscription = subscription;\n  }\n\n  _createClass(SubscriptionObserver, [{\n    key: \"next\",\n    value: function next(value) {\n      onNotify(this._subscription, 'next', value);\n    }\n  }, {\n    key: \"error\",\n    value: function error(value) {\n      onNotify(this._subscription, 'error', value);\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      onNotify(this._subscription, 'complete');\n    }\n  }, {\n    key: \"closed\",\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable =\n/*#__PURE__*/\nfunction () {\n  function Observable(subscriber) {\n    _classCallCheck(this, Observable);\n\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n    this._subscriber = subscriber;\n  }\n\n  _createClass(Observable, [{\n    key: \"subscribe\",\n    value: function subscribe(observer) {\n      if (typeof observer !== 'object' || observer === null) {\n        observer = {\n          next: observer,\n          error: arguments[1],\n          complete: arguments[2]\n        };\n      }\n\n      return new Subscription(observer, this._subscriber);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(fn) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (typeof fn !== 'function') {\n          reject(new TypeError(fn + ' is not a function'));\n          return;\n        }\n\n        function done() {\n          subscription.unsubscribe();\n          resolve();\n        }\n\n        var subscription = _this.subscribe({\n          next: function (value) {\n            try {\n              fn(value, done);\n            } catch (e) {\n              reject(e);\n              subscription.unsubscribe();\n            }\n          },\n          error: reject,\n          complete: resolve\n        });\n      });\n    }\n  }, {\n    key: \"map\",\n    value: function map(fn) {\n      var _this2 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this2.subscribe({\n          next: function (value) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(fn) {\n      var _this3 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this3.subscribe({\n          next: function (value) {\n            try {\n              if (!fn(value)) return;\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"reduce\",\n    value: function reduce(fn) {\n      var _this4 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      var hasSeed = arguments.length > 1;\n      var hasValue = false;\n      var seed = arguments[1];\n      var acc = seed;\n      return new C(function (observer) {\n        return _this4.subscribe({\n          next: function (value) {\n            var first = !hasValue;\n            hasValue = true;\n\n            if (!first || hasSeed) {\n              try {\n                acc = fn(acc, value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            } else {\n              acc = value;\n            }\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n            observer.next(acc);\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"concat\",\n    value: function concat() {\n      var _this5 = this;\n\n      for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscription;\n        var index = 0;\n\n        function startNext(next) {\n          subscription = next.subscribe({\n            next: function (v) {\n              observer.next(v);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              if (index === sources.length) {\n                subscription = undefined;\n                observer.complete();\n              } else {\n                startNext(C.from(sources[index++]));\n              }\n            }\n          });\n        }\n\n        startNext(_this5);\n        return function () {\n          if (subscription) {\n            subscription.unsubscribe();\n            subscription = undefined;\n          }\n        };\n      });\n    }\n  }, {\n    key: \"flatMap\",\n    value: function flatMap(fn) {\n      var _this6 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscriptions = [];\n\n        var outer = _this6.subscribe({\n          next: function (value) {\n            if (fn) {\n              try {\n                value = fn(value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            }\n\n            var inner = C.from(value).subscribe({\n              next: function (value) {\n                observer.next(value);\n              },\n              error: function (e) {\n                observer.error(e);\n              },\n              complete: function () {\n                var i = subscriptions.indexOf(inner);\n                if (i >= 0) subscriptions.splice(i, 1);\n                completeIfDone();\n              }\n            });\n            subscriptions.push(inner);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            completeIfDone();\n          }\n        });\n\n        function completeIfDone() {\n          if (outer.closed && subscriptions.length === 0) observer.complete();\n        }\n\n        return function () {\n          subscriptions.forEach(function (s) {\n            return s.unsubscribe();\n          });\n          outer.unsubscribe();\n        };\n      });\n    }\n  }, {\n    key: SymbolObservable,\n    value: function () {\n      return this;\n    }\n  }], [{\n    key: \"from\",\n    value: function from(x) {\n      var C = typeof this === 'function' ? this : Observable;\n      if (x == null) throw new TypeError(x + ' is not an object');\n      var method = getMethod(x, SymbolObservable);\n\n      if (method) {\n        var observable = method.call(x);\n        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n        if (isObservable(observable) && observable.constructor === C) return observable;\n        return new C(function (observer) {\n          return observable.subscribe(observer);\n        });\n      }\n\n      if (hasSymbol('iterator')) {\n        method = getMethod(x, SymbolIterator);\n\n        if (method) {\n          return new C(function (observer) {\n            enqueue(function () {\n              if (observer.closed) return;\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var _item = _step.value;\n                  observer.next(_item);\n                  if (observer.closed) return;\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              observer.complete();\n            });\n          });\n        }\n      }\n\n      if (Array.isArray(x)) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n\n            for (var i = 0; i < x.length; ++i) {\n              observer.next(x[i]);\n              if (observer.closed) return;\n            }\n\n            observer.complete();\n          });\n        });\n      }\n\n      throw new TypeError(x + ' is not observable');\n    }\n  }, {\n    key: \"of\",\n    value: function of() {\n      for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n\n      var C = typeof this === 'function' ? this : Observable;\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n\n          for (var i = 0; i < items.length; ++i) {\n            observer.next(items[i]);\n            if (observer.closed) return;\n          }\n\n          observer.complete();\n        });\n      });\n    }\n  }, {\n    key: SymbolSpecies,\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nexports.Observable = Observable;\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: SymbolObservable,\n      hostReportError: hostReportError\n    },\n    configurable: true\n  });\n}", "module.exports = require('./lib/Observable.js').Observable;\n", "exports.Observable = require(\"zen-observable/index.js\");\n", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\n\t\t\tif (typeof _Symbol['for'] === 'function') {\n\t\t\t\t// This just needs to be something that won't trample other user's Symbol.for use\n\t\t\t\t// It also will guide people to the source of their issues, if this is problematic.\n\t\t\t\t// META: It's a resource locator!\n\t\t\t\tresult = _Symbol['for']('https://github.com/benlesh/symbol-observable');\n\t\t\t} else {\n\t\t\t\t// Symbol.for didn't exist! The best we can do at this point is a totally \n\t\t\t\t// unique symbol. Note that the string argument here is a descriptor, not\n\t\t\t\t// an identifier. This symbol is unique.\n\t\t\t\tresult = _Symbol('https://github.com/benlesh/symbol-observable');\n\t\t\t}\n\t\t\ttry {\n\t\t\t\t_Symbol.observable = result;\n\t\t\t} catch (err) {\n\t\t\t\t// Do nothing. In some environments, users have frozen `Symbol` for security reasons,\n\t\t\t\t// if it is frozen assigning to it will throw. In this case, we don't care, because\n\t\t\t\t// they will need to use the returned value from the ponyfill.\n\t\t\t}\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ponyfill = require('./ponyfill.js');\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar root; /* global window */\n\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = (0, _ponyfill2['default'])(root);\nexports['default'] = result;", "import { invariant } from \"../globals/index.js\";\nimport { visit, BREAK } from \"graphql\";\nexport function shouldInclude(_a, variables) {\n    var directives = _a.directives;\n    if (!directives || !directives.length) {\n        return true;\n    }\n    return getInclusionDirectives(directives).every(function (_a) {\n        var directive = _a.directive, ifArgument = _a.ifArgument;\n        var evaledValue = false;\n        if (ifArgument.value.kind === \"Variable\") {\n            evaledValue =\n                variables && variables[ifArgument.value.name.value];\n            invariant(evaledValue !== void 0, 67, directive.name.value);\n        }\n        else {\n            evaledValue = ifArgument.value.value;\n        }\n        return directive.name.value === \"skip\" ? !evaledValue : evaledValue;\n    });\n}\nexport function getDirectiveNames(root) {\n    var names = [];\n    visit(root, {\n        Directive: function (node) {\n            names.push(node.name.value);\n        },\n    });\n    return names;\n}\nexport var hasAnyDirectives = function (names, root) {\n    return hasDirectives(names, root, false);\n};\nexport var hasAllDirectives = function (names, root) {\n    return hasDirectives(names, root, true);\n};\nexport function hasDirectives(names, root, all) {\n    var nameSet = new Set(names);\n    var uniqueCount = nameSet.size;\n    visit(root, {\n        Directive: function (node) {\n            if (nameSet.delete(node.name.value) && (!all || !nameSet.size)) {\n                return BREAK;\n            }\n        },\n    });\n    // If we found all the names, nameSet will be empty. If we only care about\n    // finding some of them, the < condition is sufficient.\n    return all ? !nameSet.size : nameSet.size < uniqueCount;\n}\nexport function hasClientExports(document) {\n    return document && hasDirectives([\"client\", \"export\"], document, true);\n}\nfunction isInclusionDirective(_a) {\n    var value = _a.name.value;\n    return value === \"skip\" || value === \"include\";\n}\nexport function getInclusionDirectives(directives) {\n    var result = [];\n    if (directives && directives.length) {\n        directives.forEach(function (directive) {\n            if (!isInclusionDirective(directive))\n                return;\n            var directiveArguments = directive.arguments;\n            var directiveName = directive.name.value;\n            invariant(directiveArguments && directiveArguments.length === 1, 68, directiveName);\n            var ifArgument = directiveArguments[0];\n            invariant(ifArgument.name && ifArgument.name.value === \"if\", 69, directiveName);\n            var ifValue = ifArgument.value;\n            // means it has to be a variable value if this is a valid @skip or @include directive\n            invariant(ifValue &&\n                (ifValue.kind === \"Variable\" || ifValue.kind === \"BooleanValue\"), 70, directiveName);\n            result.push({ directive: directive, ifArgument: ifArgument });\n        });\n    }\n    return result;\n}\n//# sourceMappingURL=directives.js.map", "import { maybe } from \"../globals/index.js\";\nexport var canUseWeakMap = typeof WeakMap === \"function\" &&\n    !maybe(function () { return navigator.product == \"ReactNative\" && !global.HermesInternal; });\nexport var canUseWeakSet = typeof WeakSet === \"function\";\nexport var canUseSymbol = typeof Symbol === \"function\" && typeof Symbol.for === \"function\";\nexport var canUseAsyncIteratorSymbol = canUseSymbol && Symbol.asyncIterator;\nexport var canUseDOM = typeof maybe(function () { return window.document.createElement; }) === \"function\";\nvar usingJSDOM = \n// Following advice found in this comment from @domenic (maintainer of jsdom):\n// https://github.com/jsdom/jsdom/issues/1537#issuecomment-229405327\n//\n// Since we control the version of Jest and jsdom used when running Apollo\n// Client tests, and that version is recent enought to include \" jsdom/x.y.z\"\n// at the end of the user agent string, I believe this case is all we need to\n// check. Testing for \"Node.js\" was recommended for backwards compatibility\n// with older version of jsdom, but we don't have that problem.\nmaybe(function () { return navigator.userAgent.indexOf(\"jsdom\") >= 0; }) || false;\n// Our tests should all continue to pass if we remove this !usingJSDOM\n// condition, thereby allowing useLayoutEffect when using jsdom. Unfortunately,\n// if we allow useLayoutEffect, then useSyncExternalStore generates many\n// warnings about useLayoutEffect doing nothing on the server. While these\n// warnings are harmless, this !usingJSDOM condition seems to be the best way to\n// prevent them (i.e. skipping useLayoutEffect when using jsdom).\nexport var canUseLayoutEffect = canUseDOM && !usingJSDOM;\n//# sourceMappingURL=canUse.js.map", "export function isNonNullObject(obj) {\n    return obj !== null && typeof obj === \"object\";\n}\nexport function isPlainObject(obj) {\n    return (obj !== null &&\n        typeof obj === \"object\" &&\n        (Object.getPrototypeOf(obj) === Object.prototype ||\n            Object.getPrototypeOf(obj) === null));\n}\n//# sourceMappingURL=objects.js.map", "import { __assign, __spreadArray } from \"tslib\";\nimport { invariant, newInvariantError } from \"../globals/index.js\";\n/**\n * Returns a query document which adds a single query operation that only\n * spreads the target fragment inside of it.\n *\n * So for example a document of:\n *\n * ```graphql\n * fragment foo on Foo { a b c }\n * ```\n *\n * Turns into:\n *\n * ```graphql\n * { ...foo }\n *\n * fragment foo on Foo { a b c }\n * ```\n *\n * The target fragment will either be the only fragment in the document, or a\n * fragment specified by the provided `fragmentName`. If there is more than one\n * fragment, but a `fragmentName` was not defined then an error will be thrown.\n */\nexport function getFragmentQueryDocument(document, fragmentName) {\n    var actualFragmentName = fragmentName;\n    // Build an array of all our fragment definitions that will be used for\n    // validations. We also do some validations on the other definitions in the\n    // document while building this list.\n    var fragments = [];\n    document.definitions.forEach(function (definition) {\n        // Throw an error if we encounter an operation definition because we will\n        // define our own operation definition later on.\n        if (definition.kind === \"OperationDefinition\") {\n            throw newInvariantError(\n                71,\n                definition.operation,\n                definition.name ? \" named '\".concat(definition.name.value, \"'\") : \"\"\n            );\n        }\n        // Add our definition to the fragments array if it is a fragment\n        // definition.\n        if (definition.kind === \"FragmentDefinition\") {\n            fragments.push(definition);\n        }\n    });\n    // If the user did not give us a fragment name then let us try to get a\n    // name from a single fragment in the definition.\n    if (typeof actualFragmentName === \"undefined\") {\n        invariant(fragments.length === 1, 72, fragments.length);\n        actualFragmentName = fragments[0].name.value;\n    }\n    // Generate a query document with an operation that simply spreads the\n    // fragment inside of it.\n    var query = __assign(__assign({}, document), { definitions: __spreadArray([\n            {\n                kind: \"OperationDefinition\",\n                // OperationTypeNode is an enum\n                operation: \"query\",\n                selectionSet: {\n                    kind: \"SelectionSet\",\n                    selections: [\n                        {\n                            kind: \"FragmentSpread\",\n                            name: {\n                                kind: \"Name\",\n                                value: actualFragmentName,\n                            },\n                        },\n                    ],\n                },\n            }\n        ], document.definitions, true) });\n    return query;\n}\n// Utility function that takes a list of fragment definitions and makes a hash out of them\n// that maps the name of the fragment to the fragment definition.\nexport function createFragmentMap(fragments) {\n    if (fragments === void 0) { fragments = []; }\n    var symTable = {};\n    fragments.forEach(function (fragment) {\n        symTable[fragment.name.value] = fragment;\n    });\n    return symTable;\n}\nexport function getFragmentFromSelection(selection, fragmentMap) {\n    switch (selection.kind) {\n        case \"InlineFragment\":\n            return selection;\n        case \"FragmentSpread\": {\n            var fragmentName = selection.name.value;\n            if (typeof fragmentMap === \"function\") {\n                return fragmentMap(fragmentName);\n            }\n            var fragment = fragmentMap && fragmentMap[fragmentName];\n            invariant(fragment, 73, fragmentName);\n            return fragment || null;\n        }\n        default:\n            return null;\n    }\n}\n//# sourceMappingURL=fragments.js.map", "import { WeakCache, StrongCache } from \"@wry/caches\";\nvar scheduledCleanup = new WeakSet();\nfunction schedule(cache) {\n    if (!scheduledCleanup.has(cache)) {\n        scheduledCleanup.add(cache);\n        setTimeout(function () {\n            cache.clean();\n            scheduledCleanup.delete(cache);\n        }, 100);\n    }\n}\n/**\n * @internal\n * A version of WeakCache that will auto-schedule a cleanup of the cache when\n * a new item is added.\n * Throttled to once per 100ms.\n *\n * @privateRemarks\n * Should be used throughout the rest of the codebase instead of WeakCache,\n * with the notable exception of usage in `wrap` from `optimism` - that one\n * already handles cleanup and should remain a `WeakCache`.\n */\nexport var AutoCleanedWeakCache = function (max, dispose) {\n    /*\n    Some builds of `WeakCache` are function prototypes, some are classes.\n    This library still builds with an ES5 target, so we can't extend the\n    real classes.\n    Instead, we have to use this workaround until we switch to a newer build\n    target.\n    */\n    var cache = new WeakCache(max, dispose);\n    cache.set = function (key, value) {\n        schedule(this);\n        return WeakCache.prototype.set.call(this, key, value);\n    };\n    return cache;\n};\n/**\n * @internal\n * A version of StrongCache that will auto-schedule a cleanup of the cache when\n * a new item is added.\n * Throttled to once per 100ms.\n *\n * @privateRemarks\n * Should be used throughout the rest of the codebase instead of StrongCache,\n * with the notable exception of usage in `wrap` from `optimism` - that one\n * already handles cleanup and should remain a `StrongCache`.\n */\nexport var AutoCleanedStrongCache = function (max, dispose) {\n    /*\n    Some builds of `StrongCache` are function prototypes, some are classes.\n    This library still builds with an ES5 target, so we can't extend the\n    real classes.\n    Instead, we have to use this workaround until we switch to a newer build\n    target.\n    */\n    var cache = new StrongCache(max, dispose);\n    cache.set = function (key, value) {\n        schedule(this);\n        return StrongCache.prototype.set.call(this, key, value);\n    };\n    return cache;\n};\n//# sourceMappingURL=caches.js.map", "import { __assign } from \"tslib\";\nimport { global } from \"../globals/index.js\";\nvar cacheSizeSymbol = Symbol.for(\"apollo.cacheSize\");\n/**\n *\n * The global cache size configuration for Apollo Client.\n *\n * @remarks\n *\n * You can directly modify this object, but any modification will\n * only have an effect on caches that are created after the modification.\n *\n * So for global caches, such as `parser`, `canonicalStringify` and `print`,\n * you might need to call `.reset` on them, which will essentially re-create them.\n *\n * Alternatively, you can set `globalThis[Symbol.for(\"apollo.cacheSize\")]` before\n * you load the Apollo Client package:\n *\n * @example\n * ```ts\n * globalThis[Symbol.for(\"apollo.cacheSize\")] = {\n *   parser: 100\n * } satisfies Partial<CacheSizes> // the `satisfies` is optional if using TypeScript\n * ```\n */\nexport var cacheSizes = __assign({}, global[cacheSizeSymbol]);\n//# sourceMappingURL=sizes.js.map", "import { __assign, __spreadArray } from \"tslib\";\nimport { cacheSizes } from \"./sizes.js\";\nvar globalCaches = {};\nexport function registerGlobalCache(name, getSize) {\n    globalCaches[name] = getSize;\n}\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport var getApolloClientMemoryInternals = globalThis.__DEV__ !== false ?\n    _getApolloClientMemoryInternals\n    : undefined;\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport var getInMemoryCacheMemoryInternals = globalThis.__DEV__ !== false ?\n    _getInMemoryCacheMemoryInternals\n    : undefined;\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport var getApolloCacheMemoryInternals = globalThis.__DEV__ !== false ?\n    _getApolloCacheMemoryInternals\n    : undefined;\nfunction getCurrentCacheSizes() {\n    // `defaultCacheSizes` is a `const enum` that will be inlined during build, so we have to reconstruct it's shape here\n    var defaults = {\n        parser: 1000 /* defaultCacheSizes[\"parser\"] */,\n        canonicalStringify: 1000 /* defaultCacheSizes[\"canonicalStringify\"] */,\n        print: 2000 /* defaultCacheSizes[\"print\"] */,\n        \"documentTransform.cache\": 2000 /* defaultCacheSizes[\"documentTransform.cache\"] */,\n        \"queryManager.getDocumentInfo\": 2000 /* defaultCacheSizes[\"queryManager.getDocumentInfo\"] */,\n        \"PersistedQueryLink.persistedQueryHashes\": 2000 /* defaultCacheSizes[\"PersistedQueryLink.persistedQueryHashes\"] */,\n        \"fragmentRegistry.transform\": 2000 /* defaultCacheSizes[\"fragmentRegistry.transform\"] */,\n        \"fragmentRegistry.lookup\": 1000 /* defaultCacheSizes[\"fragmentRegistry.lookup\"] */,\n        \"fragmentRegistry.findFragmentSpreads\": 4000 /* defaultCacheSizes[\"fragmentRegistry.findFragmentSpreads\"] */,\n        \"cache.fragmentQueryDocuments\": 1000 /* defaultCacheSizes[\"cache.fragmentQueryDocuments\"] */,\n        \"removeTypenameFromVariables.getVariableDefinitions\": 2000 /* defaultCacheSizes[\"removeTypenameFromVariables.getVariableDefinitions\"] */,\n        \"inMemoryCache.maybeBroadcastWatch\": 5000 /* defaultCacheSizes[\"inMemoryCache.maybeBroadcastWatch\"] */,\n        \"inMemoryCache.executeSelectionSet\": 50000 /* defaultCacheSizes[\"inMemoryCache.executeSelectionSet\"] */,\n        \"inMemoryCache.executeSubSelectedArray\": 10000 /* defaultCacheSizes[\"inMemoryCache.executeSubSelectedArray\"] */,\n    };\n    return Object.fromEntries(Object.entries(defaults).map(function (_a) {\n        var k = _a[0], v = _a[1];\n        return [\n            k,\n            cacheSizes[k] || v,\n        ];\n    }));\n}\nfunction _getApolloClientMemoryInternals() {\n    var _a, _b, _c, _d, _e;\n    if (!(globalThis.__DEV__ !== false))\n        throw new Error(\"only supported in development mode\");\n    return {\n        limits: getCurrentCacheSizes(),\n        sizes: __assign({ print: (_a = globalCaches.print) === null || _a === void 0 ? void 0 : _a.call(globalCaches), parser: (_b = globalCaches.parser) === null || _b === void 0 ? void 0 : _b.call(globalCaches), canonicalStringify: (_c = globalCaches.canonicalStringify) === null || _c === void 0 ? void 0 : _c.call(globalCaches), links: linkInfo(this.link), queryManager: {\n                getDocumentInfo: this[\"queryManager\"][\"transformCache\"].size,\n                documentTransforms: transformInfo(this[\"queryManager\"].documentTransform),\n            } }, (_e = (_d = this.cache).getMemoryInternals) === null || _e === void 0 ? void 0 : _e.call(_d)),\n    };\n}\nfunction _getApolloCacheMemoryInternals() {\n    return {\n        cache: {\n            fragmentQueryDocuments: getWrapperInformation(this[\"getFragmentDoc\"]),\n        },\n    };\n}\nfunction _getInMemoryCacheMemoryInternals() {\n    var fragments = this.config.fragments;\n    return __assign(__assign({}, _getApolloCacheMemoryInternals.apply(this)), { addTypenameDocumentTransform: transformInfo(this[\"addTypenameTransform\"]), inMemoryCache: {\n            executeSelectionSet: getWrapperInformation(this[\"storeReader\"][\"executeSelectionSet\"]),\n            executeSubSelectedArray: getWrapperInformation(this[\"storeReader\"][\"executeSubSelectedArray\"]),\n            maybeBroadcastWatch: getWrapperInformation(this[\"maybeBroadcastWatch\"]),\n        }, fragmentRegistry: {\n            findFragmentSpreads: getWrapperInformation(fragments === null || fragments === void 0 ? void 0 : fragments.findFragmentSpreads),\n            lookup: getWrapperInformation(fragments === null || fragments === void 0 ? void 0 : fragments.lookup),\n            transform: getWrapperInformation(fragments === null || fragments === void 0 ? void 0 : fragments.transform),\n        } });\n}\nfunction isWrapper(f) {\n    return !!f && \"dirtyKey\" in f;\n}\nfunction getWrapperInformation(f) {\n    return isWrapper(f) ? f.size : undefined;\n}\nfunction isDefined(value) {\n    return value != null;\n}\nfunction transformInfo(transform) {\n    return recurseTransformInfo(transform).map(function (cache) { return ({ cache: cache }); });\n}\nfunction recurseTransformInfo(transform) {\n    return transform ?\n        __spreadArray(__spreadArray([\n            getWrapperInformation(transform === null || transform === void 0 ? void 0 : transform[\"performWork\"])\n        ], recurseTransformInfo(transform === null || transform === void 0 ? void 0 : transform[\"left\"]), true), recurseTransformInfo(transform === null || transform === void 0 ? void 0 : transform[\"right\"]), true).filter(isDefined)\n        : [];\n}\nfunction linkInfo(link) {\n    var _a;\n    return link ?\n        __spreadArray(__spreadArray([\n            (_a = link === null || link === void 0 ? void 0 : link.getMemoryInternals) === null || _a === void 0 ? void 0 : _a.call(link)\n        ], linkInfo(link === null || link === void 0 ? void 0 : link.left), true), linkInfo(link === null || link === void 0 ? void 0 : link.right), true).filter(isDefined)\n        : [];\n}\n//# sourceMappingURL=getMemoryInternals.js.map", "import { AutoCleanedStrongCache, cacheSizes, } from \"../../utilities/caching/index.js\";\nimport { registerGlobalCache } from \"../caching/getMemoryInternals.js\";\n/**\n * Like JSON.stringify, but with object keys always sorted in the same order.\n *\n * To achieve performant sorting, this function uses a Map from JSON-serialized\n * arrays of keys (in any order) to sorted arrays of the same keys, with a\n * single sorted array reference shared by all permutations of the keys.\n *\n * As a drawback, this function will add a little bit more memory for every\n * object encountered that has different (more, less, a different order of) keys\n * than in the past.\n *\n * In a typical application, this extra memory usage should not play a\n * significant role, as `canonicalStringify` will be called for only a limited\n * number of object shapes, and the cache will not grow beyond a certain point.\n * But in some edge cases, this could be a problem, so we provide\n * canonicalStringify.reset() as a way of clearing the cache.\n * */\nexport var canonicalStringify = Object.assign(function canonicalStringify(value) {\n    return JSON.stringify(value, stableObjectReplacer);\n}, {\n    reset: function () {\n        // Clearing the sortingMap will reclaim all cached memory, without\n        // affecting the logical results of canonicalStringify, but potentially\n        // sacrificing performance until the cache is refilled.\n        sortingMap = new AutoCleanedStrongCache(cacheSizes.canonicalStringify || 1000 /* defaultCacheSizes.canonicalStringify */);\n    },\n});\nif (globalThis.__DEV__ !== false) {\n    registerGlobalCache(\"canonicalStringify\", function () { return sortingMap.size; });\n}\n// Values are JSON-serialized arrays of object keys (in any order), and values\n// are sorted arrays of the same keys.\nvar sortingMap;\ncanonicalStringify.reset();\n// The JSON.stringify function takes an optional second argument called a\n// replacer function. This function is called for each key-value pair in the\n// object being stringified, and its return value is used instead of the\n// original value. If the replacer function returns a new value, that value is\n// stringified as JSON instead of the original value of the property.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#the_replacer_parameter\nfunction stableObjectReplacer(key, value) {\n    if (value && typeof value === \"object\") {\n        var proto = Object.getPrototypeOf(value);\n        // We don't want to mess with objects that are not \"plain\" objects, which\n        // means their prototype is either Object.prototype or null. This check also\n        // prevents needlessly rearranging the indices of arrays.\n        if (proto === Object.prototype || proto === null) {\n            var keys = Object.keys(value);\n            // If keys is already sorted, let JSON.stringify serialize the original\n            // value instead of creating a new object with keys in the same order.\n            if (keys.every(everyKeyInOrder))\n                return value;\n            var unsortedKey = JSON.stringify(keys);\n            var sortedKeys = sortingMap.get(unsortedKey);\n            if (!sortedKeys) {\n                keys.sort();\n                var sortedKey = JSON.stringify(keys);\n                // Checking for sortedKey in the sortingMap allows us to share the same\n                // sorted array reference for all permutations of the same set of keys.\n                sortedKeys = sortingMap.get(sortedKey) || keys;\n                sortingMap.set(unsortedKey, sortedKeys);\n                sortingMap.set(sortedKey, sortedKeys);\n            }\n            var sortedObject_1 = Object.create(proto);\n            // Reassigning the keys in sorted order will cause JSON.stringify to\n            // serialize them in sorted order.\n            sortedKeys.forEach(function (key) {\n                sortedObject_1[key] = value[key];\n            });\n            return sortedObject_1;\n        }\n    }\n    return value;\n}\n// Since everything that happens in stableObjectReplacer benefits from being as\n// efficient as possible, we use a static function as the callback for\n// keys.every in order to test if the provided keys are already sorted without\n// allocating extra memory for a callback.\nfunction everyKeyInOrder(key, i, keys) {\n    return i === 0 || keys[i - 1] <= key;\n}\n//# sourceMappingURL=canonicalStringify.js.map", "import { newInvariantError } from \"../globals/index.js\";\nimport { isNonNullObject } from \"../common/objects.js\";\nimport { getFragmentFromSelection } from \"./fragments.js\";\nimport { canonicalStringify } from \"../common/canonicalStringify.js\";\nexport function makeReference(id) {\n    return { __ref: String(id) };\n}\nexport function isReference(obj) {\n    return Boolean(obj && typeof obj === \"object\" && typeof obj.__ref === \"string\");\n}\nexport function isDocumentNode(value) {\n    return (isNonNullObject(value) &&\n        value.kind === \"Document\" &&\n        Array.isArray(value.definitions));\n}\nfunction isStringValue(value) {\n    return value.kind === \"StringValue\";\n}\nfunction isBooleanValue(value) {\n    return value.kind === \"BooleanValue\";\n}\nfunction isIntValue(value) {\n    return value.kind === \"IntValue\";\n}\nfunction isFloatValue(value) {\n    return value.kind === \"FloatValue\";\n}\nfunction isVariable(value) {\n    return value.kind === \"Variable\";\n}\nfunction isObjectValue(value) {\n    return value.kind === \"ObjectValue\";\n}\nfunction isListValue(value) {\n    return value.kind === \"ListValue\";\n}\nfunction isEnumValue(value) {\n    return value.kind === \"EnumValue\";\n}\nfunction isNullValue(value) {\n    return value.kind === \"NullValue\";\n}\nexport function valueToObjectRepresentation(argObj, name, value, variables) {\n    if (isIntValue(value) || isFloatValue(value)) {\n        argObj[name.value] = Number(value.value);\n    }\n    else if (isBooleanValue(value) || isStringValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isObjectValue(value)) {\n        var nestedArgObj_1 = {};\n        value.fields.map(function (obj) {\n            return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n        });\n        argObj[name.value] = nestedArgObj_1;\n    }\n    else if (isVariable(value)) {\n        var variableValue = (variables || {})[value.name.value];\n        argObj[name.value] = variableValue;\n    }\n    else if (isListValue(value)) {\n        argObj[name.value] = value.values.map(function (listValue) {\n            var nestedArgArrayObj = {};\n            valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n            return nestedArgArrayObj[name.value];\n        });\n    }\n    else if (isEnumValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isNullValue(value)) {\n        argObj[name.value] = null;\n    }\n    else {\n        throw newInvariantError(82, name.value, value.kind);\n    }\n}\nexport function storeKeyNameFromField(field, variables) {\n    var directivesObj = null;\n    if (field.directives) {\n        directivesObj = {};\n        field.directives.forEach(function (directive) {\n            directivesObj[directive.name.value] = {};\n            if (directive.arguments) {\n                directive.arguments.forEach(function (_a) {\n                    var name = _a.name, value = _a.value;\n                    return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n                });\n            }\n        });\n    }\n    var argObj = null;\n    if (field.arguments && field.arguments.length) {\n        argObj = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj, name, value, variables);\n        });\n    }\n    return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = [\n    \"connection\",\n    \"include\",\n    \"skip\",\n    \"client\",\n    \"rest\",\n    \"export\",\n    \"nonreactive\",\n];\n// Default stable JSON.stringify implementation used by getStoreKeyName. Can be\n// updated/replaced with something better by calling\n// getStoreKeyName.setStringify(newStringifyFunction).\nvar storeKeyNameStringify = canonicalStringify;\nexport var getStoreKeyName = Object.assign(function (fieldName, args, directives) {\n    if (args &&\n        directives &&\n        directives[\"connection\"] &&\n        directives[\"connection\"][\"key\"]) {\n        if (directives[\"connection\"][\"filter\"] &&\n            directives[\"connection\"][\"filter\"].length > 0) {\n            var filterKeys = directives[\"connection\"][\"filter\"] ?\n                directives[\"connection\"][\"filter\"]\n                : [];\n            filterKeys.sort();\n            var filteredArgs_1 = {};\n            filterKeys.forEach(function (key) {\n                filteredArgs_1[key] = args[key];\n            });\n            return \"\".concat(directives[\"connection\"][\"key\"], \"(\").concat(storeKeyNameStringify(filteredArgs_1), \")\");\n        }\n        else {\n            return directives[\"connection\"][\"key\"];\n        }\n    }\n    var completeFieldName = fieldName;\n    if (args) {\n        // We can't use `JSON.stringify` here since it's non-deterministic,\n        // and can lead to different store key names being created even though\n        // the `args` object used during creation has the same properties/values.\n        var stringifiedArgs = storeKeyNameStringify(args);\n        completeFieldName += \"(\".concat(stringifiedArgs, \")\");\n    }\n    if (directives) {\n        Object.keys(directives).forEach(function (key) {\n            if (KNOWN_DIRECTIVES.indexOf(key) !== -1)\n                return;\n            if (directives[key] && Object.keys(directives[key]).length) {\n                completeFieldName += \"@\".concat(key, \"(\").concat(storeKeyNameStringify(directives[key]), \")\");\n            }\n            else {\n                completeFieldName += \"@\".concat(key);\n            }\n        });\n    }\n    return completeFieldName;\n}, {\n    setStringify: function (s) {\n        var previous = storeKeyNameStringify;\n        storeKeyNameStringify = s;\n        return previous;\n    },\n});\nexport function argumentsObjectFromField(field, variables) {\n    if (field.arguments && field.arguments.length) {\n        var argObj_1 = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj_1, name, value, variables);\n        });\n        return argObj_1;\n    }\n    return null;\n}\nexport function resultKeyNameFromField(field) {\n    return field.alias ? field.alias.value : field.name.value;\n}\nexport function getTypenameFromResult(result, selectionSet, fragmentMap) {\n    var fragments;\n    for (var _i = 0, _a = selectionSet.selections; _i < _a.length; _i++) {\n        var selection = _a[_i];\n        if (isField(selection)) {\n            if (selection.name.value === \"__typename\") {\n                return result[resultKeyNameFromField(selection)];\n            }\n        }\n        else if (fragments) {\n            fragments.push(selection);\n        }\n        else {\n            fragments = [selection];\n        }\n    }\n    if (typeof result.__typename === \"string\") {\n        return result.__typename;\n    }\n    if (fragments) {\n        for (var _b = 0, fragments_1 = fragments; _b < fragments_1.length; _b++) {\n            var selection = fragments_1[_b];\n            var typename = getTypenameFromResult(result, getFragmentFromSelection(selection, fragmentMap).selectionSet, fragmentMap);\n            if (typeof typename === \"string\") {\n                return typename;\n            }\n        }\n    }\n}\nexport function isField(selection) {\n    return selection.kind === \"Field\";\n}\nexport function isInlineFragment(selection) {\n    return selection.kind === \"InlineFragment\";\n}\n//# sourceMappingURL=storeUtils.js.map", "import { invariant, newInvariantError } from \"../globals/index.js\";\nimport { valueToObjectRepresentation } from \"./storeUtils.js\";\n// Checks the document for errors and throws an exception if there is an error.\nexport function checkDocument(doc) {\n    invariant(doc && doc.kind === \"Document\", 74);\n    var operations = doc.definitions\n        .filter(function (d) { return d.kind !== \"FragmentDefinition\"; })\n        .map(function (definition) {\n        if (definition.kind !== \"OperationDefinition\") {\n            throw newInvariantError(75, definition.kind);\n        }\n        return definition;\n    });\n    invariant(operations.length <= 1, 76, operations.length);\n    return doc;\n}\nexport function getOperationDefinition(doc) {\n    checkDocument(doc);\n    return doc.definitions.filter(function (definition) {\n        return definition.kind === \"OperationDefinition\";\n    })[0];\n}\nexport function getOperationName(doc) {\n    return (doc.definitions\n        .filter(function (definition) {\n        return definition.kind === \"OperationDefinition\" && !!definition.name;\n    })\n        .map(function (x) { return x.name.value; })[0] || null);\n}\n// Returns the FragmentDefinitions from a particular document as an array\nexport function getFragmentDefinitions(doc) {\n    return doc.definitions.filter(function (definition) {\n        return definition.kind === \"FragmentDefinition\";\n    });\n}\nexport function getQueryDefinition(doc) {\n    var queryDef = getOperationDefinition(doc);\n    invariant(queryDef && queryDef.operation === \"query\", 77);\n    return queryDef;\n}\nexport function getFragmentDefinition(doc) {\n    invariant(doc.kind === \"Document\", 78);\n    invariant(doc.definitions.length <= 1, 79);\n    var fragmentDef = doc.definitions[0];\n    invariant(fragmentDef.kind === \"FragmentDefinition\", 80);\n    return fragmentDef;\n}\n/**\n * Returns the first operation definition found in this document.\n * If no operation definition is found, the first fragment definition will be returned.\n * If no definitions are found, an error will be thrown.\n */\nexport function getMainDefinition(queryDoc) {\n    checkDocument(queryDoc);\n    var fragmentDefinition;\n    for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {\n        var definition = _a[_i];\n        if (definition.kind === \"OperationDefinition\") {\n            var operation = definition.operation;\n            if (operation === \"query\" ||\n                operation === \"mutation\" ||\n                operation === \"subscription\") {\n                return definition;\n            }\n        }\n        if (definition.kind === \"FragmentDefinition\" && !fragmentDefinition) {\n            // we do this because we want to allow multiple fragment definitions\n            // to precede an operation definition.\n            fragmentDefinition = definition;\n        }\n    }\n    if (fragmentDefinition) {\n        return fragmentDefinition;\n    }\n    throw newInvariantError(81);\n}\nexport function getDefaultValues(definition) {\n    var defaultValues = Object.create(null);\n    var defs = definition && definition.variableDefinitions;\n    if (defs && defs.length) {\n        defs.forEach(function (def) {\n            if (def.defaultValue) {\n                valueToObjectRepresentation(defaultValues, def.variable.name, def.defaultValue);\n            }\n        });\n    }\n    return defaultValues;\n}\n//# sourceMappingURL=getFromAST.js.map", "import { Trie } from \"@wry/trie\";\nimport { canUseWeakMap, canUseWeakSet } from \"../common/canUse.js\";\nimport { checkDocument } from \"./getFromAST.js\";\nimport { invariant } from \"../globals/index.js\";\nimport { WeakCache } from \"@wry/caches\";\nimport { wrap } from \"optimism\";\nimport { cacheSizes } from \"../caching/index.js\";\nfunction identity(document) {\n    return document;\n}\nvar DocumentTransform = /** @class */ (function () {\n    function DocumentTransform(transform, options) {\n        if (options === void 0) { options = Object.create(null); }\n        this.resultCache = canUseWeakSet ? new WeakSet() : new Set();\n        this.transform = transform;\n        if (options.getCacheKey) {\n            // Override default `getCacheKey` function, which returns [document].\n            this.getCacheKey = options.getCacheKey;\n        }\n        this.cached = options.cache !== false;\n        this.resetCache();\n    }\n    // This default implementation of getCacheKey can be overridden by providing\n    // options.getCacheKey to the DocumentTransform constructor. In general, a\n    // getCacheKey function may either return an array of keys (often including\n    // the document) to be used as a cache key, or undefined to indicate the\n    // transform for this document should not be cached.\n    DocumentTransform.prototype.getCacheKey = function (document) {\n        return [document];\n    };\n    DocumentTransform.identity = function () {\n        // No need to cache this transform since it just returns the document\n        // unchanged. This should save a bit of memory that would otherwise be\n        // needed to populate the `documentCache` of this transform.\n        return new DocumentTransform(identity, { cache: false });\n    };\n    DocumentTransform.split = function (predicate, left, right) {\n        if (right === void 0) { right = DocumentTransform.identity(); }\n        return Object.assign(new DocumentTransform(function (document) {\n            var documentTransform = predicate(document) ? left : right;\n            return documentTransform.transformDocument(document);\n        }, \n        // Reasonably assume both `left` and `right` transforms handle their own caching\n        { cache: false }), { left: left, right: right });\n    };\n    /**\n     * Resets the internal cache of this transform, if it has one.\n     */\n    DocumentTransform.prototype.resetCache = function () {\n        var _this = this;\n        if (this.cached) {\n            var stableCacheKeys_1 = new Trie(canUseWeakMap);\n            this.performWork = wrap(DocumentTransform.prototype.performWork.bind(this), {\n                makeCacheKey: function (document) {\n                    var cacheKeys = _this.getCacheKey(document);\n                    if (cacheKeys) {\n                        invariant(Array.isArray(cacheKeys), 66);\n                        return stableCacheKeys_1.lookupArray(cacheKeys);\n                    }\n                },\n                max: cacheSizes[\"documentTransform.cache\"],\n                cache: (WeakCache),\n            });\n        }\n    };\n    DocumentTransform.prototype.performWork = function (document) {\n        checkDocument(document);\n        return this.transform(document);\n    };\n    DocumentTransform.prototype.transformDocument = function (document) {\n        // If a user passes an already transformed result back to this function,\n        // immediately return it.\n        if (this.resultCache.has(document)) {\n            return document;\n        }\n        var transformedDocument = this.performWork(document);\n        this.resultCache.add(transformedDocument);\n        return transformedDocument;\n    };\n    DocumentTransform.prototype.concat = function (otherTransform) {\n        var _this = this;\n        return Object.assign(new DocumentTransform(function (document) {\n            return otherTransform.transformDocument(_this.transformDocument(document));\n        }, \n        // Reasonably assume both transforms handle their own caching\n        { cache: false }), {\n            left: this,\n            right: otherTransform,\n        });\n    };\n    return DocumentTransform;\n}());\nexport { DocumentTransform };\n//# sourceMappingURL=DocumentTransform.js.map", "import { print as origPrint } from \"graphql\";\nimport { AutoCleanedWeakCache, cacheSizes, } from \"../caching/index.js\";\nimport { registerGlobalCache } from \"../caching/getMemoryInternals.js\";\nvar printCache;\nexport var print = Object.assign(function (ast) {\n    var result = printCache.get(ast);\n    if (!result) {\n        result = origPrint(ast);\n        printCache.set(ast, result);\n    }\n    return result;\n}, {\n    reset: function () {\n        printCache = new AutoCleanedWeakCache(cacheSizes.print || 2000 /* defaultCacheSizes.print */);\n    },\n});\nprint.reset();\nif (globalThis.__DEV__ !== false) {\n    registerGlobalCache(\"print\", function () { return (printCache ? printCache.size : 0); });\n}\n//# sourceMappingURL=print.js.map", "// A version of Array.isArray that works better with readonly arrays.\nexport var isArray = Array.isArray;\nexport function isNonEmptyArray(value) {\n    return Array.isArray(value) && value.length > 0;\n}\n//# sourceMappingURL=arrays.js.map", "import { __assign, __spreadArray } from \"tslib\";\nimport { invariant } from \"../globals/index.js\";\nimport { visit, Kind } from \"graphql\";\nimport { checkDocument, getOperationDefinition, getFragmentDefinition, getFragmentDefinitions, getMainDefinition, } from \"./getFromAST.js\";\nimport { isField } from \"./storeUtils.js\";\nimport { createFragmentMap } from \"./fragments.js\";\nimport { isArray, isNonEmptyArray } from \"../common/arrays.js\";\nvar TYPENAME_FIELD = {\n    kind: Kind.FIELD,\n    name: {\n        kind: Kind.NAME,\n        value: \"__typename\",\n    },\n};\nfunction isEmpty(op, fragmentMap) {\n    return (!op ||\n        op.selectionSet.selections.every(function (selection) {\n            return selection.kind === Kind.FRAGMENT_SPREAD &&\n                isEmpty(fragmentMap[selection.name.value], fragmentMap);\n        }));\n}\nfunction nullIfDocIsEmpty(doc) {\n    return (isEmpty(getOperationDefinition(doc) || getFragmentDefinition(doc), createFragmentMap(getFragmentDefinitions(doc)))) ?\n        null\n        : doc;\n}\nfunction getDirectiveMatcher(configs) {\n    var names = new Map();\n    var tests = new Map();\n    configs.forEach(function (directive) {\n        if (directive) {\n            if (directive.name) {\n                names.set(directive.name, directive);\n            }\n            else if (directive.test) {\n                tests.set(directive.test, directive);\n            }\n        }\n    });\n    return function (directive) {\n        var config = names.get(directive.name.value);\n        if (!config && tests.size) {\n            tests.forEach(function (testConfig, test) {\n                if (test(directive)) {\n                    config = testConfig;\n                }\n            });\n        }\n        return config;\n    };\n}\nfunction makeInUseGetterFunction(defaultKey) {\n    var map = new Map();\n    return function inUseGetterFunction(key) {\n        if (key === void 0) { key = defaultKey; }\n        var inUse = map.get(key);\n        if (!inUse) {\n            map.set(key, (inUse = {\n                // Variable and fragment spread names used directly within this\n                // operation or fragment definition, as identified by key. These sets\n                // will be populated during the first traversal of the document in\n                // removeDirectivesFromDocument below.\n                variables: new Set(),\n                fragmentSpreads: new Set(),\n            }));\n        }\n        return inUse;\n    };\n}\nexport function removeDirectivesFromDocument(directives, doc) {\n    checkDocument(doc);\n    // Passing empty strings to makeInUseGetterFunction means we handle anonymous\n    // operations as if their names were \"\". Anonymous fragment definitions are\n    // not supposed to be possible, but the same default naming strategy seems\n    // appropriate for that case as well.\n    var getInUseByOperationName = makeInUseGetterFunction(\"\");\n    var getInUseByFragmentName = makeInUseGetterFunction(\"\");\n    var getInUse = function (ancestors) {\n        for (var p = 0, ancestor = void 0; p < ancestors.length && (ancestor = ancestors[p]); ++p) {\n            if (isArray(ancestor))\n                continue;\n            if (ancestor.kind === Kind.OPERATION_DEFINITION) {\n                // If an operation is anonymous, we use the empty string as its key.\n                return getInUseByOperationName(ancestor.name && ancestor.name.value);\n            }\n            if (ancestor.kind === Kind.FRAGMENT_DEFINITION) {\n                return getInUseByFragmentName(ancestor.name.value);\n            }\n        }\n        globalThis.__DEV__ !== false && invariant.error(83);\n        return null;\n    };\n    var operationCount = 0;\n    for (var i = doc.definitions.length - 1; i >= 0; --i) {\n        if (doc.definitions[i].kind === Kind.OPERATION_DEFINITION) {\n            ++operationCount;\n        }\n    }\n    var directiveMatcher = getDirectiveMatcher(directives);\n    var shouldRemoveField = function (nodeDirectives) {\n        return isNonEmptyArray(nodeDirectives) &&\n            nodeDirectives\n                .map(directiveMatcher)\n                .some(function (config) { return config && config.remove; });\n    };\n    var originalFragmentDefsByPath = new Map();\n    // Any time the first traversal of the document below makes a change like\n    // removing a fragment (by returning null), this variable should be set to\n    // true. Once it becomes true, it should never be set to false again. If this\n    // variable remains false throughout the traversal, then we can return the\n    // original doc immediately without any modifications.\n    var firstVisitMadeChanges = false;\n    var fieldOrInlineFragmentVisitor = {\n        enter: function (node) {\n            if (shouldRemoveField(node.directives)) {\n                firstVisitMadeChanges = true;\n                return null;\n            }\n        },\n    };\n    var docWithoutDirectiveSubtrees = visit(doc, {\n        // These two AST node types share the same implementation, defined above.\n        Field: fieldOrInlineFragmentVisitor,\n        InlineFragment: fieldOrInlineFragmentVisitor,\n        VariableDefinition: {\n            enter: function () {\n                // VariableDefinition nodes do not count as variables in use, though\n                // they do contain Variable nodes that might be visited below. To avoid\n                // counting variable declarations as usages, we skip visiting the\n                // contents of this VariableDefinition node by returning false.\n                return false;\n            },\n        },\n        Variable: {\n            enter: function (node, _key, _parent, _path, ancestors) {\n                var inUse = getInUse(ancestors);\n                if (inUse) {\n                    inUse.variables.add(node.name.value);\n                }\n            },\n        },\n        FragmentSpread: {\n            enter: function (node, _key, _parent, _path, ancestors) {\n                if (shouldRemoveField(node.directives)) {\n                    firstVisitMadeChanges = true;\n                    return null;\n                }\n                var inUse = getInUse(ancestors);\n                if (inUse) {\n                    inUse.fragmentSpreads.add(node.name.value);\n                }\n                // We might like to remove this FragmentSpread by returning null here if\n                // the corresponding FragmentDefinition node is also going to be removed\n                // by the logic below, but we can't control the relative order of those\n                // events, so we have to postpone the removal of dangling FragmentSpread\n                // nodes until after the current visit of the document has finished.\n            },\n        },\n        FragmentDefinition: {\n            enter: function (node, _key, _parent, path) {\n                originalFragmentDefsByPath.set(JSON.stringify(path), node);\n            },\n            leave: function (node, _key, _parent, path) {\n                var originalNode = originalFragmentDefsByPath.get(JSON.stringify(path));\n                if (node === originalNode) {\n                    // If the FragmentNode received by this leave function is identical to\n                    // the one received by the corresponding enter function (above), then\n                    // the visitor must not have made any changes within this\n                    // FragmentDefinition node. This fragment definition may still be\n                    // removed if there are no ...spread references to it, but it won't be\n                    // removed just because it has only a __typename field.\n                    return node;\n                }\n                if (\n                // This logic applies only if the document contains one or more\n                // operations, since removing all fragments from a document containing\n                // only fragments makes the document useless.\n                operationCount > 0 &&\n                    node.selectionSet.selections.every(function (selection) {\n                        return selection.kind === Kind.FIELD &&\n                            selection.name.value === \"__typename\";\n                    })) {\n                    // This is a somewhat opinionated choice: if a FragmentDefinition ends\n                    // up having no fields other than __typename, we remove the whole\n                    // fragment definition, and later prune ...spread references to it.\n                    getInUseByFragmentName(node.name.value).removed = true;\n                    firstVisitMadeChanges = true;\n                    return null;\n                }\n            },\n        },\n        Directive: {\n            leave: function (node) {\n                // If a matching directive is found, remove the directive itself. Note\n                // that this does not remove the target (field, argument, etc) of the\n                // directive, but only the directive itself.\n                if (directiveMatcher(node)) {\n                    firstVisitMadeChanges = true;\n                    return null;\n                }\n            },\n        },\n    });\n    if (!firstVisitMadeChanges) {\n        // If our first pass did not change anything about the document, then there\n        // is no cleanup we need to do, and we can return the original doc.\n        return doc;\n    }\n    // Utility for making sure inUse.transitiveVars is recursively populated.\n    // Because this logic assumes inUse.fragmentSpreads has been completely\n    // populated and inUse.removed has been set if appropriate,\n    // populateTransitiveVars must be called after that information has been\n    // collected by the first traversal of the document.\n    var populateTransitiveVars = function (inUse) {\n        if (!inUse.transitiveVars) {\n            inUse.transitiveVars = new Set(inUse.variables);\n            if (!inUse.removed) {\n                inUse.fragmentSpreads.forEach(function (childFragmentName) {\n                    populateTransitiveVars(getInUseByFragmentName(childFragmentName)).transitiveVars.forEach(function (varName) {\n                        inUse.transitiveVars.add(varName);\n                    });\n                });\n            }\n        }\n        return inUse;\n    };\n    // Since we've been keeping track of fragment spreads used by particular\n    // operations and fragment definitions, we now need to compute the set of all\n    // spreads used (transitively) by any operations in the document.\n    var allFragmentNamesUsed = new Set();\n    docWithoutDirectiveSubtrees.definitions.forEach(function (def) {\n        if (def.kind === Kind.OPERATION_DEFINITION) {\n            populateTransitiveVars(getInUseByOperationName(def.name && def.name.value)).fragmentSpreads.forEach(function (childFragmentName) {\n                allFragmentNamesUsed.add(childFragmentName);\n            });\n        }\n        else if (def.kind === Kind.FRAGMENT_DEFINITION &&\n            // If there are no operations in the document, then all fragment\n            // definitions count as usages of their own fragment names. This heuristic\n            // prevents accidentally removing all fragment definitions from the\n            // document just because it contains no operations that use the fragments.\n            operationCount === 0 &&\n            !getInUseByFragmentName(def.name.value).removed) {\n            allFragmentNamesUsed.add(def.name.value);\n        }\n    });\n    // Now that we have added all fragment spreads used by operations to the\n    // allFragmentNamesUsed set, we can complete the set by transitively adding\n    // all fragment spreads used by those fragments, and so on.\n    allFragmentNamesUsed.forEach(function (fragmentName) {\n        // Once all the childFragmentName strings added here have been seen already,\n        // the top-level allFragmentNamesUsed.forEach loop will terminate.\n        populateTransitiveVars(getInUseByFragmentName(fragmentName)).fragmentSpreads.forEach(function (childFragmentName) {\n            allFragmentNamesUsed.add(childFragmentName);\n        });\n    });\n    var fragmentWillBeRemoved = function (fragmentName) {\n        return !!(\n        // A fragment definition will be removed if there are no spreads that refer\n        // to it, or the fragment was explicitly removed because it had no fields\n        // other than __typename.\n        (!allFragmentNamesUsed.has(fragmentName) ||\n            getInUseByFragmentName(fragmentName).removed));\n    };\n    var enterVisitor = {\n        enter: function (node) {\n            if (fragmentWillBeRemoved(node.name.value)) {\n                return null;\n            }\n        },\n    };\n    return nullIfDocIsEmpty(visit(docWithoutDirectiveSubtrees, {\n        // If the fragment is going to be removed, then leaving any dangling\n        // FragmentSpread nodes with the same name would be a mistake.\n        FragmentSpread: enterVisitor,\n        // This is where the fragment definition is actually removed.\n        FragmentDefinition: enterVisitor,\n        OperationDefinition: {\n            leave: function (node) {\n                // Upon leaving each operation in the depth-first AST traversal, prune\n                // any variables that are declared by the operation but unused within.\n                if (node.variableDefinitions) {\n                    var usedVariableNames_1 = populateTransitiveVars(\n                    // If an operation is anonymous, we use the empty string as its key.\n                    getInUseByOperationName(node.name && node.name.value)).transitiveVars;\n                    // According to the GraphQL spec, all variables declared by an\n                    // operation must either be used by that operation or used by some\n                    // fragment included transitively into that operation:\n                    // https://spec.graphql.org/draft/#sec-All-Variables-Used\n                    //\n                    // To stay on the right side of this validation rule, if/when we\n                    // remove the last $var references from an operation or its fragments,\n                    // we must also remove the corresponding $var declaration from the\n                    // enclosing operation. This pruning applies only to operations and\n                    // not fragment definitions, at the moment. Fragments may be able to\n                    // declare variables eventually, but today they can only consume them.\n                    if (usedVariableNames_1.size < node.variableDefinitions.length) {\n                        return __assign(__assign({}, node), { variableDefinitions: node.variableDefinitions.filter(function (varDef) {\n                                return usedVariableNames_1.has(varDef.variable.name.value);\n                            }) });\n                    }\n                }\n            },\n        },\n    }));\n}\nexport var addTypenameToDocument = Object.assign(function (doc) {\n    return visit(doc, {\n        SelectionSet: {\n            enter: function (node, _key, parent) {\n                // Don't add __typename to OperationDefinitions.\n                if (parent &&\n                    parent.kind ===\n                        Kind.OPERATION_DEFINITION) {\n                    return;\n                }\n                // No changes if no selections.\n                var selections = node.selections;\n                if (!selections) {\n                    return;\n                }\n                // If selections already have a __typename, or are part of an\n                // introspection query, do nothing.\n                var skip = selections.some(function (selection) {\n                    return (isField(selection) &&\n                        (selection.name.value === \"__typename\" ||\n                            selection.name.value.lastIndexOf(\"__\", 0) === 0));\n                });\n                if (skip) {\n                    return;\n                }\n                // If this SelectionSet is @export-ed as an input variable, it should\n                // not have a __typename field (see issue #4691).\n                var field = parent;\n                if (isField(field) &&\n                    field.directives &&\n                    field.directives.some(function (d) { return d.name.value === \"export\"; })) {\n                    return;\n                }\n                // Create and return a new SelectionSet with a __typename Field.\n                return __assign(__assign({}, node), { selections: __spreadArray(__spreadArray([], selections, true), [TYPENAME_FIELD], false) });\n            },\n        },\n    });\n}, {\n    added: function (field) {\n        return field === TYPENAME_FIELD;\n    },\n});\nvar connectionRemoveConfig = {\n    test: function (directive) {\n        var willRemove = directive.name.value === \"connection\";\n        if (willRemove) {\n            if (!directive.arguments ||\n                !directive.arguments.some(function (arg) { return arg.name.value === \"key\"; })) {\n                globalThis.__DEV__ !== false && invariant.warn(84);\n            }\n        }\n        return willRemove;\n    },\n};\nexport function removeConnectionDirectiveFromDocument(doc) {\n    return removeDirectivesFromDocument([connectionRemoveConfig], checkDocument(doc));\n}\nfunction hasDirectivesInSelectionSet(directives, selectionSet, nestedCheck) {\n    if (nestedCheck === void 0) { nestedCheck = true; }\n    return (!!selectionSet &&\n        selectionSet.selections &&\n        selectionSet.selections.some(function (selection) {\n            return hasDirectivesInSelection(directives, selection, nestedCheck);\n        }));\n}\nfunction hasDirectivesInSelection(directives, selection, nestedCheck) {\n    if (nestedCheck === void 0) { nestedCheck = true; }\n    if (!isField(selection)) {\n        return true;\n    }\n    if (!selection.directives) {\n        return false;\n    }\n    return (selection.directives.some(getDirectiveMatcher(directives)) ||\n        (nestedCheck &&\n            hasDirectivesInSelectionSet(directives, selection.selectionSet, nestedCheck)));\n}\nfunction getArgumentMatcher(config) {\n    return function argumentMatcher(argument) {\n        return config.some(function (aConfig) {\n            return argument.value &&\n                argument.value.kind === Kind.VARIABLE &&\n                argument.value.name &&\n                (aConfig.name === argument.value.name.value ||\n                    (aConfig.test && aConfig.test(argument)));\n        });\n    };\n}\nexport function removeArgumentsFromDocument(config, doc) {\n    var argMatcher = getArgumentMatcher(config);\n    return nullIfDocIsEmpty(visit(doc, {\n        OperationDefinition: {\n            enter: function (node) {\n                return __assign(__assign({}, node), { \n                    // Remove matching top level variables definitions.\n                    variableDefinitions: node.variableDefinitions ?\n                        node.variableDefinitions.filter(function (varDef) {\n                            return !config.some(function (arg) { return arg.name === varDef.variable.name.value; });\n                        })\n                        : [] });\n            },\n        },\n        Field: {\n            enter: function (node) {\n                // If `remove` is set to true for an argument, and an argument match\n                // is found for a field, remove the field as well.\n                var shouldRemoveField = config.some(function (argConfig) { return argConfig.remove; });\n                if (shouldRemoveField) {\n                    var argMatchCount_1 = 0;\n                    if (node.arguments) {\n                        node.arguments.forEach(function (arg) {\n                            if (argMatcher(arg)) {\n                                argMatchCount_1 += 1;\n                            }\n                        });\n                    }\n                    if (argMatchCount_1 === 1) {\n                        return null;\n                    }\n                }\n            },\n        },\n        Argument: {\n            enter: function (node) {\n                // Remove all matching arguments.\n                if (argMatcher(node)) {\n                    return null;\n                }\n            },\n        },\n    }));\n}\nexport function removeFragmentSpreadFromDocument(config, doc) {\n    function enter(node) {\n        if (config.some(function (def) { return def.name === node.name.value; })) {\n            return null;\n        }\n    }\n    return nullIfDocIsEmpty(visit(doc, {\n        FragmentSpread: { enter: enter },\n        FragmentDefinition: { enter: enter },\n    }));\n}\n// If the incoming document is a query, return it as is. Otherwise, build a\n// new document containing a query operation based on the selection set\n// of the previous main operation.\nexport function buildQueryFromSelectionSet(document) {\n    var definition = getMainDefinition(document);\n    var definitionOperation = definition.operation;\n    if (definitionOperation === \"query\") {\n        // Already a query, so return the existing document.\n        return document;\n    }\n    // Build a new query using the selection set of the main operation.\n    var modifiedDoc = visit(document, {\n        OperationDefinition: {\n            enter: function (node) {\n                return __assign(__assign({}, node), { operation: \"query\" });\n            },\n        },\n    });\n    return modifiedDoc;\n}\n// Remove fields / selection sets that include an @client directive.\nexport function removeClientSetsFromDocument(document) {\n    checkDocument(document);\n    var modifiedDoc = removeDirectivesFromDocument([\n        {\n            test: function (directive) { return directive.name.value === \"client\"; },\n            remove: true,\n        },\n    ], document);\n    return modifiedDoc;\n}\n//# sourceMappingURL=transform.js.map", "import { getOperationDefinition } from \"./getFromAST.js\";\nfunction isOperation(document, operation) {\n    var _a;\n    return ((_a = getOperationDefinition(document)) === null || _a === void 0 ? void 0 : _a.operation) === operation;\n}\nexport function isMutationOperation(document) {\n    return isOperation(document, \"mutation\");\n}\nexport function isQueryOperation(document) {\n    return isOperation(document, \"query\");\n}\nexport function isSubscriptionOperation(document) {\n    return isOperation(document, \"subscription\");\n}\n//# sourceMappingURL=operations.js.map", "import { __assign, __spreadArray } from \"tslib\";\nimport { isNonNullObject } from \"./objects.js\";\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function mergeDeep() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    return mergeDeepArray(sources);\n}\n// In almost any situation where you could succeed in getting the\n// TypeScript compiler to infer a tuple type for the sources array, you\n// could just use mergeDeep instead of mergeDeepArray, so instead of\n// trying to convert T[] to an intersection type we just infer the array\n// element type, which works perfectly when the sources array has a\n// consistent element type.\nexport function mergeDeepArray(sources) {\n    var target = sources[0] || {};\n    var count = sources.length;\n    if (count > 1) {\n        var merger = new DeepMerger();\n        for (var i = 1; i < count; ++i) {\n            target = merger.merge(target, sources[i]);\n        }\n    }\n    return target;\n}\nvar defaultReconciler = function (target, source, property) {\n    return this.merge(target[property], source[property]);\n};\nvar DeepMerger = /** @class */ (function () {\n    function DeepMerger(reconciler) {\n        if (reconciler === void 0) { reconciler = defaultReconciler; }\n        this.reconciler = reconciler;\n        this.isObject = isNonNullObject;\n        this.pastCopies = new Set();\n    }\n    DeepMerger.prototype.merge = function (target, source) {\n        var _this = this;\n        var context = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            context[_i - 2] = arguments[_i];\n        }\n        if (isNonNullObject(source) && isNonNullObject(target)) {\n            Object.keys(source).forEach(function (sourceKey) {\n                if (hasOwnProperty.call(target, sourceKey)) {\n                    var targetValue = target[sourceKey];\n                    if (source[sourceKey] !== targetValue) {\n                        var result = _this.reconciler.apply(_this, __spreadArray([target,\n                            source,\n                            sourceKey], context, false));\n                        // A well-implemented reconciler may return targetValue to indicate\n                        // the merge changed nothing about the structure of the target.\n                        if (result !== targetValue) {\n                            target = _this.shallowCopyForMerge(target);\n                            target[sourceKey] = result;\n                        }\n                    }\n                }\n                else {\n                    // If there is no collision, the target can safely share memory with\n                    // the source, and the recursion can terminate here.\n                    target = _this.shallowCopyForMerge(target);\n                    target[sourceKey] = source[sourceKey];\n                }\n            });\n            return target;\n        }\n        // If source (or target) is not an object, let source replace target.\n        return source;\n    };\n    DeepMerger.prototype.shallowCopyForMerge = function (value) {\n        if (isNonNullObject(value)) {\n            if (!this.pastCopies.has(value)) {\n                if (Array.isArray(value)) {\n                    value = value.slice(0);\n                }\n                else {\n                    value = __assign({ __proto__: Object.getPrototypeOf(value) }, value);\n                }\n                this.pastCopies.add(value);\n            }\n        }\n        return value;\n    };\n    return DeepMerger;\n}());\nexport { DeepMerger };\n//# sourceMappingURL=mergeDeep.js.map", "import { __assign, __rest as __rest_1, __spreadArray } from \"tslib\";\nimport { __rest } from \"tslib\";\nimport { mergeDeep } from \"../common/mergeDeep.js\";\n// A very basic pagination field policy that always concatenates new\n// results onto the existing array, without examining options.args.\nexport function concatPagination(keyArgs) {\n    if (keyArgs === void 0) { keyArgs = false; }\n    return {\n        keyArgs: keyArgs,\n        merge: function (existing, incoming) {\n            return existing ? __spreadArray(__spreadArray([], existing, true), incoming, true) : incoming;\n        },\n    };\n}\n// A basic field policy that uses options.args.{offset,limit} to splice\n// the incoming data into the existing array. If your arguments are called\n// something different (like args.{start,count}), feel free to copy/paste\n// this implementation and make the appropriate changes.\nexport function offsetLimitPagination(keyArgs) {\n    if (keyArgs === void 0) { keyArgs = false; }\n    return {\n        keyArgs: keyArgs,\n        merge: function (existing, incoming, _a) {\n            var args = _a.args;\n            var merged = existing ? existing.slice(0) : [];\n            if (incoming) {\n                if (args) {\n                    // Assume an offset of 0 if args.offset omitted.\n                    var _b = args.offset, offset = _b === void 0 ? 0 : _b;\n                    for (var i = 0; i < incoming.length; ++i) {\n                        merged[offset + i] = incoming[i];\n                    }\n                }\n                else {\n                    // It's unusual (probably a mistake) for a paginated field not\n                    // to receive any arguments, so you might prefer to throw an\n                    // exception here, instead of recovering by appending incoming\n                    // onto the existing array.\n                    merged.push.apply(merged, incoming);\n                }\n            }\n            return merged;\n        },\n    };\n}\n// As proof of the flexibility of field policies, this function generates\n// one that handles Relay-style pagination, without Apollo Client knowing\n// anything about connections, edges, cursors, or pageInfo objects.\nexport function relayStylePagination(keyArgs) {\n    if (keyArgs === void 0) { keyArgs = false; }\n    return {\n        keyArgs: keyArgs,\n        read: function (existing, _a) {\n            var canRead = _a.canRead, readField = _a.readField;\n            if (!existing)\n                return existing;\n            var edges = [];\n            var firstEdgeCursor = \"\";\n            var lastEdgeCursor = \"\";\n            existing.edges.forEach(function (edge) {\n                // Edges themselves could be Reference objects, so it's important\n                // to use readField to access the edge.edge.node property.\n                if (canRead(readField(\"node\", edge))) {\n                    edges.push(edge);\n                    if (edge.cursor) {\n                        firstEdgeCursor = firstEdgeCursor || edge.cursor || \"\";\n                        lastEdgeCursor = edge.cursor || lastEdgeCursor;\n                    }\n                }\n            });\n            if (edges.length > 1 && firstEdgeCursor === lastEdgeCursor) {\n                firstEdgeCursor = \"\";\n            }\n            var _b = existing.pageInfo || {}, startCursor = _b.startCursor, endCursor = _b.endCursor;\n            return __assign(__assign({}, getExtras(existing)), { edges: edges, pageInfo: __assign(__assign({}, existing.pageInfo), { \n                    // If existing.pageInfo.{start,end}Cursor are undefined or \"\", default\n                    // to firstEdgeCursor and/or lastEdgeCursor.\n                    startCursor: startCursor || firstEdgeCursor, endCursor: endCursor || lastEdgeCursor }) });\n        },\n        merge: function (existing, incoming, _a) {\n            var args = _a.args, isReference = _a.isReference, readField = _a.readField;\n            if (!existing) {\n                existing = makeEmptyData();\n            }\n            if (!incoming) {\n                return existing;\n            }\n            var incomingEdges = incoming.edges ?\n                incoming.edges.map(function (edge) {\n                    if (isReference((edge = __assign({}, edge)))) {\n                        // In case edge is a Reference, we read out its cursor field and\n                        // store it as an extra property of the Reference object.\n                        edge.cursor = readField(\"cursor\", edge);\n                    }\n                    return edge;\n                })\n                : [];\n            if (incoming.pageInfo) {\n                var pageInfo_1 = incoming.pageInfo;\n                var startCursor = pageInfo_1.startCursor, endCursor = pageInfo_1.endCursor;\n                var firstEdge = incomingEdges[0];\n                var lastEdge = incomingEdges[incomingEdges.length - 1];\n                // In case we did not request the cursor field for edges in this\n                // query, we can still infer cursors from pageInfo.\n                if (firstEdge && startCursor) {\n                    firstEdge.cursor = startCursor;\n                }\n                if (lastEdge && endCursor) {\n                    lastEdge.cursor = endCursor;\n                }\n                // Cursors can also come from edges, so we default\n                // pageInfo.{start,end}Cursor to {first,last}Edge.cursor.\n                var firstCursor = firstEdge && firstEdge.cursor;\n                if (firstCursor && !startCursor) {\n                    incoming = mergeDeep(incoming, {\n                        pageInfo: {\n                            startCursor: firstCursor,\n                        },\n                    });\n                }\n                var lastCursor = lastEdge && lastEdge.cursor;\n                if (lastCursor && !endCursor) {\n                    incoming = mergeDeep(incoming, {\n                        pageInfo: {\n                            endCursor: lastCursor,\n                        },\n                    });\n                }\n            }\n            var prefix = existing.edges;\n            var suffix = [];\n            if (args && args.after) {\n                // This comparison does not need to use readField(\"cursor\", edge),\n                // because we stored the cursor field of any Reference edges as an\n                // extra property of the Reference object.\n                var index = prefix.findIndex(function (edge) { return edge.cursor === args.after; });\n                if (index >= 0) {\n                    prefix = prefix.slice(0, index + 1);\n                    // suffix = []; // already true\n                }\n            }\n            else if (args && args.before) {\n                var index = prefix.findIndex(function (edge) { return edge.cursor === args.before; });\n                suffix = index < 0 ? prefix : prefix.slice(index);\n                prefix = [];\n            }\n            else if (incoming.edges) {\n                // If we have neither args.after nor args.before, the incoming\n                // edges cannot be spliced into the existing edges, so they must\n                // replace the existing edges. See #6592 for a motivating example.\n                prefix = [];\n            }\n            var edges = __spreadArray(__spreadArray(__spreadArray([], prefix, true), incomingEdges, true), suffix, true);\n            var pageInfo = __assign(__assign({}, incoming.pageInfo), existing.pageInfo);\n            if (incoming.pageInfo) {\n                var _b = incoming.pageInfo, hasPreviousPage = _b.hasPreviousPage, hasNextPage = _b.hasNextPage, startCursor = _b.startCursor, endCursor = _b.endCursor, extras = __rest_1(_b, [\"hasPreviousPage\", \"hasNextPage\", \"startCursor\", \"endCursor\"]);\n                // If incoming.pageInfo had any extra non-standard properties,\n                // assume they should take precedence over any existing properties\n                // of the same name, regardless of where this page falls with\n                // respect to the existing data.\n                Object.assign(pageInfo, extras);\n                // Keep existing.pageInfo.has{Previous,Next}Page unless the\n                // placement of the incoming edges means incoming.hasPreviousPage\n                // or incoming.hasNextPage should become the new values for those\n                // properties in existing.pageInfo. Note that these updates are\n                // only permitted when the beginning or end of the incoming page\n                // coincides with the beginning or end of the existing data, as\n                // determined using prefix.length and suffix.length.\n                if (!prefix.length) {\n                    if (void 0 !== hasPreviousPage)\n                        pageInfo.hasPreviousPage = hasPreviousPage;\n                    if (void 0 !== startCursor)\n                        pageInfo.startCursor = startCursor;\n                }\n                if (!suffix.length) {\n                    if (void 0 !== hasNextPage)\n                        pageInfo.hasNextPage = hasNextPage;\n                    if (void 0 !== endCursor)\n                        pageInfo.endCursor = endCursor;\n                }\n            }\n            return __assign(__assign(__assign({}, getExtras(existing)), getExtras(incoming)), { edges: edges, pageInfo: pageInfo });\n        },\n    };\n}\n// Returns any unrecognized properties of the given object.\nvar getExtras = function (obj) { return __rest(obj, notExtras); };\nvar notExtras = [\"edges\", \"pageInfo\"];\nfunction makeEmptyData() {\n    return {\n        edges: [],\n        pageInfo: {\n            hasPreviousPage: false,\n            hasNextPage: true,\n            startCursor: \"\",\n            endCursor: \"\",\n        },\n    };\n}\n//# sourceMappingURL=pagination.js.map", "export function createFulfilledPromise(value) {\n    var promise = Promise.resolve(value);\n    promise.status = \"fulfilled\";\n    promise.value = value;\n    return promise;\n}\nexport function createRejectedPromise(reason) {\n    var promise = Promise.reject(reason);\n    // prevent potential edge cases leaking unhandled error rejections\n    promise.catch(function () { });\n    promise.status = \"rejected\";\n    promise.reason = reason;\n    return promise;\n}\nexport function isStatefulPromise(promise) {\n    return \"status\" in promise;\n}\nexport function wrapPromiseWithState(promise) {\n    if (isStatefulPromise(promise)) {\n        return promise;\n    }\n    var pendingPromise = promise;\n    pendingPromise.status = \"pending\";\n    pendingPromise.then(function (value) {\n        if (pendingPromise.status === \"pending\") {\n            var fulfilledPromise = pendingPromise;\n            fulfilledPromise.status = \"fulfilled\";\n            fulfilledPromise.value = value;\n        }\n    }, function (reason) {\n        if (pendingPromise.status === \"pending\") {\n            var rejectedPromise = pendingPromise;\n            rejectedPromise.status = \"rejected\";\n            rejectedPromise.reason = reason;\n        }\n    });\n    return promise;\n}\n//# sourceMappingURL=decoration.js.map", "var toString = Object.prototype.toString;\n/**\n * Deeply clones a value to create a new instance.\n */\nexport function cloneDeep(value) {\n    return cloneDeepHelper(value);\n}\nfunction cloneDeepHelper(val, seen) {\n    switch (toString.call(val)) {\n        case \"[object Array]\": {\n            seen = seen || new Map();\n            if (seen.has(val))\n                return seen.get(val);\n            var copy_1 = val.slice(0);\n            seen.set(val, copy_1);\n            copy_1.forEach(function (child, i) {\n                copy_1[i] = cloneDeepHelper(child, seen);\n            });\n            return copy_1;\n        }\n        case \"[object Object]\": {\n            seen = seen || new Map();\n            if (seen.has(val))\n                return seen.get(val);\n            // High fidelity polyfills of Object.create and Object.getPrototypeOf are\n            // possible in all JS environments, so we will assume they exist/work.\n            var copy_2 = Object.create(Object.getPrototypeOf(val));\n            seen.set(val, copy_2);\n            Object.keys(val).forEach(function (key) {\n                copy_2[key] = cloneDeepHelper(val[key], seen);\n            });\n            return copy_2;\n        }\n        default:\n            return val;\n    }\n}\n//# sourceMappingURL=cloneDeep.js.map", "import { isNonNullObject } from \"./objects.js\";\nfunction deepFreeze(value) {\n    var workSet = new Set([value]);\n    workSet.forEach(function (obj) {\n        if (isNonNullObject(obj) && shallowFreeze(obj) === obj) {\n            Object.getOwnPropertyNames(obj).forEach(function (name) {\n                if (isNonNullObject(obj[name]))\n                    workSet.add(obj[name]);\n            });\n        }\n    });\n    return value;\n}\nfunction shallowFreeze(obj) {\n    if (globalThis.__DEV__ !== false && !Object.isFrozen(obj)) {\n        try {\n            Object.freeze(obj);\n        }\n        catch (e) {\n            // Some types like Uint8Array and Node.js's Buffer cannot be frozen, but\n            // they all throw a TypeError when you try, so we re-throw any exceptions\n            // that are not TypeErrors, since that would be unexpected.\n            if (e instanceof TypeError)\n                return null;\n            throw e;\n        }\n    }\n    return obj;\n}\nexport function maybeDeepFreeze(obj) {\n    if (globalThis.__DEV__ !== false) {\n        deepFreeze(obj);\n    }\n    return obj;\n}\n//# sourceMappingURL=maybeDeepFreeze.js.map", "export function iterateObserversSafely(observers, method, argument) {\n    // In case observers is modified during iteration, we need to commit to the\n    // original elements, which also provides an opportunity to filter them down\n    // to just the observers with the given method.\n    var observersWithMethod = [];\n    observers.forEach(function (obs) { return obs[method] && observersWithMethod.push(obs); });\n    observersWithMethod.forEach(function (obs) { return obs[method](argument); });\n}\n//# sourceMappingURL=iteration.js.map", "import { Observable } from \"./Observable.js\";\n// Like Observable.prototype.map, except that the mapping function can\n// optionally return a Promise (or be async).\nexport function asyncMap(observable, mapFn, catchFn) {\n    return new Observable(function (observer) {\n        var promiseQueue = {\n            // Normally we would initialize promiseQueue to Promise.resolve(), but\n            // in this case, for backwards compatibility, we need to be careful to\n            // invoke the first callback synchronously.\n            then: function (callback) {\n                return new Promise(function (resolve) { return resolve(callback()); });\n            },\n        };\n        function makeCallback(examiner, key) {\n            return function (arg) {\n                if (examiner) {\n                    var both = function () {\n                        // If the observer is closed, we don't want to continue calling the\n                        // mapping function - it's result will be swallowed anyways.\n                        return observer.closed ?\n                            /* will be swallowed */ 0\n                            : examiner(arg);\n                    };\n                    promiseQueue = promiseQueue.then(both, both).then(function (result) { return observer.next(result); }, function (error) { return observer.error(error); });\n                }\n                else {\n                    observer[key](arg);\n                }\n            };\n        }\n        var handler = {\n            next: makeCallback(mapFn, \"next\"),\n            error: makeCallback(catchFn, \"error\"),\n            complete: function () {\n                // no need to reassign `promiseQueue`, after `observer.complete`,\n                // the observer will be closed and short-circuit everything anyways\n                /*promiseQueue = */ promiseQueue.then(function () { return observer.complete(); });\n            },\n        };\n        var sub = observable.subscribe(handler);\n        return function () { return sub.unsubscribe(); };\n    });\n}\n//# sourceMappingURL=asyncMap.js.map", "import { Observable } from \"./Observable.js\";\nimport { canUseSymbol } from \"../common/canUse.js\";\n// Generic implementations of Observable.prototype methods like map and\n// filter need to know how to create a new Observable from an Observable\n// subclass (like Concast or ObservableQuery). Those methods assume\n// (perhaps unwisely?) that they can call the subtype's constructor with a\n// Subscriber function, even though the subclass constructor might expect\n// different parameters. Defining this static Symbol.species property on\n// the subclass is a hint to generic Observable code to use the default\n// constructor instead of trying to do `new Subclass(observer => ...)`.\nexport function fixObservableSubclass(subclass) {\n    function set(key) {\n        // Object.defineProperty is necessary because the Symbol.species\n        // property is a getter by default in modern JS environments, so we\n        // can't assign to it with a normal assignment expression.\n        Object.defineProperty(subclass, key, { value: Observable });\n    }\n    if (canUseSymbol && Symbol.species) {\n        set(Symbol.species);\n    }\n    // The \"@@species\" string is used as a fake Symbol.species value in some\n    // polyfill systems (including the SymbolSpecies variable used by\n    // zen-observable), so we should set it as well, to be safe.\n    set(\"@@species\");\n    return subclass;\n}\n//# sourceMappingURL=subclassing.js.map", "import { __extends } from \"tslib\";\nimport { Observable } from \"./Observable.js\";\nimport { iterateObserversSafely } from \"./iteration.js\";\nimport { fixObservableSubclass } from \"./subclassing.js\";\nfunction isPromiseLike(value) {\n    return value && typeof value.then === \"function\";\n}\n// A Concast<T> observable concatenates the given sources into a single\n// non-overlapping sequence of Ts, automatically unwrapping any promises,\n// and broadcasts the T elements of that sequence to any number of\n// subscribers, all without creating a bunch of intermediary Observable\n// wrapper objects.\n//\n// Even though any number of observers can subscribe to the Concast, each\n// source observable is guaranteed to receive at most one subscribe call,\n// and the results are multicast to all observers.\n//\n// In addition to broadcasting every next/error message to this.observers,\n// the Concast stores the most recent message using this.latest, so any\n// new observers can immediately receive the latest message, even if it\n// was originally delivered in the past. This behavior means we can assume\n// every active observer in this.observers has received the same most\n// recent message.\n//\n// With the exception of this.latest replay, a Concast is a \"hot\"\n// observable in the sense that it does not replay past results from the\n// beginning of time for each new observer.\n//\n// Could we have used some existing RxJS class instead? Concast<T> is\n// similar to a BehaviorSubject<T>, because it is multicast and redelivers\n// the latest next/error message to new subscribers. Unlike Subject<T>,\n// Concast<T> does not expose an Observer<T> interface (this.handlers is\n// intentionally private), since Concast<T> gets its inputs from the\n// concatenated sources. If we ever switch to RxJS, there may be some\n// value in reusing their code, but for now we use zen-observable, which\n// does not contain any Subject implementations.\nvar Concast = /** @class */ (function (_super) {\n    __extends(Concast, _super);\n    // Not only can the individual elements of the iterable be promises, but\n    // also the iterable itself can be wrapped in a promise.\n    function Concast(sources) {\n        var _this = _super.call(this, function (observer) {\n            _this.addObserver(observer);\n            return function () { return _this.removeObserver(observer); };\n        }) || this;\n        // Active observers receiving broadcast messages. Thanks to this.latest,\n        // we can assume all observers in this Set have received the same most\n        // recent message, though possibly at different times in the past.\n        _this.observers = new Set();\n        _this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n        // Bound handler functions that can be reused for every internal\n        // subscription.\n        _this.handlers = {\n            next: function (result) {\n                if (_this.sub !== null) {\n                    _this.latest = [\"next\", result];\n                    _this.notify(\"next\", result);\n                    iterateObserversSafely(_this.observers, \"next\", result);\n                }\n            },\n            error: function (error) {\n                var sub = _this.sub;\n                if (sub !== null) {\n                    // Delay unsubscribing from the underlying subscription slightly,\n                    // so that immediately subscribing another observer can keep the\n                    // subscription active.\n                    if (sub)\n                        setTimeout(function () { return sub.unsubscribe(); });\n                    _this.sub = null;\n                    _this.latest = [\"error\", error];\n                    _this.reject(error);\n                    _this.notify(\"error\", error);\n                    iterateObserversSafely(_this.observers, \"error\", error);\n                }\n            },\n            complete: function () {\n                var _a = _this, sub = _a.sub, _b = _a.sources, sources = _b === void 0 ? [] : _b;\n                if (sub !== null) {\n                    // If complete is called before concast.start, this.sources may be\n                    // undefined, so we use a default value of [] for sources. That works\n                    // here because it falls into the if (!value) {...} block, which\n                    // appropriately terminates the Concast, even if this.sources might\n                    // eventually have been initialized to a non-empty array.\n                    var value = sources.shift();\n                    if (!value) {\n                        if (sub)\n                            setTimeout(function () { return sub.unsubscribe(); });\n                        _this.sub = null;\n                        if (_this.latest && _this.latest[0] === \"next\") {\n                            _this.resolve(_this.latest[1]);\n                        }\n                        else {\n                            _this.resolve();\n                        }\n                        _this.notify(\"complete\");\n                        // We do not store this.latest = [\"complete\"], because doing so\n                        // discards useful information about the previous next (or\n                        // error) message. Instead, if new observers subscribe after\n                        // this Concast has completed, they will receive the final\n                        // 'next' message (unless there was an error) immediately\n                        // followed by a 'complete' message (see addObserver).\n                        iterateObserversSafely(_this.observers, \"complete\");\n                    }\n                    else if (isPromiseLike(value)) {\n                        value.then(function (obs) { return (_this.sub = obs.subscribe(_this.handlers)); }, _this.handlers.error);\n                    }\n                    else {\n                        _this.sub = value.subscribe(_this.handlers);\n                    }\n                }\n            },\n        };\n        _this.nextResultListeners = new Set();\n        // A public way to abort observation and broadcast.\n        _this.cancel = function (reason) {\n            _this.reject(reason);\n            _this.sources = [];\n            _this.handlers.complete();\n        };\n        // Suppress rejection warnings for this.promise, since it's perfectly\n        // acceptable to pay no attention to this.promise if you're consuming\n        // the results through the normal observable API.\n        _this.promise.catch(function (_) { });\n        // If someone accidentally tries to create a Concast using a subscriber\n        // function, recover by creating an Observable from that subscriber and\n        // using it as the source.\n        if (typeof sources === \"function\") {\n            sources = [new Observable(sources)];\n        }\n        if (isPromiseLike(sources)) {\n            sources.then(function (iterable) { return _this.start(iterable); }, _this.handlers.error);\n        }\n        else {\n            _this.start(sources);\n        }\n        return _this;\n    }\n    Concast.prototype.start = function (sources) {\n        if (this.sub !== void 0)\n            return;\n        // In practice, sources is most often simply an Array of observables.\n        // TODO Consider using sources[Symbol.iterator]() to take advantage\n        // of the laziness of non-Array iterables.\n        this.sources = Array.from(sources);\n        // Calling this.handlers.complete() kicks off consumption of the first\n        // source observable. It's tempting to do this step lazily in\n        // addObserver, but this.promise can be accessed without calling\n        // addObserver, so consumption needs to begin eagerly.\n        this.handlers.complete();\n    };\n    Concast.prototype.deliverLastMessage = function (observer) {\n        if (this.latest) {\n            var nextOrError = this.latest[0];\n            var method = observer[nextOrError];\n            if (method) {\n                method.call(observer, this.latest[1]);\n            }\n            // If the subscription is already closed, and the last message was\n            // a 'next' message, simulate delivery of the final 'complete'\n            // message again.\n            if (this.sub === null && nextOrError === \"next\" && observer.complete) {\n                observer.complete();\n            }\n        }\n    };\n    Concast.prototype.addObserver = function (observer) {\n        if (!this.observers.has(observer)) {\n            // Immediately deliver the most recent message, so we can always\n            // be sure all observers have the latest information.\n            this.deliverLastMessage(observer);\n            this.observers.add(observer);\n        }\n    };\n    Concast.prototype.removeObserver = function (observer) {\n        if (this.observers.delete(observer) && this.observers.size < 1) {\n            // In case there are still any listeners in this.nextResultListeners, and\n            // no error or completion has been broadcast yet, make sure those\n            // observers have a chance to run and then remove themselves from\n            // this.observers.\n            this.handlers.complete();\n        }\n    };\n    Concast.prototype.notify = function (method, arg) {\n        var nextResultListeners = this.nextResultListeners;\n        if (nextResultListeners.size) {\n            // Replacing this.nextResultListeners first ensures it does not grow while\n            // we are iterating over it, potentially leading to infinite loops.\n            this.nextResultListeners = new Set();\n            nextResultListeners.forEach(function (listener) { return listener(method, arg); });\n        }\n    };\n    // We need a way to run callbacks just *before* the next result (or error or\n    // completion) is delivered by this Concast, so we can be sure any code that\n    // runs as a result of delivering that result/error observes the effects of\n    // running the callback(s). It was tempting to reuse the Observer type instead\n    // of introducing NextResultListener, but that messes with the sizing and\n    // maintenance of this.observers, and ends up being more code overall.\n    Concast.prototype.beforeNext = function (callback) {\n        var called = false;\n        this.nextResultListeners.add(function (method, arg) {\n            if (!called) {\n                called = true;\n                callback(method, arg);\n            }\n        });\n    };\n    return Concast;\n}(Observable));\nexport { Concast };\n// Necessary because the Concast constructor has a different signature\n// than the Observable constructor.\nfixObservableSubclass(Concast);\n//# sourceMappingURL=Concast.js.map", "import { isNonNullObject } from \"./objects.js\";\nimport { isNonEmptyArray } from \"./arrays.js\";\nimport { DeepMerger } from \"./mergeDeep.js\";\nexport function isExecutionPatchIncrementalResult(value) {\n    return \"incremental\" in value;\n}\nexport function isExecutionPatchInitialResult(value) {\n    return \"hasNext\" in value && \"data\" in value;\n}\nexport function isExecutionPatchResult(value) {\n    return (isExecutionPatchIncrementalResult(value) ||\n        isExecutionPatchInitialResult(value));\n}\n// This function detects an Apollo payload result before it is transformed\n// into a FetchResult via HttpLink; it cannot detect an ApolloPayloadResult\n// once it leaves the link chain.\nexport function isApolloPayloadResult(value) {\n    return isNonNullObject(value) && \"payload\" in value;\n}\nexport function mergeIncrementalData(prevResult, result) {\n    var mergedData = prevResult;\n    var merger = new DeepMerger();\n    if (isExecutionPatchIncrementalResult(result) &&\n        isNonEmptyArray(result.incremental)) {\n        result.incremental.forEach(function (_a) {\n            var data = _a.data, path = _a.path;\n            for (var i = path.length - 1; i >= 0; --i) {\n                var key = path[i];\n                var isNumericKey = !isNaN(+key);\n                var parent_1 = isNumericKey ? [] : {};\n                parent_1[key] = data;\n                data = parent_1;\n            }\n            mergedData = merger.merge(mergedData, data);\n        });\n    }\n    return mergedData;\n}\n//# sourceMappingURL=incrementalResult.js.map", "import { isNonEmptyArray } from \"./arrays.js\";\nimport { isExecutionPatchIncrementalResult } from \"./incrementalResult.js\";\nexport function graphQLResultHasError(result) {\n    var errors = getGraphQLErrorsFromResult(result);\n    return isNonEmptyArray(errors);\n}\nexport function getGraphQLErrorsFromResult(result) {\n    var graphQLErrors = isNonEmptyArray(result.errors) ? result.errors.slice(0) : [];\n    if (isExecutionPatchIncrementalResult(result) &&\n        isNonEmptyArray(result.incremental)) {\n        result.incremental.forEach(function (incrementalResult) {\n            if (incrementalResult.errors) {\n                graphQLErrors.push.apply(graphQLErrors, incrementalResult.errors);\n            }\n        });\n    }\n    return graphQLErrors;\n}\n//# sourceMappingURL=errorHandling.js.map", "/**\n * Merges the provided objects shallowly and removes\n * all properties with an `undefined` value\n */\nexport function compact() {\n    var objects = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        objects[_i] = arguments[_i];\n    }\n    var result = Object.create(null);\n    objects.forEach(function (obj) {\n        if (!obj)\n            return;\n        Object.keys(obj).forEach(function (key) {\n            var value = obj[key];\n            if (value !== void 0) {\n                result[key] = value;\n            }\n        });\n    });\n    return result;\n}\n//# sourceMappingURL=compact.js.map", "var prefixCounts = new Map();\n// These IDs won't be globally unique, but they will be unique within this\n// process, thanks to the counter, and unguessable thanks to the random suffix.\nexport function makeUniqueId(prefix) {\n    var count = prefixCounts.get(prefix) || 1;\n    prefixCounts.set(prefix, count + 1);\n    return \"\".concat(prefix, \":\").concat(count, \":\").concat(Math.random().toString(36).slice(2));\n}\n//# sourceMappingURL=makeUniqueId.js.map", "import { makeUniqueId } from \"./makeUniqueId.js\";\nexport function stringifyForDisplay(value, space) {\n    if (space === void 0) { space = 0; }\n    var undefId = makeUniqueId(\"stringifyForDisplay\");\n    return JSON.stringify(value, function (key, value) {\n        return value === void 0 ? undefId : value;\n    }, space)\n        .split(JSON.stringify(undefId))\n        .join(\"<undefined>\");\n}\n//# sourceMappingURL=stringifyForDisplay.js.map", "import { __assign } from \"tslib\";\nimport { compact } from \"./compact.js\";\nexport function mergeOptions(defaults, options) {\n    return compact(defaults, options, options.variables && {\n        variables: compact(__assign(__assign({}, (defaults && defaults.variables)), options.variables)),\n    });\n}\n//# sourceMappingURL=mergeOptions.js.map", "import { isPlainObject } from \"./objects.js\";\nexport function omitDeep(value, key) {\n    return __omitDeep(value, key);\n}\nfunction __omitDeep(value, key, known) {\n    if (known === void 0) { known = new Map(); }\n    if (known.has(value)) {\n        return known.get(value);\n    }\n    var modified = false;\n    if (Array.isArray(value)) {\n        var array_1 = [];\n        known.set(value, array_1);\n        value.forEach(function (value, index) {\n            var result = __omitDeep(value, key, known);\n            modified || (modified = result !== value);\n            array_1[index] = result;\n        });\n        if (modified) {\n            return array_1;\n        }\n    }\n    else if (isPlainObject(value)) {\n        var obj_1 = Object.create(Object.getPrototypeOf(value));\n        known.set(value, obj_1);\n        Object.keys(value).forEach(function (k) {\n            if (k === key) {\n                modified = true;\n                return;\n            }\n            var result = __omitDeep(value[k], key, known);\n            modified || (modified = result !== value[k]);\n            obj_1[k] = result;\n        });\n        if (modified) {\n            return obj_1;\n        }\n    }\n    return value;\n}\n//# sourceMappingURL=omitDeep.js.map", "import { omitDeep } from \"./omitDeep.js\";\nexport function stripTypename(value) {\n    return omitDeep(value, \"__typename\");\n}\n//# sourceMappingURL=stripTypename.js.map", "import { Observable } from \"../../utilities/index.js\";\nexport function fromError(errorValue) {\n    return new Observable(function (observer) {\n        observer.error(errorValue);\n    });\n}\n//# sourceMappingURL=fromError.js.map", "import { invariant } from \"../../utilities/globals/index.js\";\nexport function toPromise(observable) {\n    var completed = false;\n    return new Promise(function (resolve, reject) {\n        observable.subscribe({\n            next: function (data) {\n                if (completed) {\n                    globalThis.__DEV__ !== false && invariant.warn(42);\n                }\n                else {\n                    completed = true;\n                    resolve(data);\n                }\n            },\n            error: reject,\n        });\n    });\n}\n//# sourceMappingURL=toPromise.js.map", "import { Observable } from \"../../utilities/index.js\";\nexport function fromPromise(promise) {\n    return new Observable(function (observer) {\n        promise\n            .then(function (value) {\n            observer.next(value);\n            observer.complete();\n        })\n            .catch(observer.error.bind(observer));\n    });\n}\n//# sourceMappingURL=fromPromise.js.map", "export var throwServerError = function (response, result, message) {\n    var error = new Error(message);\n    error.name = \"ServerError\";\n    error.response = response;\n    error.statusCode = response.status;\n    error.result = result;\n    throw error;\n};\n//# sourceMappingURL=throwServerError.js.map", "import { newInvariantError } from \"../../utilities/globals/index.js\";\nexport function validateOperation(operation) {\n    var OPERATION_FIELDS = [\n        \"query\",\n        \"operationName\",\n        \"variables\",\n        \"extensions\",\n        \"context\",\n    ];\n    for (var _i = 0, _a = Object.keys(operation); _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (OPERATION_FIELDS.indexOf(key) < 0) {\n            throw newInvariantError(43, key);\n        }\n    }\n    return operation;\n}\n//# sourceMappingURL=validateOperation.js.map", "import { __assign } from \"tslib\";\nexport function createOperation(starting, operation) {\n    var context = __assign({}, starting);\n    var setContext = function (next) {\n        if (typeof next === \"function\") {\n            context = __assign(__assign({}, context), next(context));\n        }\n        else {\n            context = __assign(__assign({}, context), next);\n        }\n    };\n    var getContext = function () { return (__assign({}, context)); };\n    Object.defineProperty(operation, \"setContext\", {\n        enumerable: false,\n        value: setContext,\n    });\n    Object.defineProperty(operation, \"getContext\", {\n        enumerable: false,\n        value: getContext,\n    });\n    return operation;\n}\n//# sourceMappingURL=createOperation.js.map", "import { getOperationName } from \"../../utilities/index.js\";\nexport function transformOperation(operation) {\n    var transformedOperation = {\n        variables: operation.variables || {},\n        extensions: operation.extensions || {},\n        operationName: operation.operationName,\n        query: operation.query,\n    };\n    // Best guess at an operation name\n    if (!transformedOperation.operationName) {\n        transformedOperation.operationName =\n            typeof transformedOperation.query !== \"string\" ?\n                getOperationName(transformedOperation.query) || undefined\n                : \"\";\n    }\n    return transformedOperation;\n}\n//# sourceMappingURL=transformOperation.js.map", "import { __assign } from \"tslib\";\nimport { visit } from \"graphql\";\nexport function filterOperationVariables(variables, query) {\n    var result = __assign({}, variables);\n    var unusedNames = new Set(Object.keys(variables));\n    visit(query, {\n        Variable: function (node, _key, parent) {\n            // A variable type definition at the top level of a query is not\n            // enough to silence server-side errors about the variable being\n            // unused, so variable definitions do not count as usage.\n            // https://spec.graphql.org/draft/#sec-All-Variables-Used\n            if (parent &&\n                parent.kind !== \"VariableDefinition\") {\n                unusedNames.delete(node.name.value);\n            }\n        },\n    });\n    unusedNames.forEach(function (name) {\n        delete result[name];\n    });\n    return result;\n}\n//# sourceMappingURL=filterOperationVariables.js.map", "import { newInvariantError, invariant } from \"../../utilities/globals/index.js\";\nimport { Observable } from \"../../utilities/index.js\";\nimport { validateOperation, createOperation, transformOperation, } from \"../utils/index.js\";\nfunction passthrough(op, forward) {\n    return (forward ? forward(op) : Observable.of());\n}\nfunction toLink(handler) {\n    return typeof handler === \"function\" ? new ApolloLink(handler) : handler;\n}\nfunction isTerminating(link) {\n    return link.request.length <= 1;\n}\nvar ApolloLink = /** @class */ (function () {\n    function ApolloLink(request) {\n        if (request)\n            this.request = request;\n    }\n    ApolloLink.empty = function () {\n        return new ApolloLink(function () { return Observable.of(); });\n    };\n    ApolloLink.from = function (links) {\n        if (links.length === 0)\n            return ApolloLink.empty();\n        return links.map(toLink).reduce(function (x, y) { return x.concat(y); });\n    };\n    ApolloLink.split = function (test, left, right) {\n        var leftLink = toLink(left);\n        var rightLink = toLink(right || new ApolloLink(passthrough));\n        var ret;\n        if (isTerminating(leftLink) && isTerminating(rightLink)) {\n            ret = new ApolloLink(function (operation) {\n                return test(operation) ?\n                    leftLink.request(operation) || Observable.of()\n                    : rightLink.request(operation) || Observable.of();\n            });\n        }\n        else {\n            ret = new ApolloLink(function (operation, forward) {\n                return test(operation) ?\n                    leftLink.request(operation, forward) || Observable.of()\n                    : rightLink.request(operation, forward) || Observable.of();\n            });\n        }\n        return Object.assign(ret, { left: leftLink, right: rightLink });\n    };\n    ApolloLink.execute = function (link, operation) {\n        return (link.request(createOperation(operation.context, transformOperation(validateOperation(operation)))) || Observable.of());\n    };\n    ApolloLink.concat = function (first, second) {\n        var firstLink = toLink(first);\n        if (isTerminating(firstLink)) {\n            globalThis.__DEV__ !== false && invariant.warn(35, firstLink);\n            return firstLink;\n        }\n        var nextLink = toLink(second);\n        var ret;\n        if (isTerminating(nextLink)) {\n            ret = new ApolloLink(function (operation) {\n                return firstLink.request(operation, function (op) { return nextLink.request(op) || Observable.of(); }) || Observable.of();\n            });\n        }\n        else {\n            ret = new ApolloLink(function (operation, forward) {\n                return (firstLink.request(operation, function (op) {\n                    return nextLink.request(op, forward) || Observable.of();\n                }) || Observable.of());\n            });\n        }\n        return Object.assign(ret, { left: firstLink, right: nextLink });\n    };\n    ApolloLink.prototype.split = function (test, left, right) {\n        return this.concat(ApolloLink.split(test, left, right || new ApolloLink(passthrough)));\n    };\n    ApolloLink.prototype.concat = function (next) {\n        return ApolloLink.concat(this, next);\n    };\n    ApolloLink.prototype.request = function (operation, forward) {\n        throw newInvariantError(36);\n    };\n    ApolloLink.prototype.onError = function (error, observer) {\n        if (observer && observer.error) {\n            observer.error(error);\n            // Returning false indicates that observer.error does not need to be\n            // called again, since it was already called (on the previous line).\n            // Calling observer.error again would not cause any real problems,\n            // since only the first call matters, but custom onError functions\n            // might have other reasons for wanting to prevent the default\n            // behavior by returning false.\n            return false;\n        }\n        // Throw errors will be passed to observer.error.\n        throw error;\n    };\n    ApolloLink.prototype.setOnError = function (fn) {\n        this.onError = fn;\n        return this;\n    };\n    return ApolloLink;\n}());\nexport { ApolloLink };\n//# sourceMappingURL=ApolloLink.js.map", "import { ApolloLink } from \"./ApolloLink.js\";\nexport var empty = ApolloLink.empty;\n//# sourceMappingURL=empty.js.map", "import { ApolloLink } from \"./ApolloLink.js\";\nexport var from = ApolloLink.from;\n//# sourceMappingURL=from.js.map", "import { ApolloLink } from \"./ApolloLink.js\";\nexport var split = ApolloLink.split;\n//# sourceMappingURL=split.js.map", "import { ApolloLink } from \"./ApolloLink.js\";\nexport var concat = ApolloLink.concat;\n//# sourceMappingURL=concat.js.map", "import { ApolloLink } from \"./ApolloLink.js\";\nexport var execute = ApolloLink.execute;\n//# sourceMappingURL=execute.js.map", "import { __extends, __spreadArray } from \"tslib\";\nimport \"../utilities/globals/index.js\";\nimport { isNonNullObject } from \"../utilities/index.js\";\n// This Symbol allows us to pass transport-specific errors from the link chain\n// into QueryManager/client internals without risking a naming collision within\n// extensions (which implementers can use as they see fit).\nexport var PROTOCOL_ERRORS_SYMBOL = Symbol();\nexport function graphQLResultHasProtocolErrors(result) {\n    if (result.extensions) {\n        return Array.isArray(result.extensions[PROTOCOL_ERRORS_SYMBOL]);\n    }\n    return false;\n}\nexport function isApolloError(err) {\n    return err.hasOwnProperty(\"graphQLErrors\");\n}\n// Sets the error message on this error according to the\n// the GraphQL and network errors that are present.\n// If the error message has already been set through the\n// constructor or otherwise, this function is a nop.\nvar generateErrorMessage = function (err) {\n    var errors = __spreadArray(__spreadArray(__spreadArray([], err.graphQLErrors, true), err.clientErrors, true), err.protocolErrors, true);\n    if (err.networkError)\n        errors.push(err.networkError);\n    return (errors\n        // The rest of the code sometimes unsafely types non-Error objects as GraphQLErrors\n        .map(function (err) {\n        return (isNonNullObject(err) && err.message) || \"Error message not found.\";\n    })\n        .join(\"\\n\"));\n};\nvar ApolloError = /** @class */ (function (_super) {\n    __extends(ApolloError, _super);\n    // Constructs an instance of ApolloError given a GraphQLError\n    // or a network error. Note that one of these has to be a valid\n    // value or the constructed error will be meaningless.\n    function ApolloError(_a) {\n        var graphQLErrors = _a.graphQLErrors, protocolErrors = _a.protocolErrors, clientErrors = _a.clientErrors, networkError = _a.networkError, errorMessage = _a.errorMessage, extraInfo = _a.extraInfo;\n        var _this = _super.call(this, errorMessage) || this;\n        _this.name = \"ApolloError\";\n        _this.graphQLErrors = graphQLErrors || [];\n        _this.protocolErrors = protocolErrors || [];\n        _this.clientErrors = clientErrors || [];\n        _this.networkError = networkError || null;\n        _this.message = errorMessage || generateErrorMessage(_this);\n        _this.extraInfo = extraInfo;\n        // We're not using `Object.setPrototypeOf` here as it isn't fully\n        // supported on Android (see issue #3236).\n        _this.__proto__ = ApolloError.prototype;\n        return _this;\n    }\n    return ApolloError;\n}(Error));\nexport { ApolloError };\n//# sourceMappingURL=index.js.map", "/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/async.ts\n */\nexport default function asyncIterator(source) {\n    var _a;\n    var iterator = source[Symbol.asyncIterator]();\n    return _a = {\n            next: function () {\n                return iterator.next();\n            }\n        },\n        _a[Symbol.asyncIterator] = function () {\n            return this;\n        },\n        _a;\n}\n//# sourceMappingURL=async.js.map", "/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/nodeStream.ts\n */\nimport { canUseAsyncIteratorSymbol } from \"../../../utilities/index.js\";\nexport default function nodeStreamIterator(stream) {\n    var cleanup = null;\n    var error = null;\n    var done = false;\n    var data = [];\n    var waiting = [];\n    function onData(chunk) {\n        if (error)\n            return;\n        if (waiting.length) {\n            var shiftedArr = waiting.shift();\n            if (Array.isArray(shiftedArr) && shiftedArr[0]) {\n                return shiftedArr[0]({ value: chunk, done: false });\n            }\n        }\n        data.push(chunk);\n    }\n    function onError(err) {\n        error = err;\n        var all = waiting.slice();\n        all.forEach(function (pair) {\n            pair[1](err);\n        });\n        !cleanup || cleanup();\n    }\n    function onEnd() {\n        done = true;\n        var all = waiting.slice();\n        all.forEach(function (pair) {\n            pair[0]({ value: undefined, done: true });\n        });\n        !cleanup || cleanup();\n    }\n    cleanup = function () {\n        cleanup = null;\n        stream.removeListener(\"data\", onData);\n        stream.removeListener(\"error\", onError);\n        stream.removeListener(\"end\", onEnd);\n        stream.removeListener(\"finish\", onEnd);\n        stream.removeListener(\"close\", onEnd);\n    };\n    stream.on(\"data\", onData);\n    stream.on(\"error\", onError);\n    stream.on(\"end\", onEnd);\n    stream.on(\"finish\", onEnd);\n    stream.on(\"close\", onEnd);\n    function getNext() {\n        return new Promise(function (resolve, reject) {\n            if (error)\n                return reject(error);\n            if (data.length)\n                return resolve({ value: data.shift(), done: false });\n            if (done)\n                return resolve({ value: undefined, done: true });\n            waiting.push([resolve, reject]);\n        });\n    }\n    var iterator = {\n        next: function () {\n            return getNext();\n        },\n    };\n    if (canUseAsyncIteratorSymbol) {\n        iterator[Symbol.asyncIterator] = function () {\n            return this;\n        };\n    }\n    return iterator;\n}\n//# sourceMappingURL=nodeStream.js.map", "/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/promise.ts\n */\nimport { canUseAsyncIteratorSymbol } from \"../../../utilities/index.js\";\nexport default function promiseIterator(promise) {\n    var resolved = false;\n    var iterator = {\n        next: function () {\n            if (resolved)\n                return Promise.resolve({\n                    value: undefined,\n                    done: true,\n                });\n            resolved = true;\n            return new Promise(function (resolve, reject) {\n                promise\n                    .then(function (value) {\n                    resolve({ value: value, done: false });\n                })\n                    .catch(reject);\n            });\n        },\n    };\n    if (canUseAsyncIteratorSymbol) {\n        iterator[Symbol.asyncIterator] = function () {\n            return this;\n        };\n    }\n    return iterator;\n}\n//# sourceMappingURL=promise.js.map", "/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/reader.ts\n */\nimport { canUseAsyncIteratorSymbol } from \"../../../utilities/index.js\";\nexport default function readerIterator(reader) {\n    var iterator = {\n        next: function () {\n            return reader.read();\n        },\n    };\n    if (canUseAsyncIteratorSymbol) {\n        iterator[Symbol.asyncIterator] = function () {\n            return this;\n        };\n    }\n    return iterator;\n}\n//# sourceMappingURL=reader.js.map", "/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/index.ts\n */\nimport { canUseAsyncIteratorSymbol } from \"../../utilities/index.js\";\nimport asyncIterator from \"./iterators/async.js\";\nimport nodeStreamIterator from \"./iterators/nodeStream.js\";\nimport promiseIterator from \"./iterators/promise.js\";\nimport readerIterator from \"./iterators/reader.js\";\nfunction isNodeResponse(value) {\n    return !!value.body;\n}\nfunction isReadableStream(value) {\n    return !!value.getReader;\n}\nfunction isAsyncIterableIterator(value) {\n    return !!(canUseAsyncIteratorSymbol &&\n        value[Symbol.asyncIterator]);\n}\nfunction isStreamableBlob(value) {\n    return !!value.stream;\n}\nfunction isBlob(value) {\n    return !!value.arrayBuffer;\n}\nfunction isNodeReadableStream(value) {\n    return !!value.pipe;\n}\nexport function responseIterator(response) {\n    var body = response;\n    if (isNodeResponse(response))\n        body = response.body;\n    if (isAsyncIterableIterator(body))\n        return asyncIterator(body);\n    if (isReadableStream(body))\n        return readerIterator(body.getReader());\n    // this errors without casting to ReadableStream<T>\n    // because Blob.stream() returns a NodeJS ReadableStream\n    if (isStreamableBlob(body)) {\n        return readerIterator(body.stream().getReader());\n    }\n    if (isBlob(body))\n        return promiseIterator(body.arrayBuffer());\n    if (isNodeReadableStream(body))\n        return nodeStreamIterator(body);\n    throw new Error(\"Unknown body type for responseIterator. Please pass a streamable response.\");\n}\n//# sourceMappingURL=responseIterator.js.map", "export function isNonNullObject(obj) {\n    return obj !== null && typeof obj === \"object\";\n}\nexport function isPlainObject(obj) {\n    return (obj !== null &&\n        typeof obj === \"object\" &&\n        (Object.getPrototypeOf(obj) === Object.prototype ||\n            Object.getPrototypeOf(obj) === null));\n}\n//# sourceMappingURL=objects.js.map", "import { isNonNullObject } from \"./objects.js\";\nimport { isNonEmptyArray } from \"./arrays.js\";\nimport { DeepMerger } from \"./mergeDeep.js\";\nexport function isExecutionPatchIncrementalResult(value) {\n    return \"incremental\" in value;\n}\nexport function isExecutionPatchInitialResult(value) {\n    return \"hasNext\" in value && \"data\" in value;\n}\nexport function isExecutionPatchResult(value) {\n    return (isExecutionPatchIncrementalResult(value) ||\n        isExecutionPatchInitialResult(value));\n}\n// This function detects an Apollo payload result before it is transformed\n// into a FetchResult via HttpLink; it cannot detect an ApolloPayloadResult\n// once it leaves the link chain.\nexport function isApolloPayloadResult(value) {\n    return isNonNullObject(value) && \"payload\" in value;\n}\nexport function mergeIncrementalData(prevResult, result) {\n    var mergedData = prevResult;\n    var merger = new DeepMerger();\n    if (isExecutionPatchIncrementalResult(result) &&\n        isNonEmptyArray(result.incremental)) {\n        result.incremental.forEach(function (_a) {\n            var data = _a.data, path = _a.path;\n            for (var i = path.length - 1; i >= 0; --i) {\n                var key = path[i];\n                var isNumericKey = !isNaN(+key);\n                var parent_1 = isNumericKey ? [] : {};\n                parent_1[key] = data;\n                data = parent_1;\n            }\n            mergedData = merger.merge(mergedData, data);\n        });\n    }\n    return mergedData;\n}\n//# sourceMappingURL=incrementalResult.js.map", "import { __assign, __awaiter, __generator } from \"tslib\";\nimport { responseIterator } from \"./responseIterator.js\";\nimport { throwServerError } from \"../utils/index.js\";\nimport { PROTOCOL_ERRORS_SYMBOL } from \"../../errors/index.js\";\nimport { isApolloPayloadResult } from \"../../utilities/common/incrementalResult.js\";\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function readMultipartBody(response, nextValue) {\n    return __awaiter(this, void 0, void 0, function () {\n        var decoder, contentType, delimiter, boundaryVal, boundary, buffer, iterator, running, _a, value, done, chunk, searchFrom, bi, message, i, headers, contentType_1, body, result, next;\n        var _b, _c;\n        var _d;\n        return __generator(this, function (_e) {\n            switch (_e.label) {\n                case 0:\n                    if (TextDecoder === undefined) {\n                        throw new Error(\"TextDecoder must be defined in the environment: please import a polyfill.\");\n                    }\n                    decoder = new TextDecoder(\"utf-8\");\n                    contentType = (_d = response.headers) === null || _d === void 0 ? void 0 : _d.get(\"content-type\");\n                    delimiter = \"boundary=\";\n                    boundaryVal = (contentType === null || contentType === void 0 ? void 0 : contentType.includes(delimiter)) ?\n                        contentType === null || contentType === void 0 ? void 0 : contentType.substring((contentType === null || contentType === void 0 ? void 0 : contentType.indexOf(delimiter)) + delimiter.length).replace(/['\"]/g, \"\").replace(/\\;(.*)/gm, \"\").trim()\n                        : \"-\";\n                    boundary = \"\\r\\n--\".concat(boundaryVal);\n                    buffer = \"\";\n                    iterator = responseIterator(response);\n                    running = true;\n                    _e.label = 1;\n                case 1:\n                    if (!running) return [3 /*break*/, 3];\n                    return [4 /*yield*/, iterator.next()];\n                case 2:\n                    _a = _e.sent(), value = _a.value, done = _a.done;\n                    chunk = typeof value === \"string\" ? value : decoder.decode(value);\n                    searchFrom = buffer.length - boundary.length + 1;\n                    running = !done;\n                    buffer += chunk;\n                    bi = buffer.indexOf(boundary, searchFrom);\n                    while (bi > -1) {\n                        message = void 0;\n                        _b = [\n                            buffer.slice(0, bi),\n                            buffer.slice(bi + boundary.length),\n                        ], message = _b[0], buffer = _b[1];\n                        i = message.indexOf(\"\\r\\n\\r\\n\");\n                        headers = parseHeaders(message.slice(0, i));\n                        contentType_1 = headers[\"content-type\"];\n                        if (contentType_1 &&\n                            contentType_1.toLowerCase().indexOf(\"application/json\") === -1) {\n                            throw new Error(\"Unsupported patch content type: application/json is required.\");\n                        }\n                        body = message.slice(i);\n                        if (body) {\n                            result = parseJsonBody(response, body);\n                            if (Object.keys(result).length > 1 ||\n                                \"data\" in result ||\n                                \"incremental\" in result ||\n                                \"errors\" in result ||\n                                \"payload\" in result) {\n                                if (isApolloPayloadResult(result)) {\n                                    next = {};\n                                    if (\"payload\" in result) {\n                                        if (Object.keys(result).length === 1 && result.payload === null) {\n                                            return [2 /*return*/];\n                                        }\n                                        next = __assign({}, result.payload);\n                                    }\n                                    if (\"errors\" in result) {\n                                        next = __assign(__assign({}, next), { extensions: __assign(__assign({}, (\"extensions\" in next ? next.extensions : null)), (_c = {}, _c[PROTOCOL_ERRORS_SYMBOL] = result.errors, _c)) });\n                                    }\n                                    nextValue(next);\n                                }\n                                else {\n                                    // for the last chunk with only `hasNext: false`\n                                    // we don't need to call observer.next as there is no data/errors\n                                    nextValue(result);\n                                }\n                            }\n                            else if (\n                            // If the chunk contains only a \"hasNext: false\", we can call\n                            // observer.complete() immediately.\n                            Object.keys(result).length === 1 &&\n                                \"hasNext\" in result &&\n                                !result.hasNext) {\n                                return [2 /*return*/];\n                            }\n                        }\n                        bi = buffer.indexOf(boundary);\n                    }\n                    return [3 /*break*/, 1];\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\nexport function parseHeaders(headerText) {\n    var headersInit = {};\n    headerText.split(\"\\n\").forEach(function (line) {\n        var i = line.indexOf(\":\");\n        if (i > -1) {\n            // normalize headers to lowercase\n            var name_1 = line.slice(0, i).trim().toLowerCase();\n            var value = line.slice(i + 1).trim();\n            headersInit[name_1] = value;\n        }\n    });\n    return headersInit;\n}\nexport function parseJsonBody(response, bodyText) {\n    if (response.status >= 300) {\n        // Network error\n        var getResult = function () {\n            try {\n                return JSON.parse(bodyText);\n            }\n            catch (err) {\n                return bodyText;\n            }\n        };\n        throwServerError(response, getResult(), \"Response not successful: Received status code \".concat(response.status));\n    }\n    try {\n        return JSON.parse(bodyText);\n    }\n    catch (err) {\n        var parseError = err;\n        parseError.name = \"ServerParseError\";\n        parseError.response = response;\n        parseError.statusCode = response.status;\n        parseError.bodyText = bodyText;\n        throw parseError;\n    }\n}\nexport function handleError(err, observer) {\n    // if it is a network error, BUT there is graphql result info fire\n    // the next observer before calling error this gives apollo-client\n    // (and react-apollo) the `graphqlErrors` and `networkErrors` to\n    // pass to UI this should only happen if we *also* have data as\n    // part of the response key per the spec\n    if (err.result && err.result.errors && err.result.data) {\n        // if we don't call next, the UI can only show networkError\n        // because AC didn't get any graphqlErrors this is graphql\n        // execution result info (i.e errors and possibly data) this is\n        // because there is no formal spec how errors should translate to\n        // http status codes. So an auth error (401) could have both data\n        // from a public field, errors from a private field, and a status\n        // of 401\n        // {\n        //  user { // this will have errors\n        //    firstName\n        //  }\n        //  products { // this is public so will have data\n        //    cost\n        //  }\n        // }\n        //\n        // the result of above *could* look like this:\n        // {\n        //   data: { products: [{ cost: \"$10\" }] },\n        //   errors: [{\n        //      message: 'your session has timed out',\n        //      path: []\n        //   }]\n        // }\n        // status code of above would be a 401\n        // in the UI you want to show data where you can, errors as data where you can\n        // and use correct http status codes\n        observer.next(err.result);\n    }\n    observer.error(err);\n}\nexport function parseAndCheckHttpResponse(operations) {\n    return function (response) {\n        return response\n            .text()\n            .then(function (bodyText) { return parseJsonBody(response, bodyText); })\n            .then(function (result) {\n            if (!Array.isArray(result) &&\n                !hasOwnProperty.call(result, \"data\") &&\n                !hasOwnProperty.call(result, \"errors\")) {\n                // Data error\n                throwServerError(response, result, \"Server response was missing for query '\".concat(Array.isArray(operations) ?\n                    operations.map(function (op) { return op.operationName; })\n                    : operations.operationName, \"'.\"));\n            }\n            return result;\n        });\n    };\n}\n//# sourceMappingURL=parseAndCheckHttpResponse.js.map", "import { newInvariantError } from \"../../utilities/globals/index.js\";\nexport var serializeFetchParameter = function (p, label) {\n    var serialized;\n    try {\n        serialized = JSON.stringify(p);\n    }\n    catch (e) {\n        var parseError = newInvariantError(39, label, e.message);\n        parseError.parseError = e;\n        throw parseError;\n    }\n    return serialized;\n};\n//# sourceMappingURL=serializeFetchParameter.js.map", "import { __assign, __spreadArray } from \"tslib\";\nimport { print } from \"../../utilities/index.js\";\nvar defaultHttpOptions = {\n    includeQuery: true,\n    includeExtensions: false,\n    preserveHeaderCase: false,\n};\nvar defaultHeaders = {\n    // headers are case insensitive (https://stackoverflow.com/a/5259004)\n    accept: \"*/*\",\n    // The content-type header describes the type of the body of the request, and\n    // so it typically only is sent with requests that actually have bodies. One\n    // could imagine that Apollo Client would remove this header when constructing\n    // a GET request (which has no body), but we historically have not done that.\n    // This means that browsers will preflight all Apollo Client requests (even\n    // GET requests). Apollo Server's CSRF prevention feature (introduced in\n    // AS3.7) takes advantage of this fact and does not block requests with this\n    // header. If you want to drop this header from GET requests, then you should\n    // probably replace it with a `apollo-require-preflight` header, or servers\n    // with CSRF prevention enabled might block your GET request. See\n    // https://www.apollographql.com/docs/apollo-server/security/cors/#preventing-cross-site-request-forgery-csrf\n    // for more details.\n    \"content-type\": \"application/json\",\n};\nvar defaultOptions = {\n    method: \"POST\",\n};\nexport var fallbackHttpConfig = {\n    http: defaultHttpOptions,\n    headers: defaultHeaders,\n    options: defaultOptions,\n};\nexport var defaultPrinter = function (ast, printer) { return printer(ast); };\nexport function selectHttpOptionsAndBody(operation, fallbackConfig) {\n    var configs = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        configs[_i - 2] = arguments[_i];\n    }\n    configs.unshift(fallbackConfig);\n    return selectHttpOptionsAndBodyInternal.apply(void 0, __spreadArray([operation,\n        defaultPrinter], configs, false));\n}\nexport function selectHttpOptionsAndBodyInternal(operation, printer) {\n    var configs = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        configs[_i - 2] = arguments[_i];\n    }\n    var options = {};\n    var http = {};\n    configs.forEach(function (config) {\n        options = __assign(__assign(__assign({}, options), config.options), { headers: __assign(__assign({}, options.headers), config.headers) });\n        if (config.credentials) {\n            options.credentials = config.credentials;\n        }\n        http = __assign(__assign({}, http), config.http);\n    });\n    if (options.headers) {\n        options.headers = removeDuplicateHeaders(options.headers, http.preserveHeaderCase);\n    }\n    //The body depends on the http options\n    var operationName = operation.operationName, extensions = operation.extensions, variables = operation.variables, query = operation.query;\n    var body = { operationName: operationName, variables: variables };\n    if (http.includeExtensions)\n        body.extensions = extensions;\n    // not sending the query (i.e persisted queries)\n    if (http.includeQuery)\n        body.query = printer(query, print);\n    return {\n        options: options,\n        body: body,\n    };\n}\n// Remove potential duplicate header names, preserving last (by insertion order).\n// This is done to prevent unintentionally duplicating a header instead of\n// overwriting it (See #8447 and #8449).\nfunction removeDuplicateHeaders(headers, preserveHeaderCase) {\n    // If we're not preserving the case, just remove duplicates w/ normalization.\n    if (!preserveHeaderCase) {\n        var normalizedHeaders_1 = Object.create(null);\n        Object.keys(Object(headers)).forEach(function (name) {\n            normalizedHeaders_1[name.toLowerCase()] = headers[name];\n        });\n        return normalizedHeaders_1;\n    }\n    // If we are preserving the case, remove duplicates w/ normalization,\n    // preserving the original name.\n    // This allows for non-http-spec-compliant servers that expect intentionally\n    // capitalized header names (See #6741).\n    var headerData = Object.create(null);\n    Object.keys(Object(headers)).forEach(function (name) {\n        headerData[name.toLowerCase()] = {\n            originalName: name,\n            value: headers[name],\n        };\n    });\n    var normalizedHeaders = Object.create(null);\n    Object.keys(headerData).forEach(function (name) {\n        normalizedHeaders[headerData[name].originalName] = headerData[name].value;\n    });\n    return normalizedHeaders;\n}\n//# sourceMappingURL=selectHttpOptionsAndBody.js.map", "import { newInvariantError } from \"../../utilities/globals/index.js\";\nexport var checkFetcher = function (fetcher) {\n    if (!fetcher && typeof fetch === \"undefined\") {\n        throw newInvariantError(37);\n    }\n};\n//# sourceMappingURL=checkFetcher.js.map", "/**\n * @deprecated\n * This is not used internally any more and will be removed in\n * the next major version of Apollo Client.\n */\nexport var createSignalIfSupported = function () {\n    if (typeof AbortController === \"undefined\")\n        return { controller: false, signal: false };\n    var controller = new AbortController();\n    var signal = controller.signal;\n    return { controller: controller, signal: signal };\n};\n//# sourceMappingURL=createSignalIfSupported.js.map", "export var selectURI = function (operation, fallbackURI) {\n    var context = operation.getContext();\n    var contextURI = context.uri;\n    if (contextURI) {\n        return contextURI;\n    }\n    else if (typeof fallbackURI === \"function\") {\n        return fallbackURI(operation);\n    }\n    else {\n        return fallbackURI || \"/graphql\";\n    }\n};\n//# sourceMappingURL=selectURI.js.map", "import { serializeFetchParameter } from \"./serializeFetchParameter.js\";\n// For GET operations, returns the given URI rewritten with parameters, or a\n// parse error.\nexport function rewriteURIForGET(chosenURI, body) {\n    // Implement the standard HTTP GET serialization, plus 'extensions'. Note\n    // the extra level of JSON serialization!\n    var queryParams = [];\n    var addQueryParam = function (key, value) {\n        queryParams.push(\"\".concat(key, \"=\").concat(encodeURIComponent(value)));\n    };\n    if (\"query\" in body) {\n        addQueryParam(\"query\", body.query);\n    }\n    if (body.operationName) {\n        addQueryParam(\"operationName\", body.operationName);\n    }\n    if (body.variables) {\n        var serializedVariables = void 0;\n        try {\n            serializedVariables = serializeFetchParameter(body.variables, \"Variables map\");\n        }\n        catch (parseError) {\n            return { parseError: parseError };\n        }\n        addQueryParam(\"variables\", serializedVariables);\n    }\n    if (body.extensions) {\n        var serializedExtensions = void 0;\n        try {\n            serializedExtensions = serializeFetchParameter(body.extensions, \"Extensions map\");\n        }\n        catch (parseError) {\n            return { parseError: parseError };\n        }\n        addQueryParam(\"extensions\", serializedExtensions);\n    }\n    // Reconstruct the URI with added query params.\n    // XXX This assumes that the URI is well-formed and that it doesn't\n    //     already contain any of these query params. We could instead use the\n    //     URL API and take a polyfill (whatwg-url@6) for older browsers that\n    //     don't support URLSearchParams. Note that some browsers (and\n    //     versions of whatwg-url) support URL but not URLSearchParams!\n    var fragment = \"\", preFragment = chosenURI;\n    var fragmentStart = chosenURI.indexOf(\"#\");\n    if (fragmentStart !== -1) {\n        fragment = chosenURI.substr(fragmentStart);\n        preFragment = chosenURI.substr(0, fragmentStart);\n    }\n    var queryParamsPrefix = preFragment.indexOf(\"?\") === -1 ? \"?\" : \"&\";\n    var newURI = preFragment + queryParamsPrefix + queryParams.join(\"&\") + fragment;\n    return { newURI: newURI };\n}\n//# sourceMappingURL=rewriteURIForGET.js.map", "import { __assign, __rest } from \"tslib\";\nimport { invariant } from \"../../utilities/globals/index.js\";\nimport { ApolloLink } from \"../core/index.js\";\nimport { Observable, hasDirectives } from \"../../utilities/index.js\";\nimport { serializeFetchParameter } from \"./serializeFetchParameter.js\";\nimport { selectURI } from \"./selectURI.js\";\nimport { handleError, readMultipartBody, parseAndCheckHttpResponse, } from \"./parseAndCheckHttpResponse.js\";\nimport { checkFetcher } from \"./checkFetcher.js\";\nimport { selectHttpOptionsAndBodyInternal, defaultPrinter, fallbackHttpConfig, } from \"./selectHttpOptionsAndBody.js\";\nimport { rewriteURIForGET } from \"./rewriteURIForGET.js\";\nimport { fromError, filterOperationVariables } from \"../utils/index.js\";\nimport { maybe, getMainDefinition, removeClientSetsFromDocument, } from \"../../utilities/index.js\";\nvar backupFetch = maybe(function () { return fetch; });\nexport var createHttpLink = function (linkOptions) {\n    if (linkOptions === void 0) { linkOptions = {}; }\n    var _a = linkOptions.uri, uri = _a === void 0 ? \"/graphql\" : _a, \n    // use default global fetch if nothing passed in\n    preferredFetch = linkOptions.fetch, _b = linkOptions.print, print = _b === void 0 ? defaultPrinter : _b, includeExtensions = linkOptions.includeExtensions, preserveHeaderCase = linkOptions.preserveHeaderCase, useGETForQueries = linkOptions.useGETForQueries, _c = linkOptions.includeUnusedVariables, includeUnusedVariables = _c === void 0 ? false : _c, requestOptions = __rest(linkOptions, [\"uri\", \"fetch\", \"print\", \"includeExtensions\", \"preserveHeaderCase\", \"useGETForQueries\", \"includeUnusedVariables\"]);\n    if (globalThis.__DEV__ !== false) {\n        // Make sure at least one of preferredFetch, window.fetch, or backupFetch is\n        // defined, so requests won't fail at runtime.\n        checkFetcher(preferredFetch || backupFetch);\n    }\n    var linkConfig = {\n        http: { includeExtensions: includeExtensions, preserveHeaderCase: preserveHeaderCase },\n        options: requestOptions.fetchOptions,\n        credentials: requestOptions.credentials,\n        headers: requestOptions.headers,\n    };\n    return new ApolloLink(function (operation) {\n        var chosenURI = selectURI(operation, uri);\n        var context = operation.getContext();\n        // `apollographql-client-*` headers are automatically set if a\n        // `clientAwareness` object is found in the context. These headers are\n        // set first, followed by the rest of the headers pulled from\n        // `context.headers`. If desired, `apollographql-client-*` headers set by\n        // the `clientAwareness` object can be overridden by\n        // `apollographql-client-*` headers set in `context.headers`.\n        var clientAwarenessHeaders = {};\n        if (context.clientAwareness) {\n            var _a = context.clientAwareness, name_1 = _a.name, version = _a.version;\n            if (name_1) {\n                clientAwarenessHeaders[\"apollographql-client-name\"] = name_1;\n            }\n            if (version) {\n                clientAwarenessHeaders[\"apollographql-client-version\"] = version;\n            }\n        }\n        var contextHeaders = __assign(__assign({}, clientAwarenessHeaders), context.headers);\n        var contextConfig = {\n            http: context.http,\n            options: context.fetchOptions,\n            credentials: context.credentials,\n            headers: contextHeaders,\n        };\n        if (hasDirectives([\"client\"], operation.query)) {\n            var transformedQuery = removeClientSetsFromDocument(operation.query);\n            if (!transformedQuery) {\n                return fromError(new Error(\"HttpLink: Trying to send a client-only query to the server. To send to the server, ensure a non-client field is added to the query or set the `transformOptions.removeClientFields` option to `true`.\"));\n            }\n            operation.query = transformedQuery;\n        }\n        //uses fallback, link, and then context to build options\n        var _b = selectHttpOptionsAndBodyInternal(operation, print, fallbackHttpConfig, linkConfig, contextConfig), options = _b.options, body = _b.body;\n        if (body.variables && !includeUnusedVariables) {\n            body.variables = filterOperationVariables(body.variables, operation.query);\n        }\n        var controller;\n        if (!options.signal && typeof AbortController !== \"undefined\") {\n            controller = new AbortController();\n            options.signal = controller.signal;\n        }\n        // If requested, set method to GET if there are no mutations.\n        var definitionIsMutation = function (d) {\n            return d.kind === \"OperationDefinition\" && d.operation === \"mutation\";\n        };\n        var definitionIsSubscription = function (d) {\n            return d.kind === \"OperationDefinition\" && d.operation === \"subscription\";\n        };\n        var isSubscription = definitionIsSubscription(getMainDefinition(operation.query));\n        // does not match custom directives beginning with @defer\n        var hasDefer = hasDirectives([\"defer\"], operation.query);\n        if (useGETForQueries &&\n            !operation.query.definitions.some(definitionIsMutation)) {\n            options.method = \"GET\";\n        }\n        if (hasDefer || isSubscription) {\n            options.headers = options.headers || {};\n            var acceptHeader = \"multipart/mixed;\";\n            // Omit defer-specific headers if the user attempts to defer a selection\n            // set on a subscription and log a warning.\n            if (isSubscription && hasDefer) {\n                globalThis.__DEV__ !== false && invariant.warn(38);\n            }\n            if (isSubscription) {\n                acceptHeader +=\n                    \"boundary=graphql;subscriptionSpec=1.0,application/json\";\n            }\n            else if (hasDefer) {\n                acceptHeader += \"deferSpec=20220824,application/json\";\n            }\n            options.headers.accept = acceptHeader;\n        }\n        if (options.method === \"GET\") {\n            var _c = rewriteURIForGET(chosenURI, body), newURI = _c.newURI, parseError = _c.parseError;\n            if (parseError) {\n                return fromError(parseError);\n            }\n            chosenURI = newURI;\n        }\n        else {\n            try {\n                options.body = serializeFetchParameter(body, \"Payload\");\n            }\n            catch (parseError) {\n                return fromError(parseError);\n            }\n        }\n        return new Observable(function (observer) {\n            // Prefer linkOptions.fetch (preferredFetch) if provided, and otherwise\n            // fall back to the *current* global window.fetch function (see issue\n            // #7832), or (if all else fails) the backupFetch function we saved when\n            // this module was first evaluated. This last option protects against the\n            // removal of window.fetch, which is unlikely but not impossible.\n            var currentFetch = preferredFetch || maybe(function () { return fetch; }) || backupFetch;\n            var observerNext = observer.next.bind(observer);\n            currentFetch(chosenURI, options)\n                .then(function (response) {\n                var _a;\n                operation.setContext({ response: response });\n                var ctype = (_a = response.headers) === null || _a === void 0 ? void 0 : _a.get(\"content-type\");\n                if (ctype !== null && /^multipart\\/mixed/i.test(ctype)) {\n                    return readMultipartBody(response, observerNext);\n                }\n                else {\n                    return parseAndCheckHttpResponse(operation)(response).then(observerNext);\n                }\n            })\n                .then(function () {\n                controller = undefined;\n                observer.complete();\n            })\n                .catch(function (err) {\n                controller = undefined;\n                handleError(err, observer);\n            });\n            return function () {\n                // XXX support canceling this request\n                // https://developers.google.com/web/updates/2017/09/abortable-fetch\n                if (controller)\n                    controller.abort();\n            };\n        });\n    });\n};\n//# sourceMappingURL=createHttpLink.js.map", "import { __extends } from \"tslib\";\nimport { ApolloLink } from \"../core/index.js\";\nimport { createHttpLink } from \"./createHttpLink.js\";\nvar HttpLink = /** @class */ (function (_super) {\n    __extends(HttpLink, _super);\n    function HttpLink(options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, createHttpLink(options).request) || this;\n        _this.options = options;\n        return _this;\n    }\n    return HttpLink;\n}(ApolloLink));\nexport { HttpLink };\n//# sourceMappingURL=HttpLink.js.map", "const { toString, hasOwnProperty } = Object.prototype;\nconst fnToStr = Function.prototype.toString;\nconst previousComparisons = new Map();\n/**\n * Performs a deep equality check on two JavaScript values, tolerating cycles.\n */\nexport function equal(a, b) {\n    try {\n        return check(a, b);\n    }\n    finally {\n        previousComparisons.clear();\n    }\n}\n// Allow default imports as well.\nexport default equal;\nfunction check(a, b) {\n    // If the two values are strictly equal, our job is easy.\n    if (a === b) {\n        return true;\n    }\n    // Object.prototype.toString returns a representation of the runtime type of\n    // the given value that is considerably more precise than typeof.\n    const aTag = toString.call(a);\n    const bTag = toString.call(b);\n    // If the runtime types of a and b are different, they could maybe be equal\n    // under some interpretation of equality, but for simplicity and performance\n    // we just return false instead.\n    if (aTag !== bTag) {\n        return false;\n    }\n    switch (aTag) {\n        case '[object Array]':\n            // Arrays are a lot like other objects, but we can cheaply compare their\n            // lengths as a short-cut before comparing their elements.\n            if (a.length !== b.length)\n                return false;\n        // Fall through to object case...\n        case '[object Object]': {\n            if (previouslyCompared(a, b))\n                return true;\n            const aKeys = definedKeys(a);\n            const bKeys = definedKeys(b);\n            // If `a` and `b` have a different number of enumerable keys, they\n            // must be different.\n            const keyCount = aKeys.length;\n            if (keyCount !== bKeys.length)\n                return false;\n            // Now make sure they have the same keys.\n            for (let k = 0; k < keyCount; ++k) {\n                if (!hasOwnProperty.call(b, aKeys[k])) {\n                    return false;\n                }\n            }\n            // Finally, check deep equality of all child properties.\n            for (let k = 0; k < keyCount; ++k) {\n                const key = aKeys[k];\n                if (!check(a[key], b[key])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        case '[object Error]':\n            return a.name === b.name && a.message === b.message;\n        case '[object Number]':\n            // Handle NaN, which is !== itself.\n            if (a !== a)\n                return b !== b;\n        // Fall through to shared +a === +b case...\n        case '[object Boolean]':\n        case '[object Date]':\n            return +a === +b;\n        case '[object RegExp]':\n        case '[object String]':\n            return a == `${b}`;\n        case '[object Map]':\n        case '[object Set]': {\n            if (a.size !== b.size)\n                return false;\n            if (previouslyCompared(a, b))\n                return true;\n            const aIterator = a.entries();\n            const isMap = aTag === '[object Map]';\n            while (true) {\n                const info = aIterator.next();\n                if (info.done)\n                    break;\n                // If a instanceof Set, aValue === aKey.\n                const [aKey, aValue] = info.value;\n                // So this works the same way for both Set and Map.\n                if (!b.has(aKey)) {\n                    return false;\n                }\n                // However, we care about deep equality of values only when dealing\n                // with Map structures.\n                if (isMap && !check(aValue, b.get(aKey))) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        case '[object Uint16Array]':\n        case '[object Uint8Array]': // Buffer, in Node.js.\n        case '[object Uint32Array]':\n        case '[object Int32Array]':\n        case '[object Int8Array]':\n        case '[object Int16Array]':\n        case '[object ArrayBuffer]':\n            // DataView doesn't need these conversions, but the equality check is\n            // otherwise the same.\n            a = new Uint8Array(a);\n            b = new Uint8Array(b);\n        // Fall through...\n        case '[object DataView]': {\n            let len = a.byteLength;\n            if (len === b.byteLength) {\n                while (len-- && a[len] === b[len]) {\n                    // Keep looping as long as the bytes are equal.\n                }\n            }\n            return len === -1;\n        }\n        case '[object AsyncFunction]':\n        case '[object GeneratorFunction]':\n        case '[object AsyncGeneratorFunction]':\n        case '[object Function]': {\n            const aCode = fnToStr.call(a);\n            if (aCode !== fnToStr.call(b)) {\n                return false;\n            }\n            // We consider non-native functions equal if they have the same code\n            // (native functions require === because their code is censored).\n            // Note that this behavior is not entirely sound, since !== function\n            // objects with the same code can behave differently depending on\n            // their closure scope. However, any function can behave differently\n            // depending on the values of its input arguments (including this)\n            // and its calling context (including its closure scope), even\n            // though the function object is === to itself; and it is entirely\n            // possible for functions that are not === to behave exactly the\n            // same under all conceivable circumstances. Because none of these\n            // factors are statically decidable in JavaScript, JS function\n            // equality is not well-defined. This ambiguity allows us to\n            // consider the best possible heuristic among various imperfect\n            // options, and equating non-native functions that have the same\n            // code has enormous practical benefits, such as when comparing\n            // functions that are repeatedly passed as fresh function\n            // expressions within objects that are otherwise deeply equal. Since\n            // any function created from the same syntactic expression (in the\n            // same code location) will always stringify to the same code\n            // according to fnToStr.call, we can reasonably expect these\n            // repeatedly passed function expressions to have the same code, and\n            // thus behave \"the same\" (with all the caveats mentioned above),\n            // even though the runtime function objects are !== to one another.\n            return !endsWith(aCode, nativeCodeSuffix);\n        }\n    }\n    // Otherwise the values are not equal.\n    return false;\n}\nfunction definedKeys(obj) {\n    // Remember that the second argument to Array.prototype.filter will be\n    // used as `this` within the callback function.\n    return Object.keys(obj).filter(isDefinedKey, obj);\n}\nfunction isDefinedKey(key) {\n    return this[key] !== void 0;\n}\nconst nativeCodeSuffix = \"{ [native code] }\";\nfunction endsWith(full, suffix) {\n    const fromIndex = full.length - suffix.length;\n    return fromIndex >= 0 &&\n        full.indexOf(suffix, fromIndex) === fromIndex;\n}\nfunction previouslyCompared(a, b) {\n    // Though cyclic references can make an object graph appear infinite from the\n    // perspective of a depth-first traversal, the graph still contains a finite\n    // number of distinct object references. We use the previousComparisons cache\n    // to avoid comparing the same pair of object references more than once, which\n    // guarantees termination (even if we end up comparing every object in one\n    // graph to every object in the other graph, which is extremely unlikely),\n    // while still allowing weird isomorphic structures (like rings with different\n    // lengths) a chance to pass the equality test.\n    let bSet = previousComparisons.get(a);\n    if (bSet) {\n        // Return true here because we can be sure false will be returned somewhere\n        // else if the objects are not equivalent.\n        if (bSet.has(b))\n            return true;\n    }\n    else {\n        previousComparisons.set(a, bSet = new Set);\n    }\n    bSet.add(b);\n    return false;\n}\n//# sourceMappingURL=index.js.map", "import { __assign, __spreadArray } from \"tslib\";\nimport { cacheSizes } from \"./sizes.js\";\nvar globalCaches = {};\nexport function registerGlobalCache(name, getSize) {\n    globalCaches[name] = getSize;\n}\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport var getApolloClientMemoryInternals = globalThis.__DEV__ !== false ?\n    _getApolloClientMemoryInternals\n    : undefined;\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport var getInMemoryCacheMemoryInternals = globalThis.__DEV__ !== false ?\n    _getInMemoryCacheMemoryInternals\n    : undefined;\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport var getApolloCacheMemoryInternals = globalThis.__DEV__ !== false ?\n    _getApolloCacheMemoryInternals\n    : undefined;\nfunction getCurrentCacheSizes() {\n    // `defaultCacheSizes` is a `const enum` that will be inlined during build, so we have to reconstruct it's shape here\n    var defaults = {\n        parser: 1000 /* defaultCacheSizes[\"parser\"] */,\n        canonicalStringify: 1000 /* defaultCacheSizes[\"canonicalStringify\"] */,\n        print: 2000 /* defaultCacheSizes[\"print\"] */,\n        \"documentTransform.cache\": 2000 /* defaultCacheSizes[\"documentTransform.cache\"] */,\n        \"queryManager.getDocumentInfo\": 2000 /* defaultCacheSizes[\"queryManager.getDocumentInfo\"] */,\n        \"PersistedQueryLink.persistedQueryHashes\": 2000 /* defaultCacheSizes[\"PersistedQueryLink.persistedQueryHashes\"] */,\n        \"fragmentRegistry.transform\": 2000 /* defaultCacheSizes[\"fragmentRegistry.transform\"] */,\n        \"fragmentRegistry.lookup\": 1000 /* defaultCacheSizes[\"fragmentRegistry.lookup\"] */,\n        \"fragmentRegistry.findFragmentSpreads\": 4000 /* defaultCacheSizes[\"fragmentRegistry.findFragmentSpreads\"] */,\n        \"cache.fragmentQueryDocuments\": 1000 /* defaultCacheSizes[\"cache.fragmentQueryDocuments\"] */,\n        \"removeTypenameFromVariables.getVariableDefinitions\": 2000 /* defaultCacheSizes[\"removeTypenameFromVariables.getVariableDefinitions\"] */,\n        \"inMemoryCache.maybeBroadcastWatch\": 5000 /* defaultCacheSizes[\"inMemoryCache.maybeBroadcastWatch\"] */,\n        \"inMemoryCache.executeSelectionSet\": 50000 /* defaultCacheSizes[\"inMemoryCache.executeSelectionSet\"] */,\n        \"inMemoryCache.executeSubSelectedArray\": 10000 /* defaultCacheSizes[\"inMemoryCache.executeSubSelectedArray\"] */,\n    };\n    return Object.fromEntries(Object.entries(defaults).map(function (_a) {\n        var k = _a[0], v = _a[1];\n        return [\n            k,\n            cacheSizes[k] || v,\n        ];\n    }));\n}\nfunction _getApolloClientMemoryInternals() {\n    var _a, _b, _c, _d, _e;\n    if (!(globalThis.__DEV__ !== false))\n        throw new Error(\"only supported in development mode\");\n    return {\n        limits: getCurrentCacheSizes(),\n        sizes: __assign({ print: (_a = globalCaches.print) === null || _a === void 0 ? void 0 : _a.call(globalCaches), parser: (_b = globalCaches.parser) === null || _b === void 0 ? void 0 : _b.call(globalCaches), canonicalStringify: (_c = globalCaches.canonicalStringify) === null || _c === void 0 ? void 0 : _c.call(globalCaches), links: linkInfo(this.link), queryManager: {\n                getDocumentInfo: this[\"queryManager\"][\"transformCache\"].size,\n                documentTransforms: transformInfo(this[\"queryManager\"].documentTransform),\n            } }, (_e = (_d = this.cache).getMemoryInternals) === null || _e === void 0 ? void 0 : _e.call(_d)),\n    };\n}\nfunction _getApolloCacheMemoryInternals() {\n    return {\n        cache: {\n            fragmentQueryDocuments: getWrapperInformation(this[\"getFragmentDoc\"]),\n        },\n    };\n}\nfunction _getInMemoryCacheMemoryInternals() {\n    var fragments = this.config.fragments;\n    return __assign(__assign({}, _getApolloCacheMemoryInternals.apply(this)), { addTypenameDocumentTransform: transformInfo(this[\"addTypenameTransform\"]), inMemoryCache: {\n            executeSelectionSet: getWrapperInformation(this[\"storeReader\"][\"executeSelectionSet\"]),\n            executeSubSelectedArray: getWrapperInformation(this[\"storeReader\"][\"executeSubSelectedArray\"]),\n            maybeBroadcastWatch: getWrapperInformation(this[\"maybeBroadcastWatch\"]),\n        }, fragmentRegistry: {\n            findFragmentSpreads: getWrapperInformation(fragments === null || fragments === void 0 ? void 0 : fragments.findFragmentSpreads),\n            lookup: getWrapperInformation(fragments === null || fragments === void 0 ? void 0 : fragments.lookup),\n            transform: getWrapperInformation(fragments === null || fragments === void 0 ? void 0 : fragments.transform),\n        } });\n}\nfunction isWrapper(f) {\n    return !!f && \"dirtyKey\" in f;\n}\nfunction getWrapperInformation(f) {\n    return isWrapper(f) ? f.size : undefined;\n}\nfunction isDefined(value) {\n    return value != null;\n}\nfunction transformInfo(transform) {\n    return recurseTransformInfo(transform).map(function (cache) { return ({ cache: cache }); });\n}\nfunction recurseTransformInfo(transform) {\n    return transform ?\n        __spreadArray(__spreadArray([\n            getWrapperInformation(transform === null || transform === void 0 ? void 0 : transform[\"performWork\"])\n        ], recurseTransformInfo(transform === null || transform === void 0 ? void 0 : transform[\"left\"]), true), recurseTransformInfo(transform === null || transform === void 0 ? void 0 : transform[\"right\"]), true).filter(isDefined)\n        : [];\n}\nfunction linkInfo(link) {\n    var _a;\n    return link ?\n        __spreadArray(__spreadArray([\n            (_a = link === null || link === void 0 ? void 0 : link.getMemoryInternals) === null || _a === void 0 ? void 0 : _a.call(link)\n        ], linkInfo(link === null || link === void 0 ? void 0 : link.left), true), linkInfo(link === null || link === void 0 ? void 0 : link.right), true).filter(isDefined)\n        : [];\n}\n//# sourceMappingURL=getMemoryInternals.js.map", "import { __assign, __rest } from \"tslib\";\nimport { wrap } from \"optimism\";\nimport { cacheSizes, getFragmentQueryDocument, } from \"../../utilities/index.js\";\nimport { WeakCache } from \"@wry/caches\";\nimport { getApolloCacheMemoryInternals } from \"../../utilities/caching/getMemoryInternals.js\";\nvar ApolloCache = /** @class */ (function () {\n    function ApolloCache() {\n        this.assumeImmutableResults = false;\n        // Make sure we compute the same (===) fragment query document every\n        // time we receive the same fragment in readFragment.\n        this.getFragmentDoc = wrap(getFragmentQueryDocument, {\n            max: cacheSizes[\"cache.fragmentQueryDocuments\"] ||\n                1000 /* defaultCacheSizes[\"cache.fragmentQueryDocuments\"] */,\n            cache: WeakCache,\n        });\n    }\n    // Transactional API\n    // The batch method is intended to replace/subsume both performTransaction\n    // and recordOptimisticTransaction, but performTransaction came first, so we\n    // provide a default batch implementation that's just another way of calling\n    // performTransaction. Subclasses of ApolloCache (such as InMemoryCache) can\n    // override the batch method to do more interesting things with its options.\n    ApolloCache.prototype.batch = function (options) {\n        var _this = this;\n        var optimisticId = typeof options.optimistic === \"string\" ? options.optimistic\n            : options.optimistic === false ? null\n                : void 0;\n        var updateResult;\n        this.performTransaction(function () { return (updateResult = options.update(_this)); }, optimisticId);\n        return updateResult;\n    };\n    ApolloCache.prototype.recordOptimisticTransaction = function (transaction, optimisticId) {\n        this.performTransaction(transaction, optimisticId);\n    };\n    // Optional API\n    // Called once per input document, allowing the cache to make static changes\n    // to the query, such as adding __typename fields.\n    ApolloCache.prototype.transformDocument = function (document) {\n        return document;\n    };\n    // Called before each ApolloLink request, allowing the cache to make dynamic\n    // changes to the query, such as filling in missing fragment definitions.\n    ApolloCache.prototype.transformForLink = function (document) {\n        return document;\n    };\n    ApolloCache.prototype.identify = function (object) {\n        return;\n    };\n    ApolloCache.prototype.gc = function () {\n        return [];\n    };\n    ApolloCache.prototype.modify = function (options) {\n        return false;\n    };\n    // DataProxy API\n    ApolloCache.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = !!options.optimistic; }\n        return this.read(__assign(__assign({}, options), { rootId: options.id || \"ROOT_QUERY\", optimistic: optimistic }));\n    };\n    ApolloCache.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = !!options.optimistic; }\n        return this.read(__assign(__assign({}, options), { query: this.getFragmentDoc(options.fragment, options.fragmentName), rootId: options.id, optimistic: optimistic }));\n    };\n    ApolloCache.prototype.writeQuery = function (_a) {\n        var id = _a.id, data = _a.data, options = __rest(_a, [\"id\", \"data\"]);\n        return this.write(Object.assign(options, {\n            dataId: id || \"ROOT_QUERY\",\n            result: data,\n        }));\n    };\n    ApolloCache.prototype.writeFragment = function (_a) {\n        var id = _a.id, data = _a.data, fragment = _a.fragment, fragmentName = _a.fragmentName, options = __rest(_a, [\"id\", \"data\", \"fragment\", \"fragmentName\"]);\n        return this.write(Object.assign(options, {\n            query: this.getFragmentDoc(fragment, fragmentName),\n            dataId: id,\n            result: data,\n        }));\n    };\n    ApolloCache.prototype.updateQuery = function (options, update) {\n        return this.batch({\n            update: function (cache) {\n                var value = cache.readQuery(options);\n                var data = update(value);\n                if (data === void 0 || data === null)\n                    return value;\n                cache.writeQuery(__assign(__assign({}, options), { data: data }));\n                return data;\n            },\n        });\n    };\n    ApolloCache.prototype.updateFragment = function (options, update) {\n        return this.batch({\n            update: function (cache) {\n                var value = cache.readFragment(options);\n                var data = update(value);\n                if (data === void 0 || data === null)\n                    return value;\n                cache.writeFragment(__assign(__assign({}, options), { data: data }));\n                return data;\n            },\n        });\n    };\n    return ApolloCache;\n}());\nexport { ApolloCache };\nif (globalThis.__DEV__ !== false) {\n    ApolloCache.prototype.getMemoryInternals = getApolloCacheMemoryInternals;\n}\n//# sourceMappingURL=cache.js.map", "export var Cache;\n(function (Cache) {\n})(Cache || (Cache = {}));\n//# sourceMappingURL=Cache.js.map", "import { __extends } from \"tslib\";\nvar MissingFieldError = /** @class */ (function (_super) {\n    __extends(MissingFieldError, _super);\n    function MissingFieldError(message, path, query, variables) {\n        var _a;\n        // 'Error' breaks prototype chain here\n        var _this = _super.call(this, message) || this;\n        _this.message = message;\n        _this.path = path;\n        _this.query = query;\n        _this.variables = variables;\n        if (Array.isArray(_this.path)) {\n            _this.missing = _this.message;\n            for (var i = _this.path.length - 1; i >= 0; --i) {\n                _this.missing = (_a = {}, _a[_this.path[i]] = _this.missing, _a);\n            }\n        }\n        else {\n            _this.missing = _this.path;\n        }\n        // We're not using `Object.setPrototypeOf` here as it isn't fully supported\n        // on Android (see issue #3236).\n        _this.__proto__ = MissingFieldError.prototype;\n        return _this;\n    }\n    return MissingFieldError;\n}(Error));\nexport { MissingFieldError };\n//# sourceMappingURL=common.js.map", "import { isReference, isField, DeepMerger, resultKeyNameFromField, shouldInclude, isNonNullObject, compact, createFragmentMap, getFragmentDefinitions, isArray, } from \"../../utilities/index.js\";\nexport var hasOwn = Object.prototype.hasOwnProperty;\nexport function isNullish(value) {\n    return value === null || value === void 0;\n}\nexport { isArray };\nexport function defaultDataIdFromObject(_a, context) {\n    var __typename = _a.__typename, id = _a.id, _id = _a._id;\n    if (typeof __typename === \"string\") {\n        if (context) {\n            context.keyObject =\n                !isNullish(id) ? { id: id }\n                    : !isNullish(_id) ? { _id: _id }\n                        : void 0;\n        }\n        // If there is no object.id, fall back to object._id.\n        if (isNullish(id) && !isNullish(_id)) {\n            id = _id;\n        }\n        if (!isNullish(id)) {\n            return \"\".concat(__typename, \":\").concat(typeof id === \"number\" || typeof id === \"string\" ?\n                id\n                : JSON.stringify(id));\n        }\n    }\n}\nvar defaultConfig = {\n    dataIdFromObject: defaultDataIdFromObject,\n    addTypename: true,\n    resultCaching: true,\n    // Thanks to the shouldCanonizeResults helper, this should be the only line\n    // you have to change to reenable canonization by default in the future.\n    canonizeResults: false,\n};\nexport function normalizeConfig(config) {\n    return compact(defaultConfig, config);\n}\nexport function shouldCanonizeResults(config) {\n    var value = config.canonizeResults;\n    return value === void 0 ? defaultConfig.canonizeResults : value;\n}\nexport function getTypenameFromStoreObject(store, objectOrReference) {\n    return isReference(objectOrReference) ?\n        store.get(objectOrReference.__ref, \"__typename\")\n        : objectOrReference && objectOrReference.__typename;\n}\nexport var TypeOrFieldNameRegExp = /^[_a-z][_0-9a-z]*/i;\nexport function fieldNameFromStoreName(storeFieldName) {\n    var match = storeFieldName.match(TypeOrFieldNameRegExp);\n    return match ? match[0] : storeFieldName;\n}\nexport function selectionSetMatchesResult(selectionSet, result, variables) {\n    if (isNonNullObject(result)) {\n        return isArray(result) ?\n            result.every(function (item) {\n                return selectionSetMatchesResult(selectionSet, item, variables);\n            })\n            : selectionSet.selections.every(function (field) {\n                if (isField(field) && shouldInclude(field, variables)) {\n                    var key = resultKeyNameFromField(field);\n                    return (hasOwn.call(result, key) &&\n                        (!field.selectionSet ||\n                            selectionSetMatchesResult(field.selectionSet, result[key], variables)));\n                }\n                // If the selection has been skipped with @skip(true) or\n                // @include(false), it should not count against the matching. If\n                // the selection is not a field, it must be a fragment (inline or\n                // named). We will determine if selectionSetMatchesResult for that\n                // fragment when we get to it, so for now we return true.\n                return true;\n            });\n    }\n    return false;\n}\nexport function storeValueIsStoreObject(value) {\n    return isNonNullObject(value) && !isReference(value) && !isArray(value);\n}\nexport function makeProcessedFieldsMerger() {\n    return new DeepMerger();\n}\nexport function extractFragmentContext(document, fragments) {\n    // FragmentMap consisting only of fragments defined directly in document, not\n    // including other fragments registered in the FragmentRegistry.\n    var fragmentMap = createFragmentMap(getFragmentDefinitions(document));\n    return {\n        fragmentMap: fragmentMap,\n        lookupFragment: function (name) {\n            var def = fragmentMap[name];\n            if (!def && fragments) {\n                def = fragments.lookup(name);\n            }\n            return def || null;\n        },\n    };\n}\n//# sourceMappingURL=helpers.js.map", "import { __assign, __extends, __rest } from \"tslib\";\nimport { invariant } from \"../../utilities/globals/index.js\";\nimport { dep } from \"optimism\";\nimport { equal } from \"@wry/equality\";\nimport { Trie } from \"@wry/trie\";\nimport { isReference, makeReference, DeepMerger, maybeDeepFreeze, canUseWeakMap, isNonNullObject, } from \"../../utilities/index.js\";\nimport { hasOwn, fieldNameFromStoreName } from \"./helpers.js\";\nvar DELETE = Object.create(null);\nvar delModifier = function () { return DELETE; };\nvar INVALIDATE = Object.create(null);\nvar EntityStore = /** @class */ (function () {\n    function EntityStore(policies, group) {\n        var _this = this;\n        this.policies = policies;\n        this.group = group;\n        this.data = Object.create(null);\n        // Maps root entity IDs to the number of times they have been retained, minus\n        // the number of times they have been released. Retained entities keep other\n        // entities they reference (even indirectly) from being garbage collected.\n        this.rootIds = Object.create(null);\n        // Lazily tracks { __ref: <dataId> } strings contained by this.data[dataId].\n        this.refs = Object.create(null);\n        // Bound function that can be passed around to provide easy access to fields\n        // of Reference objects as well as ordinary objects.\n        this.getFieldValue = function (objectOrReference, storeFieldName) {\n            return maybeDeepFreeze(isReference(objectOrReference) ?\n                _this.get(objectOrReference.__ref, storeFieldName)\n                : objectOrReference && objectOrReference[storeFieldName]);\n        };\n        // Returns true for non-normalized StoreObjects and non-dangling\n        // References, indicating that readField(name, objOrRef) has a chance of\n        // working. Useful for filtering out dangling references from lists.\n        this.canRead = function (objOrRef) {\n            return isReference(objOrRef) ?\n                _this.has(objOrRef.__ref)\n                : typeof objOrRef === \"object\";\n        };\n        // Bound function that converts an id or an object with a __typename and\n        // primary key fields to a Reference object. If called with a Reference object,\n        // that same Reference object is returned. Pass true for mergeIntoStore to persist\n        // an object into the store.\n        this.toReference = function (objOrIdOrRef, mergeIntoStore) {\n            if (typeof objOrIdOrRef === \"string\") {\n                return makeReference(objOrIdOrRef);\n            }\n            if (isReference(objOrIdOrRef)) {\n                return objOrIdOrRef;\n            }\n            var id = _this.policies.identify(objOrIdOrRef)[0];\n            if (id) {\n                var ref = makeReference(id);\n                if (mergeIntoStore) {\n                    _this.merge(id, objOrIdOrRef);\n                }\n                return ref;\n            }\n        };\n    }\n    // Although the EntityStore class is abstract, it contains concrete\n    // implementations of the various NormalizedCache interface methods that\n    // are inherited by the Root and Layer subclasses.\n    EntityStore.prototype.toObject = function () {\n        return __assign({}, this.data);\n    };\n    EntityStore.prototype.has = function (dataId) {\n        return this.lookup(dataId, true) !== void 0;\n    };\n    EntityStore.prototype.get = function (dataId, fieldName) {\n        this.group.depend(dataId, fieldName);\n        if (hasOwn.call(this.data, dataId)) {\n            var storeObject = this.data[dataId];\n            if (storeObject && hasOwn.call(storeObject, fieldName)) {\n                return storeObject[fieldName];\n            }\n        }\n        if (fieldName === \"__typename\" &&\n            hasOwn.call(this.policies.rootTypenamesById, dataId)) {\n            return this.policies.rootTypenamesById[dataId];\n        }\n        if (this instanceof Layer) {\n            return this.parent.get(dataId, fieldName);\n        }\n    };\n    EntityStore.prototype.lookup = function (dataId, dependOnExistence) {\n        // The has method (above) calls lookup with dependOnExistence = true, so\n        // that it can later be invalidated when we add or remove a StoreObject for\n        // this dataId. Any consumer who cares about the contents of the StoreObject\n        // should not rely on this dependency, since the contents could change\n        // without the object being added or removed.\n        if (dependOnExistence)\n            this.group.depend(dataId, \"__exists\");\n        if (hasOwn.call(this.data, dataId)) {\n            return this.data[dataId];\n        }\n        if (this instanceof Layer) {\n            return this.parent.lookup(dataId, dependOnExistence);\n        }\n        if (this.policies.rootTypenamesById[dataId]) {\n            return Object.create(null);\n        }\n    };\n    EntityStore.prototype.merge = function (older, newer) {\n        var _this = this;\n        var dataId;\n        // Convert unexpected references to ID strings.\n        if (isReference(older))\n            older = older.__ref;\n        if (isReference(newer))\n            newer = newer.__ref;\n        var existing = typeof older === \"string\" ? this.lookup((dataId = older)) : older;\n        var incoming = typeof newer === \"string\" ? this.lookup((dataId = newer)) : newer;\n        // If newer was a string ID, but that ID was not defined in this store,\n        // then there are no fields to be merged, so we're done.\n        if (!incoming)\n            return;\n        invariant(typeof dataId === \"string\", 1);\n        var merged = new DeepMerger(storeObjectReconciler).merge(existing, incoming);\n        // Even if merged === existing, existing may have come from a lower\n        // layer, so we always need to set this.data[dataId] on this level.\n        this.data[dataId] = merged;\n        if (merged !== existing) {\n            delete this.refs[dataId];\n            if (this.group.caching) {\n                var fieldsToDirty_1 = Object.create(null);\n                // If we added a new StoreObject where there was previously none, dirty\n                // anything that depended on the existence of this dataId, such as the\n                // EntityStore#has method.\n                if (!existing)\n                    fieldsToDirty_1.__exists = 1;\n                // Now invalidate dependents who called getFieldValue for any fields\n                // that are changing as a result of this merge.\n                Object.keys(incoming).forEach(function (storeFieldName) {\n                    if (!existing ||\n                        existing[storeFieldName] !== merged[storeFieldName]) {\n                        // Always dirty the full storeFieldName, which may include\n                        // serialized arguments following the fieldName prefix.\n                        fieldsToDirty_1[storeFieldName] = 1;\n                        // Also dirty fieldNameFromStoreName(storeFieldName) if it's\n                        // different from storeFieldName and this field does not have\n                        // keyArgs configured, because that means the cache can't make\n                        // any assumptions about how field values with the same field\n                        // name but different arguments might be interrelated, so it\n                        // must err on the side of invalidating all field values that\n                        // share the same short fieldName, regardless of arguments.\n                        var fieldName = fieldNameFromStoreName(storeFieldName);\n                        if (fieldName !== storeFieldName &&\n                            !_this.policies.hasKeyArgs(merged.__typename, fieldName)) {\n                            fieldsToDirty_1[fieldName] = 1;\n                        }\n                        // If merged[storeFieldName] has become undefined, and this is the\n                        // Root layer, actually delete the property from the merged object,\n                        // which is guaranteed to have been created fresh in this method.\n                        if (merged[storeFieldName] === void 0 && !(_this instanceof Layer)) {\n                            delete merged[storeFieldName];\n                        }\n                    }\n                });\n                if (fieldsToDirty_1.__typename &&\n                    !(existing && existing.__typename) &&\n                    // Since we return default root __typename strings\n                    // automatically from store.get, we don't need to dirty the\n                    // ROOT_QUERY.__typename field if merged.__typename is equal\n                    // to the default string (usually \"Query\").\n                    this.policies.rootTypenamesById[dataId] === merged.__typename) {\n                    delete fieldsToDirty_1.__typename;\n                }\n                Object.keys(fieldsToDirty_1).forEach(function (fieldName) {\n                    return _this.group.dirty(dataId, fieldName);\n                });\n            }\n        }\n    };\n    EntityStore.prototype.modify = function (dataId, fields) {\n        var _this = this;\n        var storeObject = this.lookup(dataId);\n        if (storeObject) {\n            var changedFields_1 = Object.create(null);\n            var needToMerge_1 = false;\n            var allDeleted_1 = true;\n            var sharedDetails_1 = {\n                DELETE: DELETE,\n                INVALIDATE: INVALIDATE,\n                isReference: isReference,\n                toReference: this.toReference,\n                canRead: this.canRead,\n                readField: function (fieldNameOrOptions, from) {\n                    return _this.policies.readField(typeof fieldNameOrOptions === \"string\" ?\n                        {\n                            fieldName: fieldNameOrOptions,\n                            from: from || makeReference(dataId),\n                        }\n                        : fieldNameOrOptions, { store: _this });\n                },\n            };\n            Object.keys(storeObject).forEach(function (storeFieldName) {\n                var fieldName = fieldNameFromStoreName(storeFieldName);\n                var fieldValue = storeObject[storeFieldName];\n                if (fieldValue === void 0)\n                    return;\n                var modify = typeof fields === \"function\" ? fields : (fields[storeFieldName] || fields[fieldName]);\n                if (modify) {\n                    var newValue = modify === delModifier ? DELETE : (modify(maybeDeepFreeze(fieldValue), __assign(__assign({}, sharedDetails_1), { fieldName: fieldName, storeFieldName: storeFieldName, storage: _this.getStorage(dataId, storeFieldName) })));\n                    if (newValue === INVALIDATE) {\n                        _this.group.dirty(dataId, storeFieldName);\n                    }\n                    else {\n                        if (newValue === DELETE)\n                            newValue = void 0;\n                        if (newValue !== fieldValue) {\n                            changedFields_1[storeFieldName] = newValue;\n                            needToMerge_1 = true;\n                            fieldValue = newValue;\n                            if (globalThis.__DEV__ !== false) {\n                                var checkReference = function (ref) {\n                                    if (_this.lookup(ref.__ref) === undefined) {\n                                        globalThis.__DEV__ !== false && invariant.warn(2, ref);\n                                        return true;\n                                    }\n                                };\n                                if (isReference(newValue)) {\n                                    checkReference(newValue);\n                                }\n                                else if (Array.isArray(newValue)) {\n                                    // Warn about writing \"mixed\" arrays of Reference and non-Reference objects\n                                    var seenReference = false;\n                                    var someNonReference = void 0;\n                                    for (var _i = 0, newValue_1 = newValue; _i < newValue_1.length; _i++) {\n                                        var value = newValue_1[_i];\n                                        if (isReference(value)) {\n                                            seenReference = true;\n                                            if (checkReference(value))\n                                                break;\n                                        }\n                                        else {\n                                            // Do not warn on primitive values, since those could never be represented\n                                            // by a reference. This is a valid (albeit uncommon) use case.\n                                            if (typeof value === \"object\" && !!value) {\n                                                var id = _this.policies.identify(value)[0];\n                                                // check if object could even be referenced, otherwise we are not interested in it for this warning\n                                                if (id) {\n                                                    someNonReference = value;\n                                                }\n                                            }\n                                        }\n                                        if (seenReference && someNonReference !== undefined) {\n                                            globalThis.__DEV__ !== false && invariant.warn(3, someNonReference);\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (fieldValue !== void 0) {\n                    allDeleted_1 = false;\n                }\n            });\n            if (needToMerge_1) {\n                this.merge(dataId, changedFields_1);\n                if (allDeleted_1) {\n                    if (this instanceof Layer) {\n                        this.data[dataId] = void 0;\n                    }\n                    else {\n                        delete this.data[dataId];\n                    }\n                    this.group.dirty(dataId, \"__exists\");\n                }\n                return true;\n            }\n        }\n        return false;\n    };\n    // If called with only one argument, removes the entire entity\n    // identified by dataId. If called with a fieldName as well, removes all\n    // fields of that entity whose names match fieldName according to the\n    // fieldNameFromStoreName helper function. If called with a fieldName\n    // and variables, removes all fields of that entity whose names match fieldName\n    // and whose arguments when cached exactly match the variables passed.\n    EntityStore.prototype.delete = function (dataId, fieldName, args) {\n        var _a;\n        var storeObject = this.lookup(dataId);\n        if (storeObject) {\n            var typename = this.getFieldValue(storeObject, \"__typename\");\n            var storeFieldName = fieldName && args ?\n                this.policies.getStoreFieldName({ typename: typename, fieldName: fieldName, args: args })\n                : fieldName;\n            return this.modify(dataId, storeFieldName ? (_a = {},\n                _a[storeFieldName] = delModifier,\n                _a) : delModifier);\n        }\n        return false;\n    };\n    EntityStore.prototype.evict = function (options, limit) {\n        var evicted = false;\n        if (options.id) {\n            if (hasOwn.call(this.data, options.id)) {\n                evicted = this.delete(options.id, options.fieldName, options.args);\n            }\n            if (this instanceof Layer && this !== limit) {\n                evicted = this.parent.evict(options, limit) || evicted;\n            }\n            // Always invalidate the field to trigger rereading of watched\n            // queries, even if no cache data was modified by the eviction,\n            // because queries may depend on computed fields with custom read\n            // functions, whose values are not stored in the EntityStore.\n            if (options.fieldName || evicted) {\n                this.group.dirty(options.id, options.fieldName || \"__exists\");\n            }\n        }\n        return evicted;\n    };\n    EntityStore.prototype.clear = function () {\n        this.replace(null);\n    };\n    EntityStore.prototype.extract = function () {\n        var _this = this;\n        var obj = this.toObject();\n        var extraRootIds = [];\n        this.getRootIdSet().forEach(function (id) {\n            if (!hasOwn.call(_this.policies.rootTypenamesById, id)) {\n                extraRootIds.push(id);\n            }\n        });\n        if (extraRootIds.length) {\n            obj.__META = { extraRootIds: extraRootIds.sort() };\n        }\n        return obj;\n    };\n    EntityStore.prototype.replace = function (newData) {\n        var _this = this;\n        Object.keys(this.data).forEach(function (dataId) {\n            if (!(newData && hasOwn.call(newData, dataId))) {\n                _this.delete(dataId);\n            }\n        });\n        if (newData) {\n            var __META = newData.__META, rest_1 = __rest(newData, [\"__META\"]);\n            Object.keys(rest_1).forEach(function (dataId) {\n                _this.merge(dataId, rest_1[dataId]);\n            });\n            if (__META) {\n                __META.extraRootIds.forEach(this.retain, this);\n            }\n        }\n    };\n    EntityStore.prototype.retain = function (rootId) {\n        return (this.rootIds[rootId] = (this.rootIds[rootId] || 0) + 1);\n    };\n    EntityStore.prototype.release = function (rootId) {\n        if (this.rootIds[rootId] > 0) {\n            var count = --this.rootIds[rootId];\n            if (!count)\n                delete this.rootIds[rootId];\n            return count;\n        }\n        return 0;\n    };\n    // Return a Set<string> of all the ID strings that have been retained by\n    // this layer/root *and* any layers/roots beneath it.\n    EntityStore.prototype.getRootIdSet = function (ids) {\n        if (ids === void 0) { ids = new Set(); }\n        Object.keys(this.rootIds).forEach(ids.add, ids);\n        if (this instanceof Layer) {\n            this.parent.getRootIdSet(ids);\n        }\n        else {\n            // Official singleton IDs like ROOT_QUERY and ROOT_MUTATION are\n            // always considered roots for garbage collection, regardless of\n            // their retainment counts in this.rootIds.\n            Object.keys(this.policies.rootTypenamesById).forEach(ids.add, ids);\n        }\n        return ids;\n    };\n    // The goal of garbage collection is to remove IDs from the Root layer of the\n    // store that are no longer reachable starting from any IDs that have been\n    // explicitly retained (see retain and release, above). Returns an array of\n    // dataId strings that were removed from the store.\n    EntityStore.prototype.gc = function () {\n        var _this = this;\n        var ids = this.getRootIdSet();\n        var snapshot = this.toObject();\n        ids.forEach(function (id) {\n            if (hasOwn.call(snapshot, id)) {\n                // Because we are iterating over an ECMAScript Set, the IDs we add here\n                // will be visited in later iterations of the forEach loop only if they\n                // were not previously contained by the Set.\n                Object.keys(_this.findChildRefIds(id)).forEach(ids.add, ids);\n                // By removing IDs from the snapshot object here, we protect them from\n                // getting removed from the root store layer below.\n                delete snapshot[id];\n            }\n        });\n        var idsToRemove = Object.keys(snapshot);\n        if (idsToRemove.length) {\n            var root_1 = this;\n            while (root_1 instanceof Layer)\n                root_1 = root_1.parent;\n            idsToRemove.forEach(function (id) { return root_1.delete(id); });\n        }\n        return idsToRemove;\n    };\n    EntityStore.prototype.findChildRefIds = function (dataId) {\n        if (!hasOwn.call(this.refs, dataId)) {\n            var found_1 = (this.refs[dataId] = Object.create(null));\n            var root = this.data[dataId];\n            if (!root)\n                return found_1;\n            var workSet_1 = new Set([root]);\n            // Within the store, only arrays and objects can contain child entity\n            // references, so we can prune the traversal using this predicate:\n            workSet_1.forEach(function (obj) {\n                if (isReference(obj)) {\n                    found_1[obj.__ref] = true;\n                    // In rare cases, a { __ref } Reference object may have other fields.\n                    // This often indicates a mismerging of References with StoreObjects,\n                    // but garbage collection should not be fooled by a stray __ref\n                    // property in a StoreObject (ignoring all the other fields just\n                    // because the StoreObject looks like a Reference). To avoid this\n                    // premature termination of findChildRefIds recursion, we fall through\n                    // to the code below, which will handle any other properties of obj.\n                }\n                if (isNonNullObject(obj)) {\n                    Object.keys(obj).forEach(function (key) {\n                        var child = obj[key];\n                        // No need to add primitive values to the workSet, since they cannot\n                        // contain reference objects.\n                        if (isNonNullObject(child)) {\n                            workSet_1.add(child);\n                        }\n                    });\n                }\n            });\n        }\n        return this.refs[dataId];\n    };\n    EntityStore.prototype.makeCacheKey = function () {\n        return this.group.keyMaker.lookupArray(arguments);\n    };\n    return EntityStore;\n}());\nexport { EntityStore };\n// A single CacheGroup represents a set of one or more EntityStore objects,\n// typically the Root store in a CacheGroup by itself, and all active Layer\n// stores in a group together. A single EntityStore object belongs to only\n// one CacheGroup, store.group. The CacheGroup is responsible for tracking\n// dependencies, so store.group is helpful for generating unique keys for\n// cached results that need to be invalidated when/if those dependencies\n// change. If we used the EntityStore objects themselves as cache keys (that\n// is, store rather than store.group), the cache would become unnecessarily\n// fragmented by all the different Layer objects. Instead, the CacheGroup\n// approach allows all optimistic Layer objects in the same linked list to\n// belong to one CacheGroup, with the non-optimistic Root object belonging\n// to another CacheGroup, allowing resultCaching dependencies to be tracked\n// separately for optimistic and non-optimistic entity data.\nvar CacheGroup = /** @class */ (function () {\n    function CacheGroup(caching, parent) {\n        if (parent === void 0) { parent = null; }\n        this.caching = caching;\n        this.parent = parent;\n        this.d = null;\n        this.resetCaching();\n    }\n    CacheGroup.prototype.resetCaching = function () {\n        this.d = this.caching ? dep() : null;\n        this.keyMaker = new Trie(canUseWeakMap);\n    };\n    CacheGroup.prototype.depend = function (dataId, storeFieldName) {\n        if (this.d) {\n            this.d(makeDepKey(dataId, storeFieldName));\n            var fieldName = fieldNameFromStoreName(storeFieldName);\n            if (fieldName !== storeFieldName) {\n                // Fields with arguments that contribute extra identifying\n                // information to the fieldName (thus forming the storeFieldName)\n                // depend not only on the full storeFieldName but also on the\n                // short fieldName, so the field can be invalidated using either\n                // level of specificity.\n                this.d(makeDepKey(dataId, fieldName));\n            }\n            if (this.parent) {\n                this.parent.depend(dataId, storeFieldName);\n            }\n        }\n    };\n    CacheGroup.prototype.dirty = function (dataId, storeFieldName) {\n        if (this.d) {\n            this.d.dirty(makeDepKey(dataId, storeFieldName), \n            // When storeFieldName === \"__exists\", that means the entity identified\n            // by dataId has either disappeared from the cache or was newly added,\n            // so the result caching system would do well to \"forget everything it\n            // knows\" about that object. To achieve that kind of invalidation, we\n            // not only dirty the associated result cache entry, but also remove it\n            // completely from the dependency graph. For the optimism implementation\n            // details, see https://github.com/benjamn/optimism/pull/195.\n            storeFieldName === \"__exists\" ? \"forget\" : \"setDirty\");\n        }\n    };\n    return CacheGroup;\n}());\nfunction makeDepKey(dataId, storeFieldName) {\n    // Since field names cannot have '#' characters in them, this method\n    // of joining the field name and the ID should be unambiguous, and much\n    // cheaper than JSON.stringify([dataId, fieldName]).\n    return storeFieldName + \"#\" + dataId;\n}\nexport function maybeDependOnExistenceOfEntity(store, entityId) {\n    if (supportsResultCaching(store)) {\n        // We use this pseudo-field __exists elsewhere in the EntityStore code to\n        // represent changes in the existence of the entity object identified by\n        // entityId. This dependency gets reliably dirtied whenever an object with\n        // this ID is deleted (or newly created) within this group, so any result\n        // cache entries (for example, StoreReader#executeSelectionSet results) that\n        // depend on __exists for this entityId will get dirtied as well, leading to\n        // the eventual recomputation (instead of reuse) of those result objects the\n        // next time someone reads them from the cache.\n        store.group.depend(entityId, \"__exists\");\n    }\n}\n(function (EntityStore) {\n    // Refer to this class as EntityStore.Root outside this namespace.\n    var Root = /** @class */ (function (_super) {\n        __extends(Root, _super);\n        function Root(_a) {\n            var policies = _a.policies, _b = _a.resultCaching, resultCaching = _b === void 0 ? true : _b, seed = _a.seed;\n            var _this = _super.call(this, policies, new CacheGroup(resultCaching)) || this;\n            _this.stump = new Stump(_this);\n            _this.storageTrie = new Trie(canUseWeakMap);\n            if (seed)\n                _this.replace(seed);\n            return _this;\n        }\n        Root.prototype.addLayer = function (layerId, replay) {\n            // Adding an optimistic Layer on top of the Root actually adds the Layer\n            // on top of the Stump, so the Stump always comes between the Root and\n            // any Layer objects that we've added.\n            return this.stump.addLayer(layerId, replay);\n        };\n        Root.prototype.removeLayer = function () {\n            // Never remove the root layer.\n            return this;\n        };\n        Root.prototype.getStorage = function () {\n            return this.storageTrie.lookupArray(arguments);\n        };\n        return Root;\n    }(EntityStore));\n    EntityStore.Root = Root;\n})(EntityStore || (EntityStore = {}));\n// Not exported, since all Layer instances are created by the addLayer method\n// of the EntityStore.Root class.\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    function Layer(id, parent, replay, group) {\n        var _this = _super.call(this, parent.policies, group) || this;\n        _this.id = id;\n        _this.parent = parent;\n        _this.replay = replay;\n        _this.group = group;\n        replay(_this);\n        return _this;\n    }\n    Layer.prototype.addLayer = function (layerId, replay) {\n        return new Layer(layerId, this, replay, this.group);\n    };\n    Layer.prototype.removeLayer = function (layerId) {\n        var _this = this;\n        // Remove all instances of the given id, not just the first one.\n        var parent = this.parent.removeLayer(layerId);\n        if (layerId === this.id) {\n            if (this.group.caching) {\n                // Dirty every ID we're removing. Technically we might be able to avoid\n                // dirtying fields that have values in higher layers, but we don't have\n                // easy access to higher layers here, and we're about to recreate those\n                // layers anyway (see parent.addLayer below).\n                Object.keys(this.data).forEach(function (dataId) {\n                    var ownStoreObject = _this.data[dataId];\n                    var parentStoreObject = parent[\"lookup\"](dataId);\n                    if (!parentStoreObject) {\n                        // The StoreObject identified by dataId was defined in this layer\n                        // but will be undefined in the parent layer, so we can delete the\n                        // whole entity using this.delete(dataId). Since we're about to\n                        // throw this layer away, the only goal of this deletion is to dirty\n                        // the removed fields.\n                        _this.delete(dataId);\n                    }\n                    else if (!ownStoreObject) {\n                        // This layer had an entry for dataId but it was undefined, which\n                        // means the entity was deleted in this layer, and it's about to\n                        // become undeleted when we remove this layer, so we need to dirty\n                        // all fields that are about to be reexposed.\n                        _this.group.dirty(dataId, \"__exists\");\n                        Object.keys(parentStoreObject).forEach(function (storeFieldName) {\n                            _this.group.dirty(dataId, storeFieldName);\n                        });\n                    }\n                    else if (ownStoreObject !== parentStoreObject) {\n                        // If ownStoreObject is not exactly the same as parentStoreObject,\n                        // dirty any fields whose values will change as a result of this\n                        // removal.\n                        Object.keys(ownStoreObject).forEach(function (storeFieldName) {\n                            if (!equal(ownStoreObject[storeFieldName], parentStoreObject[storeFieldName])) {\n                                _this.group.dirty(dataId, storeFieldName);\n                            }\n                        });\n                    }\n                });\n            }\n            return parent;\n        }\n        // No changes are necessary if the parent chain remains identical.\n        if (parent === this.parent)\n            return this;\n        // Recreate this layer on top of the new parent.\n        return parent.addLayer(this.id, this.replay);\n    };\n    Layer.prototype.toObject = function () {\n        return __assign(__assign({}, this.parent.toObject()), this.data);\n    };\n    Layer.prototype.findChildRefIds = function (dataId) {\n        var fromParent = this.parent.findChildRefIds(dataId);\n        return hasOwn.call(this.data, dataId) ? __assign(__assign({}, fromParent), _super.prototype.findChildRefIds.call(this, dataId)) : fromParent;\n    };\n    Layer.prototype.getStorage = function () {\n        var p = this.parent;\n        while (p.parent)\n            p = p.parent;\n        return p.getStorage.apply(p, \n        // @ts-expect-error\n        arguments);\n    };\n    return Layer;\n}(EntityStore));\n// Represents a Layer permanently installed just above the Root, which allows\n// reading optimistically (and registering optimistic dependencies) even when\n// no optimistic layers are currently active. The stump.group CacheGroup object\n// is shared by any/all Layer objects added on top of the Stump.\nvar Stump = /** @class */ (function (_super) {\n    __extends(Stump, _super);\n    function Stump(root) {\n        return _super.call(this, \"EntityStore.Stump\", root, function () { }, new CacheGroup(root.group.caching, root.group)) || this;\n    }\n    Stump.prototype.removeLayer = function () {\n        // Never remove the Stump layer.\n        return this;\n    };\n    Stump.prototype.merge = function (older, newer) {\n        // We never want to write any data into the Stump, so we forward any merge\n        // calls to the Root instead. Another option here would be to throw an\n        // exception, but the toReference(object, true) function can sometimes\n        // trigger Stump writes (which used to be Root writes, before the Stump\n        // concept was introduced).\n        return this.parent.merge(older, newer);\n    };\n    return Stump;\n}(Layer));\nfunction storeObjectReconciler(existingObject, incomingObject, property) {\n    var existingValue = existingObject[property];\n    var incomingValue = incomingObject[property];\n    // Wherever there is a key collision, prefer the incoming value, unless\n    // it is deeply equal to the existing value. It's worth checking deep\n    // equality here (even though blindly returning incoming would be\n    // logically correct) because preserving the referential identity of\n    // existing data can prevent needless rereading and rerendering.\n    return equal(existingValue, incomingValue) ? existingValue : incomingValue;\n}\nexport function supportsResultCaching(store) {\n    // When result caching is disabled, store.depend will be null.\n    return !!(store instanceof EntityStore && store.group.caching);\n}\n//# sourceMappingURL=entityStore.js.map", "import { __assign } from \"tslib\";\nimport { Trie } from \"@wry/trie\";\nimport { canUseWeakMap, canUseWeakSet, isNonNullObject as isObjectOrArray, } from \"../../utilities/index.js\";\nimport { isArray } from \"./helpers.js\";\nfunction shallowCopy(value) {\n    if (isObjectOrArray(value)) {\n        return isArray(value) ?\n            value.slice(0)\n            : __assign({ __proto__: Object.getPrototypeOf(value) }, value);\n    }\n    return value;\n}\n// When programmers talk about the \"canonical form\" of an object, they\n// usually have the following meaning in mind, which I've copied from\n// https://en.wiktionary.org/wiki/canonical_form:\n//\n// 1. A standard or normal presentation of a mathematical entity [or\n//    object]. A canonical form is an element of a set of representatives\n//    of equivalence classes of forms such that there is a function or\n//    procedure which projects every element of each equivalence class\n//    onto that one element, the canonical form of that equivalence\n//    class. The canonical form is expected to be simpler than the rest of\n//    the forms in some way.\n//\n// That's a long-winded way of saying any two objects that have the same\n// canonical form may be considered equivalent, even if they are !==,\n// which usually means the objects are structurally equivalent (deeply\n// equal), but don't necessarily use the same memory.\n//\n// Like a literary or musical canon, this ObjectCanon class represents a\n// collection of unique canonical items (JavaScript objects), with the\n// important property that canon.admit(a) === canon.admit(b) if a and b\n// are deeply equal to each other. In terms of the definition above, the\n// canon.admit method is the \"function or procedure which projects every\"\n// object \"onto that one element, the canonical form.\"\n//\n// In the worst case, the canonicalization process may involve looking at\n// every property in the provided object tree, so it takes the same order\n// of time as deep equality checking. Fortunately, already-canonicalized\n// objects are returned immediately from canon.admit, so the presence of\n// canonical subtrees tends to speed up canonicalization.\n//\n// Since consumers of canonical objects can check for deep equality in\n// constant time, canonicalizing cache results can massively improve the\n// performance of application code that skips re-rendering unchanged\n// results, such as \"pure\" UI components in a framework like React.\n//\n// Of course, since canonical objects may be shared widely between\n// unrelated consumers, it's important to think of them as immutable, even\n// though they are not actually frozen with Object.freeze in production,\n// due to the extra performance overhead that comes with frozen objects.\n//\n// Custom scalar objects whose internal class name is neither Array nor\n// Object can be included safely in the admitted tree, but they will not\n// be replaced with a canonical version (to put it another way, they are\n// assumed to be canonical already).\n//\n// If we ignore custom objects, no detection of cycles or repeated object\n// references is currently required by the StoreReader class, since\n// GraphQL result objects are JSON-serializable trees (and thus contain\n// neither cycles nor repeated subtrees), so we can avoid the complexity\n// of keeping track of objects we've already seen during the recursion of\n// the admit method.\n//\n// In the future, we may consider adding additional cases to the switch\n// statement to handle other common object types, such as \"[object Date]\"\n// objects, as needed.\nvar ObjectCanon = /** @class */ (function () {\n    function ObjectCanon() {\n        // Set of all canonical objects this ObjectCanon has admitted, allowing\n        // canon.admit to return previously-canonicalized objects immediately.\n        this.known = new (canUseWeakSet ? WeakSet : Set)();\n        // Efficient storage/lookup structure for canonical objects.\n        this.pool = new Trie(canUseWeakMap);\n        // Make the ObjectCanon assume this value has already been\n        // canonicalized.\n        this.passes = new WeakMap();\n        // Arrays that contain the same elements in a different order can share\n        // the same SortedKeysInfo object, to save memory.\n        this.keysByJSON = new Map();\n        // This has to come last because it depends on keysByJSON.\n        this.empty = this.admit({});\n    }\n    ObjectCanon.prototype.isKnown = function (value) {\n        return isObjectOrArray(value) && this.known.has(value);\n    };\n    ObjectCanon.prototype.pass = function (value) {\n        if (isObjectOrArray(value)) {\n            var copy = shallowCopy(value);\n            this.passes.set(copy, value);\n            return copy;\n        }\n        return value;\n    };\n    ObjectCanon.prototype.admit = function (value) {\n        var _this = this;\n        if (isObjectOrArray(value)) {\n            var original = this.passes.get(value);\n            if (original)\n                return original;\n            var proto = Object.getPrototypeOf(value);\n            switch (proto) {\n                case Array.prototype: {\n                    if (this.known.has(value))\n                        return value;\n                    var array = value.map(this.admit, this);\n                    // Arrays are looked up in the Trie using their recursively\n                    // canonicalized elements, and the known version of the array is\n                    // preserved as node.array.\n                    var node = this.pool.lookupArray(array);\n                    if (!node.array) {\n                        this.known.add((node.array = array));\n                        // Since canonical arrays may be shared widely between\n                        // unrelated consumers, it's important to regard them as\n                        // immutable, even if they are not frozen in production.\n                        if (globalThis.__DEV__ !== false) {\n                            Object.freeze(array);\n                        }\n                    }\n                    return node.array;\n                }\n                case null:\n                case Object.prototype: {\n                    if (this.known.has(value))\n                        return value;\n                    var proto_1 = Object.getPrototypeOf(value);\n                    var array_1 = [proto_1];\n                    var keys = this.sortedKeys(value);\n                    array_1.push(keys.json);\n                    var firstValueIndex_1 = array_1.length;\n                    keys.sorted.forEach(function (key) {\n                        array_1.push(_this.admit(value[key]));\n                    });\n                    // Objects are looked up in the Trie by their prototype (which\n                    // is *not* recursively canonicalized), followed by a JSON\n                    // representation of their (sorted) keys, followed by the\n                    // sequence of recursively canonicalized values corresponding to\n                    // those keys. To keep the final results unambiguous with other\n                    // sequences (such as arrays that just happen to contain [proto,\n                    // keys.json, value1, value2, ...]), the known version of the\n                    // object is stored as node.object.\n                    var node = this.pool.lookupArray(array_1);\n                    if (!node.object) {\n                        var obj_1 = (node.object = Object.create(proto_1));\n                        this.known.add(obj_1);\n                        keys.sorted.forEach(function (key, i) {\n                            obj_1[key] = array_1[firstValueIndex_1 + i];\n                        });\n                        // Since canonical objects may be shared widely between\n                        // unrelated consumers, it's important to regard them as\n                        // immutable, even if they are not frozen in production.\n                        if (globalThis.__DEV__ !== false) {\n                            Object.freeze(obj_1);\n                        }\n                    }\n                    return node.object;\n                }\n            }\n        }\n        return value;\n    };\n    // It's worthwhile to cache the sorting of arrays of strings, since the\n    // same initial unsorted arrays tend to be encountered many times.\n    // Fortunately, we can reuse the Trie machinery to look up the sorted\n    // arrays in linear time (which is faster than sorting large arrays).\n    ObjectCanon.prototype.sortedKeys = function (obj) {\n        var keys = Object.keys(obj);\n        var node = this.pool.lookupArray(keys);\n        if (!node.keys) {\n            keys.sort();\n            var json = JSON.stringify(keys);\n            if (!(node.keys = this.keysByJSON.get(json))) {\n                this.keysByJSON.set(json, (node.keys = { sorted: keys, json: json }));\n            }\n        }\n        return node.keys;\n    };\n    return ObjectCanon;\n}());\nexport { ObjectCanon };\n//# sourceMappingURL=object-canon.js.map", "import { __assign } from \"tslib\";\nimport { invariant, newInvariantError } from \"../../utilities/globals/index.js\";\nimport { Kind } from \"graphql\";\nimport { wrap } from \"optimism\";\nimport { isField, resultKeyNameFromField, isReference, makeReference, shouldInclude, addTypenameToDocument, getDefaultValues, getMainDefinition, getQueryDefinition, getFragmentFromSelection, maybeDeepFreeze, mergeDeepArray, DeepMerger, isNonNullObject, canUseWeakMap, compact, canonicalStringify, cacheSizes, } from \"../../utilities/index.js\";\nimport { maybeDependOnExistenceOfEntity, supportsResultCaching, } from \"./entityStore.js\";\nimport { isArray, extractFragmentContext, getTypenameFromStoreObject, shouldCanonizeResults, } from \"./helpers.js\";\nimport { MissingFieldError } from \"../core/types/common.js\";\nimport { ObjectCanon } from \"./object-canon.js\";\nfunction execSelectionSetKeyArgs(options) {\n    return [\n        options.selectionSet,\n        options.objectOrReference,\n        options.context,\n        // We split out this property so we can pass different values\n        // independently without modifying options.context itself.\n        options.context.canonizeResults,\n    ];\n}\nvar StoreReader = /** @class */ (function () {\n    function StoreReader(config) {\n        var _this = this;\n        this.knownResults = new (canUseWeakMap ? WeakMap : Map)();\n        this.config = compact(config, {\n            addTypename: config.addTypename !== false,\n            canonizeResults: shouldCanonizeResults(config),\n        });\n        this.canon = config.canon || new ObjectCanon();\n        // memoized functions in this class will be \"garbage-collected\"\n        // by recreating the whole `StoreReader` in\n        // `InMemoryCache.resetResultsCache`\n        // (triggered from `InMemoryCache.gc` with `resetResultCache: true`)\n        this.executeSelectionSet = wrap(function (options) {\n            var _a;\n            var canonizeResults = options.context.canonizeResults;\n            var peekArgs = execSelectionSetKeyArgs(options);\n            // Negate this boolean option so we can find out if we've already read\n            // this result using the other boolean value.\n            peekArgs[3] = !canonizeResults;\n            var other = (_a = _this.executeSelectionSet).peek.apply(_a, peekArgs);\n            if (other) {\n                if (canonizeResults) {\n                    return __assign(__assign({}, other), { \n                        // If we previously read this result without canonizing it, we can\n                        // reuse that result simply by canonizing it now.\n                        result: _this.canon.admit(other.result) });\n                }\n                // If we previously read this result with canonization enabled, we can\n                // return that canonized result as-is.\n                return other;\n            }\n            maybeDependOnExistenceOfEntity(options.context.store, options.enclosingRef.__ref);\n            // Finally, if we didn't find any useful previous results, run the real\n            // execSelectionSetImpl method with the given options.\n            return _this.execSelectionSetImpl(options);\n        }, {\n            max: this.config.resultCacheMaxSize ||\n                cacheSizes[\"inMemoryCache.executeSelectionSet\"] ||\n                50000 /* defaultCacheSizes[\"inMemoryCache.executeSelectionSet\"] */,\n            keyArgs: execSelectionSetKeyArgs,\n            // Note that the parameters of makeCacheKey are determined by the\n            // array returned by keyArgs.\n            makeCacheKey: function (selectionSet, parent, context, canonizeResults) {\n                if (supportsResultCaching(context.store)) {\n                    return context.store.makeCacheKey(selectionSet, isReference(parent) ? parent.__ref : parent, context.varString, canonizeResults);\n                }\n            },\n        });\n        this.executeSubSelectedArray = wrap(function (options) {\n            maybeDependOnExistenceOfEntity(options.context.store, options.enclosingRef.__ref);\n            return _this.execSubSelectedArrayImpl(options);\n        }, {\n            max: this.config.resultCacheMaxSize ||\n                cacheSizes[\"inMemoryCache.executeSubSelectedArray\"] ||\n                10000 /* defaultCacheSizes[\"inMemoryCache.executeSubSelectedArray\"] */,\n            makeCacheKey: function (_a) {\n                var field = _a.field, array = _a.array, context = _a.context;\n                if (supportsResultCaching(context.store)) {\n                    return context.store.makeCacheKey(field, array, context.varString);\n                }\n            },\n        });\n    }\n    StoreReader.prototype.resetCanon = function () {\n        this.canon = new ObjectCanon();\n    };\n    /**\n     * Given a store and a query, return as much of the result as possible and\n     * identify if any data was missing from the store.\n     */\n    StoreReader.prototype.diffQueryAgainstStore = function (_a) {\n        var store = _a.store, query = _a.query, _b = _a.rootId, rootId = _b === void 0 ? \"ROOT_QUERY\" : _b, variables = _a.variables, _c = _a.returnPartialData, returnPartialData = _c === void 0 ? true : _c, _d = _a.canonizeResults, canonizeResults = _d === void 0 ? this.config.canonizeResults : _d;\n        var policies = this.config.cache.policies;\n        variables = __assign(__assign({}, getDefaultValues(getQueryDefinition(query))), variables);\n        var rootRef = makeReference(rootId);\n        var execResult = this.executeSelectionSet({\n            selectionSet: getMainDefinition(query).selectionSet,\n            objectOrReference: rootRef,\n            enclosingRef: rootRef,\n            context: __assign({ store: store, query: query, policies: policies, variables: variables, varString: canonicalStringify(variables), canonizeResults: canonizeResults }, extractFragmentContext(query, this.config.fragments)),\n        });\n        var missing;\n        if (execResult.missing) {\n            // For backwards compatibility we still report an array of\n            // MissingFieldError objects, even though there will only ever be at most\n            // one of them, now that all missing field error messages are grouped\n            // together in the execResult.missing tree.\n            missing = [\n                new MissingFieldError(firstMissing(execResult.missing), execResult.missing, query, variables),\n            ];\n            if (!returnPartialData) {\n                throw missing[0];\n            }\n        }\n        return {\n            result: execResult.result,\n            complete: !missing,\n            missing: missing,\n        };\n    };\n    StoreReader.prototype.isFresh = function (result, parent, selectionSet, context) {\n        if (supportsResultCaching(context.store) &&\n            this.knownResults.get(result) === selectionSet) {\n            var latest = this.executeSelectionSet.peek(selectionSet, parent, context, \n            // If result is canonical, then it could only have been previously\n            // cached by the canonizing version of executeSelectionSet, so we can\n            // avoid checking both possibilities here.\n            this.canon.isKnown(result));\n            if (latest && result === latest.result) {\n                return true;\n            }\n        }\n        return false;\n    };\n    // Uncached version of executeSelectionSet.\n    StoreReader.prototype.execSelectionSetImpl = function (_a) {\n        var _this = this;\n        var selectionSet = _a.selectionSet, objectOrReference = _a.objectOrReference, enclosingRef = _a.enclosingRef, context = _a.context;\n        if (isReference(objectOrReference) &&\n            !context.policies.rootTypenamesById[objectOrReference.__ref] &&\n            !context.store.has(objectOrReference.__ref)) {\n            return {\n                result: this.canon.empty,\n                missing: \"Dangling reference to missing \".concat(objectOrReference.__ref, \" object\"),\n            };\n        }\n        var variables = context.variables, policies = context.policies, store = context.store;\n        var typename = store.getFieldValue(objectOrReference, \"__typename\");\n        var objectsToMerge = [];\n        var missing;\n        var missingMerger = new DeepMerger();\n        if (this.config.addTypename &&\n            typeof typename === \"string\" &&\n            !policies.rootIdsByTypename[typename]) {\n            // Ensure we always include a default value for the __typename\n            // field, if we have one, and this.config.addTypename is true. Note\n            // that this field can be overridden by other merged objects.\n            objectsToMerge.push({ __typename: typename });\n        }\n        function handleMissing(result, resultName) {\n            var _a;\n            if (result.missing) {\n                missing = missingMerger.merge(missing, (_a = {},\n                    _a[resultName] = result.missing,\n                    _a));\n            }\n            return result.result;\n        }\n        var workSet = new Set(selectionSet.selections);\n        workSet.forEach(function (selection) {\n            var _a, _b;\n            // Omit fields with directives @skip(if: <truthy value>) or\n            // @include(if: <falsy value>).\n            if (!shouldInclude(selection, variables))\n                return;\n            if (isField(selection)) {\n                var fieldValue = policies.readField({\n                    fieldName: selection.name.value,\n                    field: selection,\n                    variables: context.variables,\n                    from: objectOrReference,\n                }, context);\n                var resultName = resultKeyNameFromField(selection);\n                if (fieldValue === void 0) {\n                    if (!addTypenameToDocument.added(selection)) {\n                        missing = missingMerger.merge(missing, (_a = {},\n                            _a[resultName] = \"Can't find field '\".concat(selection.name.value, \"' on \").concat(isReference(objectOrReference) ?\n                                objectOrReference.__ref + \" object\"\n                                : \"object \" + JSON.stringify(objectOrReference, null, 2)),\n                            _a));\n                    }\n                }\n                else if (isArray(fieldValue)) {\n                    fieldValue = handleMissing(_this.executeSubSelectedArray({\n                        field: selection,\n                        array: fieldValue,\n                        enclosingRef: enclosingRef,\n                        context: context,\n                    }), resultName);\n                }\n                else if (!selection.selectionSet) {\n                    // If the field does not have a selection set, then we handle it\n                    // as a scalar value. To keep this.canon from canonicalizing\n                    // this value, we use this.canon.pass to wrap fieldValue in a\n                    // Pass object that this.canon.admit will later unwrap as-is.\n                    if (context.canonizeResults) {\n                        fieldValue = _this.canon.pass(fieldValue);\n                    }\n                }\n                else if (fieldValue != null) {\n                    // In this case, because we know the field has a selection set,\n                    // it must be trying to query a GraphQLObjectType, which is why\n                    // fieldValue must be != null.\n                    fieldValue = handleMissing(_this.executeSelectionSet({\n                        selectionSet: selection.selectionSet,\n                        objectOrReference: fieldValue,\n                        enclosingRef: isReference(fieldValue) ? fieldValue : enclosingRef,\n                        context: context,\n                    }), resultName);\n                }\n                if (fieldValue !== void 0) {\n                    objectsToMerge.push((_b = {}, _b[resultName] = fieldValue, _b));\n                }\n            }\n            else {\n                var fragment = getFragmentFromSelection(selection, context.lookupFragment);\n                if (!fragment && selection.kind === Kind.FRAGMENT_SPREAD) {\n                    throw newInvariantError(9, selection.name.value);\n                }\n                if (fragment && policies.fragmentMatches(fragment, typename)) {\n                    fragment.selectionSet.selections.forEach(workSet.add, workSet);\n                }\n            }\n        });\n        var result = mergeDeepArray(objectsToMerge);\n        var finalResult = { result: result, missing: missing };\n        var frozen = context.canonizeResults ?\n            this.canon.admit(finalResult)\n            // Since this.canon is normally responsible for freezing results (only in\n            // development), freeze them manually if canonization is disabled.\n            : maybeDeepFreeze(finalResult);\n        // Store this result with its selection set so that we can quickly\n        // recognize it again in the StoreReader#isFresh method.\n        if (frozen.result) {\n            this.knownResults.set(frozen.result, selectionSet);\n        }\n        return frozen;\n    };\n    // Uncached version of executeSubSelectedArray.\n    StoreReader.prototype.execSubSelectedArrayImpl = function (_a) {\n        var _this = this;\n        var field = _a.field, array = _a.array, enclosingRef = _a.enclosingRef, context = _a.context;\n        var missing;\n        var missingMerger = new DeepMerger();\n        function handleMissing(childResult, i) {\n            var _a;\n            if (childResult.missing) {\n                missing = missingMerger.merge(missing, (_a = {}, _a[i] = childResult.missing, _a));\n            }\n            return childResult.result;\n        }\n        if (field.selectionSet) {\n            array = array.filter(context.store.canRead);\n        }\n        array = array.map(function (item, i) {\n            // null value in array\n            if (item === null) {\n                return null;\n            }\n            // This is a nested array, recurse\n            if (isArray(item)) {\n                return handleMissing(_this.executeSubSelectedArray({\n                    field: field,\n                    array: item,\n                    enclosingRef: enclosingRef,\n                    context: context,\n                }), i);\n            }\n            // This is an object, run the selection set on it\n            if (field.selectionSet) {\n                return handleMissing(_this.executeSelectionSet({\n                    selectionSet: field.selectionSet,\n                    objectOrReference: item,\n                    enclosingRef: isReference(item) ? item : enclosingRef,\n                    context: context,\n                }), i);\n            }\n            if (globalThis.__DEV__ !== false) {\n                assertSelectionSetForIdValue(context.store, field, item);\n            }\n            return item;\n        });\n        return {\n            result: context.canonizeResults ? this.canon.admit(array) : array,\n            missing: missing,\n        };\n    };\n    return StoreReader;\n}());\nexport { StoreReader };\nfunction firstMissing(tree) {\n    try {\n        JSON.stringify(tree, function (_, value) {\n            if (typeof value === \"string\")\n                throw value;\n            return value;\n        });\n    }\n    catch (result) {\n        return result;\n    }\n}\nfunction assertSelectionSetForIdValue(store, field, fieldValue) {\n    if (!field.selectionSet) {\n        var workSet_1 = new Set([fieldValue]);\n        workSet_1.forEach(function (value) {\n            if (isNonNullObject(value)) {\n                invariant(\n                    !isReference(value),\n                    10,\n                    getTypenameFromStoreObject(store, value),\n                    field.name.value\n                );\n                Object.values(value).forEach(workSet_1.add, workSet_1);\n            }\n        });\n    }\n}\n//# sourceMappingURL=readFromStore.js.map", "import { dep, Slot } from \"optimism\";\n// Contextual Slot that acquires its value when custom read functions are\n// called in Policies#readField.\nexport var cacheSlot = new Slot();\nvar cacheInfoMap = new WeakMap();\nfunction getCacheInfo(cache) {\n    var info = cacheInfoMap.get(cache);\n    if (!info) {\n        cacheInfoMap.set(cache, (info = {\n            vars: new Set(),\n            dep: dep(),\n        }));\n    }\n    return info;\n}\nexport function forgetCache(cache) {\n    getCacheInfo(cache).vars.forEach(function (rv) { return rv.forgetCache(cache); });\n}\n// Calling forgetCache(cache) serves to silence broadcasts and allows the\n// cache to be garbage collected. However, the varsByCache WeakMap\n// preserves the set of reactive variables that were previously associated\n// with this cache, which makes it possible to \"recall\" the cache at a\n// later time, by reattaching it to those variables. If the cache has been\n// garbage collected in the meantime, because it is no longer reachable,\n// you won't be able to call recallCache(cache), and the cache will\n// automatically disappear from the varsByCache WeakMap.\nexport function recallCache(cache) {\n    getCacheInfo(cache).vars.forEach(function (rv) { return rv.attachCache(cache); });\n}\nexport function makeVar(value) {\n    var caches = new Set();\n    var listeners = new Set();\n    var rv = function (newValue) {\n        if (arguments.length > 0) {\n            if (value !== newValue) {\n                value = newValue;\n                caches.forEach(function (cache) {\n                    // Invalidate any fields with custom read functions that\n                    // consumed this variable, so query results involving those\n                    // fields will be recomputed the next time we read them.\n                    getCacheInfo(cache).dep.dirty(rv);\n                    // Broadcast changes to any caches that have previously read\n                    // from this variable.\n                    broadcast(cache);\n                });\n                // Finally, notify any listeners added via rv.onNextChange.\n                var oldListeners = Array.from(listeners);\n                listeners.clear();\n                oldListeners.forEach(function (listener) { return listener(value); });\n            }\n        }\n        else {\n            // When reading from the variable, obtain the current cache from\n            // context via cacheSlot. This isn't entirely foolproof, but it's\n            // the same system that powers varDep.\n            var cache = cacheSlot.getValue();\n            if (cache) {\n                attach(cache);\n                getCacheInfo(cache).dep(rv);\n            }\n        }\n        return value;\n    };\n    rv.onNextChange = function (listener) {\n        listeners.add(listener);\n        return function () {\n            listeners.delete(listener);\n        };\n    };\n    var attach = (rv.attachCache = function (cache) {\n        caches.add(cache);\n        getCacheInfo(cache).vars.add(rv);\n        return rv;\n    });\n    rv.forgetCache = function (cache) { return caches.delete(cache); };\n    return rv;\n}\nfunction broadcast(cache) {\n    if (cache.broadcastWatches) {\n        cache.broadcastWatches();\n    }\n}\n//# sourceMappingURL=reactiveVars.js.map", "import { invariant } from \"../../utilities/globals/index.js\";\nimport { argumentsObjectFromField, DeepMerger, isNonEmptyArray, isNonNullObject, } from \"../../utilities/index.js\";\nimport { hasOwn, isArray } from \"./helpers.js\";\n// Mapping from JSON-encoded KeySpecifier strings to associated information.\nvar specifierInfoCache = Object.create(null);\nfunction lookupSpecifierInfo(spec) {\n    // It's safe to encode KeySpecifier arrays with JSON.stringify, since they're\n    // just arrays of strings or nested KeySpecifier arrays, and the order of the\n    // array elements is important (and suitably preserved by JSON.stringify).\n    var cacheKey = JSON.stringify(spec);\n    return (specifierInfoCache[cacheKey] ||\n        (specifierInfoCache[cacheKey] = Object.create(null)));\n}\nexport function keyFieldsFnFromSpecifier(specifier) {\n    var info = lookupSpecifierInfo(specifier);\n    return (info.keyFieldsFn || (info.keyFieldsFn = function (object, context) {\n            var extract = function (from, key) {\n                return context.readField(key, from);\n            };\n            var keyObject = (context.keyObject = collectSpecifierPaths(specifier, function (schemaKeyPath) {\n                var extracted = extractKeyPath(context.storeObject, schemaKeyPath, \n                // Using context.readField to extract paths from context.storeObject\n                // allows the extraction to see through Reference objects and respect\n                // custom read functions.\n                extract);\n                if (extracted === void 0 &&\n                    object !== context.storeObject &&\n                    hasOwn.call(object, schemaKeyPath[0])) {\n                    // If context.storeObject fails to provide a value for the requested\n                    // path, fall back to the raw result object, if it has a top-level key\n                    // matching the first key in the path (schemaKeyPath[0]). This allows\n                    // key fields included in the written data to be saved in the cache\n                    // even if they are not selected explicitly in context.selectionSet.\n                    // Not being mentioned by context.selectionSet is convenient here,\n                    // since it means these extra fields cannot be affected by field\n                    // aliasing, which is why we can use extractKey instead of\n                    // context.readField for this extraction.\n                    extracted = extractKeyPath(object, schemaKeyPath, extractKey);\n                }\n                invariant(extracted !== void 0, 4, schemaKeyPath.join(\".\"), object);\n                return extracted;\n            }));\n            return \"\".concat(context.typename, \":\").concat(JSON.stringify(keyObject));\n        }));\n}\n// The keyArgs extraction process is roughly analogous to keyFields extraction,\n// but there are no aliases involved, missing fields are tolerated (by merely\n// omitting them from the key), and drawing from field.directives or variables\n// is allowed (in addition to drawing from the field's arguments object).\n// Concretely, these differences mean passing a different key path extractor\n// function to collectSpecifierPaths, reusing the shared extractKeyPath helper\n// wherever possible.\nexport function keyArgsFnFromSpecifier(specifier) {\n    var info = lookupSpecifierInfo(specifier);\n    return (info.keyArgsFn ||\n        (info.keyArgsFn = function (args, _a) {\n            var field = _a.field, variables = _a.variables, fieldName = _a.fieldName;\n            var collected = collectSpecifierPaths(specifier, function (keyPath) {\n                var firstKey = keyPath[0];\n                var firstChar = firstKey.charAt(0);\n                if (firstChar === \"@\") {\n                    if (field && isNonEmptyArray(field.directives)) {\n                        var directiveName_1 = firstKey.slice(1);\n                        // If the directive appears multiple times, only the first\n                        // occurrence's arguments will be used. TODO Allow repetition?\n                        // TODO Cache this work somehow, a la aliasMap?\n                        var d = field.directives.find(function (d) { return d.name.value === directiveName_1; });\n                        // Fortunately argumentsObjectFromField works for DirectiveNode!\n                        var directiveArgs = d && argumentsObjectFromField(d, variables);\n                        // For directives without arguments (d defined, but directiveArgs ===\n                        // null), the presence or absence of the directive still counts as\n                        // part of the field key, so we return null in those cases. If no\n                        // directive with this name was found for this field (d undefined and\n                        // thus directiveArgs undefined), we return undefined, which causes\n                        // this value to be omitted from the key object returned by\n                        // collectSpecifierPaths.\n                        return (directiveArgs &&\n                            extractKeyPath(directiveArgs, \n                            // If keyPath.length === 1, this code calls extractKeyPath with an\n                            // empty path, which works because it uses directiveArgs as the\n                            // extracted value.\n                            keyPath.slice(1)));\n                    }\n                    // If the key started with @ but there was no corresponding directive,\n                    // we want to omit this value from the key object, not fall through to\n                    // treating @whatever as a normal argument name.\n                    return;\n                }\n                if (firstChar === \"$\") {\n                    var variableName = firstKey.slice(1);\n                    if (variables && hasOwn.call(variables, variableName)) {\n                        var varKeyPath = keyPath.slice(0);\n                        varKeyPath[0] = variableName;\n                        return extractKeyPath(variables, varKeyPath);\n                    }\n                    // If the key started with $ but there was no corresponding variable, we\n                    // want to omit this value from the key object, not fall through to\n                    // treating $whatever as a normal argument name.\n                    return;\n                }\n                if (args) {\n                    return extractKeyPath(args, keyPath);\n                }\n            });\n            var suffix = JSON.stringify(collected);\n            // If no arguments were passed to this field, and it didn't have any other\n            // field key contributions from directives or variables, hide the empty\n            // :{} suffix from the field key. However, a field passed no arguments can\n            // still end up with a non-empty :{...} suffix if its key configuration\n            // refers to directives or variables.\n            if (args || suffix !== \"{}\") {\n                fieldName += \":\" + suffix;\n            }\n            return fieldName;\n        }));\n}\nexport function collectSpecifierPaths(specifier, extractor) {\n    // For each path specified by specifier, invoke the extractor, and repeatedly\n    // merge the results together, with appropriate ancestor context.\n    var merger = new DeepMerger();\n    return getSpecifierPaths(specifier).reduce(function (collected, path) {\n        var _a;\n        var toMerge = extractor(path);\n        if (toMerge !== void 0) {\n            // This path is not expected to contain array indexes, so the toMerge\n            // reconstruction will not contain arrays. TODO Fix this?\n            for (var i = path.length - 1; i >= 0; --i) {\n                toMerge = (_a = {}, _a[path[i]] = toMerge, _a);\n            }\n            collected = merger.merge(collected, toMerge);\n        }\n        return collected;\n    }, Object.create(null));\n}\nexport function getSpecifierPaths(spec) {\n    var info = lookupSpecifierInfo(spec);\n    if (!info.paths) {\n        var paths_1 = (info.paths = []);\n        var currentPath_1 = [];\n        spec.forEach(function (s, i) {\n            if (isArray(s)) {\n                getSpecifierPaths(s).forEach(function (p) { return paths_1.push(currentPath_1.concat(p)); });\n                currentPath_1.length = 0;\n            }\n            else {\n                currentPath_1.push(s);\n                if (!isArray(spec[i + 1])) {\n                    paths_1.push(currentPath_1.slice(0));\n                    currentPath_1.length = 0;\n                }\n            }\n        });\n    }\n    return info.paths;\n}\nfunction extractKey(object, key) {\n    return object[key];\n}\nexport function extractKeyPath(object, path, extract) {\n    // For each key in path, extract the corresponding child property from obj,\n    // flattening arrays if encountered (uncommon for keyFields and keyArgs, but\n    // possible). The final result of path.reduce is normalized so unexpected leaf\n    // objects have their keys safely sorted. That final result is difficult to\n    // type as anything other than any. You're welcome to try to improve the\n    // return type, but keep in mind extractKeyPath is not a public function\n    // (exported only for testing), so the effort may not be worthwhile unless the\n    // limited set of actual callers (see above) pass arguments that TypeScript\n    // can statically type. If we know only that path is some array of strings\n    // (and not, say, a specific tuple of statically known strings), any (or\n    // possibly unknown) is the honest answer.\n    extract = extract || extractKey;\n    return normalize(path.reduce(function reducer(obj, key) {\n        return isArray(obj) ?\n            obj.map(function (child) { return reducer(child, key); })\n            : obj && extract(obj, key);\n    }, object));\n}\nfunction normalize(value) {\n    // Usually the extracted value will be a scalar value, since most primary\n    // key fields are scalar, but just in case we get an object or an array, we\n    // need to do some normalization of the order of (nested) keys.\n    if (isNonNullObject(value)) {\n        if (isArray(value)) {\n            return value.map(normalize);\n        }\n        return collectSpecifierPaths(Object.keys(value).sort(), function (path) {\n            return extractKeyPath(value, path);\n        });\n    }\n    return value;\n}\n//# sourceMappingURL=key-extractor.js.map", "import { __assign, __rest } from \"tslib\";\nimport { invariant, newInvariantError } from \"../../utilities/globals/index.js\";\nimport { storeKeyNameFromField, argumentsObjectFromField, isReference, getStoreKeyName, isNonNullObject, stringifyForDisplay, } from \"../../utilities/index.js\";\nimport { hasOwn, fieldNameFromStoreName, storeValueIsStoreObject, selectionSetMatchesResult, TypeOrFieldNameRegExp, defaultDataIdFromObject, isArray, } from \"./helpers.js\";\nimport { cacheSlot } from \"./reactiveVars.js\";\nimport { keyArgsFnFromSpecifier, keyFieldsFnFromSpecifier, } from \"./key-extractor.js\";\nfunction argsFromFieldSpecifier(spec) {\n    return (spec.args !== void 0 ? spec.args\n        : spec.field ? argumentsObjectFromField(spec.field, spec.variables)\n            : null);\n}\nvar nullKeyFieldsFn = function () { return void 0; };\nvar simpleKeyArgsFn = function (_args, context) { return context.fieldName; };\n// These merge functions can be selected by specifying merge:true or\n// merge:false in a field policy.\nvar mergeTrueFn = function (existing, incoming, _a) {\n    var mergeObjects = _a.mergeObjects;\n    return mergeObjects(existing, incoming);\n};\nvar mergeFalseFn = function (_, incoming) { return incoming; };\nvar Policies = /** @class */ (function () {\n    function Policies(config) {\n        this.config = config;\n        this.typePolicies = Object.create(null);\n        this.toBeAdded = Object.create(null);\n        // Map from subtype names to sets of supertype names. Note that this\n        // representation inverts the structure of possibleTypes (whose keys are\n        // supertypes and whose values are arrays of subtypes) because it tends\n        // to be much more efficient to search upwards than downwards.\n        this.supertypeMap = new Map();\n        // Any fuzzy subtypes specified by possibleTypes will be converted to\n        // RegExp objects and recorded here. Every key of this map can also be\n        // found in supertypeMap. In many cases this Map will be empty, which\n        // means no fuzzy subtype checking will happen in fragmentMatches.\n        this.fuzzySubtypes = new Map();\n        this.rootIdsByTypename = Object.create(null);\n        this.rootTypenamesById = Object.create(null);\n        this.usingPossibleTypes = false;\n        this.config = __assign({ dataIdFromObject: defaultDataIdFromObject }, config);\n        this.cache = this.config.cache;\n        this.setRootTypename(\"Query\");\n        this.setRootTypename(\"Mutation\");\n        this.setRootTypename(\"Subscription\");\n        if (config.possibleTypes) {\n            this.addPossibleTypes(config.possibleTypes);\n        }\n        if (config.typePolicies) {\n            this.addTypePolicies(config.typePolicies);\n        }\n    }\n    Policies.prototype.identify = function (object, partialContext) {\n        var _a;\n        var policies = this;\n        var typename = (partialContext &&\n            (partialContext.typename || ((_a = partialContext.storeObject) === null || _a === void 0 ? void 0 : _a.__typename))) ||\n            object.__typename;\n        // It should be possible to write root Query fields with writeFragment,\n        // using { __typename: \"Query\", ... } as the data, but it does not make\n        // sense to allow the same identification behavior for the Mutation and\n        // Subscription types, since application code should never be writing\n        // directly to (or reading directly from) those root objects.\n        if (typename === this.rootTypenamesById.ROOT_QUERY) {\n            return [\"ROOT_QUERY\"];\n        }\n        // Default context.storeObject to object if not otherwise provided.\n        var storeObject = (partialContext && partialContext.storeObject) || object;\n        var context = __assign(__assign({}, partialContext), { typename: typename, storeObject: storeObject, readField: (partialContext && partialContext.readField) ||\n                function () {\n                    var options = normalizeReadFieldOptions(arguments, storeObject);\n                    return policies.readField(options, {\n                        store: policies.cache[\"data\"],\n                        variables: options.variables,\n                    });\n                } });\n        var id;\n        var policy = typename && this.getTypePolicy(typename);\n        var keyFn = (policy && policy.keyFn) || this.config.dataIdFromObject;\n        while (keyFn) {\n            var specifierOrId = keyFn(__assign(__assign({}, object), storeObject), context);\n            if (isArray(specifierOrId)) {\n                keyFn = keyFieldsFnFromSpecifier(specifierOrId);\n            }\n            else {\n                id = specifierOrId;\n                break;\n            }\n        }\n        id = id ? String(id) : void 0;\n        return context.keyObject ? [id, context.keyObject] : [id];\n    };\n    Policies.prototype.addTypePolicies = function (typePolicies) {\n        var _this = this;\n        Object.keys(typePolicies).forEach(function (typename) {\n            var _a = typePolicies[typename], queryType = _a.queryType, mutationType = _a.mutationType, subscriptionType = _a.subscriptionType, incoming = __rest(_a, [\"queryType\", \"mutationType\", \"subscriptionType\"]);\n            // Though {query,mutation,subscription}Type configurations are rare,\n            // it's important to call setRootTypename as early as possible,\n            // since these configurations should apply consistently for the\n            // entire lifetime of the cache. Also, since only one __typename can\n            // qualify as one of these root types, these three properties cannot\n            // be inherited, unlike the rest of the incoming properties. That\n            // restriction is convenient, because the purpose of this.toBeAdded\n            // is to delay the processing of type/field policies until the first\n            // time they're used, allowing policies to be added in any order as\n            // long as all relevant policies (including policies for supertypes)\n            // have been added by the time a given policy is used for the first\n            // time. In other words, since inheritance doesn't matter for these\n            // properties, there's also no need to delay their processing using\n            // the this.toBeAdded queue.\n            if (queryType)\n                _this.setRootTypename(\"Query\", typename);\n            if (mutationType)\n                _this.setRootTypename(\"Mutation\", typename);\n            if (subscriptionType)\n                _this.setRootTypename(\"Subscription\", typename);\n            if (hasOwn.call(_this.toBeAdded, typename)) {\n                _this.toBeAdded[typename].push(incoming);\n            }\n            else {\n                _this.toBeAdded[typename] = [incoming];\n            }\n        });\n    };\n    Policies.prototype.updateTypePolicy = function (typename, incoming) {\n        var _this = this;\n        var existing = this.getTypePolicy(typename);\n        var keyFields = incoming.keyFields, fields = incoming.fields;\n        function setMerge(existing, merge) {\n            existing.merge =\n                typeof merge === \"function\" ? merge\n                    // Pass merge:true as a shorthand for a merge implementation\n                    // that returns options.mergeObjects(existing, incoming).\n                    : merge === true ? mergeTrueFn\n                        // Pass merge:false to make incoming always replace existing\n                        // without any warnings about data clobbering.\n                        : merge === false ? mergeFalseFn\n                            : existing.merge;\n        }\n        // Type policies can define merge functions, as an alternative to\n        // using field policies to merge child objects.\n        setMerge(existing, incoming.merge);\n        existing.keyFn =\n            // Pass false to disable normalization for this typename.\n            keyFields === false ? nullKeyFieldsFn\n                // Pass an array of strings to use those fields to compute a\n                // composite ID for objects of this typename.\n                : isArray(keyFields) ? keyFieldsFnFromSpecifier(keyFields)\n                    // Pass a function to take full control over identification.\n                    : typeof keyFields === \"function\" ? keyFields\n                        // Leave existing.keyFn unchanged if above cases fail.\n                        : existing.keyFn;\n        if (fields) {\n            Object.keys(fields).forEach(function (fieldName) {\n                var existing = _this.getFieldPolicy(typename, fieldName, true);\n                var incoming = fields[fieldName];\n                if (typeof incoming === \"function\") {\n                    existing.read = incoming;\n                }\n                else {\n                    var keyArgs = incoming.keyArgs, read = incoming.read, merge = incoming.merge;\n                    existing.keyFn =\n                        // Pass false to disable argument-based differentiation of\n                        // field identities.\n                        keyArgs === false ? simpleKeyArgsFn\n                            // Pass an array of strings to use named arguments to\n                            // compute a composite identity for the field.\n                            : isArray(keyArgs) ? keyArgsFnFromSpecifier(keyArgs)\n                                // Pass a function to take full control over field identity.\n                                : typeof keyArgs === \"function\" ? keyArgs\n                                    // Leave existing.keyFn unchanged if above cases fail.\n                                    : existing.keyFn;\n                    if (typeof read === \"function\") {\n                        existing.read = read;\n                    }\n                    setMerge(existing, merge);\n                }\n                if (existing.read && existing.merge) {\n                    // If we have both a read and a merge function, assume\n                    // keyArgs:false, because read and merge together can take\n                    // responsibility for interpreting arguments in and out. This\n                    // default assumption can always be overridden by specifying\n                    // keyArgs explicitly in the FieldPolicy.\n                    existing.keyFn = existing.keyFn || simpleKeyArgsFn;\n                }\n            });\n        }\n    };\n    Policies.prototype.setRootTypename = function (which, typename) {\n        if (typename === void 0) { typename = which; }\n        var rootId = \"ROOT_\" + which.toUpperCase();\n        var old = this.rootTypenamesById[rootId];\n        if (typename !== old) {\n            invariant(!old || old === which, 5, which);\n            // First, delete any old __typename associated with this rootId from\n            // rootIdsByTypename.\n            if (old)\n                delete this.rootIdsByTypename[old];\n            // Now make this the only __typename that maps to this rootId.\n            this.rootIdsByTypename[typename] = rootId;\n            // Finally, update the __typename associated with this rootId.\n            this.rootTypenamesById[rootId] = typename;\n        }\n    };\n    Policies.prototype.addPossibleTypes = function (possibleTypes) {\n        var _this = this;\n        this.usingPossibleTypes = true;\n        Object.keys(possibleTypes).forEach(function (supertype) {\n            // Make sure all types have an entry in this.supertypeMap, even if\n            // their supertype set is empty, so we can return false immediately\n            // from policies.fragmentMatches for unknown supertypes.\n            _this.getSupertypeSet(supertype, true);\n            possibleTypes[supertype].forEach(function (subtype) {\n                _this.getSupertypeSet(subtype, true).add(supertype);\n                var match = subtype.match(TypeOrFieldNameRegExp);\n                if (!match || match[0] !== subtype) {\n                    // TODO Don't interpret just any invalid typename as a RegExp.\n                    _this.fuzzySubtypes.set(subtype, new RegExp(subtype));\n                }\n            });\n        });\n    };\n    Policies.prototype.getTypePolicy = function (typename) {\n        var _this = this;\n        if (!hasOwn.call(this.typePolicies, typename)) {\n            var policy_1 = (this.typePolicies[typename] = Object.create(null));\n            policy_1.fields = Object.create(null);\n            // When the TypePolicy for typename is first accessed, instead of\n            // starting with an empty policy object, inherit any properties or\n            // fields from the type policies of the supertypes of typename.\n            //\n            // Any properties or fields defined explicitly within the TypePolicy\n            // for typename will take precedence, and if there are multiple\n            // supertypes, the properties of policies whose types were added\n            // later via addPossibleTypes will take precedence over those of\n            // earlier supertypes. TODO Perhaps we should warn about these\n            // conflicts in development, and recommend defining the property\n            // explicitly in the subtype policy?\n            //\n            // Field policy inheritance is atomic/shallow: you can't inherit a\n            // field policy and then override just its read function, since read\n            // and merge functions often need to cooperate, so changing only one\n            // of them would be a recipe for inconsistency.\n            //\n            // Once the TypePolicy for typename has been accessed, its properties can\n            // still be updated directly using addTypePolicies, but future changes to\n            // inherited supertype policies will not be reflected in this subtype\n            // policy, because this code runs at most once per typename.\n            var supertypes_1 = this.supertypeMap.get(typename);\n            if (!supertypes_1 && this.fuzzySubtypes.size) {\n                // To make the inheritance logic work for unknown typename strings that\n                // may have fuzzy supertypes, we give this typename an empty supertype\n                // set and then populate it with any fuzzy supertypes that match.\n                supertypes_1 = this.getSupertypeSet(typename, true);\n                // This only works for typenames that are directly matched by a fuzzy\n                // supertype. What if there is an intermediate chain of supertypes?\n                // While possible, that situation can only be solved effectively by\n                // specifying the intermediate relationships via possibleTypes, manually\n                // and in a non-fuzzy way.\n                this.fuzzySubtypes.forEach(function (regExp, fuzzy) {\n                    if (regExp.test(typename)) {\n                        // The fuzzy parameter is just the original string version of regExp\n                        // (not a valid __typename string), but we can look up the\n                        // associated supertype(s) in this.supertypeMap.\n                        var fuzzySupertypes = _this.supertypeMap.get(fuzzy);\n                        if (fuzzySupertypes) {\n                            fuzzySupertypes.forEach(function (supertype) {\n                                return supertypes_1.add(supertype);\n                            });\n                        }\n                    }\n                });\n            }\n            if (supertypes_1 && supertypes_1.size) {\n                supertypes_1.forEach(function (supertype) {\n                    var _a = _this.getTypePolicy(supertype), fields = _a.fields, rest = __rest(_a, [\"fields\"]);\n                    Object.assign(policy_1, rest);\n                    Object.assign(policy_1.fields, fields);\n                });\n            }\n        }\n        var inbox = this.toBeAdded[typename];\n        if (inbox && inbox.length) {\n            // Merge the pending policies into this.typePolicies, in the order they\n            // were originally passed to addTypePolicy.\n            inbox.splice(0).forEach(function (policy) {\n                _this.updateTypePolicy(typename, policy);\n            });\n        }\n        return this.typePolicies[typename];\n    };\n    Policies.prototype.getFieldPolicy = function (typename, fieldName, createIfMissing) {\n        if (typename) {\n            var fieldPolicies = this.getTypePolicy(typename).fields;\n            return (fieldPolicies[fieldName] ||\n                (createIfMissing && (fieldPolicies[fieldName] = Object.create(null))));\n        }\n    };\n    Policies.prototype.getSupertypeSet = function (subtype, createIfMissing) {\n        var supertypeSet = this.supertypeMap.get(subtype);\n        if (!supertypeSet && createIfMissing) {\n            this.supertypeMap.set(subtype, (supertypeSet = new Set()));\n        }\n        return supertypeSet;\n    };\n    Policies.prototype.fragmentMatches = function (fragment, typename, result, variables) {\n        var _this = this;\n        if (!fragment.typeCondition)\n            return true;\n        // If the fragment has a type condition but the object we're matching\n        // against does not have a __typename, the fragment cannot match.\n        if (!typename)\n            return false;\n        var supertype = fragment.typeCondition.name.value;\n        // Common case: fragment type condition and __typename are the same.\n        if (typename === supertype)\n            return true;\n        if (this.usingPossibleTypes && this.supertypeMap.has(supertype)) {\n            var typenameSupertypeSet = this.getSupertypeSet(typename, true);\n            var workQueue_1 = [typenameSupertypeSet];\n            var maybeEnqueue_1 = function (subtype) {\n                var supertypeSet = _this.getSupertypeSet(subtype, false);\n                if (supertypeSet &&\n                    supertypeSet.size &&\n                    workQueue_1.indexOf(supertypeSet) < 0) {\n                    workQueue_1.push(supertypeSet);\n                }\n            };\n            // We need to check fuzzy subtypes only if we encountered fuzzy\n            // subtype strings in addPossibleTypes, and only while writing to\n            // the cache, since that's when selectionSetMatchesResult gives a\n            // strong signal of fragment matching. The StoreReader class calls\n            // policies.fragmentMatches without passing a result object, so\n            // needToCheckFuzzySubtypes is always false while reading.\n            var needToCheckFuzzySubtypes = !!(result && this.fuzzySubtypes.size);\n            var checkingFuzzySubtypes = false;\n            // It's important to keep evaluating workQueue.length each time through\n            // the loop, because the queue can grow while we're iterating over it.\n            for (var i = 0; i < workQueue_1.length; ++i) {\n                var supertypeSet = workQueue_1[i];\n                if (supertypeSet.has(supertype)) {\n                    if (!typenameSupertypeSet.has(supertype)) {\n                        if (checkingFuzzySubtypes) {\n                            globalThis.__DEV__ !== false && invariant.warn(6, typename, supertype);\n                        }\n                        // Record positive results for faster future lookup.\n                        // Unfortunately, we cannot safely cache negative results,\n                        // because new possibleTypes data could always be added to the\n                        // Policies class.\n                        typenameSupertypeSet.add(supertype);\n                    }\n                    return true;\n                }\n                supertypeSet.forEach(maybeEnqueue_1);\n                if (needToCheckFuzzySubtypes &&\n                    // Start checking fuzzy subtypes only after exhausting all\n                    // non-fuzzy subtypes (after the final iteration of the loop).\n                    i === workQueue_1.length - 1 &&\n                    // We could wait to compare fragment.selectionSet to result\n                    // after we verify the supertype, but this check is often less\n                    // expensive than that search, and we will have to do the\n                    // comparison anyway whenever we find a potential match.\n                    selectionSetMatchesResult(fragment.selectionSet, result, variables)) {\n                    // We don't always need to check fuzzy subtypes (if no result\n                    // was provided, or !this.fuzzySubtypes.size), but, when we do,\n                    // we only want to check them once.\n                    needToCheckFuzzySubtypes = false;\n                    checkingFuzzySubtypes = true;\n                    // If we find any fuzzy subtypes that match typename, extend the\n                    // workQueue to search through the supertypes of those fuzzy\n                    // subtypes. Otherwise the for-loop will terminate and we'll\n                    // return false below.\n                    this.fuzzySubtypes.forEach(function (regExp, fuzzyString) {\n                        var match = typename.match(regExp);\n                        if (match && match[0] === typename) {\n                            maybeEnqueue_1(fuzzyString);\n                        }\n                    });\n                }\n            }\n        }\n        return false;\n    };\n    Policies.prototype.hasKeyArgs = function (typename, fieldName) {\n        var policy = this.getFieldPolicy(typename, fieldName, false);\n        return !!(policy && policy.keyFn);\n    };\n    Policies.prototype.getStoreFieldName = function (fieldSpec) {\n        var typename = fieldSpec.typename, fieldName = fieldSpec.fieldName;\n        var policy = this.getFieldPolicy(typename, fieldName, false);\n        var storeFieldName;\n        var keyFn = policy && policy.keyFn;\n        if (keyFn && typename) {\n            var context = {\n                typename: typename,\n                fieldName: fieldName,\n                field: fieldSpec.field || null,\n                variables: fieldSpec.variables,\n            };\n            var args = argsFromFieldSpecifier(fieldSpec);\n            while (keyFn) {\n                var specifierOrString = keyFn(args, context);\n                if (isArray(specifierOrString)) {\n                    keyFn = keyArgsFnFromSpecifier(specifierOrString);\n                }\n                else {\n                    // If the custom keyFn returns a falsy value, fall back to\n                    // fieldName instead.\n                    storeFieldName = specifierOrString || fieldName;\n                    break;\n                }\n            }\n        }\n        if (storeFieldName === void 0) {\n            storeFieldName =\n                fieldSpec.field ?\n                    storeKeyNameFromField(fieldSpec.field, fieldSpec.variables)\n                    : getStoreKeyName(fieldName, argsFromFieldSpecifier(fieldSpec));\n        }\n        // Returning false from a keyArgs function is like configuring\n        // keyArgs: false, but more dynamic.\n        if (storeFieldName === false) {\n            return fieldName;\n        }\n        // Make sure custom field names start with the actual field.name.value\n        // of the field, so we can always figure out which properties of a\n        // StoreObject correspond to which original field names.\n        return fieldName === fieldNameFromStoreName(storeFieldName) ? storeFieldName\n            : fieldName + \":\" + storeFieldName;\n    };\n    Policies.prototype.readField = function (options, context) {\n        var objectOrReference = options.from;\n        if (!objectOrReference)\n            return;\n        var nameOrField = options.field || options.fieldName;\n        if (!nameOrField)\n            return;\n        if (options.typename === void 0) {\n            var typename = context.store.getFieldValue(objectOrReference, \"__typename\");\n            if (typename)\n                options.typename = typename;\n        }\n        var storeFieldName = this.getStoreFieldName(options);\n        var fieldName = fieldNameFromStoreName(storeFieldName);\n        var existing = context.store.getFieldValue(objectOrReference, storeFieldName);\n        var policy = this.getFieldPolicy(options.typename, fieldName, false);\n        var read = policy && policy.read;\n        if (read) {\n            var readOptions = makeFieldFunctionOptions(this, objectOrReference, options, context, context.store.getStorage(isReference(objectOrReference) ?\n                objectOrReference.__ref\n                : objectOrReference, storeFieldName));\n            // Call read(existing, readOptions) with cacheSlot holding this.cache.\n            return cacheSlot.withValue(this.cache, read, [\n                existing,\n                readOptions,\n            ]);\n        }\n        return existing;\n    };\n    Policies.prototype.getReadFunction = function (typename, fieldName) {\n        var policy = this.getFieldPolicy(typename, fieldName, false);\n        return policy && policy.read;\n    };\n    Policies.prototype.getMergeFunction = function (parentTypename, fieldName, childTypename) {\n        var policy = this.getFieldPolicy(parentTypename, fieldName, false);\n        var merge = policy && policy.merge;\n        if (!merge && childTypename) {\n            policy = this.getTypePolicy(childTypename);\n            merge = policy && policy.merge;\n        }\n        return merge;\n    };\n    Policies.prototype.runMergeFunction = function (existing, incoming, _a, context, storage) {\n        var field = _a.field, typename = _a.typename, merge = _a.merge;\n        if (merge === mergeTrueFn) {\n            // Instead of going to the trouble of creating a full\n            // FieldFunctionOptions object and calling mergeTrueFn, we can\n            // simply call mergeObjects, as mergeTrueFn would.\n            return makeMergeObjectsFunction(context.store)(existing, incoming);\n        }\n        if (merge === mergeFalseFn) {\n            // Likewise for mergeFalseFn, whose implementation is even simpler.\n            return incoming;\n        }\n        // If cache.writeQuery or cache.writeFragment was called with\n        // options.overwrite set to true, we still call merge functions, but\n        // the existing data is always undefined, so the merge function will\n        // not attempt to combine the incoming data with the existing data.\n        if (context.overwrite) {\n            existing = void 0;\n        }\n        return merge(existing, incoming, makeFieldFunctionOptions(this, \n        // Unlike options.readField for read functions, we do not fall\n        // back to the current object if no foreignObjOrRef is provided,\n        // because it's not clear what the current object should be for\n        // merge functions: the (possibly undefined) existing object, or\n        // the incoming object? If you think your merge function needs\n        // to read sibling fields in order to produce a new value for\n        // the current field, you might want to rethink your strategy,\n        // because that's a recipe for making merge behavior sensitive\n        // to the order in which fields are written into the cache.\n        // However, readField(name, ref) is useful for merge functions\n        // that need to deduplicate child objects and references.\n        void 0, {\n            typename: typename,\n            fieldName: field.name.value,\n            field: field,\n            variables: context.variables,\n        }, context, storage || Object.create(null)));\n    };\n    return Policies;\n}());\nexport { Policies };\nfunction makeFieldFunctionOptions(policies, objectOrReference, fieldSpec, context, storage) {\n    var storeFieldName = policies.getStoreFieldName(fieldSpec);\n    var fieldName = fieldNameFromStoreName(storeFieldName);\n    var variables = fieldSpec.variables || context.variables;\n    var _a = context.store, toReference = _a.toReference, canRead = _a.canRead;\n    return {\n        args: argsFromFieldSpecifier(fieldSpec),\n        field: fieldSpec.field || null,\n        fieldName: fieldName,\n        storeFieldName: storeFieldName,\n        variables: variables,\n        isReference: isReference,\n        toReference: toReference,\n        storage: storage,\n        cache: policies.cache,\n        canRead: canRead,\n        readField: function () {\n            return policies.readField(normalizeReadFieldOptions(arguments, objectOrReference, variables), context);\n        },\n        mergeObjects: makeMergeObjectsFunction(context.store),\n    };\n}\nexport function normalizeReadFieldOptions(readFieldArgs, objectOrReference, variables) {\n    var fieldNameOrOptions = readFieldArgs[0], from = readFieldArgs[1], argc = readFieldArgs.length;\n    var options;\n    if (typeof fieldNameOrOptions === \"string\") {\n        options = {\n            fieldName: fieldNameOrOptions,\n            // Default to objectOrReference only when no second argument was\n            // passed for the from parameter, not when undefined is explicitly\n            // passed as the second argument.\n            from: argc > 1 ? from : objectOrReference,\n        };\n    }\n    else {\n        options = __assign({}, fieldNameOrOptions);\n        // Default to objectOrReference only when fieldNameOrOptions.from is\n        // actually omitted, rather than just undefined.\n        if (!hasOwn.call(options, \"from\")) {\n            options.from = objectOrReference;\n        }\n    }\n    if (globalThis.__DEV__ !== false && options.from === void 0) {\n        globalThis.__DEV__ !== false && invariant.warn(7, stringifyForDisplay(Array.from(readFieldArgs)));\n    }\n    if (void 0 === options.variables) {\n        options.variables = variables;\n    }\n    return options;\n}\nfunction makeMergeObjectsFunction(store) {\n    return function mergeObjects(existing, incoming) {\n        if (isArray(existing) || isArray(incoming)) {\n            throw newInvariantError(8);\n        }\n        // These dynamic checks are necessary because the parameters of a\n        // custom merge function can easily have the any type, so the type\n        // system cannot always enforce the StoreObject | Reference parameter\n        // types of options.mergeObjects.\n        if (isNonNullObject(existing) && isNonNullObject(incoming)) {\n            var eType = store.getFieldValue(existing, \"__typename\");\n            var iType = store.getFieldValue(incoming, \"__typename\");\n            var typesDiffer = eType && iType && eType !== iType;\n            if (typesDiffer) {\n                return incoming;\n            }\n            if (isReference(existing) && storeValueIsStoreObject(incoming)) {\n                // Update the normalized EntityStore for the entity identified by\n                // existing.__ref, preferring/overwriting any fields contributed by the\n                // newer incoming StoreObject.\n                store.merge(existing.__ref, incoming);\n                return existing;\n            }\n            if (storeValueIsStoreObject(existing) && isReference(incoming)) {\n                // Update the normalized EntityStore for the entity identified by\n                // incoming.__ref, taking fields from the older existing object only if\n                // those fields are not already present in the newer StoreObject\n                // identified by incoming.__ref.\n                store.merge(existing, incoming.__ref);\n                return incoming;\n            }\n            if (storeValueIsStoreObject(existing) &&\n                storeValueIsStoreObject(incoming)) {\n                return __assign(__assign({}, existing), incoming);\n            }\n        }\n        return incoming;\n    };\n}\n//# sourceMappingURL=policies.js.map", "import { __assign } from \"tslib\";\nimport { invariant, newInvariantError } from \"../../utilities/globals/index.js\";\nimport { equal } from \"@wry/equality\";\nimport { Trie } from \"@wry/trie\";\nimport { Kind } from \"graphql\";\nimport { getFragmentFromSelection, getDefaultValues, getOperationDefinition, getTypenameFromResult, makeReference, isField, resultKeyNameFromField, isReference, shouldInclude, cloneDeep, addTypenameToDocument, isNonEmptyArray, argumentsObjectFromField, canonicalStringify, } from \"../../utilities/index.js\";\nimport { isArray, makeProcessedFieldsMerger, fieldNameFromStoreName, storeValueIsStoreObject, extractFragmentContext, } from \"./helpers.js\";\nimport { normalizeReadFieldOptions } from \"./policies.js\";\n// Since there are only four possible combinations of context.clientOnly and\n// context.deferred values, we should need at most four \"flavors\" of any given\n// WriteContext. To avoid creating multiple copies of the same context, we cache\n// the contexts in the context.flavors Map (shared by all flavors) according to\n// their clientOnly and deferred values (always in that order).\nfunction getContextFlavor(context, clientOnly, deferred) {\n    var key = \"\".concat(clientOnly).concat(deferred);\n    var flavored = context.flavors.get(key);\n    if (!flavored) {\n        context.flavors.set(key, (flavored =\n            context.clientOnly === clientOnly && context.deferred === deferred ?\n                context\n                : __assign(__assign({}, context), { clientOnly: clientOnly, deferred: deferred })));\n    }\n    return flavored;\n}\nvar StoreWriter = /** @class */ (function () {\n    function StoreWriter(cache, reader, fragments) {\n        this.cache = cache;\n        this.reader = reader;\n        this.fragments = fragments;\n    }\n    StoreWriter.prototype.writeToStore = function (store, _a) {\n        var _this = this;\n        var query = _a.query, result = _a.result, dataId = _a.dataId, variables = _a.variables, overwrite = _a.overwrite;\n        var operationDefinition = getOperationDefinition(query);\n        var merger = makeProcessedFieldsMerger();\n        variables = __assign(__assign({}, getDefaultValues(operationDefinition)), variables);\n        var context = __assign(__assign({ store: store, written: Object.create(null), merge: function (existing, incoming) {\n                return merger.merge(existing, incoming);\n            }, variables: variables, varString: canonicalStringify(variables) }, extractFragmentContext(query, this.fragments)), { overwrite: !!overwrite, incomingById: new Map(), clientOnly: false, deferred: false, flavors: new Map() });\n        var ref = this.processSelectionSet({\n            result: result || Object.create(null),\n            dataId: dataId,\n            selectionSet: operationDefinition.selectionSet,\n            mergeTree: { map: new Map() },\n            context: context,\n        });\n        if (!isReference(ref)) {\n            throw newInvariantError(11, result);\n        }\n        // So far, the store has not been modified, so now it's time to process\n        // context.incomingById and merge those incoming fields into context.store.\n        context.incomingById.forEach(function (_a, dataId) {\n            var storeObject = _a.storeObject, mergeTree = _a.mergeTree, fieldNodeSet = _a.fieldNodeSet;\n            var entityRef = makeReference(dataId);\n            if (mergeTree && mergeTree.map.size) {\n                var applied = _this.applyMerges(mergeTree, entityRef, storeObject, context);\n                if (isReference(applied)) {\n                    // Assume References returned by applyMerges have already been merged\n                    // into the store. See makeMergeObjectsFunction in policies.ts for an\n                    // example of how this can happen.\n                    return;\n                }\n                // Otherwise, applyMerges returned a StoreObject, whose fields we should\n                // merge into the store (see store.merge statement below).\n                storeObject = applied;\n            }\n            if (globalThis.__DEV__ !== false && !context.overwrite) {\n                var fieldsWithSelectionSets_1 = Object.create(null);\n                fieldNodeSet.forEach(function (field) {\n                    if (field.selectionSet) {\n                        fieldsWithSelectionSets_1[field.name.value] = true;\n                    }\n                });\n                var hasSelectionSet_1 = function (storeFieldName) {\n                    return fieldsWithSelectionSets_1[fieldNameFromStoreName(storeFieldName)] ===\n                        true;\n                };\n                var hasMergeFunction_1 = function (storeFieldName) {\n                    var childTree = mergeTree && mergeTree.map.get(storeFieldName);\n                    return Boolean(childTree && childTree.info && childTree.info.merge);\n                };\n                Object.keys(storeObject).forEach(function (storeFieldName) {\n                    // If a merge function was defined for this field, trust that it\n                    // did the right thing about (not) clobbering data. If the field\n                    // has no selection set, it's a scalar field, so it doesn't need\n                    // a merge function (even if it's an object, like JSON data).\n                    if (hasSelectionSet_1(storeFieldName) &&\n                        !hasMergeFunction_1(storeFieldName)) {\n                        warnAboutDataLoss(entityRef, storeObject, storeFieldName, context.store);\n                    }\n                });\n            }\n            store.merge(dataId, storeObject);\n        });\n        // Any IDs written explicitly to the cache will be retained as\n        // reachable root IDs for garbage collection purposes. Although this\n        // logic includes root IDs like ROOT_QUERY and ROOT_MUTATION, their\n        // retainment counts are effectively ignored because cache.gc() always\n        // includes them in its root ID set.\n        store.retain(ref.__ref);\n        return ref;\n    };\n    StoreWriter.prototype.processSelectionSet = function (_a) {\n        var _this = this;\n        var dataId = _a.dataId, result = _a.result, selectionSet = _a.selectionSet, context = _a.context, \n        // This object allows processSelectionSet to report useful information\n        // to its callers without explicitly returning that information.\n        mergeTree = _a.mergeTree;\n        var policies = this.cache.policies;\n        // This variable will be repeatedly updated using context.merge to\n        // accumulate all fields that need to be written into the store.\n        var incoming = Object.create(null);\n        // If typename was not passed in, infer it. Note that typename is\n        // always passed in for tricky-to-infer cases such as \"Query\" for\n        // ROOT_QUERY.\n        var typename = (dataId && policies.rootTypenamesById[dataId]) ||\n            getTypenameFromResult(result, selectionSet, context.fragmentMap) ||\n            (dataId && context.store.get(dataId, \"__typename\"));\n        if (\"string\" === typeof typename) {\n            incoming.__typename = typename;\n        }\n        // This readField function will be passed as context.readField in the\n        // KeyFieldsContext object created within policies.identify (called below).\n        // In addition to reading from the existing context.store (thanks to the\n        // policies.readField(options, context) line at the very bottom), this\n        // version of readField can read from Reference objects that are currently\n        // pending in context.incomingById, which is important whenever keyFields\n        // need to be extracted from a child object that processSelectionSet has\n        // turned into a Reference.\n        var readField = function () {\n            var options = normalizeReadFieldOptions(arguments, incoming, context.variables);\n            if (isReference(options.from)) {\n                var info = context.incomingById.get(options.from.__ref);\n                if (info) {\n                    var result_1 = policies.readField(__assign(__assign({}, options), { from: info.storeObject }), context);\n                    if (result_1 !== void 0) {\n                        return result_1;\n                    }\n                }\n            }\n            return policies.readField(options, context);\n        };\n        var fieldNodeSet = new Set();\n        this.flattenFields(selectionSet, result, \n        // This WriteContext will be the default context value for fields returned\n        // by the flattenFields method, but some fields may be assigned a modified\n        // context, depending on the presence of @client and other directives.\n        context, typename).forEach(function (context, field) {\n            var _a;\n            var resultFieldKey = resultKeyNameFromField(field);\n            var value = result[resultFieldKey];\n            fieldNodeSet.add(field);\n            if (value !== void 0) {\n                var storeFieldName = policies.getStoreFieldName({\n                    typename: typename,\n                    fieldName: field.name.value,\n                    field: field,\n                    variables: context.variables,\n                });\n                var childTree = getChildMergeTree(mergeTree, storeFieldName);\n                var incomingValue = _this.processFieldValue(value, field, \n                // Reset context.clientOnly and context.deferred to their default\n                // values before processing nested selection sets.\n                field.selectionSet ?\n                    getContextFlavor(context, false, false)\n                    : context, childTree);\n                // To determine if this field holds a child object with a merge function\n                // defined in its type policy (see PR #7070), we need to figure out the\n                // child object's __typename.\n                var childTypename = void 0;\n                // The field's value can be an object that has a __typename only if the\n                // field has a selection set. Otherwise incomingValue is scalar.\n                if (field.selectionSet &&\n                    (isReference(incomingValue) || storeValueIsStoreObject(incomingValue))) {\n                    childTypename = readField(\"__typename\", incomingValue);\n                }\n                var merge = policies.getMergeFunction(typename, field.name.value, childTypename);\n                if (merge) {\n                    childTree.info = {\n                        // TODO Check compatibility against any existing childTree.field?\n                        field: field,\n                        typename: typename,\n                        merge: merge,\n                    };\n                }\n                else {\n                    maybeRecycleChildMergeTree(mergeTree, storeFieldName);\n                }\n                incoming = context.merge(incoming, (_a = {},\n                    _a[storeFieldName] = incomingValue,\n                    _a));\n            }\n            else if (globalThis.__DEV__ !== false &&\n                !context.clientOnly &&\n                !context.deferred &&\n                !addTypenameToDocument.added(field) &&\n                // If the field has a read function, it may be a synthetic field or\n                // provide a default value, so its absence from the written data should\n                // not be cause for alarm.\n                !policies.getReadFunction(typename, field.name.value)) {\n                globalThis.__DEV__ !== false && invariant.error(12, resultKeyNameFromField(field), result);\n            }\n        });\n        // Identify the result object, even if dataId was already provided,\n        // since we always need keyObject below.\n        try {\n            var _b = policies.identify(result, {\n                typename: typename,\n                selectionSet: selectionSet,\n                fragmentMap: context.fragmentMap,\n                storeObject: incoming,\n                readField: readField,\n            }), id = _b[0], keyObject = _b[1];\n            // If dataId was not provided, fall back to the id just generated by\n            // policies.identify.\n            dataId = dataId || id;\n            // Write any key fields that were used during identification, even if\n            // they were not mentioned in the original query.\n            if (keyObject) {\n                // TODO Reverse the order of the arguments?\n                incoming = context.merge(incoming, keyObject);\n            }\n        }\n        catch (e) {\n            // If dataId was provided, tolerate failure of policies.identify.\n            if (!dataId)\n                throw e;\n        }\n        if (\"string\" === typeof dataId) {\n            var dataRef = makeReference(dataId);\n            // Avoid processing the same entity object using the same selection\n            // set more than once. We use an array instead of a Set since most\n            // entity IDs will be written using only one selection set, so the\n            // size of this array is likely to be very small, meaning indexOf is\n            // likely to be faster than Set.prototype.has.\n            var sets = context.written[dataId] || (context.written[dataId] = []);\n            if (sets.indexOf(selectionSet) >= 0)\n                return dataRef;\n            sets.push(selectionSet);\n            // If we're about to write a result object into the store, but we\n            // happen to know that the exact same (===) result object would be\n            // returned if we were to reread the result with the same inputs,\n            // then we can skip the rest of the processSelectionSet work for\n            // this object, and immediately return a Reference to it.\n            if (this.reader &&\n                this.reader.isFresh(result, dataRef, selectionSet, context)) {\n                return dataRef;\n            }\n            var previous_1 = context.incomingById.get(dataId);\n            if (previous_1) {\n                previous_1.storeObject = context.merge(previous_1.storeObject, incoming);\n                previous_1.mergeTree = mergeMergeTrees(previous_1.mergeTree, mergeTree);\n                fieldNodeSet.forEach(function (field) { return previous_1.fieldNodeSet.add(field); });\n            }\n            else {\n                context.incomingById.set(dataId, {\n                    storeObject: incoming,\n                    // Save a reference to mergeTree only if it is not empty, because\n                    // empty MergeTrees may be recycled by maybeRecycleChildMergeTree and\n                    // reused for entirely different parts of the result tree.\n                    mergeTree: mergeTreeIsEmpty(mergeTree) ? void 0 : mergeTree,\n                    fieldNodeSet: fieldNodeSet,\n                });\n            }\n            return dataRef;\n        }\n        return incoming;\n    };\n    StoreWriter.prototype.processFieldValue = function (value, field, context, mergeTree) {\n        var _this = this;\n        if (!field.selectionSet || value === null) {\n            // In development, we need to clone scalar values so that they can be\n            // safely frozen with maybeDeepFreeze in readFromStore.ts. In production,\n            // it's cheaper to store the scalar values directly in the cache.\n            return globalThis.__DEV__ !== false ? cloneDeep(value) : value;\n        }\n        if (isArray(value)) {\n            return value.map(function (item, i) {\n                var value = _this.processFieldValue(item, field, context, getChildMergeTree(mergeTree, i));\n                maybeRecycleChildMergeTree(mergeTree, i);\n                return value;\n            });\n        }\n        return this.processSelectionSet({\n            result: value,\n            selectionSet: field.selectionSet,\n            context: context,\n            mergeTree: mergeTree,\n        });\n    };\n    // Implements https://spec.graphql.org/draft/#sec-Field-Collection, but with\n    // some additions for tracking @client and @defer directives.\n    StoreWriter.prototype.flattenFields = function (selectionSet, result, context, typename) {\n        if (typename === void 0) { typename = getTypenameFromResult(result, selectionSet, context.fragmentMap); }\n        var fieldMap = new Map();\n        var policies = this.cache.policies;\n        var limitingTrie = new Trie(false); // No need for WeakMap, since limitingTrie does not escape.\n        (function flatten(selectionSet, inheritedContext) {\n            var visitedNode = limitingTrie.lookup(selectionSet, \n            // Because we take inheritedClientOnly and inheritedDeferred into\n            // consideration here (in addition to selectionSet), it's possible for\n            // the same selection set to be flattened more than once, if it appears\n            // in the query with different @client and/or @directive configurations.\n            inheritedContext.clientOnly, inheritedContext.deferred);\n            if (visitedNode.visited)\n                return;\n            visitedNode.visited = true;\n            selectionSet.selections.forEach(function (selection) {\n                if (!shouldInclude(selection, context.variables))\n                    return;\n                var clientOnly = inheritedContext.clientOnly, deferred = inheritedContext.deferred;\n                if (\n                // Since the presence of @client or @defer on this field can only\n                // cause clientOnly or deferred to become true, we can skip the\n                // forEach loop if both clientOnly and deferred are already true.\n                !(clientOnly && deferred) &&\n                    isNonEmptyArray(selection.directives)) {\n                    selection.directives.forEach(function (dir) {\n                        var name = dir.name.value;\n                        if (name === \"client\")\n                            clientOnly = true;\n                        if (name === \"defer\") {\n                            var args = argumentsObjectFromField(dir, context.variables);\n                            // The @defer directive takes an optional args.if boolean\n                            // argument, similar to @include(if: boolean). Note that\n                            // @defer(if: false) does not make context.deferred false, but\n                            // instead behaves as if there was no @defer directive.\n                            if (!args || args.if !== false) {\n                                deferred = true;\n                            }\n                            // TODO In the future, we may want to record args.label using\n                            // context.deferred, if a label is specified.\n                        }\n                    });\n                }\n                if (isField(selection)) {\n                    var existing = fieldMap.get(selection);\n                    if (existing) {\n                        // If this field has been visited along another recursive path\n                        // before, the final context should have clientOnly or deferred set\n                        // to true only if *all* paths have the directive (hence the &&).\n                        clientOnly = clientOnly && existing.clientOnly;\n                        deferred = deferred && existing.deferred;\n                    }\n                    fieldMap.set(selection, getContextFlavor(context, clientOnly, deferred));\n                }\n                else {\n                    var fragment = getFragmentFromSelection(selection, context.lookupFragment);\n                    if (!fragment && selection.kind === Kind.FRAGMENT_SPREAD) {\n                        throw newInvariantError(13, selection.name.value);\n                    }\n                    if (fragment &&\n                        policies.fragmentMatches(fragment, typename, result, context.variables)) {\n                        flatten(fragment.selectionSet, getContextFlavor(context, clientOnly, deferred));\n                    }\n                }\n            });\n        })(selectionSet, context);\n        return fieldMap;\n    };\n    StoreWriter.prototype.applyMerges = function (mergeTree, existing, incoming, context, getStorageArgs) {\n        var _a;\n        var _this = this;\n        if (mergeTree.map.size && !isReference(incoming)) {\n            var e_1 = \n            // Items in the same position in different arrays are not\n            // necessarily related to each other, so when incoming is an array\n            // we process its elements as if there was no existing data.\n            (!isArray(incoming) &&\n                // Likewise, existing must be either a Reference or a StoreObject\n                // in order for its fields to be safe to merge with the fields of\n                // the incoming object.\n                (isReference(existing) || storeValueIsStoreObject(existing))) ?\n                existing\n                : void 0;\n            // This narrowing is implied by mergeTree.map.size > 0 and\n            // !isReference(incoming), though TypeScript understandably cannot\n            // hope to infer this type.\n            var i_1 = incoming;\n            // The options.storage objects provided to read and merge functions\n            // are derived from the identity of the parent object plus a\n            // sequence of storeFieldName strings/numbers identifying the nested\n            // field name path of each field value to be merged.\n            if (e_1 && !getStorageArgs) {\n                getStorageArgs = [isReference(e_1) ? e_1.__ref : e_1];\n            }\n            // It's possible that applying merge functions to this subtree will\n            // not change the incoming data, so this variable tracks the fields\n            // that did change, so we can create a new incoming object when (and\n            // only when) at least one incoming field has changed. We use a Map\n            // to preserve the type of numeric keys.\n            var changedFields_1;\n            var getValue_1 = function (from, name) {\n                return (isArray(from) ?\n                    typeof name === \"number\" ?\n                        from[name]\n                        : void 0\n                    : context.store.getFieldValue(from, String(name)));\n            };\n            mergeTree.map.forEach(function (childTree, storeFieldName) {\n                var eVal = getValue_1(e_1, storeFieldName);\n                var iVal = getValue_1(i_1, storeFieldName);\n                // If we have no incoming data, leave any existing data untouched.\n                if (void 0 === iVal)\n                    return;\n                if (getStorageArgs) {\n                    getStorageArgs.push(storeFieldName);\n                }\n                var aVal = _this.applyMerges(childTree, eVal, iVal, context, getStorageArgs);\n                if (aVal !== iVal) {\n                    changedFields_1 = changedFields_1 || new Map();\n                    changedFields_1.set(storeFieldName, aVal);\n                }\n                if (getStorageArgs) {\n                    invariant(getStorageArgs.pop() === storeFieldName);\n                }\n            });\n            if (changedFields_1) {\n                // Shallow clone i so we can add changed fields to it.\n                incoming = (isArray(i_1) ? i_1.slice(0) : __assign({}, i_1));\n                changedFields_1.forEach(function (value, name) {\n                    incoming[name] = value;\n                });\n            }\n        }\n        if (mergeTree.info) {\n            return this.cache.policies.runMergeFunction(existing, incoming, mergeTree.info, context, getStorageArgs && (_a = context.store).getStorage.apply(_a, getStorageArgs));\n        }\n        return incoming;\n    };\n    return StoreWriter;\n}());\nexport { StoreWriter };\nvar emptyMergeTreePool = [];\nfunction getChildMergeTree(_a, name) {\n    var map = _a.map;\n    if (!map.has(name)) {\n        map.set(name, emptyMergeTreePool.pop() || { map: new Map() });\n    }\n    return map.get(name);\n}\nfunction mergeMergeTrees(left, right) {\n    if (left === right || !right || mergeTreeIsEmpty(right))\n        return left;\n    if (!left || mergeTreeIsEmpty(left))\n        return right;\n    var info = left.info && right.info ? __assign(__assign({}, left.info), right.info) : left.info || right.info;\n    var needToMergeMaps = left.map.size && right.map.size;\n    var map = needToMergeMaps ? new Map()\n        : left.map.size ? left.map\n            : right.map;\n    var merged = { info: info, map: map };\n    if (needToMergeMaps) {\n        var remainingRightKeys_1 = new Set(right.map.keys());\n        left.map.forEach(function (leftTree, key) {\n            merged.map.set(key, mergeMergeTrees(leftTree, right.map.get(key)));\n            remainingRightKeys_1.delete(key);\n        });\n        remainingRightKeys_1.forEach(function (key) {\n            merged.map.set(key, mergeMergeTrees(right.map.get(key), left.map.get(key)));\n        });\n    }\n    return merged;\n}\nfunction mergeTreeIsEmpty(tree) {\n    return !tree || !(tree.info || tree.map.size);\n}\nfunction maybeRecycleChildMergeTree(_a, name) {\n    var map = _a.map;\n    var childTree = map.get(name);\n    if (childTree && mergeTreeIsEmpty(childTree)) {\n        emptyMergeTreePool.push(childTree);\n        map.delete(name);\n    }\n}\nvar warnings = new Set();\n// Note that this function is unused in production, and thus should be\n// pruned by any well-configured minifier.\nfunction warnAboutDataLoss(existingRef, incomingObj, storeFieldName, store) {\n    var getChild = function (objOrRef) {\n        var child = store.getFieldValue(objOrRef, storeFieldName);\n        return typeof child === \"object\" && child;\n    };\n    var existing = getChild(existingRef);\n    if (!existing)\n        return;\n    var incoming = getChild(incomingObj);\n    if (!incoming)\n        return;\n    // It's always safe to replace a reference, since it refers to data\n    // safely stored elsewhere.\n    if (isReference(existing))\n        return;\n    // If the values are structurally equivalent, we do not need to worry\n    // about incoming replacing existing.\n    if (equal(existing, incoming))\n        return;\n    // If we're replacing every key of the existing object, then the\n    // existing data would be overwritten even if the objects were\n    // normalized, so warning would not be helpful here.\n    if (Object.keys(existing).every(function (key) { return store.getFieldValue(incoming, key) !== void 0; })) {\n        return;\n    }\n    var parentType = store.getFieldValue(existingRef, \"__typename\") ||\n        store.getFieldValue(incomingObj, \"__typename\");\n    var fieldName = fieldNameFromStoreName(storeFieldName);\n    var typeDotName = \"\".concat(parentType, \".\").concat(fieldName);\n    // Avoid warning more than once for the same type and field name.\n    if (warnings.has(typeDotName))\n        return;\n    warnings.add(typeDotName);\n    var childTypenames = [];\n    // Arrays do not have __typename fields, and always need a custom merge\n    // function, even if their elements are normalized entities.\n    if (!isArray(existing) && !isArray(incoming)) {\n        [existing, incoming].forEach(function (child) {\n            var typename = store.getFieldValue(child, \"__typename\");\n            if (typeof typename === \"string\" && !childTypenames.includes(typename)) {\n                childTypenames.push(typename);\n            }\n        });\n    }\n    globalThis.__DEV__ !== false && invariant.warn(14, fieldName, parentType, childTypenames.length ?\n        \"either ensure all objects of type \" +\n            childTypenames.join(\" and \") +\n            \" have an ID or a custom merge function, or \"\n        : \"\", typeDotName, existing, incoming);\n}\n//# sourceMappingURL=writeToStore.js.map", "import { __assign, __extends } from \"tslib\";\nimport { invariant } from \"../../utilities/globals/index.js\";\n// Make builtins like Map and Set safe to use with non-extensible objects.\nimport \"./fixPolyfills.js\";\nimport { wrap } from \"optimism\";\nimport { equal } from \"@wry/equality\";\nimport { ApolloCache } from \"../core/cache.js\";\nimport { MissingFieldError } from \"../core/types/common.js\";\nimport { addTypenameToDocument, isReference, DocumentTransform, canonicalStringify, print, cacheSizes, } from \"../../utilities/index.js\";\nimport { StoreReader } from \"./readFromStore.js\";\nimport { StoreWriter } from \"./writeToStore.js\";\nimport { EntityStore, supportsResultCaching } from \"./entityStore.js\";\nimport { makeVar, forgetCache, recallCache } from \"./reactiveVars.js\";\nimport { Policies } from \"./policies.js\";\nimport { hasOwn, normalizeConfig, shouldCanonizeResults } from \"./helpers.js\";\nimport { getInMemoryCacheMemoryInternals } from \"../../utilities/caching/getMemoryInternals.js\";\nvar InMemoryCache = /** @class */ (function (_super) {\n    __extends(InMemoryCache, _super);\n    function InMemoryCache(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this) || this;\n        _this.watches = new Set();\n        _this.addTypenameTransform = new DocumentTransform(addTypenameToDocument);\n        // Override the default value, since InMemoryCache result objects are frozen\n        // in development and expected to remain logically immutable in production.\n        _this.assumeImmutableResults = true;\n        _this.makeVar = makeVar;\n        _this.txCount = 0;\n        _this.config = normalizeConfig(config);\n        _this.addTypename = !!_this.config.addTypename;\n        _this.policies = new Policies({\n            cache: _this,\n            dataIdFromObject: _this.config.dataIdFromObject,\n            possibleTypes: _this.config.possibleTypes,\n            typePolicies: _this.config.typePolicies,\n        });\n        _this.init();\n        return _this;\n    }\n    InMemoryCache.prototype.init = function () {\n        // Passing { resultCaching: false } in the InMemoryCache constructor options\n        // will completely disable dependency tracking, which will improve memory\n        // usage but worsen the performance of repeated reads.\n        var rootStore = (this.data = new EntityStore.Root({\n            policies: this.policies,\n            resultCaching: this.config.resultCaching,\n        }));\n        // When no optimistic writes are currently active, cache.optimisticData ===\n        // cache.data, so there are no additional layers on top of the actual data.\n        // When an optimistic update happens, this.optimisticData will become a\n        // linked list of EntityStore Layer objects that terminates with the\n        // original this.data cache object.\n        this.optimisticData = rootStore.stump;\n        this.resetResultCache();\n    };\n    InMemoryCache.prototype.resetResultCache = function (resetResultIdentities) {\n        var _this = this;\n        var previousReader = this.storeReader;\n        var fragments = this.config.fragments;\n        // The StoreWriter is mostly stateless and so doesn't really need to be\n        // reset, but it does need to have its writer.storeReader reference updated,\n        // so it's simpler to update this.storeWriter as well.\n        this.storeWriter = new StoreWriter(this, (this.storeReader = new StoreReader({\n            cache: this,\n            addTypename: this.addTypename,\n            resultCacheMaxSize: this.config.resultCacheMaxSize,\n            canonizeResults: shouldCanonizeResults(this.config),\n            canon: resetResultIdentities ? void 0 : (previousReader && previousReader.canon),\n            fragments: fragments,\n        })), fragments);\n        this.maybeBroadcastWatch = wrap(function (c, options) {\n            return _this.broadcastWatch(c, options);\n        }, {\n            max: this.config.resultCacheMaxSize ||\n                cacheSizes[\"inMemoryCache.maybeBroadcastWatch\"] ||\n                5000 /* defaultCacheSizes[\"inMemoryCache.maybeBroadcastWatch\"] */,\n            makeCacheKey: function (c) {\n                // Return a cache key (thus enabling result caching) only if we're\n                // currently using a data store that can track cache dependencies.\n                var store = c.optimistic ? _this.optimisticData : _this.data;\n                if (supportsResultCaching(store)) {\n                    var optimistic = c.optimistic, id = c.id, variables = c.variables;\n                    return store.makeCacheKey(c.query, \n                    // Different watches can have the same query, optimistic\n                    // status, rootId, and variables, but if their callbacks are\n                    // different, the (identical) result needs to be delivered to\n                    // each distinct callback. The easiest way to achieve that\n                    // separation is to include c.callback in the cache key for\n                    // maybeBroadcastWatch calls. See issue #5733.\n                    c.callback, canonicalStringify({ optimistic: optimistic, id: id, variables: variables }));\n                }\n            },\n        });\n        // Since we have thrown away all the cached functions that depend on the\n        // CacheGroup dependencies maintained by EntityStore, we should also reset\n        // all CacheGroup dependency information.\n        new Set([this.data.group, this.optimisticData.group]).forEach(function (group) {\n            return group.resetCaching();\n        });\n    };\n    InMemoryCache.prototype.restore = function (data) {\n        this.init();\n        // Since calling this.init() discards/replaces the entire StoreReader, along\n        // with the result caches it maintains, this.data.replace(data) won't have\n        // to bother deleting the old data.\n        if (data)\n            this.data.replace(data);\n        return this;\n    };\n    InMemoryCache.prototype.extract = function (optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return (optimistic ? this.optimisticData : this.data).extract();\n    };\n    InMemoryCache.prototype.read = function (options) {\n        var \n        // Since read returns data or null, without any additional metadata\n        // about whether/where there might have been missing fields, the\n        // default behavior cannot be returnPartialData = true (like it is\n        // for the diff method), since defaulting to true would violate the\n        // integrity of the T in the return type. However, partial data may\n        // be useful in some cases, so returnPartialData:true may be\n        // specified explicitly.\n        _a = options.returnPartialData, \n        // Since read returns data or null, without any additional metadata\n        // about whether/where there might have been missing fields, the\n        // default behavior cannot be returnPartialData = true (like it is\n        // for the diff method), since defaulting to true would violate the\n        // integrity of the T in the return type. However, partial data may\n        // be useful in some cases, so returnPartialData:true may be\n        // specified explicitly.\n        returnPartialData = _a === void 0 ? false : _a;\n        try {\n            return (this.storeReader.diffQueryAgainstStore(__assign(__assign({}, options), { store: options.optimistic ? this.optimisticData : this.data, config: this.config, returnPartialData: returnPartialData })).result || null);\n        }\n        catch (e) {\n            if (e instanceof MissingFieldError) {\n                // Swallow MissingFieldError and return null, so callers do not need to\n                // worry about catching \"normal\" exceptions resulting from incomplete\n                // cache data. Unexpected errors will be re-thrown. If you need more\n                // information about which fields were missing, use cache.diff instead,\n                // and examine diffResult.missing.\n                return null;\n            }\n            throw e;\n        }\n    };\n    InMemoryCache.prototype.write = function (options) {\n        try {\n            ++this.txCount;\n            return this.storeWriter.writeToStore(this.data, options);\n        }\n        finally {\n            if (!--this.txCount && options.broadcast !== false) {\n                this.broadcastWatches();\n            }\n        }\n    };\n    InMemoryCache.prototype.modify = function (options) {\n        if (hasOwn.call(options, \"id\") && !options.id) {\n            // To my knowledge, TypeScript does not currently provide a way to\n            // enforce that an optional property?:type must *not* be undefined\n            // when present. That ability would be useful here, because we want\n            // options.id to default to ROOT_QUERY only when no options.id was\n            // provided. If the caller attempts to pass options.id with a\n            // falsy/undefined value (perhaps because cache.identify failed), we\n            // should not assume the goal was to modify the ROOT_QUERY object.\n            // We could throw, but it seems natural to return false to indicate\n            // that nothing was modified.\n            return false;\n        }\n        var store = ((options.optimistic) // Defaults to false.\n        ) ?\n            this.optimisticData\n            : this.data;\n        try {\n            ++this.txCount;\n            return store.modify(options.id || \"ROOT_QUERY\", options.fields);\n        }\n        finally {\n            if (!--this.txCount && options.broadcast !== false) {\n                this.broadcastWatches();\n            }\n        }\n    };\n    InMemoryCache.prototype.diff = function (options) {\n        return this.storeReader.diffQueryAgainstStore(__assign(__assign({}, options), { store: options.optimistic ? this.optimisticData : this.data, rootId: options.id || \"ROOT_QUERY\", config: this.config }));\n    };\n    InMemoryCache.prototype.watch = function (watch) {\n        var _this = this;\n        if (!this.watches.size) {\n            // In case we previously called forgetCache(this) because\n            // this.watches became empty (see below), reattach this cache to any\n            // reactive variables on which it previously depended. It might seem\n            // paradoxical that we're able to recall something we supposedly\n            // forgot, but the point of calling forgetCache(this) is to silence\n            // useless broadcasts while this.watches is empty, and to allow the\n            // cache to be garbage collected. If, however, we manage to call\n            // recallCache(this) here, this cache object must not have been\n            // garbage collected yet, and should resume receiving updates from\n            // reactive variables, now that it has a watcher to notify.\n            recallCache(this);\n        }\n        this.watches.add(watch);\n        if (watch.immediate) {\n            this.maybeBroadcastWatch(watch);\n        }\n        return function () {\n            // Once we remove the last watch from this.watches, cache.broadcastWatches\n            // no longer does anything, so we preemptively tell the reactive variable\n            // system to exclude this cache from future broadcasts.\n            if (_this.watches.delete(watch) && !_this.watches.size) {\n                forgetCache(_this);\n            }\n            // Remove this watch from the LRU cache managed by the\n            // maybeBroadcastWatch OptimisticWrapperFunction, to prevent memory\n            // leaks involving the closure of watch.callback.\n            _this.maybeBroadcastWatch.forget(watch);\n        };\n    };\n    InMemoryCache.prototype.gc = function (options) {\n        var _a;\n        canonicalStringify.reset();\n        print.reset();\n        this.addTypenameTransform.resetCache();\n        (_a = this.config.fragments) === null || _a === void 0 ? void 0 : _a.resetCaches();\n        var ids = this.optimisticData.gc();\n        if (options && !this.txCount) {\n            if (options.resetResultCache) {\n                this.resetResultCache(options.resetResultIdentities);\n            }\n            else if (options.resetResultIdentities) {\n                this.storeReader.resetCanon();\n            }\n        }\n        return ids;\n    };\n    // Call this method to ensure the given root ID remains in the cache after\n    // garbage collection, along with its transitive child entities. Note that\n    // the cache automatically retains all directly written entities. By default,\n    // the retainment persists after optimistic updates are removed. Pass true\n    // for the optimistic argument if you would prefer for the retainment to be\n    // discarded when the top-most optimistic layer is removed. Returns the\n    // resulting (non-negative) retainment count.\n    InMemoryCache.prototype.retain = function (rootId, optimistic) {\n        return (optimistic ? this.optimisticData : this.data).retain(rootId);\n    };\n    // Call this method to undo the effect of the retain method, above. Once the\n    // retainment count falls to zero, the given ID will no longer be preserved\n    // during garbage collection, though it may still be preserved by other safe\n    // entities that refer to it. Returns the resulting (non-negative) retainment\n    // count, in case that's useful.\n    InMemoryCache.prototype.release = function (rootId, optimistic) {\n        return (optimistic ? this.optimisticData : this.data).release(rootId);\n    };\n    // Returns the canonical ID for a given StoreObject, obeying typePolicies\n    // and keyFields (and dataIdFromObject, if you still use that). At minimum,\n    // the object must contain a __typename and any primary key fields required\n    // to identify entities of that type. If you pass a query result object, be\n    // sure that none of the primary key fields have been renamed by aliasing.\n    // If you pass a Reference object, its __ref ID string will be returned.\n    InMemoryCache.prototype.identify = function (object) {\n        if (isReference(object))\n            return object.__ref;\n        try {\n            return this.policies.identify(object)[0];\n        }\n        catch (e) {\n            globalThis.__DEV__ !== false && invariant.warn(e);\n        }\n    };\n    InMemoryCache.prototype.evict = function (options) {\n        if (!options.id) {\n            if (hasOwn.call(options, \"id\")) {\n                // See comment in modify method about why we return false when\n                // options.id exists but is falsy/undefined.\n                return false;\n            }\n            options = __assign(__assign({}, options), { id: \"ROOT_QUERY\" });\n        }\n        try {\n            // It's unlikely that the eviction will end up invoking any other\n            // cache update operations while it's running, but {in,de}crementing\n            // this.txCount still seems like a good idea, for uniformity with\n            // the other update methods.\n            ++this.txCount;\n            // Pass this.data as a limit on the depth of the eviction, so evictions\n            // during optimistic updates (when this.data is temporarily set equal to\n            // this.optimisticData) do not escape their optimistic Layer.\n            return this.optimisticData.evict(options, this.data);\n        }\n        finally {\n            if (!--this.txCount && options.broadcast !== false) {\n                this.broadcastWatches();\n            }\n        }\n    };\n    InMemoryCache.prototype.reset = function (options) {\n        var _this = this;\n        this.init();\n        canonicalStringify.reset();\n        if (options && options.discardWatches) {\n            // Similar to what happens in the unsubscribe function returned by\n            // cache.watch, applied to all current watches.\n            this.watches.forEach(function (watch) { return _this.maybeBroadcastWatch.forget(watch); });\n            this.watches.clear();\n            forgetCache(this);\n        }\n        else {\n            // Calling this.init() above unblocks all maybeBroadcastWatch caching, so\n            // this.broadcastWatches() triggers a broadcast to every current watcher\n            // (letting them know their data is now missing). This default behavior is\n            // convenient because it means the watches do not have to be manually\n            // reestablished after resetting the cache. To prevent this broadcast and\n            // cancel all watches, pass true for options.discardWatches.\n            this.broadcastWatches();\n        }\n        return Promise.resolve();\n    };\n    InMemoryCache.prototype.removeOptimistic = function (idToRemove) {\n        var newOptimisticData = this.optimisticData.removeLayer(idToRemove);\n        if (newOptimisticData !== this.optimisticData) {\n            this.optimisticData = newOptimisticData;\n            this.broadcastWatches();\n        }\n    };\n    InMemoryCache.prototype.batch = function (options) {\n        var _this = this;\n        var update = options.update, _a = options.optimistic, optimistic = _a === void 0 ? true : _a, removeOptimistic = options.removeOptimistic, onWatchUpdated = options.onWatchUpdated;\n        var updateResult;\n        var perform = function (layer) {\n            var _a = _this, data = _a.data, optimisticData = _a.optimisticData;\n            ++_this.txCount;\n            if (layer) {\n                _this.data = _this.optimisticData = layer;\n            }\n            try {\n                return (updateResult = update(_this));\n            }\n            finally {\n                --_this.txCount;\n                _this.data = data;\n                _this.optimisticData = optimisticData;\n            }\n        };\n        var alreadyDirty = new Set();\n        if (onWatchUpdated && !this.txCount) {\n            // If an options.onWatchUpdated callback is provided, we want to call it\n            // with only the Cache.WatchOptions objects affected by options.update,\n            // but there might be dirty watchers already waiting to be broadcast that\n            // have nothing to do with the update. To prevent including those watchers\n            // in the post-update broadcast, we perform this initial broadcast to\n            // collect the dirty watchers, so we can re-dirty them later, after the\n            // post-update broadcast, allowing them to receive their pending\n            // broadcasts the next time broadcastWatches is called, just as they would\n            // if we never called cache.batch.\n            this.broadcastWatches(__assign(__assign({}, options), { onWatchUpdated: function (watch) {\n                    alreadyDirty.add(watch);\n                    return false;\n                } }));\n        }\n        if (typeof optimistic === \"string\") {\n            // Note that there can be multiple layers with the same optimistic ID.\n            // When removeOptimistic(id) is called for that id, all matching layers\n            // will be removed, and the remaining layers will be reapplied.\n            this.optimisticData = this.optimisticData.addLayer(optimistic, perform);\n        }\n        else if (optimistic === false) {\n            // Ensure both this.data and this.optimisticData refer to the root\n            // (non-optimistic) layer of the cache during the update. Note that\n            // this.data could be a Layer if we are currently executing an optimistic\n            // update function, but otherwise will always be an EntityStore.Root\n            // instance.\n            perform(this.data);\n        }\n        else {\n            // Otherwise, leave this.data and this.optimisticData unchanged and run\n            // the update with broadcast batching.\n            perform();\n        }\n        if (typeof removeOptimistic === \"string\") {\n            this.optimisticData = this.optimisticData.removeLayer(removeOptimistic);\n        }\n        // Note: if this.txCount > 0, then alreadyDirty.size === 0, so this code\n        // takes the else branch and calls this.broadcastWatches(options), which\n        // does nothing when this.txCount > 0.\n        if (onWatchUpdated && alreadyDirty.size) {\n            this.broadcastWatches(__assign(__assign({}, options), { onWatchUpdated: function (watch, diff) {\n                    var result = onWatchUpdated.call(this, watch, diff);\n                    if (result !== false) {\n                        // Since onWatchUpdated did not return false, this diff is\n                        // about to be broadcast to watch.callback, so we don't need\n                        // to re-dirty it with the other alreadyDirty watches below.\n                        alreadyDirty.delete(watch);\n                    }\n                    return result;\n                } }));\n            // Silently re-dirty any watches that were already dirty before the update\n            // was performed, and were not broadcast just now.\n            if (alreadyDirty.size) {\n                alreadyDirty.forEach(function (watch) { return _this.maybeBroadcastWatch.dirty(watch); });\n            }\n        }\n        else {\n            // If alreadyDirty is empty or we don't have an onWatchUpdated\n            // function, we don't need to go to the trouble of wrapping\n            // options.onWatchUpdated.\n            this.broadcastWatches(options);\n        }\n        return updateResult;\n    };\n    InMemoryCache.prototype.performTransaction = function (update, optimisticId) {\n        return this.batch({\n            update: update,\n            optimistic: optimisticId || optimisticId !== null,\n        });\n    };\n    InMemoryCache.prototype.transformDocument = function (document) {\n        return this.addTypenameToDocument(this.addFragmentsToDocument(document));\n    };\n    InMemoryCache.prototype.broadcastWatches = function (options) {\n        var _this = this;\n        if (!this.txCount) {\n            this.watches.forEach(function (c) { return _this.maybeBroadcastWatch(c, options); });\n        }\n    };\n    InMemoryCache.prototype.addFragmentsToDocument = function (document) {\n        var fragments = this.config.fragments;\n        return fragments ? fragments.transform(document) : document;\n    };\n    InMemoryCache.prototype.addTypenameToDocument = function (document) {\n        if (this.addTypename) {\n            return this.addTypenameTransform.transformDocument(document);\n        }\n        return document;\n    };\n    // This method is wrapped by maybeBroadcastWatch, which is called by\n    // broadcastWatches, so that we compute and broadcast results only when\n    // the data that would be broadcast might have changed. It would be\n    // simpler to check for changes after recomputing a result but before\n    // broadcasting it, but this wrapping approach allows us to skip both\n    // the recomputation and the broadcast, in most cases.\n    InMemoryCache.prototype.broadcastWatch = function (c, options) {\n        var lastDiff = c.lastDiff;\n        // Both WatchOptions and DiffOptions extend ReadOptions, and DiffOptions\n        // currently requires no additional properties, so we can use c (a\n        // WatchOptions object) as DiffOptions, without having to allocate a new\n        // object, and without having to enumerate the relevant properties (query,\n        // variables, etc.) explicitly. There will be some additional properties\n        // (lastDiff, callback, etc.), but cache.diff ignores them.\n        var diff = this.diff(c);\n        if (options) {\n            if (c.optimistic && typeof options.optimistic === \"string\") {\n                diff.fromOptimisticTransaction = true;\n            }\n            if (options.onWatchUpdated &&\n                options.onWatchUpdated.call(this, c, diff, lastDiff) === false) {\n                // Returning false from the onWatchUpdated callback will prevent\n                // calling c.callback(diff) for this watcher.\n                return;\n            }\n        }\n        if (!lastDiff || !equal(lastDiff.result, diff.result)) {\n            c.callback((c.lastDiff = diff), lastDiff);\n        }\n    };\n    return InMemoryCache;\n}(ApolloCache));\nexport { InMemoryCache };\nif (globalThis.__DEV__ !== false) {\n    InMemoryCache.prototype.getMemoryInternals = getInMemoryCacheMemoryInternals;\n}\n//# sourceMappingURL=inMemoryCache.js.map", "import { __assign, __spreadArray } from \"tslib\";\nimport { visit } from \"graphql\";\nimport { wrap } from \"optimism\";\nimport { cacheSizes, getFragmentDefinitions, } from \"../../utilities/index.js\";\nimport { WeakCache } from \"@wry/caches\";\n// As long as createFragmentRegistry is not imported or used, the\n// FragmentRegistry example implementation provided below should not be bundled\n// (by tree-shaking bundlers like Rollup), because the implementation of\n// InMemoryCache refers only to the TypeScript interface FragmentRegistryAPI,\n// never the concrete implementation FragmentRegistry (which is deliberately not\n// exported from this module).\nexport function createFragmentRegistry() {\n    var fragments = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fragments[_i] = arguments[_i];\n    }\n    return new (FragmentRegistry.bind.apply(FragmentRegistry, __spreadArray([void 0], fragments, false)))();\n}\nvar FragmentRegistry = /** @class */ (function () {\n    // Call `createFragmentRegistry` instead of invoking the\n    // FragmentRegistry constructor directly. This reserves the constructor for\n    // future configuration of the FragmentRegistry.\n    function FragmentRegistry() {\n        var fragments = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            fragments[_i] = arguments[_i];\n        }\n        this.registry = Object.create(null);\n        this.resetCaches();\n        if (fragments.length) {\n            this.register.apply(this, fragments);\n        }\n    }\n    FragmentRegistry.prototype.register = function () {\n        var _this = this;\n        var fragments = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            fragments[_i] = arguments[_i];\n        }\n        var definitions = new Map();\n        fragments.forEach(function (doc) {\n            getFragmentDefinitions(doc).forEach(function (node) {\n                definitions.set(node.name.value, node);\n            });\n        });\n        definitions.forEach(function (node, name) {\n            if (node !== _this.registry[name]) {\n                _this.registry[name] = node;\n                _this.invalidate(name);\n            }\n        });\n        return this;\n    };\n    // Overridden in the resetCaches method below.\n    FragmentRegistry.prototype.invalidate = function (name) { };\n    FragmentRegistry.prototype.resetCaches = function () {\n        var proto = FragmentRegistry.prototype;\n        this.invalidate = (this.lookup = wrap(proto.lookup.bind(this), {\n            makeCacheKey: function (arg) { return arg; },\n            max: cacheSizes[\"fragmentRegistry.lookup\"] ||\n                1000 /* defaultCacheSizes[\"fragmentRegistry.lookup\"] */,\n        })).dirty; // This dirty function is bound to the wrapped lookup method.\n        this.transform = wrap(proto.transform.bind(this), {\n            cache: WeakCache,\n            max: cacheSizes[\"fragmentRegistry.transform\"] ||\n                2000 /* defaultCacheSizes[\"fragmentRegistry.transform\"] */,\n        });\n        this.findFragmentSpreads = wrap(proto.findFragmentSpreads.bind(this), {\n            cache: WeakCache,\n            max: cacheSizes[\"fragmentRegistry.findFragmentSpreads\"] ||\n                4000 /* defaultCacheSizes[\"fragmentRegistry.findFragmentSpreads\"] */,\n        });\n    };\n    /*\n     * Note:\n     * This method is only memoized so it can serve as a dependency to `tranform`,\n     * so calling `invalidate` will invalidate cache entries for `transform`.\n     */\n    FragmentRegistry.prototype.lookup = function (fragmentName) {\n        return this.registry[fragmentName] || null;\n    };\n    FragmentRegistry.prototype.transform = function (document) {\n        var _this = this;\n        var defined = new Map();\n        getFragmentDefinitions(document).forEach(function (def) {\n            defined.set(def.name.value, def);\n        });\n        var unbound = new Set();\n        var enqueue = function (spreadName) {\n            if (!defined.has(spreadName)) {\n                unbound.add(spreadName);\n            }\n        };\n        var enqueueChildSpreads = function (node) {\n            return Object.keys(_this.findFragmentSpreads(node)).forEach(enqueue);\n        };\n        enqueueChildSpreads(document);\n        var missing = [];\n        var map = Object.create(null);\n        // This Set forEach loop can be extended during iteration by adding\n        // additional strings to the unbound set.\n        unbound.forEach(function (fragmentName) {\n            var knownFragmentDef = defined.get(fragmentName);\n            if (knownFragmentDef) {\n                enqueueChildSpreads((map[fragmentName] = knownFragmentDef));\n            }\n            else {\n                missing.push(fragmentName);\n                var def = _this.lookup(fragmentName);\n                if (def) {\n                    enqueueChildSpreads((map[fragmentName] = def));\n                }\n            }\n        });\n        if (missing.length) {\n            var defsToAppend_1 = [];\n            missing.forEach(function (name) {\n                var def = map[name];\n                if (def) {\n                    defsToAppend_1.push(def);\n                }\n            });\n            if (defsToAppend_1.length) {\n                document = __assign(__assign({}, document), { definitions: document.definitions.concat(defsToAppend_1) });\n            }\n        }\n        return document;\n    };\n    FragmentRegistry.prototype.findFragmentSpreads = function (root) {\n        var spreads = Object.create(null);\n        visit(root, {\n            FragmentSpread: function (node) {\n                spreads[node.name.value] = node;\n            },\n        });\n        return spreads;\n    };\n    return FragmentRegistry;\n}());\n//# sourceMappingURL=fragmentRegistry.js.map", "import { parse } from 'graphql';\n\nimport {\n  DocumentNode,\n  DefinitionNode,\n  Location,\n} from 'graphql/language/ast';\n\n// A map docString -> graphql document\nconst docCache = new Map<string, DocumentNode>();\n\n// A map fragmentName -> [normalized source]\nconst fragmentSourceMap = new Map<string, Set<string>>();\n\nlet printFragmentWarnings = true;\nlet experimentalFragmentVariables = false;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string: string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\nfunction cacheKeyFromLoc(loc: Location) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nfunction processFragments(ast: DocumentNode) {\n  const seenKeys = new Set<string>();\n  const definitions: DefinitionNode[] = [];\n\n  ast.definitions.forEach(fragmentDefinition => {\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc!);\n\n      // We know something about this fragment\n      let sourceKeySet = fragmentSourceMap.get(fragmentName)!;\n      if (sourceKeySet && !sourceKeySet.has(sourceKey)) {\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n      } else if (!sourceKeySet) {\n        fragmentSourceMap.set(fragmentName, sourceKeySet = new Set);\n      }\n\n      sourceKeySet.add(sourceKey);\n\n      if (!seenKeys.has(sourceKey)) {\n        seenKeys.add(sourceKey);\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  });\n\n  return {\n    ...ast,\n    definitions,\n  };\n}\n\nfunction stripLoc(doc: DocumentNode) {\n  const workSet = new Set<Record<string, any>>(doc.definitions);\n\n  workSet.forEach(node => {\n    if (node.loc) delete node.loc;\n    Object.keys(node).forEach(key => {\n      const value = node[key];\n      if (value && typeof value === 'object') {\n        workSet.add(value);\n      }\n    });\n  });\n\n  const loc = doc.loc as Record<string, any>;\n  if (loc) {\n    delete loc.startToken;\n    delete loc.endToken;\n  }\n\n  return doc;\n}\n\nfunction parseDocument(source: string) {\n  var cacheKey = normalize(source);\n  if (!docCache.has(cacheKey)) {\n    const parsed = parse(source, {\n      experimentalFragmentVariables,\n      allowLegacyFragmentVariables: experimentalFragmentVariables,\n    } as any);\n    if (!parsed || parsed.kind !== 'Document') {\n      throw new Error('Not a valid GraphQL document.');\n    }\n    docCache.set(\n      cacheKey,\n      // check that all \"new\" fragments inside the documents are consistent with\n      // existing fragments of the same name\n      stripLoc(processFragments(parsed)),\n    );\n  }\n  return docCache.get(cacheKey)!;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nexport function gql(\n  literals: string | readonly string[],\n  ...args: any[]\n) {\n\n  if (typeof literals === 'string') {\n    literals = [literals];\n  }\n\n  let result = literals[0];\n\n  args.forEach((arg, i) => {\n    if (arg && arg.kind === 'Document') {\n      result += arg.loc.source.body;\n    } else {\n      result += arg;\n    }\n    result += literals[i + 1];\n  });\n\n  return parseDocument(result);\n}\n\nexport function resetCaches() {\n  docCache.clear();\n  fragmentSourceMap.clear();\n}\n\nexport function disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nexport function enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nexport function disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\nconst extras = {\n  gql,\n  resetCaches,\n  disableFragmentWarnings,\n  enableExperimentalFragmentVariables,\n  disableExperimentalFragmentVariables,\n};\n\nexport namespace gql {\n  export const {\n    gql,\n    resetCaches,\n    disableFragmentWarnings,\n    enableExperimentalFragmentVariables,\n    disableExperimentalFragmentVariables,\n  } = extras;\n}\n\ngql.default = gql;\n\nexport default gql;\n", "// For backwards compatibility, make sure require(\"graphql-tag\") returns\n// the gql function, rather than an exports object.\nmodule.exports = require('./lib/graphql-tag.umd.js').gql;\n", "export var version = \"3.9.9\";\n//# sourceMappingURL=version.js.map", "export function isNonNullObject(obj) {\n    return obj !== null && typeof obj === \"object\";\n}\nexport function isPlainObject(obj) {\n    return (obj !== null &&\n        typeof obj === \"object\" &&\n        (Object.getPrototypeOf(obj) === Object.prototype ||\n            Object.getPrototypeOf(obj) === null));\n}\n//# sourceMappingURL=objects.js.map", "// A version of Array.isArray that works better with readonly arrays.\nexport var isArray = Array.isArray;\nexport function isNonEmptyArray(value) {\n    return Array.isArray(value) && value.length > 0;\n}\n//# sourceMappingURL=arrays.js.map", "import { __assign, __spreadArray } from \"tslib\";\nimport { isNonNullObject } from \"./objects.js\";\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function mergeDeep() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    return mergeDeepArray(sources);\n}\n// In almost any situation where you could succeed in getting the\n// TypeScript compiler to infer a tuple type for the sources array, you\n// could just use mergeDeep instead of mergeDeepArray, so instead of\n// trying to convert T[] to an intersection type we just infer the array\n// element type, which works perfectly when the sources array has a\n// consistent element type.\nexport function mergeDeepArray(sources) {\n    var target = sources[0] || {};\n    var count = sources.length;\n    if (count > 1) {\n        var merger = new DeepMerger();\n        for (var i = 1; i < count; ++i) {\n            target = merger.merge(target, sources[i]);\n        }\n    }\n    return target;\n}\nvar defaultReconciler = function (target, source, property) {\n    return this.merge(target[property], source[property]);\n};\nvar DeepMerger = /** @class */ (function () {\n    function DeepMerger(reconciler) {\n        if (reconciler === void 0) { reconciler = defaultReconciler; }\n        this.reconciler = reconciler;\n        this.isObject = isNonNullObject;\n        this.pastCopies = new Set();\n    }\n    DeepMerger.prototype.merge = function (target, source) {\n        var _this = this;\n        var context = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            context[_i - 2] = arguments[_i];\n        }\n        if (isNonNullObject(source) && isNonNullObject(target)) {\n            Object.keys(source).forEach(function (sourceKey) {\n                if (hasOwnProperty.call(target, sourceKey)) {\n                    var targetValue = target[sourceKey];\n                    if (source[sourceKey] !== targetValue) {\n                        var result = _this.reconciler.apply(_this, __spreadArray([target,\n                            source,\n                            sourceKey], context, false));\n                        // A well-implemented reconciler may return targetValue to indicate\n                        // the merge changed nothing about the structure of the target.\n                        if (result !== targetValue) {\n                            target = _this.shallowCopyForMerge(target);\n                            target[sourceKey] = result;\n                        }\n                    }\n                }\n                else {\n                    // If there is no collision, the target can safely share memory with\n                    // the source, and the recursion can terminate here.\n                    target = _this.shallowCopyForMerge(target);\n                    target[sourceKey] = source[sourceKey];\n                }\n            });\n            return target;\n        }\n        // If source (or target) is not an object, let source replace target.\n        return source;\n    };\n    DeepMerger.prototype.shallowCopyForMerge = function (value) {\n        if (isNonNullObject(value)) {\n            if (!this.pastCopies.has(value)) {\n                if (Array.isArray(value)) {\n                    value = value.slice(0);\n                }\n                else {\n                    value = __assign({ __proto__: Object.getPrototypeOf(value) }, value);\n                }\n                this.pastCopies.add(value);\n            }\n        }\n        return value;\n    };\n    return DeepMerger;\n}());\nexport { DeepMerger };\n//# sourceMappingURL=mergeDeep.js.map", "import { isNonNullObject } from \"./objects.js\";\nimport { isNonEmptyArray } from \"./arrays.js\";\nimport { DeepMerger } from \"./mergeDeep.js\";\nexport function isExecutionPatchIncrementalResult(value) {\n    return \"incremental\" in value;\n}\nexport function isExecutionPatchInitialResult(value) {\n    return \"hasNext\" in value && \"data\" in value;\n}\nexport function isExecutionPatchResult(value) {\n    return (isExecutionPatchIncrementalResult(value) ||\n        isExecutionPatchInitialResult(value));\n}\n// This function detects an Apollo payload result before it is transformed\n// into a FetchResult via HttpLink; it cannot detect an ApolloPayloadResult\n// once it leaves the link chain.\nexport function isApolloPayloadResult(value) {\n    return isNonNullObject(value) && \"payload\" in value;\n}\nexport function mergeIncrementalData(prevResult, result) {\n    var mergedData = prevResult;\n    var merger = new DeepMerger();\n    if (isExecutionPatchIncrementalResult(result) &&\n        isNonEmptyArray(result.incremental)) {\n        result.incremental.forEach(function (_a) {\n            var data = _a.data, path = _a.path;\n            for (var i = path.length - 1; i >= 0; --i) {\n                var key = path[i];\n                var isNumericKey = !isNaN(+key);\n                var parent_1 = isNumericKey ? [] : {};\n                parent_1[key] = data;\n                data = parent_1;\n            }\n            mergedData = merger.merge(mergedData, data);\n        });\n    }\n    return mergedData;\n}\n//# sourceMappingURL=incrementalResult.js.map", "/**\n * The current status of a query’s execution in our system.\n */\nexport var NetworkStatus;\n(function (NetworkStatus) {\n    /**\n     * The query has never been run before and the query is now currently running. A query will still\n     * have this network status even if a partial data result was returned from the cache, but a\n     * query was dispatched anyway.\n     */\n    NetworkStatus[NetworkStatus[\"loading\"] = 1] = \"loading\";\n    /**\n     * If `setVariables` was called and a query was fired because of that then the network status\n     * will be `setVariables` until the result of that query comes back.\n     */\n    NetworkStatus[NetworkStatus[\"setVariables\"] = 2] = \"setVariables\";\n    /**\n     * Indicates that `fetchMore` was called on this query and that the query created is currently in\n     * flight.\n     */\n    NetworkStatus[NetworkStatus[\"fetchMore\"] = 3] = \"fetchMore\";\n    /**\n     * Similar to the `setVariables` network status. It means that `refetch` was called on a query\n     * and the refetch request is currently in flight.\n     */\n    NetworkStatus[NetworkStatus[\"refetch\"] = 4] = \"refetch\";\n    /**\n     * Indicates that a polling query is currently in flight. So for example if you are polling a\n     * query every 10 seconds then the network status will switch to `poll` every 10 seconds whenever\n     * a poll request has been sent but not resolved.\n     */\n    NetworkStatus[NetworkStatus[\"poll\"] = 6] = \"poll\";\n    /**\n     * No request is in flight for this query, and no errors happened. Everything is OK.\n     */\n    NetworkStatus[NetworkStatus[\"ready\"] = 7] = \"ready\";\n    /**\n     * No request is in flight for this query, but one or more errors were detected.\n     */\n    NetworkStatus[NetworkStatus[\"error\"] = 8] = \"error\";\n})(NetworkStatus || (NetworkStatus = {}));\n/**\n * Returns true if there is currently a network request in flight according to a given network\n * status.\n */\nexport function isNetworkRequestInFlight(networkStatus) {\n    return networkStatus ? networkStatus < 7 : false;\n}\n/**\n * Returns true if the network request is in ready or error state according to a given network\n * status.\n */\nexport function isNetworkRequestSettled(networkStatus) {\n    return networkStatus === 7 || networkStatus === 8;\n}\n//# sourceMappingURL=networkStatus.js.map", "import { __rest } from \"tslib\";\nimport equal from \"@wry/equality\";\nimport { createFragmentMap, getFragmentDefinitions, getFragmentFromSelection, getMainDefinition, isField, resultKeyNameFromField, shouldInclude, } from \"../utilities/index.js\";\n// Returns true if aResult and bResult are deeply equal according to the fields\n// selected by the given query, ignoring any fields marked as @nonreactive.\nexport function equalByQuery(query, _a, _b, variables) {\n    var aData = _a.data, aRest = __rest(_a, [\"data\"]);\n    var bData = _b.data, bRest = __rest(_b, [\"data\"]);\n    return (equal(aRest, bRest) &&\n        equalBySelectionSet(getMainDefinition(query).selectionSet, aData, bData, {\n            fragmentMap: createFragmentMap(getFragmentDefinitions(query)),\n            variables: variables,\n        }));\n}\nfunction equalBySelectionSet(selectionSet, aResult, bResult, context) {\n    if (aResult === bResult) {\n        return true;\n    }\n    var seenSelections = new Set();\n    // Returning true from this Array.prototype.every callback function skips the\n    // current field/subtree. Returning false aborts the entire traversal\n    // immediately, causing equalBySelectionSet to return false.\n    return selectionSet.selections.every(function (selection) {\n        // Avoid re-processing the same selection at the same level of recursion, in\n        // case the same field gets included via multiple indirect fragment spreads.\n        if (seenSelections.has(selection))\n            return true;\n        seenSelections.add(selection);\n        // Ignore @skip(if: true) and @include(if: false) fields.\n        if (!shouldInclude(selection, context.variables))\n            return true;\n        // If the field or (named) fragment spread has a @nonreactive directive on\n        // it, we don't care if it's different, so we pretend it's the same.\n        if (selectionHasNonreactiveDirective(selection))\n            return true;\n        if (isField(selection)) {\n            var resultKey = resultKeyNameFromField(selection);\n            var aResultChild = aResult && aResult[resultKey];\n            var bResultChild = bResult && bResult[resultKey];\n            var childSelectionSet = selection.selectionSet;\n            if (!childSelectionSet) {\n                // These are scalar values, so we can compare them with deep equal\n                // without redoing the main recursive work.\n                return equal(aResultChild, bResultChild);\n            }\n            var aChildIsArray = Array.isArray(aResultChild);\n            var bChildIsArray = Array.isArray(bResultChild);\n            if (aChildIsArray !== bChildIsArray)\n                return false;\n            if (aChildIsArray && bChildIsArray) {\n                var length_1 = aResultChild.length;\n                if (bResultChild.length !== length_1) {\n                    return false;\n                }\n                for (var i = 0; i < length_1; ++i) {\n                    if (!equalBySelectionSet(childSelectionSet, aResultChild[i], bResultChild[i], context)) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            return equalBySelectionSet(childSelectionSet, aResultChild, bResultChild, context);\n        }\n        else {\n            var fragment = getFragmentFromSelection(selection, context.fragmentMap);\n            if (fragment) {\n                // The fragment might === selection if it's an inline fragment, but\n                // could be !== if it's a named fragment ...spread.\n                if (selectionHasNonreactiveDirective(fragment))\n                    return true;\n                return equalBySelectionSet(fragment.selectionSet, \n                // Notice that we reuse the same aResult and bResult values here,\n                // since the fragment ...spread does not specify a field name, but\n                // consists of multiple fields (within the fragment's selection set)\n                // that should be applied to the current result value(s).\n                aResult, bResult, context);\n            }\n        }\n    });\n}\nfunction selectionHasNonreactiveDirective(selection) {\n    return (!!selection.directives && selection.directives.some(directiveIsNonreactive));\n}\nfunction directiveIsNonreactive(dir) {\n    return dir.name.value === \"nonreactive\";\n}\n//# sourceMappingURL=equalByQuery.js.map", "import { __assign, __extends } from \"tslib\";\nimport { invariant } from \"../utilities/globals/index.js\";\nimport { equal } from \"@wry/equality\";\nimport { NetworkStatus, isNetworkRequestInFlight } from \"./networkStatus.js\";\nimport { cloneDeep, compact, getOperationDefinition, Observable, iterateObserversSafely, fixObservableSubclass, getQueryDefinition, } from \"../utilities/index.js\";\nimport { equalByQuery } from \"./equalByQuery.js\";\nvar assign = Object.assign, hasOwnProperty = Object.hasOwnProperty;\nvar ObservableQuery = /** @class */ (function (_super) {\n    __extends(ObservableQuery, _super);\n    function ObservableQuery(_a) {\n        var queryManager = _a.queryManager, queryInfo = _a.queryInfo, options = _a.options;\n        var _this = _super.call(this, function (observer) {\n            // Zen Observable has its own error function, so in order to log correctly\n            // we need to provide a custom error callback.\n            try {\n                var subObserver = observer._subscription._observer;\n                if (subObserver && !subObserver.error) {\n                    subObserver.error = defaultSubscriptionObserverErrorCallback;\n                }\n            }\n            catch (_a) { }\n            var first = !_this.observers.size;\n            _this.observers.add(observer);\n            // Deliver most recent error or result.\n            var last = _this.last;\n            if (last && last.error) {\n                observer.error && observer.error(last.error);\n            }\n            else if (last && last.result) {\n                observer.next && observer.next(last.result);\n            }\n            // Initiate observation of this query if it hasn't been reported to\n            // the QueryManager yet.\n            if (first) {\n                // Blindly catching here prevents unhandled promise rejections,\n                // and is safe because the ObservableQuery handles this error with\n                // this.observer.error, so we're not just swallowing the error by\n                // ignoring it here.\n                _this.reobserve().catch(function () { });\n            }\n            return function () {\n                if (_this.observers.delete(observer) && !_this.observers.size) {\n                    _this.tearDownQuery();\n                }\n            };\n        }) || this;\n        _this.observers = new Set();\n        _this.subscriptions = new Set();\n        // related classes\n        _this.queryInfo = queryInfo;\n        _this.queryManager = queryManager;\n        // active state\n        _this.waitForOwnResult = skipCacheDataFor(options.fetchPolicy);\n        _this.isTornDown = false;\n        var _b = queryManager.defaultOptions.watchQuery, _c = _b === void 0 ? {} : _b, _d = _c.fetchPolicy, defaultFetchPolicy = _d === void 0 ? \"cache-first\" : _d;\n        var _e = options.fetchPolicy, fetchPolicy = _e === void 0 ? defaultFetchPolicy : _e, \n        // Make sure we don't store \"standby\" as the initialFetchPolicy.\n        _f = options.initialFetchPolicy, \n        // Make sure we don't store \"standby\" as the initialFetchPolicy.\n        initialFetchPolicy = _f === void 0 ? fetchPolicy === \"standby\" ? defaultFetchPolicy : (fetchPolicy) : _f;\n        _this.options = __assign(__assign({}, options), { \n            // Remember the initial options.fetchPolicy so we can revert back to this\n            // policy when variables change. This information can also be specified\n            // (or overridden) by providing options.initialFetchPolicy explicitly.\n            initialFetchPolicy: initialFetchPolicy, \n            // This ensures this.options.fetchPolicy always has a string value, in\n            // case options.fetchPolicy was not provided.\n            fetchPolicy: fetchPolicy });\n        _this.queryId = queryInfo.queryId || queryManager.generateQueryId();\n        var opDef = getOperationDefinition(_this.query);\n        _this.queryName = opDef && opDef.name && opDef.name.value;\n        return _this;\n    }\n    Object.defineProperty(ObservableQuery.prototype, \"query\", {\n        // The `query` computed property will always reflect the document transformed\n        // by the last run query. `this.options.query` will always reflect the raw\n        // untransformed query to ensure document transforms with runtime conditionals\n        // are run on the original document.\n        get: function () {\n            return this.lastQuery || this.options.query;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ObservableQuery.prototype, \"variables\", {\n        // Computed shorthand for this.options.variables, preserved for\n        // backwards compatibility.\n        /**\n         * An object containing the variables that were provided for the query.\n         */\n        get: function () {\n            return this.options.variables;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ObservableQuery.prototype.result = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            // TODO: this code doesn’t actually make sense insofar as the observer\n            // will never exist in this.observers due how zen-observable wraps observables.\n            // https://github.com/zenparsing/zen-observable/blob/master/src/Observable.js#L169\n            var observer = {\n                next: function (result) {\n                    resolve(result);\n                    // Stop the query within the QueryManager if we can before\n                    // this function returns.\n                    //\n                    // We do this in order to prevent observers piling up within\n                    // the QueryManager. Notice that we only fully unsubscribe\n                    // from the subscription in a setTimeout(..., 0)  call. This call can\n                    // actually be handled by the browser at a much later time. If queries\n                    // are fired in the meantime, observers that should have been removed\n                    // from the QueryManager will continue to fire, causing an unnecessary\n                    // performance hit.\n                    _this.observers.delete(observer);\n                    if (!_this.observers.size) {\n                        _this.queryManager.removeQuery(_this.queryId);\n                    }\n                    setTimeout(function () {\n                        subscription.unsubscribe();\n                    }, 0);\n                },\n                error: reject,\n            };\n            var subscription = _this.subscribe(observer);\n        });\n    };\n    /** @internal */\n    ObservableQuery.prototype.resetDiff = function () {\n        this.queryInfo.resetDiff();\n    };\n    ObservableQuery.prototype.getCurrentResult = function (saveAsLastResult) {\n        if (saveAsLastResult === void 0) { saveAsLastResult = true; }\n        // Use the last result as long as the variables match this.variables.\n        var lastResult = this.getLastResult(true);\n        var networkStatus = this.queryInfo.networkStatus ||\n            (lastResult && lastResult.networkStatus) ||\n            NetworkStatus.ready;\n        var result = __assign(__assign({}, lastResult), { loading: isNetworkRequestInFlight(networkStatus), networkStatus: networkStatus });\n        var _a = this.options.fetchPolicy, fetchPolicy = _a === void 0 ? \"cache-first\" : _a;\n        if (\n        // These fetch policies should never deliver data from the cache, unless\n        // redelivering a previously delivered result.\n        skipCacheDataFor(fetchPolicy) ||\n            // If this.options.query has @client(always: true) fields, we cannot\n            // trust diff.result, since it was read from the cache without running\n            // local resolvers (and it's too late to run resolvers now, since we must\n            // return a result synchronously).\n            this.queryManager.getDocumentInfo(this.query).hasForcedResolvers) {\n            // Fall through.\n        }\n        else if (this.waitForOwnResult) {\n            // This would usually be a part of `QueryInfo.getDiff()`.\n            // which we skip in the waitForOwnResult case since we are not\n            // interested in the diff.\n            this.queryInfo[\"updateWatch\"]();\n        }\n        else {\n            var diff = this.queryInfo.getDiff();\n            if (diff.complete || this.options.returnPartialData) {\n                result.data = diff.result;\n            }\n            if (equal(result.data, {})) {\n                result.data = void 0;\n            }\n            if (diff.complete) {\n                // Similar to setting result.partial to false, but taking advantage of the\n                // falsiness of missing fields.\n                delete result.partial;\n                // If the diff is complete, and we're using a FetchPolicy that\n                // terminates after a complete cache read, we can assume the next result\n                // we receive will have NetworkStatus.ready and !loading.\n                if (diff.complete &&\n                    result.networkStatus === NetworkStatus.loading &&\n                    (fetchPolicy === \"cache-first\" || fetchPolicy === \"cache-only\")) {\n                    result.networkStatus = NetworkStatus.ready;\n                    result.loading = false;\n                }\n            }\n            else {\n                result.partial = true;\n            }\n            if (globalThis.__DEV__ !== false &&\n                !diff.complete &&\n                !this.options.partialRefetch &&\n                !result.loading &&\n                !result.data &&\n                !result.error) {\n                logMissingFieldErrors(diff.missing);\n            }\n        }\n        if (saveAsLastResult) {\n            this.updateLastResult(result);\n        }\n        return result;\n    };\n    // Compares newResult to the snapshot we took of this.lastResult when it was\n    // first received.\n    ObservableQuery.prototype.isDifferentFromLastResult = function (newResult, variables) {\n        if (!this.last) {\n            return true;\n        }\n        var resultIsDifferent = this.queryManager.getDocumentInfo(this.query).hasNonreactiveDirective ?\n            !equalByQuery(this.query, this.last.result, newResult, this.variables)\n            : !equal(this.last.result, newResult);\n        return (resultIsDifferent || (variables && !equal(this.last.variables, variables)));\n    };\n    ObservableQuery.prototype.getLast = function (key, variablesMustMatch) {\n        var last = this.last;\n        if (last &&\n            last[key] &&\n            (!variablesMustMatch || equal(last.variables, this.variables))) {\n            return last[key];\n        }\n    };\n    ObservableQuery.prototype.getLastResult = function (variablesMustMatch) {\n        return this.getLast(\"result\", variablesMustMatch);\n    };\n    ObservableQuery.prototype.getLastError = function (variablesMustMatch) {\n        return this.getLast(\"error\", variablesMustMatch);\n    };\n    ObservableQuery.prototype.resetLastResults = function () {\n        delete this.last;\n        this.isTornDown = false;\n    };\n    ObservableQuery.prototype.resetQueryStoreErrors = function () {\n        this.queryManager.resetErrors(this.queryId);\n    };\n    /**\n     * Update the variables of this observable query, and fetch the new results.\n     * This method should be preferred over `setVariables` in most use cases.\n     *\n     * @param variables - The new set of variables. If there are missing variables,\n     * the previous values of those variables will be used.\n     */\n    ObservableQuery.prototype.refetch = function (variables) {\n        var _a;\n        var reobserveOptions = {\n            // Always disable polling for refetches.\n            pollInterval: 0,\n        };\n        // Unless the provided fetchPolicy always consults the network\n        // (no-cache, network-only, or cache-and-network), override it with\n        // network-only to force the refetch for this fetchQuery call.\n        var fetchPolicy = this.options.fetchPolicy;\n        if (fetchPolicy === \"cache-and-network\") {\n            reobserveOptions.fetchPolicy = fetchPolicy;\n        }\n        else if (fetchPolicy === \"no-cache\") {\n            reobserveOptions.fetchPolicy = \"no-cache\";\n        }\n        else {\n            reobserveOptions.fetchPolicy = \"network-only\";\n        }\n        if (globalThis.__DEV__ !== false && variables && hasOwnProperty.call(variables, \"variables\")) {\n            var queryDef = getQueryDefinition(this.query);\n            var vars = queryDef.variableDefinitions;\n            if (!vars || !vars.some(function (v) { return v.variable.name.value === \"variables\"; })) {\n                globalThis.__DEV__ !== false && invariant.warn(\n                    20,\n                    variables,\n                    ((_a = queryDef.name) === null || _a === void 0 ? void 0 : _a.value) || queryDef\n                );\n            }\n        }\n        if (variables && !equal(this.options.variables, variables)) {\n            // Update the existing options with new variables\n            reobserveOptions.variables = this.options.variables = __assign(__assign({}, this.options.variables), variables);\n        }\n        this.queryInfo.resetLastWrite();\n        return this.reobserve(reobserveOptions, NetworkStatus.refetch);\n    };\n    /**\n     * A function that helps you fetch the next set of results for a [paginated list field](https://www.apollographql.com/docs/react/pagination/core-api/).\n     */\n    ObservableQuery.prototype.fetchMore = function (fetchMoreOptions) {\n        var _this = this;\n        var combinedOptions = __assign(__assign({}, (fetchMoreOptions.query ? fetchMoreOptions : (__assign(__assign(__assign(__assign({}, this.options), { query: this.options.query }), fetchMoreOptions), { variables: __assign(__assign({}, this.options.variables), fetchMoreOptions.variables) })))), { \n            // The fetchMore request goes immediately to the network and does\n            // not automatically write its result to the cache (hence no-cache\n            // instead of network-only), because we allow the caller of\n            // fetchMore to provide an updateQuery callback that determines how\n            // the data gets written to the cache.\n            fetchPolicy: \"no-cache\" });\n        combinedOptions.query = this.transformDocument(combinedOptions.query);\n        var qid = this.queryManager.generateQueryId();\n        // If a temporary query is passed to `fetchMore`, we don't want to store\n        // it as the last query result since it may be an optimized query for\n        // pagination. We will however run the transforms on the original document\n        // as well as the document passed in `fetchMoreOptions` to ensure the cache\n        // uses the most up-to-date document which may rely on runtime conditionals.\n        this.lastQuery =\n            fetchMoreOptions.query ?\n                this.transformDocument(this.options.query)\n                : combinedOptions.query;\n        // Simulate a loading result for the original query with\n        // result.networkStatus === NetworkStatus.fetchMore.\n        var queryInfo = this.queryInfo;\n        var originalNetworkStatus = queryInfo.networkStatus;\n        queryInfo.networkStatus = NetworkStatus.fetchMore;\n        if (combinedOptions.notifyOnNetworkStatusChange) {\n            this.observe();\n        }\n        var updatedQuerySet = new Set();\n        return this.queryManager\n            .fetchQuery(qid, combinedOptions, NetworkStatus.fetchMore)\n            .then(function (fetchMoreResult) {\n            _this.queryManager.removeQuery(qid);\n            if (queryInfo.networkStatus === NetworkStatus.fetchMore) {\n                queryInfo.networkStatus = originalNetworkStatus;\n            }\n            // Performing this cache update inside a cache.batch transaction ensures\n            // any affected cache.watch watchers are notified at most once about any\n            // updates. Most watchers will be using the QueryInfo class, which\n            // responds to notifications by calling reobserveCacheFirst to deliver\n            // fetchMore cache results back to this ObservableQuery.\n            _this.queryManager.cache.batch({\n                update: function (cache) {\n                    var updateQuery = fetchMoreOptions.updateQuery;\n                    if (updateQuery) {\n                        cache.updateQuery({\n                            query: _this.query,\n                            variables: _this.variables,\n                            returnPartialData: true,\n                            optimistic: false,\n                        }, function (previous) {\n                            return updateQuery(previous, {\n                                fetchMoreResult: fetchMoreResult.data,\n                                variables: combinedOptions.variables,\n                            });\n                        });\n                    }\n                    else {\n                        // If we're using a field policy instead of updateQuery, the only\n                        // thing we need to do is write the new data to the cache using\n                        // combinedOptions.variables (instead of this.variables, which is\n                        // what this.updateQuery uses, because it works by abusing the\n                        // original field value, keyed by the original variables).\n                        cache.writeQuery({\n                            query: combinedOptions.query,\n                            variables: combinedOptions.variables,\n                            data: fetchMoreResult.data,\n                        });\n                    }\n                },\n                onWatchUpdated: function (watch) {\n                    // Record the DocumentNode associated with any watched query whose\n                    // data were updated by the cache writes above.\n                    updatedQuerySet.add(watch.query);\n                },\n            });\n            return fetchMoreResult;\n        })\n            .finally(function () {\n            // In case the cache writes above did not generate a broadcast\n            // notification (which would have been intercepted by onWatchUpdated),\n            // likely because the written data were the same as what was already in\n            // the cache, we still want fetchMore to deliver its final loading:false\n            // result with the unchanged data.\n            if (!updatedQuerySet.has(_this.query)) {\n                reobserveCacheFirst(_this);\n            }\n        });\n    };\n    // XXX the subscription variables are separate from the query variables.\n    // if you want to update subscription variables, right now you have to do that separately,\n    // and you can only do it by stopping the subscription and then subscribing again with new variables.\n    /**\n     * A function that enables you to execute a [subscription](https://www.apollographql.com/docs/react/data/subscriptions/), usually to subscribe to specific fields that were included in the query.\n     *\n     * This function returns _another_ function that you can call to terminate the subscription.\n     */\n    ObservableQuery.prototype.subscribeToMore = function (options) {\n        var _this = this;\n        var subscription = this.queryManager\n            .startGraphQLSubscription({\n            query: options.document,\n            variables: options.variables,\n            context: options.context,\n        })\n            .subscribe({\n            next: function (subscriptionData) {\n                var updateQuery = options.updateQuery;\n                if (updateQuery) {\n                    _this.updateQuery(function (previous, _a) {\n                        var variables = _a.variables;\n                        return updateQuery(previous, {\n                            subscriptionData: subscriptionData,\n                            variables: variables,\n                        });\n                    });\n                }\n            },\n            error: function (err) {\n                if (options.onError) {\n                    options.onError(err);\n                    return;\n                }\n                globalThis.__DEV__ !== false && invariant.error(21, err);\n            },\n        });\n        this.subscriptions.add(subscription);\n        return function () {\n            if (_this.subscriptions.delete(subscription)) {\n                subscription.unsubscribe();\n            }\n        };\n    };\n    ObservableQuery.prototype.setOptions = function (newOptions) {\n        return this.reobserve(newOptions);\n    };\n    ObservableQuery.prototype.silentSetOptions = function (newOptions) {\n        var mergedOptions = compact(this.options, newOptions || {});\n        assign(this.options, mergedOptions);\n    };\n    /**\n     * Update the variables of this observable query, and fetch the new results\n     * if they've changed. Most users should prefer `refetch` instead of\n     * `setVariables` in order to to be properly notified of results even when\n     * they come from the cache.\n     *\n     * Note: the `next` callback will *not* fire if the variables have not changed\n     * or if the result is coming from cache.\n     *\n     * Note: the promise will return the old results immediately if the variables\n     * have not changed.\n     *\n     * Note: the promise will return null immediately if the query is not active\n     * (there are no subscribers).\n     *\n     * @param variables - The new set of variables. If there are missing variables,\n     * the previous values of those variables will be used.\n     */\n    ObservableQuery.prototype.setVariables = function (variables) {\n        if (equal(this.variables, variables)) {\n            // If we have no observers, then we don't actually want to make a network\n            // request. As soon as someone observes the query, the request will kick\n            // off. For now, we just store any changes. (See #1077)\n            return this.observers.size ? this.result() : Promise.resolve();\n        }\n        this.options.variables = variables;\n        // See comment above\n        if (!this.observers.size) {\n            return Promise.resolve();\n        }\n        return this.reobserve({\n            // Reset options.fetchPolicy to its original value.\n            fetchPolicy: this.options.initialFetchPolicy,\n            variables: variables,\n        }, NetworkStatus.setVariables);\n    };\n    /**\n     * A function that enables you to update the query's cached result without executing a followup GraphQL operation.\n     *\n     * See [using updateQuery and updateFragment](https://www.apollographql.com/docs/react/caching/cache-interaction/#using-updatequery-and-updatefragment) for additional information.\n     */\n    ObservableQuery.prototype.updateQuery = function (mapFn) {\n        var queryManager = this.queryManager;\n        var result = queryManager.cache.diff({\n            query: this.options.query,\n            variables: this.variables,\n            returnPartialData: true,\n            optimistic: false,\n        }).result;\n        var newResult = mapFn(result, {\n            variables: this.variables,\n        });\n        if (newResult) {\n            queryManager.cache.writeQuery({\n                query: this.options.query,\n                data: newResult,\n                variables: this.variables,\n            });\n            queryManager.broadcastQueries();\n        }\n    };\n    /**\n     * A function that instructs the query to begin re-executing at a specified interval (in milliseconds).\n     */\n    ObservableQuery.prototype.startPolling = function (pollInterval) {\n        this.options.pollInterval = pollInterval;\n        this.updatePolling();\n    };\n    /**\n     * A function that instructs the query to stop polling after a previous call to `startPolling`.\n     */\n    ObservableQuery.prototype.stopPolling = function () {\n        this.options.pollInterval = 0;\n        this.updatePolling();\n    };\n    // Update options.fetchPolicy according to options.nextFetchPolicy.\n    ObservableQuery.prototype.applyNextFetchPolicy = function (reason, \n    // It's possible to use this method to apply options.nextFetchPolicy to\n    // options.fetchPolicy even if options !== this.options, though that happens\n    // most often when the options are temporary, used for only one request and\n    // then thrown away, so nextFetchPolicy may not end up mattering.\n    options) {\n        if (options.nextFetchPolicy) {\n            var _a = options.fetchPolicy, fetchPolicy = _a === void 0 ? \"cache-first\" : _a, _b = options.initialFetchPolicy, initialFetchPolicy = _b === void 0 ? fetchPolicy : _b;\n            if (fetchPolicy === \"standby\") {\n                // Do nothing, leaving options.fetchPolicy unchanged.\n            }\n            else if (typeof options.nextFetchPolicy === \"function\") {\n                // When someone chooses \"cache-and-network\" or \"network-only\" as their\n                // initial FetchPolicy, they often do not want future cache updates to\n                // trigger unconditional network requests, which is what repeatedly\n                // applying the \"cache-and-network\" or \"network-only\" policies would\n                // seem to imply. Instead, when the cache reports an update after the\n                // initial network request, it may be desirable for subsequent network\n                // requests to be triggered only if the cache result is incomplete. To\n                // that end, the options.nextFetchPolicy option provides an easy way to\n                // update options.fetchPolicy after the initial network request, without\n                // having to call observableQuery.setOptions.\n                options.fetchPolicy = options.nextFetchPolicy(fetchPolicy, {\n                    reason: reason,\n                    options: options,\n                    observable: this,\n                    initialFetchPolicy: initialFetchPolicy,\n                });\n            }\n            else if (reason === \"variables-changed\") {\n                options.fetchPolicy = initialFetchPolicy;\n            }\n            else {\n                options.fetchPolicy = options.nextFetchPolicy;\n            }\n        }\n        return options.fetchPolicy;\n    };\n    ObservableQuery.prototype.fetch = function (options, newNetworkStatus, query) {\n        // TODO Make sure we update the networkStatus (and infer fetchVariables)\n        // before actually committing to the fetch.\n        this.queryManager.setObservableQuery(this);\n        return this.queryManager[\"fetchConcastWithInfo\"](this.queryId, options, newNetworkStatus, query);\n    };\n    // Turns polling on or off based on this.options.pollInterval.\n    ObservableQuery.prototype.updatePolling = function () {\n        var _this = this;\n        // Avoid polling in SSR mode\n        if (this.queryManager.ssrMode) {\n            return;\n        }\n        var _a = this, pollingInfo = _a.pollingInfo, pollInterval = _a.options.pollInterval;\n        if (!pollInterval) {\n            if (pollingInfo) {\n                clearTimeout(pollingInfo.timeout);\n                delete this.pollingInfo;\n            }\n            return;\n        }\n        if (pollingInfo && pollingInfo.interval === pollInterval) {\n            return;\n        }\n        invariant(pollInterval, 22);\n        var info = pollingInfo || (this.pollingInfo = {});\n        info.interval = pollInterval;\n        var maybeFetch = function () {\n            var _a, _b;\n            if (_this.pollingInfo) {\n                if (!isNetworkRequestInFlight(_this.queryInfo.networkStatus) &&\n                    !((_b = (_a = _this.options).skipPollAttempt) === null || _b === void 0 ? void 0 : _b.call(_a))) {\n                    _this.reobserve({\n                        // Most fetchPolicy options don't make sense to use in a polling context, as\n                        // users wouldn't want to be polling the cache directly. However, network-only and\n                        // no-cache are both useful for when the user wants to control whether or not the\n                        // polled results are written to the cache.\n                        fetchPolicy: _this.options.initialFetchPolicy === \"no-cache\" ?\n                            \"no-cache\"\n                            : \"network-only\",\n                    }, NetworkStatus.poll).then(poll, poll);\n                }\n                else {\n                    poll();\n                }\n            }\n        };\n        var poll = function () {\n            var info = _this.pollingInfo;\n            if (info) {\n                clearTimeout(info.timeout);\n                info.timeout = setTimeout(maybeFetch, info.interval);\n            }\n        };\n        poll();\n    };\n    ObservableQuery.prototype.updateLastResult = function (newResult, variables) {\n        if (variables === void 0) { variables = this.variables; }\n        var error = this.getLastError();\n        // Preserve this.last.error unless the variables have changed.\n        if (error && this.last && !equal(variables, this.last.variables)) {\n            error = void 0;\n        }\n        return (this.last = __assign({ result: this.queryManager.assumeImmutableResults ?\n                newResult\n                : cloneDeep(newResult), variables: variables }, (error ? { error: error } : null)));\n    };\n    ObservableQuery.prototype.reobserveAsConcast = function (newOptions, newNetworkStatus) {\n        var _this = this;\n        this.isTornDown = false;\n        var useDisposableConcast = \n        // Refetching uses a disposable Concast to allow refetches using different\n        // options/variables, without permanently altering the options of the\n        // original ObservableQuery.\n        newNetworkStatus === NetworkStatus.refetch ||\n            // The fetchMore method does not actually call the reobserve method, but,\n            // if it did, it would definitely use a disposable Concast.\n            newNetworkStatus === NetworkStatus.fetchMore ||\n            // Polling uses a disposable Concast so the polling options (which force\n            // fetchPolicy to be \"network-only\" or \"no-cache\") won't override the original options.\n            newNetworkStatus === NetworkStatus.poll;\n        // Save the old variables, since Object.assign may modify them below.\n        var oldVariables = this.options.variables;\n        var oldFetchPolicy = this.options.fetchPolicy;\n        var mergedOptions = compact(this.options, newOptions || {});\n        var options = useDisposableConcast ?\n            // Disposable Concast fetches receive a shallow copy of this.options\n            // (merged with newOptions), leaving this.options unmodified.\n            mergedOptions\n            : assign(this.options, mergedOptions);\n        // Don't update options.query with the transformed query to avoid\n        // overwriting this.options.query when we aren't using a disposable concast.\n        // We want to ensure we can re-run the custom document transforms the next\n        // time a request is made against the original query.\n        var query = this.transformDocument(options.query);\n        this.lastQuery = query;\n        if (!useDisposableConcast) {\n            // We can skip calling updatePolling if we're not changing this.options.\n            this.updatePolling();\n            // Reset options.fetchPolicy to its original value when variables change,\n            // unless a new fetchPolicy was provided by newOptions.\n            if (newOptions &&\n                newOptions.variables &&\n                !equal(newOptions.variables, oldVariables) &&\n                // Don't mess with the fetchPolicy if it's currently \"standby\".\n                options.fetchPolicy !== \"standby\" &&\n                // If we're changing the fetchPolicy anyway, don't try to change it here\n                // using applyNextFetchPolicy. The explicit options.fetchPolicy wins.\n                options.fetchPolicy === oldFetchPolicy) {\n                this.applyNextFetchPolicy(\"variables-changed\", options);\n                if (newNetworkStatus === void 0) {\n                    newNetworkStatus = NetworkStatus.setVariables;\n                }\n            }\n        }\n        this.waitForOwnResult && (this.waitForOwnResult = skipCacheDataFor(options.fetchPolicy));\n        var finishWaitingForOwnResult = function () {\n            if (_this.concast === concast) {\n                _this.waitForOwnResult = false;\n            }\n        };\n        var variables = options.variables && __assign({}, options.variables);\n        var _a = this.fetch(options, newNetworkStatus, query), concast = _a.concast, fromLink = _a.fromLink;\n        var observer = {\n            next: function (result) {\n                if (equal(_this.variables, variables)) {\n                    finishWaitingForOwnResult();\n                    _this.reportResult(result, variables);\n                }\n            },\n            error: function (error) {\n                if (equal(_this.variables, variables)) {\n                    finishWaitingForOwnResult();\n                    _this.reportError(error, variables);\n                }\n            },\n        };\n        if (!useDisposableConcast && (fromLink || !this.concast)) {\n            // We use the {add,remove}Observer methods directly to avoid wrapping\n            // observer with an unnecessary SubscriptionObserver object.\n            if (this.concast && this.observer) {\n                this.concast.removeObserver(this.observer);\n            }\n            this.concast = concast;\n            this.observer = observer;\n        }\n        concast.addObserver(observer);\n        return concast;\n    };\n    ObservableQuery.prototype.reobserve = function (newOptions, newNetworkStatus) {\n        return this.reobserveAsConcast(newOptions, newNetworkStatus)\n            .promise;\n    };\n    ObservableQuery.prototype.resubscribeAfterError = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // If `lastError` is set in the current when the subscription is re-created,\n        // the subscription will immediately receive the error, which will\n        // cause it to terminate again. To avoid this, we first clear\n        // the last error/result from the `observableQuery` before re-starting\n        // the subscription, and restore the last value afterwards so that the\n        // subscription has a chance to stay open.\n        var last = this.last;\n        this.resetLastResults();\n        var subscription = this.subscribe.apply(this, args);\n        this.last = last;\n        return subscription;\n    };\n    // (Re)deliver the current result to this.observers without applying fetch\n    // policies or making network requests.\n    ObservableQuery.prototype.observe = function () {\n        this.reportResult(\n        // Passing false is important so that this.getCurrentResult doesn't\n        // save the fetchMore result as this.lastResult, causing it to be\n        // ignored due to the this.isDifferentFromLastResult check in\n        // this.reportResult.\n        this.getCurrentResult(false), this.variables);\n    };\n    ObservableQuery.prototype.reportResult = function (result, variables) {\n        var lastError = this.getLastError();\n        var isDifferent = this.isDifferentFromLastResult(result, variables);\n        // Update the last result even when isDifferentFromLastResult returns false,\n        // because the query may be using the @nonreactive directive, and we want to\n        // save the the latest version of any nonreactive subtrees (in case\n        // getCurrentResult is called), even though we skip broadcasting changes.\n        if (lastError || !result.partial || this.options.returnPartialData) {\n            this.updateLastResult(result, variables);\n        }\n        if (lastError || isDifferent) {\n            iterateObserversSafely(this.observers, \"next\", result);\n        }\n    };\n    ObservableQuery.prototype.reportError = function (error, variables) {\n        // Since we don't get the current result on errors, only the error, we\n        // must mirror the updates that occur in QueryStore.markQueryError here\n        var errorResult = __assign(__assign({}, this.getLastResult()), { error: error, errors: error.graphQLErrors, networkStatus: NetworkStatus.error, loading: false });\n        this.updateLastResult(errorResult, variables);\n        iterateObserversSafely(this.observers, \"error\", (this.last.error = error));\n    };\n    ObservableQuery.prototype.hasObservers = function () {\n        return this.observers.size > 0;\n    };\n    ObservableQuery.prototype.tearDownQuery = function () {\n        if (this.isTornDown)\n            return;\n        if (this.concast && this.observer) {\n            this.concast.removeObserver(this.observer);\n            delete this.concast;\n            delete this.observer;\n        }\n        this.stopPolling();\n        // stop all active GraphQL subscriptions\n        this.subscriptions.forEach(function (sub) { return sub.unsubscribe(); });\n        this.subscriptions.clear();\n        this.queryManager.stopQuery(this.queryId);\n        this.observers.clear();\n        this.isTornDown = true;\n    };\n    ObservableQuery.prototype.transformDocument = function (document) {\n        return this.queryManager.transform(document);\n    };\n    return ObservableQuery;\n}(Observable));\nexport { ObservableQuery };\n// Necessary because the ObservableQuery constructor has a different\n// signature than the Observable constructor.\nfixObservableSubclass(ObservableQuery);\n// Reobserve with fetchPolicy effectively set to \"cache-first\", triggering\n// delivery of any new data from the cache, possibly falling back to the network\n// if any cache data are missing. This allows _complete_ cache results to be\n// delivered without also kicking off unnecessary network requests when\n// this.options.fetchPolicy is \"cache-and-network\" or \"network-only\". When\n// this.options.fetchPolicy is any other policy (\"cache-first\", \"cache-only\",\n// \"standby\", or \"no-cache\"), we call this.reobserve() as usual.\nexport function reobserveCacheFirst(obsQuery) {\n    var _a = obsQuery.options, fetchPolicy = _a.fetchPolicy, nextFetchPolicy = _a.nextFetchPolicy;\n    if (fetchPolicy === \"cache-and-network\" || fetchPolicy === \"network-only\") {\n        return obsQuery.reobserve({\n            fetchPolicy: \"cache-first\",\n            // Use a temporary nextFetchPolicy function that replaces itself with the\n            // previous nextFetchPolicy value and returns the original fetchPolicy.\n            nextFetchPolicy: function (currentFetchPolicy, context) {\n                // Replace this nextFetchPolicy function in the options object with the\n                // original this.options.nextFetchPolicy value.\n                this.nextFetchPolicy = nextFetchPolicy;\n                // If the original nextFetchPolicy value was a function, give it a\n                // chance to decide what happens here.\n                if (typeof this.nextFetchPolicy === \"function\") {\n                    return this.nextFetchPolicy(currentFetchPolicy, context);\n                }\n                // Otherwise go back to the original this.options.fetchPolicy.\n                return fetchPolicy;\n            },\n        });\n    }\n    return obsQuery.reobserve();\n}\nfunction defaultSubscriptionObserverErrorCallback(error) {\n    globalThis.__DEV__ !== false && invariant.error(23, error.message, error.stack);\n}\nexport function logMissingFieldErrors(missing) {\n    if (globalThis.__DEV__ !== false && missing) {\n        globalThis.__DEV__ !== false && invariant.debug(24, missing);\n    }\n}\nfunction skipCacheDataFor(fetchPolicy /* `undefined` would mean `\"cache-first\"` */) {\n    return (fetchPolicy === \"network-only\" ||\n        fetchPolicy === \"no-cache\" ||\n        fetchPolicy === \"standby\");\n}\n//# sourceMappingURL=ObservableQuery.js.map", "import { __assign, __awaiter, __generator } from \"tslib\";\nimport { invariant } from \"../utilities/globals/index.js\";\nimport { visit, BREAK, isSelectionNode } from \"graphql\";\nimport { argumentsObjectFromField, buildQueryFromSelectionSet, createFragmentMap, getFragmentDefinitions, getMainDefinition, hasDirectives, isField, isInlineFragment, mergeDeep, mergeDeepArray, removeClientSetsFromDocument, resultKeyNameFromField, shouldInclude, } from \"../utilities/index.js\";\nimport { cacheSlot } from \"../cache/index.js\";\nvar LocalState = /** @class */ (function () {\n    function LocalState(_a) {\n        var cache = _a.cache, client = _a.client, resolvers = _a.resolvers, fragmentMatcher = _a.fragmentMatcher;\n        this.selectionsToResolveCache = new WeakMap();\n        this.cache = cache;\n        if (client) {\n            this.client = client;\n        }\n        if (resolvers) {\n            this.addResolvers(resolvers);\n        }\n        if (fragmentMatcher) {\n            this.setFragmentMatcher(fragmentMatcher);\n        }\n    }\n    LocalState.prototype.addResolvers = function (resolvers) {\n        var _this = this;\n        this.resolvers = this.resolvers || {};\n        if (Array.isArray(resolvers)) {\n            resolvers.forEach(function (resolverGroup) {\n                _this.resolvers = mergeDeep(_this.resolvers, resolverGroup);\n            });\n        }\n        else {\n            this.resolvers = mergeDeep(this.resolvers, resolvers);\n        }\n    };\n    LocalState.prototype.setResolvers = function (resolvers) {\n        this.resolvers = {};\n        this.addResolvers(resolvers);\n    };\n    LocalState.prototype.getResolvers = function () {\n        return this.resolvers || {};\n    };\n    // Run local client resolvers against the incoming query and remote data.\n    // Locally resolved field values are merged with the incoming remote data,\n    // and returned. Note that locally resolved fields will overwrite\n    // remote data using the same field name.\n    LocalState.prototype.runResolvers = function (_a) {\n        return __awaiter(this, arguments, void 0, function (_b) {\n            var document = _b.document, remoteResult = _b.remoteResult, context = _b.context, variables = _b.variables, _c = _b.onlyRunForcedResolvers, onlyRunForcedResolvers = _c === void 0 ? false : _c;\n            return __generator(this, function (_d) {\n                if (document) {\n                    return [2 /*return*/, this.resolveDocument(document, remoteResult.data, context, variables, this.fragmentMatcher, onlyRunForcedResolvers).then(function (localResult) { return (__assign(__assign({}, remoteResult), { data: localResult.result })); })];\n                }\n                return [2 /*return*/, remoteResult];\n            });\n        });\n    };\n    LocalState.prototype.setFragmentMatcher = function (fragmentMatcher) {\n        this.fragmentMatcher = fragmentMatcher;\n    };\n    LocalState.prototype.getFragmentMatcher = function () {\n        return this.fragmentMatcher;\n    };\n    // Client queries contain everything in the incoming document (if a @client\n    // directive is found).\n    LocalState.prototype.clientQuery = function (document) {\n        if (hasDirectives([\"client\"], document)) {\n            if (this.resolvers) {\n                return document;\n            }\n        }\n        return null;\n    };\n    // Server queries are stripped of all @client based selection sets.\n    LocalState.prototype.serverQuery = function (document) {\n        return removeClientSetsFromDocument(document);\n    };\n    LocalState.prototype.prepareContext = function (context) {\n        var cache = this.cache;\n        return __assign(__assign({}, context), { cache: cache, \n            // Getting an entry's cache key is useful for local state resolvers.\n            getCacheKey: function (obj) {\n                return cache.identify(obj);\n            } });\n    };\n    // To support `@client @export(as: \"someVar\")` syntax, we'll first resolve\n    // @client @export fields locally, then pass the resolved values back to be\n    // used alongside the original operation variables.\n    LocalState.prototype.addExportedVariables = function (document_1) {\n        return __awaiter(this, arguments, void 0, function (document, variables, context) {\n            if (variables === void 0) { variables = {}; }\n            if (context === void 0) { context = {}; }\n            return __generator(this, function (_a) {\n                if (document) {\n                    return [2 /*return*/, this.resolveDocument(document, this.buildRootValueFromCache(document, variables) || {}, this.prepareContext(context), variables).then(function (data) { return (__assign(__assign({}, variables), data.exportedVariables)); })];\n                }\n                return [2 /*return*/, __assign({}, variables)];\n            });\n        });\n    };\n    LocalState.prototype.shouldForceResolvers = function (document) {\n        var forceResolvers = false;\n        visit(document, {\n            Directive: {\n                enter: function (node) {\n                    if (node.name.value === \"client\" && node.arguments) {\n                        forceResolvers = node.arguments.some(function (arg) {\n                            return arg.name.value === \"always\" &&\n                                arg.value.kind === \"BooleanValue\" &&\n                                arg.value.value === true;\n                        });\n                        if (forceResolvers) {\n                            return BREAK;\n                        }\n                    }\n                },\n            },\n        });\n        return forceResolvers;\n    };\n    // Query the cache and return matching data.\n    LocalState.prototype.buildRootValueFromCache = function (document, variables) {\n        return this.cache.diff({\n            query: buildQueryFromSelectionSet(document),\n            variables: variables,\n            returnPartialData: true,\n            optimistic: false,\n        }).result;\n    };\n    LocalState.prototype.resolveDocument = function (document_1, rootValue_1) {\n        return __awaiter(this, arguments, void 0, function (document, rootValue, context, variables, fragmentMatcher, onlyRunForcedResolvers) {\n            var mainDefinition, fragments, fragmentMap, selectionsToResolve, definitionOperation, defaultOperationType, _a, cache, client, execContext, isClientFieldDescendant;\n            if (context === void 0) { context = {}; }\n            if (variables === void 0) { variables = {}; }\n            if (fragmentMatcher === void 0) { fragmentMatcher = function () { return true; }; }\n            if (onlyRunForcedResolvers === void 0) { onlyRunForcedResolvers = false; }\n            return __generator(this, function (_b) {\n                mainDefinition = getMainDefinition(document);\n                fragments = getFragmentDefinitions(document);\n                fragmentMap = createFragmentMap(fragments);\n                selectionsToResolve = this.collectSelectionsToResolve(mainDefinition, fragmentMap);\n                definitionOperation = mainDefinition.operation;\n                defaultOperationType = definitionOperation ?\n                    definitionOperation.charAt(0).toUpperCase() +\n                        definitionOperation.slice(1)\n                    : \"Query\";\n                _a = this, cache = _a.cache, client = _a.client;\n                execContext = {\n                    fragmentMap: fragmentMap,\n                    context: __assign(__assign({}, context), { cache: cache, client: client }),\n                    variables: variables,\n                    fragmentMatcher: fragmentMatcher,\n                    defaultOperationType: defaultOperationType,\n                    exportedVariables: {},\n                    selectionsToResolve: selectionsToResolve,\n                    onlyRunForcedResolvers: onlyRunForcedResolvers,\n                };\n                isClientFieldDescendant = false;\n                return [2 /*return*/, this.resolveSelectionSet(mainDefinition.selectionSet, isClientFieldDescendant, rootValue, execContext).then(function (result) { return ({\n                        result: result,\n                        exportedVariables: execContext.exportedVariables,\n                    }); })];\n            });\n        });\n    };\n    LocalState.prototype.resolveSelectionSet = function (selectionSet, isClientFieldDescendant, rootValue, execContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var fragmentMap, context, variables, resultsToMerge, execute;\n            var _this = this;\n            return __generator(this, function (_a) {\n                fragmentMap = execContext.fragmentMap, context = execContext.context, variables = execContext.variables;\n                resultsToMerge = [rootValue];\n                execute = function (selection) { return __awaiter(_this, void 0, void 0, function () {\n                    var fragment, typeCondition;\n                    return __generator(this, function (_a) {\n                        if (!isClientFieldDescendant &&\n                            !execContext.selectionsToResolve.has(selection)) {\n                            // Skip selections without @client directives\n                            // (still processing if one of the ancestors or one of the child fields has @client directive)\n                            return [2 /*return*/];\n                        }\n                        if (!shouldInclude(selection, variables)) {\n                            // Skip this entirely.\n                            return [2 /*return*/];\n                        }\n                        if (isField(selection)) {\n                            return [2 /*return*/, this.resolveField(selection, isClientFieldDescendant, rootValue, execContext).then(function (fieldResult) {\n                                    var _a;\n                                    if (typeof fieldResult !== \"undefined\") {\n                                        resultsToMerge.push((_a = {},\n                                            _a[resultKeyNameFromField(selection)] = fieldResult,\n                                            _a));\n                                    }\n                                })];\n                        }\n                        if (isInlineFragment(selection)) {\n                            fragment = selection;\n                        }\n                        else {\n                            // This is a named fragment.\n                            fragment = fragmentMap[selection.name.value];\n                            invariant(fragment, 18, selection.name.value);\n                        }\n                        if (fragment && fragment.typeCondition) {\n                            typeCondition = fragment.typeCondition.name.value;\n                            if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {\n                                return [2 /*return*/, this.resolveSelectionSet(fragment.selectionSet, isClientFieldDescendant, rootValue, execContext).then(function (fragmentResult) {\n                                        resultsToMerge.push(fragmentResult);\n                                    })];\n                            }\n                        }\n                        return [2 /*return*/];\n                    });\n                }); };\n                return [2 /*return*/, Promise.all(selectionSet.selections.map(execute)).then(function () {\n                        return mergeDeepArray(resultsToMerge);\n                    })];\n            });\n        });\n    };\n    LocalState.prototype.resolveField = function (field, isClientFieldDescendant, rootValue, execContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var variables, fieldName, aliasedFieldName, aliasUsed, defaultResult, resultPromise, resolverType, resolverMap, resolve;\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (!rootValue) {\n                    return [2 /*return*/, null];\n                }\n                variables = execContext.variables;\n                fieldName = field.name.value;\n                aliasedFieldName = resultKeyNameFromField(field);\n                aliasUsed = fieldName !== aliasedFieldName;\n                defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];\n                resultPromise = Promise.resolve(defaultResult);\n                // Usually all local resolvers are run when passing through here, but\n                // if we've specifically identified that we only want to run forced\n                // resolvers (that is, resolvers for fields marked with\n                // `@client(always: true)`), then we'll skip running non-forced resolvers.\n                if (!execContext.onlyRunForcedResolvers ||\n                    this.shouldForceResolvers(field)) {\n                    resolverType = rootValue.__typename || execContext.defaultOperationType;\n                    resolverMap = this.resolvers && this.resolvers[resolverType];\n                    if (resolverMap) {\n                        resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];\n                        if (resolve) {\n                            resultPromise = Promise.resolve(\n                            // In case the resolve function accesses reactive variables,\n                            // set cacheSlot to the current cache instance.\n                            cacheSlot.withValue(this.cache, resolve, [\n                                rootValue,\n                                argumentsObjectFromField(field, variables),\n                                execContext.context,\n                                { field: field, fragmentMap: execContext.fragmentMap },\n                            ]));\n                        }\n                    }\n                }\n                return [2 /*return*/, resultPromise.then(function (result) {\n                        var _a, _b;\n                        if (result === void 0) { result = defaultResult; }\n                        // If an @export directive is associated with the current field, store\n                        // the `as` export variable name and current result for later use.\n                        if (field.directives) {\n                            field.directives.forEach(function (directive) {\n                                if (directive.name.value === \"export\" && directive.arguments) {\n                                    directive.arguments.forEach(function (arg) {\n                                        if (arg.name.value === \"as\" && arg.value.kind === \"StringValue\") {\n                                            execContext.exportedVariables[arg.value.value] = result;\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                        // Handle all scalar types here.\n                        if (!field.selectionSet) {\n                            return result;\n                        }\n                        // From here down, the field has a selection set, which means it's trying\n                        // to query a GraphQLObjectType.\n                        if (result == null) {\n                            // Basically any field in a GraphQL response can be null, or missing\n                            return result;\n                        }\n                        var isClientField = (_b = (_a = field.directives) === null || _a === void 0 ? void 0 : _a.some(function (d) { return d.name.value === \"client\"; })) !== null && _b !== void 0 ? _b : false;\n                        if (Array.isArray(result)) {\n                            return _this.resolveSubSelectedArray(field, isClientFieldDescendant || isClientField, result, execContext);\n                        }\n                        // Returned value is an object, and the query has a sub-selection. Recurse.\n                        if (field.selectionSet) {\n                            return _this.resolveSelectionSet(field.selectionSet, isClientFieldDescendant || isClientField, result, execContext);\n                        }\n                    })];\n            });\n        });\n    };\n    LocalState.prototype.resolveSubSelectedArray = function (field, isClientFieldDescendant, result, execContext) {\n        var _this = this;\n        return Promise.all(result.map(function (item) {\n            if (item === null) {\n                return null;\n            }\n            // This is a nested array, recurse.\n            if (Array.isArray(item)) {\n                return _this.resolveSubSelectedArray(field, isClientFieldDescendant, item, execContext);\n            }\n            // This is an object, run the selection set on it.\n            if (field.selectionSet) {\n                return _this.resolveSelectionSet(field.selectionSet, isClientFieldDescendant, item, execContext);\n            }\n        }));\n    };\n    // Collect selection nodes on paths from document root down to all @client directives.\n    // This function takes into account transitive fragment spreads.\n    // Complexity equals to a single `visit` over the full document.\n    LocalState.prototype.collectSelectionsToResolve = function (mainDefinition, fragmentMap) {\n        var isSingleASTNode = function (node) { return !Array.isArray(node); };\n        var selectionsToResolveCache = this.selectionsToResolveCache;\n        function collectByDefinition(definitionNode) {\n            if (!selectionsToResolveCache.has(definitionNode)) {\n                var matches_1 = new Set();\n                selectionsToResolveCache.set(definitionNode, matches_1);\n                visit(definitionNode, {\n                    Directive: function (node, _, __, ___, ancestors) {\n                        if (node.name.value === \"client\") {\n                            ancestors.forEach(function (node) {\n                                if (isSingleASTNode(node) && isSelectionNode(node)) {\n                                    matches_1.add(node);\n                                }\n                            });\n                        }\n                    },\n                    FragmentSpread: function (spread, _, __, ___, ancestors) {\n                        var fragment = fragmentMap[spread.name.value];\n                        invariant(fragment, 19, spread.name.value);\n                        var fragmentSelections = collectByDefinition(fragment);\n                        if (fragmentSelections.size > 0) {\n                            // Fragment for this spread contains @client directive (either directly or transitively)\n                            // Collect selection nodes on paths from the root down to fields with the @client directive\n                            ancestors.forEach(function (node) {\n                                if (isSingleASTNode(node) && isSelectionNode(node)) {\n                                    matches_1.add(node);\n                                }\n                            });\n                            matches_1.add(spread);\n                            fragmentSelections.forEach(function (selection) {\n                                matches_1.add(selection);\n                            });\n                        }\n                    },\n                });\n            }\n            return selectionsToResolveCache.get(definitionNode);\n        }\n        return collectByDefinition(mainDefinition);\n    };\n    return LocalState;\n}());\nexport { LocalState };\n//# sourceMappingURL=LocalState.js.map", "import { __assign } from \"tslib\";\nimport { equal } from \"@wry/equality\";\nimport { DeepMerger } from \"../utilities/index.js\";\nimport { mergeIncrementalData } from \"../utilities/index.js\";\nimport { reobserveCacheFirst } from \"./ObservableQuery.js\";\nimport { isNonEmptyArray, graphQLResultHasError, canUseWeakMap, } from \"../utilities/index.js\";\nimport { NetworkStatus, isNetworkRequestInFlight } from \"./networkStatus.js\";\nvar destructiveMethodCounts = new (canUseWeakMap ? WeakMap : Map)();\nfunction wrapDestructiveCacheMethod(cache, methodName) {\n    var original = cache[methodName];\n    if (typeof original === \"function\") {\n        // @ts-expect-error this is just too generic to be typed correctly\n        cache[methodName] = function () {\n            destructiveMethodCounts.set(cache, \n            // The %1e15 allows the count to wrap around to 0 safely every\n            // quadrillion evictions, so there's no risk of overflow. To be\n            // clear, this is more of a pedantic principle than something\n            // that matters in any conceivable practical scenario.\n            (destructiveMethodCounts.get(cache) + 1) % 1e15);\n            // @ts-expect-error this is just too generic to be typed correctly\n            return original.apply(this, arguments);\n        };\n    }\n}\nfunction cancelNotifyTimeout(info) {\n    if (info[\"notifyTimeout\"]) {\n        clearTimeout(info[\"notifyTimeout\"]);\n        info[\"notifyTimeout\"] = void 0;\n    }\n}\n// A QueryInfo object represents a single query managed by the\n// QueryManager, which tracks all QueryInfo objects by queryId in its\n// this.queries Map. QueryInfo objects store the latest results and errors\n// for the given query, and are responsible for reporting those results to\n// the corresponding ObservableQuery, via the QueryInfo.notify method.\n// Results are reported asynchronously whenever setDiff marks the\n// QueryInfo object as dirty, though a call to the QueryManager's\n// broadcastQueries method may trigger the notification before it happens\n// automatically. This class used to be a simple interface type without\n// any field privacy or meaningful methods, which is why it still has so\n// many public fields. The effort to lock down and simplify the QueryInfo\n// interface is ongoing, and further improvements are welcome.\nvar QueryInfo = /** @class */ (function () {\n    function QueryInfo(queryManager, queryId) {\n        if (queryId === void 0) { queryId = queryManager.generateQueryId(); }\n        this.queryId = queryId;\n        this.listeners = new Set();\n        this.document = null;\n        this.lastRequestId = 1;\n        this.stopped = false;\n        this.dirty = false;\n        this.observableQuery = null;\n        var cache = (this.cache = queryManager.cache);\n        // Track how often cache.evict is called, since we want eviction to\n        // override the feud-stopping logic in the markResult method, by\n        // causing shouldWrite to return true. Wrapping the cache.evict method\n        // is a bit of a hack, but it saves us from having to make eviction\n        // counting an official part of the ApolloCache API.\n        if (!destructiveMethodCounts.has(cache)) {\n            destructiveMethodCounts.set(cache, 0);\n            wrapDestructiveCacheMethod(cache, \"evict\");\n            wrapDestructiveCacheMethod(cache, \"modify\");\n            wrapDestructiveCacheMethod(cache, \"reset\");\n        }\n    }\n    QueryInfo.prototype.init = function (query) {\n        var networkStatus = query.networkStatus || NetworkStatus.loading;\n        if (this.variables &&\n            this.networkStatus !== NetworkStatus.loading &&\n            !equal(this.variables, query.variables)) {\n            networkStatus = NetworkStatus.setVariables;\n        }\n        if (!equal(query.variables, this.variables)) {\n            this.lastDiff = void 0;\n        }\n        Object.assign(this, {\n            document: query.document,\n            variables: query.variables,\n            networkError: null,\n            graphQLErrors: this.graphQLErrors || [],\n            networkStatus: networkStatus,\n        });\n        if (query.observableQuery) {\n            this.setObservableQuery(query.observableQuery);\n        }\n        if (query.lastRequestId) {\n            this.lastRequestId = query.lastRequestId;\n        }\n        return this;\n    };\n    QueryInfo.prototype.reset = function () {\n        cancelNotifyTimeout(this);\n        this.dirty = false;\n    };\n    QueryInfo.prototype.resetDiff = function () {\n        this.lastDiff = void 0;\n    };\n    QueryInfo.prototype.getDiff = function () {\n        var options = this.getDiffOptions();\n        if (this.lastDiff && equal(options, this.lastDiff.options)) {\n            return this.lastDiff.diff;\n        }\n        this.updateWatch(this.variables);\n        var oq = this.observableQuery;\n        if (oq && oq.options.fetchPolicy === \"no-cache\") {\n            return { complete: false };\n        }\n        var diff = this.cache.diff(options);\n        this.updateLastDiff(diff, options);\n        return diff;\n    };\n    QueryInfo.prototype.updateLastDiff = function (diff, options) {\n        this.lastDiff =\n            diff ?\n                {\n                    diff: diff,\n                    options: options || this.getDiffOptions(),\n                }\n                : void 0;\n    };\n    QueryInfo.prototype.getDiffOptions = function (variables) {\n        var _a;\n        if (variables === void 0) { variables = this.variables; }\n        return {\n            query: this.document,\n            variables: variables,\n            returnPartialData: true,\n            optimistic: true,\n            canonizeResults: (_a = this.observableQuery) === null || _a === void 0 ? void 0 : _a.options.canonizeResults,\n        };\n    };\n    QueryInfo.prototype.setDiff = function (diff) {\n        var _this = this;\n        var _a;\n        var oldDiff = this.lastDiff && this.lastDiff.diff;\n        // If we do not tolerate partial results, skip this update to prevent it\n        // from being reported. This prevents a situtuation where a query that\n        // errors and another succeeds with overlapping data does not report the\n        // partial data result to the errored query.\n        //\n        // See https://github.com/apollographql/apollo-client/issues/11400 for more\n        // information on this issue.\n        if (diff &&\n            !diff.complete &&\n            !((_a = this.observableQuery) === null || _a === void 0 ? void 0 : _a.options.returnPartialData) &&\n            // In the case of a cache eviction, the diff will become partial so we\n            // schedule a notification to send a network request (this.oqListener) to\n            // go and fetch the missing data.\n            !(oldDiff && oldDiff.complete)) {\n            return;\n        }\n        this.updateLastDiff(diff);\n        if (!this.dirty && !equal(oldDiff && oldDiff.result, diff && diff.result)) {\n            this.dirty = true;\n            if (!this.notifyTimeout) {\n                this.notifyTimeout = setTimeout(function () { return _this.notify(); }, 0);\n            }\n        }\n    };\n    QueryInfo.prototype.setObservableQuery = function (oq) {\n        var _this = this;\n        if (oq === this.observableQuery)\n            return;\n        if (this.oqListener) {\n            this.listeners.delete(this.oqListener);\n        }\n        this.observableQuery = oq;\n        if (oq) {\n            oq[\"queryInfo\"] = this;\n            this.listeners.add((this.oqListener = function () {\n                var diff = _this.getDiff();\n                if (diff.fromOptimisticTransaction) {\n                    // If this diff came from an optimistic transaction, deliver the\n                    // current cache data to the ObservableQuery, but don't perform a\n                    // reobservation, since oq.reobserveCacheFirst might make a network\n                    // request, and we never want to trigger network requests in the\n                    // middle of optimistic updates.\n                    oq[\"observe\"]();\n                }\n                else {\n                    // Otherwise, make the ObservableQuery \"reobserve\" the latest data\n                    // using a temporary fetch policy of \"cache-first\", so complete cache\n                    // results have a chance to be delivered without triggering additional\n                    // network requests, even when options.fetchPolicy is \"network-only\"\n                    // or \"cache-and-network\". All other fetch policies are preserved by\n                    // this method, and are handled by calling oq.reobserve(). If this\n                    // reobservation is spurious, isDifferentFromLastResult still has a\n                    // chance to catch it before delivery to ObservableQuery subscribers.\n                    reobserveCacheFirst(oq);\n                }\n            }));\n        }\n        else {\n            delete this.oqListener;\n        }\n    };\n    QueryInfo.prototype.notify = function () {\n        var _this = this;\n        cancelNotifyTimeout(this);\n        if (this.shouldNotify()) {\n            this.listeners.forEach(function (listener) { return listener(_this); });\n        }\n        this.dirty = false;\n    };\n    QueryInfo.prototype.shouldNotify = function () {\n        if (!this.dirty || !this.listeners.size) {\n            return false;\n        }\n        if (isNetworkRequestInFlight(this.networkStatus) && this.observableQuery) {\n            var fetchPolicy = this.observableQuery.options.fetchPolicy;\n            if (fetchPolicy !== \"cache-only\" && fetchPolicy !== \"cache-and-network\") {\n                return false;\n            }\n        }\n        return true;\n    };\n    QueryInfo.prototype.stop = function () {\n        if (!this.stopped) {\n            this.stopped = true;\n            // Cancel the pending notify timeout\n            this.reset();\n            this.cancel();\n            // Revert back to the no-op version of cancel inherited from\n            // QueryInfo.prototype.\n            this.cancel = QueryInfo.prototype.cancel;\n            var oq = this.observableQuery;\n            if (oq)\n                oq.stopPolling();\n        }\n    };\n    // This method is a no-op by default, until/unless overridden by the\n    // updateWatch method.\n    QueryInfo.prototype.cancel = function () { };\n    QueryInfo.prototype.updateWatch = function (variables) {\n        var _this = this;\n        if (variables === void 0) { variables = this.variables; }\n        var oq = this.observableQuery;\n        if (oq && oq.options.fetchPolicy === \"no-cache\") {\n            return;\n        }\n        var watchOptions = __assign(__assign({}, this.getDiffOptions(variables)), { watcher: this, callback: function (diff) { return _this.setDiff(diff); } });\n        if (!this.lastWatch || !equal(watchOptions, this.lastWatch)) {\n            this.cancel();\n            this.cancel = this.cache.watch((this.lastWatch = watchOptions));\n        }\n    };\n    QueryInfo.prototype.resetLastWrite = function () {\n        this.lastWrite = void 0;\n    };\n    QueryInfo.prototype.shouldWrite = function (result, variables) {\n        var lastWrite = this.lastWrite;\n        return !(lastWrite &&\n            // If cache.evict has been called since the last time we wrote this\n            // data into the cache, there's a chance writing this result into\n            // the cache will repair what was evicted.\n            lastWrite.dmCount === destructiveMethodCounts.get(this.cache) &&\n            equal(variables, lastWrite.variables) &&\n            equal(result.data, lastWrite.result.data));\n    };\n    QueryInfo.prototype.markResult = function (result, document, options, cacheWriteBehavior) {\n        var _this = this;\n        var merger = new DeepMerger();\n        var graphQLErrors = isNonEmptyArray(result.errors) ? result.errors.slice(0) : [];\n        // Cancel the pending notify timeout (if it exists) to prevent extraneous network\n        // requests. To allow future notify timeouts, diff and dirty are reset as well.\n        this.reset();\n        if (\"incremental\" in result && isNonEmptyArray(result.incremental)) {\n            var mergedData = mergeIncrementalData(this.getDiff().result, result);\n            result.data = mergedData;\n            // Detect the first chunk of a deferred query and merge it with existing\n            // cache data. This ensures a `cache-first` fetch policy that returns\n            // partial cache data or a `cache-and-network` fetch policy that already\n            // has full data in the cache does not complain when trying to merge the\n            // initial deferred server data with existing cache data.\n        }\n        else if (\"hasNext\" in result && result.hasNext) {\n            var diff = this.getDiff();\n            result.data = merger.merge(diff.result, result.data);\n        }\n        this.graphQLErrors = graphQLErrors;\n        if (options.fetchPolicy === \"no-cache\") {\n            this.updateLastDiff({ result: result.data, complete: true }, this.getDiffOptions(options.variables));\n        }\n        else if (cacheWriteBehavior !== 0 /* CacheWriteBehavior.FORBID */) {\n            if (shouldWriteResult(result, options.errorPolicy)) {\n                // Using a transaction here so we have a chance to read the result\n                // back from the cache before the watch callback fires as a result\n                // of writeQuery, so we can store the new diff quietly and ignore\n                // it when we receive it redundantly from the watch callback.\n                this.cache.performTransaction(function (cache) {\n                    if (_this.shouldWrite(result, options.variables)) {\n                        cache.writeQuery({\n                            query: document,\n                            data: result.data,\n                            variables: options.variables,\n                            overwrite: cacheWriteBehavior === 1 /* CacheWriteBehavior.OVERWRITE */,\n                        });\n                        _this.lastWrite = {\n                            result: result,\n                            variables: options.variables,\n                            dmCount: destructiveMethodCounts.get(_this.cache),\n                        };\n                    }\n                    else {\n                        // If result is the same as the last result we received from\n                        // the network (and the variables match too), avoid writing\n                        // result into the cache again. The wisdom of skipping this\n                        // cache write is far from obvious, since any cache write\n                        // could be the one that puts the cache back into a desired\n                        // state, fixing corruption or missing data. However, if we\n                        // always write every network result into the cache, we enable\n                        // feuds between queries competing to update the same data in\n                        // incompatible ways, which can lead to an endless cycle of\n                        // cache broadcasts and useless network requests. As with any\n                        // feud, eventually one side must step back from the brink,\n                        // letting the other side(s) have the last word(s). There may\n                        // be other points where we could break this cycle, such as\n                        // silencing the broadcast for cache.writeQuery (not a good\n                        // idea, since it just delays the feud a bit) or somehow\n                        // avoiding the network request that just happened (also bad,\n                        // because the server could return useful new data). All\n                        // options considered, skipping this cache write seems to be\n                        // the least damaging place to break the cycle, because it\n                        // reflects the intuition that we recently wrote this exact\n                        // result into the cache, so the cache *should* already/still\n                        // contain this data. If some other query has clobbered that\n                        // data in the meantime, that's too bad, but there will be no\n                        // winners if every query blindly reverts to its own version\n                        // of the data. This approach also gives the network a chance\n                        // to return new data, which will be written into the cache as\n                        // usual, notifying only those queries that are directly\n                        // affected by the cache updates, as usual. In the future, an\n                        // even more sophisticated cache could perhaps prevent or\n                        // mitigate the clobbering somehow, but that would make this\n                        // particular cache write even less important, and thus\n                        // skipping it would be even safer than it is today.\n                        if (_this.lastDiff && _this.lastDiff.diff.complete) {\n                            // Reuse data from the last good (complete) diff that we\n                            // received, when possible.\n                            result.data = _this.lastDiff.diff.result;\n                            return;\n                        }\n                        // If the previous this.diff was incomplete, fall through to\n                        // re-reading the latest data with cache.diff, below.\n                    }\n                    var diffOptions = _this.getDiffOptions(options.variables);\n                    var diff = cache.diff(diffOptions);\n                    // In case the QueryManager stops this QueryInfo before its\n                    // results are delivered, it's important to avoid restarting the\n                    // cache watch when markResult is called. We also avoid updating\n                    // the watch if we are writing a result that doesn't match the current\n                    // variables to avoid race conditions from broadcasting the wrong\n                    // result.\n                    if (!_this.stopped && equal(_this.variables, options.variables)) {\n                        // Any time we're about to update this.diff, we need to make\n                        // sure we've started watching the cache.\n                        _this.updateWatch(options.variables);\n                    }\n                    // If we're allowed to write to the cache, and we can read a\n                    // complete result from the cache, update result.data to be the\n                    // result from the cache, rather than the raw network result.\n                    // Set without setDiff to avoid triggering a notify call, since\n                    // we have other ways of notifying for this result.\n                    _this.updateLastDiff(diff, diffOptions);\n                    if (diff.complete) {\n                        result.data = diff.result;\n                    }\n                });\n            }\n            else {\n                this.lastWrite = void 0;\n            }\n        }\n    };\n    QueryInfo.prototype.markReady = function () {\n        this.networkError = null;\n        return (this.networkStatus = NetworkStatus.ready);\n    };\n    QueryInfo.prototype.markError = function (error) {\n        this.networkStatus = NetworkStatus.error;\n        this.lastWrite = void 0;\n        this.reset();\n        if (error.graphQLErrors) {\n            this.graphQLErrors = error.graphQLErrors;\n        }\n        if (error.networkError) {\n            this.networkError = error.networkError;\n        }\n        return error;\n    };\n    return QueryInfo;\n}());\nexport { QueryInfo };\nexport function shouldWriteResult(result, errorPolicy) {\n    if (errorPolicy === void 0) { errorPolicy = \"none\"; }\n    var ignoreErrors = errorPolicy === \"ignore\" || errorPolicy === \"all\";\n    var writeWithErrors = !graphQLResultHasError(result);\n    if (!writeWithErrors && ignoreErrors && result.data) {\n        writeWithErrors = true;\n    }\n    return writeWithErrors;\n}\n//# sourceMappingURL=QueryInfo.js.map", "import { __assign, __awaiter, __generator } from \"tslib\";\nimport { invariant, newInvariantError } from \"../utilities/globals/index.js\";\nimport { equal } from \"@wry/equality\";\nimport { execute } from \"../link/core/index.js\";\nimport { hasDirectives, isExecutionPatchIncrementalResult, isExecutionPatchResult, removeDirectivesFromDocument, } from \"../utilities/index.js\";\nimport { canonicalStringify } from \"../cache/index.js\";\nimport { getDefaultValues, getOperationDefinition, getOperationName, hasClientExports, graphQLResultHasError, getGraphQLErrorsFromResult, Observable, asyncMap, isNonEmptyArray, Concast, makeUniqueId, isDocumentNode, isNonNullObject, DocumentTransform, } from \"../utilities/index.js\";\nimport { mergeIncrementalData } from \"../utilities/common/incrementalResult.js\";\nimport { ApolloError, isApolloError, graphQLResultHasProtocolErrors, } from \"../errors/index.js\";\nimport { ObservableQuery, logMissingFieldErrors } from \"./ObservableQuery.js\";\nimport { NetworkStatus, isNetworkRequestInFlight } from \"./networkStatus.js\";\nimport { LocalState } from \"./LocalState.js\";\nimport { QueryInfo, shouldWriteResult, } from \"./QueryInfo.js\";\nimport { PROTOCOL_ERRORS_SYMBOL } from \"../errors/index.js\";\nimport { print } from \"../utilities/index.js\";\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar IGNORE = Object.create(null);\nimport { Trie } from \"@wry/trie\";\nimport { AutoCleanedWeakCache, cacheSizes } from \"../utilities/index.js\";\nvar QueryManager = /** @class */ (function () {\n    function QueryManager(_a) {\n        var cache = _a.cache, link = _a.link, defaultOptions = _a.defaultOptions, documentTransform = _a.documentTransform, _b = _a.queryDeduplication, queryDeduplication = _b === void 0 ? false : _b, onBroadcast = _a.onBroadcast, _c = _a.ssrMode, ssrMode = _c === void 0 ? false : _c, _d = _a.clientAwareness, clientAwareness = _d === void 0 ? {} : _d, localState = _a.localState, _e = _a.assumeImmutableResults, assumeImmutableResults = _e === void 0 ? !!cache.assumeImmutableResults : _e, defaultContext = _a.defaultContext;\n        var _this = this;\n        this.clientAwareness = {};\n        // All the queries that the QueryManager is currently managing (not\n        // including mutations and subscriptions).\n        this.queries = new Map();\n        // Maps from queryId strings to Promise rejection functions for\n        // currently active queries and fetches.\n        // Use protected instead of private field so\n        // @apollo/experimental-nextjs-app-support can access type info.\n        this.fetchCancelFns = new Map();\n        this.transformCache = new AutoCleanedWeakCache(cacheSizes[\"queryManager.getDocumentInfo\"] ||\n            2000 /* defaultCacheSizes[\"queryManager.getDocumentInfo\"] */);\n        this.queryIdCounter = 1;\n        this.requestIdCounter = 1;\n        this.mutationIdCounter = 1;\n        // Use protected instead of private field so\n        // @apollo/experimental-nextjs-app-support can access type info.\n        this.inFlightLinkObservables = new Trie(false);\n        var defaultDocumentTransform = new DocumentTransform(function (document) { return _this.cache.transformDocument(document); }, \n        // Allow the apollo cache to manage its own transform caches\n        { cache: false });\n        this.cache = cache;\n        this.link = link;\n        this.defaultOptions = defaultOptions || Object.create(null);\n        this.queryDeduplication = queryDeduplication;\n        this.clientAwareness = clientAwareness;\n        this.localState = localState || new LocalState({ cache: cache });\n        this.ssrMode = ssrMode;\n        this.assumeImmutableResults = assumeImmutableResults;\n        this.documentTransform =\n            documentTransform ?\n                defaultDocumentTransform\n                    .concat(documentTransform)\n                    // The custom document transform may add new fragment spreads or new\n                    // field selections, so we want to give the cache a chance to run\n                    // again. For example, the InMemoryCache adds __typename to field\n                    // selections and fragments from the fragment registry.\n                    .concat(defaultDocumentTransform)\n                : defaultDocumentTransform;\n        this.defaultContext = defaultContext || Object.create(null);\n        if ((this.onBroadcast = onBroadcast)) {\n            this.mutationStore = Object.create(null);\n        }\n    }\n    /**\n     * Call this method to terminate any active query processes, making it safe\n     * to dispose of this QueryManager instance.\n     */\n    QueryManager.prototype.stop = function () {\n        var _this = this;\n        this.queries.forEach(function (_info, queryId) {\n            _this.stopQueryNoBroadcast(queryId);\n        });\n        this.cancelPendingFetches(newInvariantError(25));\n    };\n    QueryManager.prototype.cancelPendingFetches = function (error) {\n        this.fetchCancelFns.forEach(function (cancel) { return cancel(error); });\n        this.fetchCancelFns.clear();\n    };\n    QueryManager.prototype.mutate = function (_a) {\n        return __awaiter(this, arguments, void 0, function (_b) {\n            var mutationId, hasClientExports, mutationStoreValue, isOptimistic, self;\n            var _c, _d;\n            var mutation = _b.mutation, variables = _b.variables, optimisticResponse = _b.optimisticResponse, updateQueries = _b.updateQueries, _e = _b.refetchQueries, refetchQueries = _e === void 0 ? [] : _e, _f = _b.awaitRefetchQueries, awaitRefetchQueries = _f === void 0 ? false : _f, updateWithProxyFn = _b.update, onQueryUpdated = _b.onQueryUpdated, _g = _b.fetchPolicy, fetchPolicy = _g === void 0 ? ((_c = this.defaultOptions.mutate) === null || _c === void 0 ? void 0 : _c.fetchPolicy) || \"network-only\" : _g, _h = _b.errorPolicy, errorPolicy = _h === void 0 ? ((_d = this.defaultOptions.mutate) === null || _d === void 0 ? void 0 : _d.errorPolicy) || \"none\" : _h, keepRootFields = _b.keepRootFields, context = _b.context;\n            return __generator(this, function (_j) {\n                switch (_j.label) {\n                    case 0:\n                        invariant(mutation, 26);\n                        invariant(fetchPolicy === \"network-only\" || fetchPolicy === \"no-cache\", 27);\n                        mutationId = this.generateMutationId();\n                        mutation = this.cache.transformForLink(this.transform(mutation));\n                        hasClientExports = this.getDocumentInfo(mutation).hasClientExports;\n                        variables = this.getVariables(mutation, variables);\n                        if (!hasClientExports) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.localState.addExportedVariables(mutation, variables, context)];\n                    case 1:\n                        variables = (_j.sent());\n                        _j.label = 2;\n                    case 2:\n                        mutationStoreValue = this.mutationStore &&\n                            (this.mutationStore[mutationId] = {\n                                mutation: mutation,\n                                variables: variables,\n                                loading: true,\n                                error: null,\n                            });\n                        isOptimistic = optimisticResponse &&\n                            this.markMutationOptimistic(optimisticResponse, {\n                                mutationId: mutationId,\n                                document: mutation,\n                                variables: variables,\n                                fetchPolicy: fetchPolicy,\n                                errorPolicy: errorPolicy,\n                                context: context,\n                                updateQueries: updateQueries,\n                                update: updateWithProxyFn,\n                                keepRootFields: keepRootFields,\n                            });\n                        this.broadcastQueries();\n                        self = this;\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\n                                return asyncMap(self.getObservableFromLink(mutation, __assign(__assign({}, context), { optimisticResponse: isOptimistic ? optimisticResponse : void 0 }), variables, false), function (result) {\n                                    if (graphQLResultHasError(result) && errorPolicy === \"none\") {\n                                        throw new ApolloError({\n                                            graphQLErrors: getGraphQLErrorsFromResult(result),\n                                        });\n                                    }\n                                    if (mutationStoreValue) {\n                                        mutationStoreValue.loading = false;\n                                        mutationStoreValue.error = null;\n                                    }\n                                    var storeResult = __assign({}, result);\n                                    if (typeof refetchQueries === \"function\") {\n                                        refetchQueries = refetchQueries(storeResult);\n                                    }\n                                    if (errorPolicy === \"ignore\" && graphQLResultHasError(storeResult)) {\n                                        delete storeResult.errors;\n                                    }\n                                    return self.markMutationResult({\n                                        mutationId: mutationId,\n                                        result: storeResult,\n                                        document: mutation,\n                                        variables: variables,\n                                        fetchPolicy: fetchPolicy,\n                                        errorPolicy: errorPolicy,\n                                        context: context,\n                                        update: updateWithProxyFn,\n                                        updateQueries: updateQueries,\n                                        awaitRefetchQueries: awaitRefetchQueries,\n                                        refetchQueries: refetchQueries,\n                                        removeOptimistic: isOptimistic ? mutationId : void 0,\n                                        onQueryUpdated: onQueryUpdated,\n                                        keepRootFields: keepRootFields,\n                                    });\n                                }).subscribe({\n                                    next: function (storeResult) {\n                                        self.broadcastQueries();\n                                        // Since mutations might receive multiple payloads from the\n                                        // ApolloLink chain (e.g. when used with @defer),\n                                        // we resolve with a SingleExecutionResult or after the final\n                                        // ExecutionPatchResult has arrived and we have assembled the\n                                        // multipart response into a single result.\n                                        if (!(\"hasNext\" in storeResult) || storeResult.hasNext === false) {\n                                            resolve(storeResult);\n                                        }\n                                    },\n                                    error: function (err) {\n                                        if (mutationStoreValue) {\n                                            mutationStoreValue.loading = false;\n                                            mutationStoreValue.error = err;\n                                        }\n                                        if (isOptimistic) {\n                                            self.cache.removeOptimistic(mutationId);\n                                        }\n                                        self.broadcastQueries();\n                                        reject(err instanceof ApolloError ? err : (new ApolloError({\n                                            networkError: err,\n                                        })));\n                                    },\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.markMutationResult = function (mutation, cache) {\n        var _this = this;\n        if (cache === void 0) { cache = this.cache; }\n        var result = mutation.result;\n        var cacheWrites = [];\n        var skipCache = mutation.fetchPolicy === \"no-cache\";\n        if (!skipCache && shouldWriteResult(result, mutation.errorPolicy)) {\n            if (!isExecutionPatchIncrementalResult(result)) {\n                cacheWrites.push({\n                    result: result.data,\n                    dataId: \"ROOT_MUTATION\",\n                    query: mutation.document,\n                    variables: mutation.variables,\n                });\n            }\n            if (isExecutionPatchIncrementalResult(result) &&\n                isNonEmptyArray(result.incremental)) {\n                var diff = cache.diff({\n                    id: \"ROOT_MUTATION\",\n                    // The cache complains if passed a mutation where it expects a\n                    // query, so we transform mutations and subscriptions to queries\n                    // (only once, thanks to this.transformCache).\n                    query: this.getDocumentInfo(mutation.document).asQuery,\n                    variables: mutation.variables,\n                    optimistic: false,\n                    returnPartialData: true,\n                });\n                var mergedData = void 0;\n                if (diff.result) {\n                    mergedData = mergeIncrementalData(diff.result, result);\n                }\n                if (typeof mergedData !== \"undefined\") {\n                    // cast the ExecutionPatchResult to FetchResult here since\n                    // ExecutionPatchResult never has `data` when returned from the server\n                    result.data = mergedData;\n                    cacheWrites.push({\n                        result: mergedData,\n                        dataId: \"ROOT_MUTATION\",\n                        query: mutation.document,\n                        variables: mutation.variables,\n                    });\n                }\n            }\n            var updateQueries_1 = mutation.updateQueries;\n            if (updateQueries_1) {\n                this.queries.forEach(function (_a, queryId) {\n                    var observableQuery = _a.observableQuery;\n                    var queryName = observableQuery && observableQuery.queryName;\n                    if (!queryName || !hasOwnProperty.call(updateQueries_1, queryName)) {\n                        return;\n                    }\n                    var updater = updateQueries_1[queryName];\n                    var _b = _this.queries.get(queryId), document = _b.document, variables = _b.variables;\n                    // Read the current query result from the store.\n                    var _c = cache.diff({\n                        query: document,\n                        variables: variables,\n                        returnPartialData: true,\n                        optimistic: false,\n                    }), currentQueryResult = _c.result, complete = _c.complete;\n                    if (complete && currentQueryResult) {\n                        // Run our reducer using the current query result and the mutation result.\n                        var nextQueryResult = updater(currentQueryResult, {\n                            mutationResult: result,\n                            queryName: (document && getOperationName(document)) || void 0,\n                            queryVariables: variables,\n                        });\n                        // Write the modified result back into the store if we got a new result.\n                        if (nextQueryResult) {\n                            cacheWrites.push({\n                                result: nextQueryResult,\n                                dataId: \"ROOT_QUERY\",\n                                query: document,\n                                variables: variables,\n                            });\n                        }\n                    }\n                });\n            }\n        }\n        if (cacheWrites.length > 0 ||\n            (mutation.refetchQueries || \"\").length > 0 ||\n            mutation.update ||\n            mutation.onQueryUpdated ||\n            mutation.removeOptimistic) {\n            var results_1 = [];\n            this.refetchQueries({\n                updateCache: function (cache) {\n                    if (!skipCache) {\n                        cacheWrites.forEach(function (write) { return cache.write(write); });\n                    }\n                    // If the mutation has some writes associated with it then we need to\n                    // apply those writes to the store by running this reducer again with\n                    // a write action.\n                    var update = mutation.update;\n                    // Determine whether result is a SingleExecutionResult,\n                    // or the final ExecutionPatchResult.\n                    var isFinalResult = !isExecutionPatchResult(result) ||\n                        (isExecutionPatchIncrementalResult(result) && !result.hasNext);\n                    if (update) {\n                        if (!skipCache) {\n                            // Re-read the ROOT_MUTATION data we just wrote into the cache\n                            // (the first cache.write call in the cacheWrites.forEach loop\n                            // above), so field read functions have a chance to run for\n                            // fields within mutation result objects.\n                            var diff = cache.diff({\n                                id: \"ROOT_MUTATION\",\n                                // The cache complains if passed a mutation where it expects a\n                                // query, so we transform mutations and subscriptions to queries\n                                // (only once, thanks to this.transformCache).\n                                query: _this.getDocumentInfo(mutation.document).asQuery,\n                                variables: mutation.variables,\n                                optimistic: false,\n                                returnPartialData: true,\n                            });\n                            if (diff.complete) {\n                                result = __assign(__assign({}, result), { data: diff.result });\n                                if (\"incremental\" in result) {\n                                    delete result.incremental;\n                                }\n                                if (\"hasNext\" in result) {\n                                    delete result.hasNext;\n                                }\n                            }\n                        }\n                        // If we've received the whole response,\n                        // either a SingleExecutionResult or the final ExecutionPatchResult,\n                        // call the update function.\n                        if (isFinalResult) {\n                            update(cache, result, {\n                                context: mutation.context,\n                                variables: mutation.variables,\n                            });\n                        }\n                    }\n                    // TODO Do this with cache.evict({ id: 'ROOT_MUTATION' }) but make it\n                    // shallow to allow rolling back optimistic evictions.\n                    if (!skipCache && !mutation.keepRootFields && isFinalResult) {\n                        cache.modify({\n                            id: \"ROOT_MUTATION\",\n                            fields: function (value, _a) {\n                                var fieldName = _a.fieldName, DELETE = _a.DELETE;\n                                return fieldName === \"__typename\" ? value : DELETE;\n                            },\n                        });\n                    }\n                },\n                include: mutation.refetchQueries,\n                // Write the final mutation.result to the root layer of the cache.\n                optimistic: false,\n                // Remove the corresponding optimistic layer at the same time as we\n                // write the final non-optimistic result.\n                removeOptimistic: mutation.removeOptimistic,\n                // Let the caller of client.mutate optionally determine the refetching\n                // behavior for watched queries after the mutation.update function runs.\n                // If no onQueryUpdated function was provided for this mutation, pass\n                // null instead of undefined to disable the default refetching behavior.\n                onQueryUpdated: mutation.onQueryUpdated || null,\n            }).forEach(function (result) { return results_1.push(result); });\n            if (mutation.awaitRefetchQueries || mutation.onQueryUpdated) {\n                // Returning a promise here makes the mutation await that promise, so we\n                // include results in that promise's work if awaitRefetchQueries or an\n                // onQueryUpdated function was specified.\n                return Promise.all(results_1).then(function () { return result; });\n            }\n        }\n        return Promise.resolve(result);\n    };\n    QueryManager.prototype.markMutationOptimistic = function (optimisticResponse, mutation) {\n        var _this = this;\n        var data = typeof optimisticResponse === \"function\" ?\n            optimisticResponse(mutation.variables, { IGNORE: IGNORE })\n            : optimisticResponse;\n        if (data === IGNORE) {\n            return false;\n        }\n        this.cache.recordOptimisticTransaction(function (cache) {\n            try {\n                _this.markMutationResult(__assign(__assign({}, mutation), { result: { data: data } }), cache);\n            }\n            catch (error) {\n                globalThis.__DEV__ !== false && invariant.error(error);\n            }\n        }, mutation.mutationId);\n        return true;\n    };\n    QueryManager.prototype.fetchQuery = function (queryId, options, networkStatus) {\n        return this.fetchConcastWithInfo(queryId, options, networkStatus).concast\n            .promise;\n    };\n    QueryManager.prototype.getQueryStore = function () {\n        var store = Object.create(null);\n        this.queries.forEach(function (info, queryId) {\n            store[queryId] = {\n                variables: info.variables,\n                networkStatus: info.networkStatus,\n                networkError: info.networkError,\n                graphQLErrors: info.graphQLErrors,\n            };\n        });\n        return store;\n    };\n    QueryManager.prototype.resetErrors = function (queryId) {\n        var queryInfo = this.queries.get(queryId);\n        if (queryInfo) {\n            queryInfo.networkError = undefined;\n            queryInfo.graphQLErrors = [];\n        }\n    };\n    QueryManager.prototype.transform = function (document) {\n        return this.documentTransform.transformDocument(document);\n    };\n    QueryManager.prototype.getDocumentInfo = function (document) {\n        var transformCache = this.transformCache;\n        if (!transformCache.has(document)) {\n            var cacheEntry = {\n                // TODO These three calls (hasClientExports, shouldForceResolvers, and\n                // usesNonreactiveDirective) are performing independent full traversals\n                // of the transformed document. We should consider merging these\n                // traversals into a single pass in the future, though the work is\n                // cached after the first time.\n                hasClientExports: hasClientExports(document),\n                hasForcedResolvers: this.localState.shouldForceResolvers(document),\n                hasNonreactiveDirective: hasDirectives([\"nonreactive\"], document),\n                clientQuery: this.localState.clientQuery(document),\n                serverQuery: removeDirectivesFromDocument([\n                    { name: \"client\", remove: true },\n                    { name: \"connection\" },\n                    { name: \"nonreactive\" },\n                ], document),\n                defaultVars: getDefaultValues(getOperationDefinition(document)),\n                // Transform any mutation or subscription operations to query operations\n                // so we can read/write them from/to the cache.\n                asQuery: __assign(__assign({}, document), { definitions: document.definitions.map(function (def) {\n                        if (def.kind === \"OperationDefinition\" &&\n                            def.operation !== \"query\") {\n                            return __assign(__assign({}, def), { operation: \"query\" });\n                        }\n                        return def;\n                    }) }),\n            };\n            transformCache.set(document, cacheEntry);\n        }\n        return transformCache.get(document);\n    };\n    QueryManager.prototype.getVariables = function (document, variables) {\n        return __assign(__assign({}, this.getDocumentInfo(document).defaultVars), variables);\n    };\n    QueryManager.prototype.watchQuery = function (options) {\n        var query = this.transform(options.query);\n        // assign variable default values if supplied\n        // NOTE: We don't modify options.query here with the transformed query to\n        // ensure observable.options.query is set to the raw untransformed query.\n        options = __assign(__assign({}, options), { variables: this.getVariables(query, options.variables) });\n        if (typeof options.notifyOnNetworkStatusChange === \"undefined\") {\n            options.notifyOnNetworkStatusChange = false;\n        }\n        var queryInfo = new QueryInfo(this);\n        var observable = new ObservableQuery({\n            queryManager: this,\n            queryInfo: queryInfo,\n            options: options,\n        });\n        observable[\"lastQuery\"] = query;\n        this.queries.set(observable.queryId, queryInfo);\n        // We give queryInfo the transformed query to ensure the first cache diff\n        // uses the transformed query instead of the raw query\n        queryInfo.init({\n            document: query,\n            observableQuery: observable,\n            variables: observable.variables,\n        });\n        return observable;\n    };\n    QueryManager.prototype.query = function (options, queryId) {\n        var _this = this;\n        if (queryId === void 0) { queryId = this.generateQueryId(); }\n        invariant(options.query, 28);\n        invariant(options.query.kind === \"Document\", 29);\n        invariant(!options.returnPartialData, 30);\n        invariant(!options.pollInterval, 31);\n        return this.fetchQuery(queryId, __assign(__assign({}, options), { query: this.transform(options.query) })).finally(function () { return _this.stopQuery(queryId); });\n    };\n    QueryManager.prototype.generateQueryId = function () {\n        return String(this.queryIdCounter++);\n    };\n    QueryManager.prototype.generateRequestId = function () {\n        return this.requestIdCounter++;\n    };\n    QueryManager.prototype.generateMutationId = function () {\n        return String(this.mutationIdCounter++);\n    };\n    QueryManager.prototype.stopQueryInStore = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryInStoreNoBroadcast = function (queryId) {\n        var queryInfo = this.queries.get(queryId);\n        if (queryInfo)\n            queryInfo.stop();\n    };\n    QueryManager.prototype.clearStore = function (options) {\n        if (options === void 0) { options = {\n            discardWatches: true,\n        }; }\n        // Before we have sent the reset action to the store, we can no longer\n        // rely on the results returned by in-flight requests since these may\n        // depend on values that previously existed in the data portion of the\n        // store. So, we cancel the promises and observers that we have issued\n        // so far and not yet resolved (in the case of queries).\n        this.cancelPendingFetches(newInvariantError(32));\n        this.queries.forEach(function (queryInfo) {\n            if (queryInfo.observableQuery) {\n                // Set loading to true so listeners don't trigger unless they want\n                // results with partial data.\n                queryInfo.networkStatus = NetworkStatus.loading;\n            }\n            else {\n                queryInfo.stop();\n            }\n        });\n        if (this.mutationStore) {\n            this.mutationStore = Object.create(null);\n        }\n        // begin removing data from the store\n        return this.cache.reset(options);\n    };\n    QueryManager.prototype.getObservableQueries = function (include) {\n        var _this = this;\n        if (include === void 0) { include = \"active\"; }\n        var queries = new Map();\n        var queryNamesAndDocs = new Map();\n        var legacyQueryOptions = new Set();\n        if (Array.isArray(include)) {\n            include.forEach(function (desc) {\n                if (typeof desc === \"string\") {\n                    queryNamesAndDocs.set(desc, false);\n                }\n                else if (isDocumentNode(desc)) {\n                    queryNamesAndDocs.set(_this.transform(desc), false);\n                }\n                else if (isNonNullObject(desc) && desc.query) {\n                    legacyQueryOptions.add(desc);\n                }\n            });\n        }\n        this.queries.forEach(function (_a, queryId) {\n            var oq = _a.observableQuery, document = _a.document;\n            if (oq) {\n                if (include === \"all\") {\n                    queries.set(queryId, oq);\n                    return;\n                }\n                var queryName = oq.queryName, fetchPolicy = oq.options.fetchPolicy;\n                if (fetchPolicy === \"standby\" ||\n                    (include === \"active\" && !oq.hasObservers())) {\n                    return;\n                }\n                if (include === \"active\" ||\n                    (queryName && queryNamesAndDocs.has(queryName)) ||\n                    (document && queryNamesAndDocs.has(document))) {\n                    queries.set(queryId, oq);\n                    if (queryName)\n                        queryNamesAndDocs.set(queryName, true);\n                    if (document)\n                        queryNamesAndDocs.set(document, true);\n                }\n            }\n        });\n        if (legacyQueryOptions.size) {\n            legacyQueryOptions.forEach(function (options) {\n                // We will be issuing a fresh network request for this query, so we\n                // pre-allocate a new query ID here, using a special prefix to enable\n                // cleaning up these temporary queries later, after fetching.\n                var queryId = makeUniqueId(\"legacyOneTimeQuery\");\n                var queryInfo = _this.getQuery(queryId).init({\n                    document: options.query,\n                    variables: options.variables,\n                });\n                var oq = new ObservableQuery({\n                    queryManager: _this,\n                    queryInfo: queryInfo,\n                    options: __assign(__assign({}, options), { fetchPolicy: \"network-only\" }),\n                });\n                invariant(oq.queryId === queryId);\n                queryInfo.setObservableQuery(oq);\n                queries.set(queryId, oq);\n            });\n        }\n        if (globalThis.__DEV__ !== false && queryNamesAndDocs.size) {\n            queryNamesAndDocs.forEach(function (included, nameOrDoc) {\n                if (!included) {\n                    globalThis.__DEV__ !== false && invariant.warn(typeof nameOrDoc === \"string\" ? 33 : 34, nameOrDoc);\n                }\n            });\n        }\n        return queries;\n    };\n    QueryManager.prototype.reFetchObservableQueries = function (includeStandby) {\n        var _this = this;\n        if (includeStandby === void 0) { includeStandby = false; }\n        var observableQueryPromises = [];\n        this.getObservableQueries(includeStandby ? \"all\" : \"active\").forEach(function (observableQuery, queryId) {\n            var fetchPolicy = observableQuery.options.fetchPolicy;\n            observableQuery.resetLastResults();\n            if (includeStandby ||\n                (fetchPolicy !== \"standby\" && fetchPolicy !== \"cache-only\")) {\n                observableQueryPromises.push(observableQuery.refetch());\n            }\n            _this.getQuery(queryId).setDiff(null);\n        });\n        this.broadcastQueries();\n        return Promise.all(observableQueryPromises);\n    };\n    QueryManager.prototype.setObservableQuery = function (observableQuery) {\n        this.getQuery(observableQuery.queryId).setObservableQuery(observableQuery);\n    };\n    QueryManager.prototype.startGraphQLSubscription = function (_a) {\n        var _this = this;\n        var query = _a.query, fetchPolicy = _a.fetchPolicy, _b = _a.errorPolicy, errorPolicy = _b === void 0 ? \"none\" : _b, variables = _a.variables, _c = _a.context, context = _c === void 0 ? {} : _c;\n        query = this.transform(query);\n        variables = this.getVariables(query, variables);\n        var makeObservable = function (variables) {\n            return _this.getObservableFromLink(query, context, variables).map(function (result) {\n                if (fetchPolicy !== \"no-cache\") {\n                    // the subscription interface should handle not sending us results we no longer subscribe to.\n                    // XXX I don't think we ever send in an object with errors, but we might in the future...\n                    if (shouldWriteResult(result, errorPolicy)) {\n                        _this.cache.write({\n                            query: query,\n                            result: result.data,\n                            dataId: \"ROOT_SUBSCRIPTION\",\n                            variables: variables,\n                        });\n                    }\n                    _this.broadcastQueries();\n                }\n                var hasErrors = graphQLResultHasError(result);\n                var hasProtocolErrors = graphQLResultHasProtocolErrors(result);\n                if (hasErrors || hasProtocolErrors) {\n                    var errors = {};\n                    if (hasErrors) {\n                        errors.graphQLErrors = result.errors;\n                    }\n                    if (hasProtocolErrors) {\n                        errors.protocolErrors = result.extensions[PROTOCOL_ERRORS_SYMBOL];\n                    }\n                    // `errorPolicy` is a mechanism for handling GraphQL errors, according\n                    // to our documentation, so we throw protocol errors regardless of the\n                    // set error policy.\n                    if (errorPolicy === \"none\" || hasProtocolErrors) {\n                        throw new ApolloError(errors);\n                    }\n                }\n                if (errorPolicy === \"ignore\") {\n                    delete result.errors;\n                }\n                return result;\n            });\n        };\n        if (this.getDocumentInfo(query).hasClientExports) {\n            var observablePromise_1 = this.localState\n                .addExportedVariables(query, variables, context)\n                .then(makeObservable);\n            return new Observable(function (observer) {\n                var sub = null;\n                observablePromise_1.then(function (observable) { return (sub = observable.subscribe(observer)); }, observer.error);\n                return function () { return sub && sub.unsubscribe(); };\n            });\n        }\n        return makeObservable(variables);\n    };\n    QueryManager.prototype.stopQuery = function (queryId) {\n        this.stopQueryNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryNoBroadcast = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.removeQuery(queryId);\n    };\n    QueryManager.prototype.removeQuery = function (queryId) {\n        // teardown all links\n        // Both `QueryManager.fetchRequest` and `QueryManager.query` create separate promises\n        // that each add their reject functions to fetchCancelFns.\n        // A query created with `QueryManager.query()` could trigger a `QueryManager.fetchRequest`.\n        // The same queryId could have two rejection fns for two promises\n        this.fetchCancelFns.delete(queryId);\n        if (this.queries.has(queryId)) {\n            this.getQuery(queryId).stop();\n            this.queries.delete(queryId);\n        }\n    };\n    QueryManager.prototype.broadcastQueries = function () {\n        if (this.onBroadcast)\n            this.onBroadcast();\n        this.queries.forEach(function (info) { return info.notify(); });\n    };\n    QueryManager.prototype.getLocalState = function () {\n        return this.localState;\n    };\n    QueryManager.prototype.getObservableFromLink = function (query, context, variables, \n    // Prefer context.queryDeduplication if specified.\n    deduplication) {\n        var _this = this;\n        var _a;\n        if (deduplication === void 0) { deduplication = (_a = context === null || context === void 0 ? void 0 : context.queryDeduplication) !== null && _a !== void 0 ? _a : this.queryDeduplication; }\n        var observable;\n        var _b = this.getDocumentInfo(query), serverQuery = _b.serverQuery, clientQuery = _b.clientQuery;\n        if (serverQuery) {\n            var _c = this, inFlightLinkObservables_1 = _c.inFlightLinkObservables, link = _c.link;\n            var operation = {\n                query: serverQuery,\n                variables: variables,\n                operationName: getOperationName(serverQuery) || void 0,\n                context: this.prepareContext(__assign(__assign({}, context), { forceFetch: !deduplication })),\n            };\n            context = operation.context;\n            if (deduplication) {\n                var printedServerQuery_1 = print(serverQuery);\n                var varJson_1 = canonicalStringify(variables);\n                var entry = inFlightLinkObservables_1.lookup(printedServerQuery_1, varJson_1);\n                observable = entry.observable;\n                if (!observable) {\n                    var concast = new Concast([\n                        execute(link, operation),\n                    ]);\n                    observable = entry.observable = concast;\n                    concast.beforeNext(function () {\n                        inFlightLinkObservables_1.remove(printedServerQuery_1, varJson_1);\n                    });\n                }\n            }\n            else {\n                observable = new Concast([\n                    execute(link, operation),\n                ]);\n            }\n        }\n        else {\n            observable = new Concast([Observable.of({ data: {} })]);\n            context = this.prepareContext(context);\n        }\n        if (clientQuery) {\n            observable = asyncMap(observable, function (result) {\n                return _this.localState.runResolvers({\n                    document: clientQuery,\n                    remoteResult: result,\n                    context: context,\n                    variables: variables,\n                });\n            });\n        }\n        return observable;\n    };\n    QueryManager.prototype.getResultsFromLink = function (queryInfo, cacheWriteBehavior, options) {\n        var requestId = (queryInfo.lastRequestId = this.generateRequestId());\n        // Performing transformForLink here gives this.cache a chance to fill in\n        // missing fragment definitions (for example) before sending this document\n        // through the link chain.\n        var linkDocument = this.cache.transformForLink(options.query);\n        return asyncMap(this.getObservableFromLink(linkDocument, options.context, options.variables), function (result) {\n            var graphQLErrors = getGraphQLErrorsFromResult(result);\n            var hasErrors = graphQLErrors.length > 0;\n            // If we interrupted this request by calling getResultsFromLink again\n            // with the same QueryInfo object, we ignore the old results.\n            if (requestId >= queryInfo.lastRequestId) {\n                if (hasErrors && options.errorPolicy === \"none\") {\n                    // Throwing here effectively calls observer.error.\n                    throw queryInfo.markError(new ApolloError({\n                        graphQLErrors: graphQLErrors,\n                    }));\n                }\n                // Use linkDocument rather than queryInfo.document so the\n                // operation/fragments used to write the result are the same as the\n                // ones used to obtain it from the link.\n                queryInfo.markResult(result, linkDocument, options, cacheWriteBehavior);\n                queryInfo.markReady();\n            }\n            var aqr = {\n                data: result.data,\n                loading: false,\n                networkStatus: NetworkStatus.ready,\n            };\n            if (hasErrors && options.errorPolicy !== \"ignore\") {\n                aqr.errors = graphQLErrors;\n                aqr.networkStatus = NetworkStatus.error;\n            }\n            return aqr;\n        }, function (networkError) {\n            var error = isApolloError(networkError) ? networkError : (new ApolloError({ networkError: networkError }));\n            // Avoid storing errors from older interrupted queries.\n            if (requestId >= queryInfo.lastRequestId) {\n                queryInfo.markError(error);\n            }\n            throw error;\n        });\n    };\n    QueryManager.prototype.fetchConcastWithInfo = function (queryId, options, \n    // The initial networkStatus for this fetch, most often\n    // NetworkStatus.loading, but also possibly fetchMore, poll, refetch,\n    // or setVariables.\n    networkStatus, query) {\n        var _this = this;\n        if (networkStatus === void 0) { networkStatus = NetworkStatus.loading; }\n        if (query === void 0) { query = options.query; }\n        var variables = this.getVariables(query, options.variables);\n        var queryInfo = this.getQuery(queryId);\n        var defaults = this.defaultOptions.watchQuery;\n        var _a = options.fetchPolicy, fetchPolicy = _a === void 0 ? (defaults && defaults.fetchPolicy) || \"cache-first\" : _a, _b = options.errorPolicy, errorPolicy = _b === void 0 ? (defaults && defaults.errorPolicy) || \"none\" : _b, _c = options.returnPartialData, returnPartialData = _c === void 0 ? false : _c, _d = options.notifyOnNetworkStatusChange, notifyOnNetworkStatusChange = _d === void 0 ? false : _d, _e = options.context, context = _e === void 0 ? {} : _e;\n        var normalized = Object.assign({}, options, {\n            query: query,\n            variables: variables,\n            fetchPolicy: fetchPolicy,\n            errorPolicy: errorPolicy,\n            returnPartialData: returnPartialData,\n            notifyOnNetworkStatusChange: notifyOnNetworkStatusChange,\n            context: context,\n        });\n        var fromVariables = function (variables) {\n            // Since normalized is always a fresh copy of options, it's safe to\n            // modify its properties here, rather than creating yet another new\n            // WatchQueryOptions object.\n            normalized.variables = variables;\n            var sourcesWithInfo = _this.fetchQueryByPolicy(queryInfo, normalized, networkStatus);\n            if (\n            // If we're in standby, postpone advancing options.fetchPolicy using\n            // applyNextFetchPolicy.\n            normalized.fetchPolicy !== \"standby\" &&\n                // The \"standby\" policy currently returns [] from fetchQueryByPolicy, so\n                // this is another way to detect when nothing was done/fetched.\n                sourcesWithInfo.sources.length > 0 &&\n                queryInfo.observableQuery) {\n                queryInfo.observableQuery[\"applyNextFetchPolicy\"](\"after-fetch\", options);\n            }\n            return sourcesWithInfo;\n        };\n        // This cancel function needs to be set before the concast is created,\n        // in case concast creation synchronously cancels the request.\n        var cleanupCancelFn = function () { return _this.fetchCancelFns.delete(queryId); };\n        this.fetchCancelFns.set(queryId, function (reason) {\n            cleanupCancelFn();\n            // This delay ensures the concast variable has been initialized.\n            setTimeout(function () { return concast.cancel(reason); });\n        });\n        var concast, containsDataFromLink;\n        // If the query has @export(as: ...) directives, then we need to\n        // process those directives asynchronously. When there are no\n        // @export directives (the common case), we deliberately avoid\n        // wrapping the result of this.fetchQueryByPolicy in a Promise,\n        // since the timing of result delivery is (unfortunately) important\n        // for backwards compatibility. TODO This code could be simpler if\n        // we deprecated and removed LocalState.\n        if (this.getDocumentInfo(normalized.query).hasClientExports) {\n            concast = new Concast(this.localState\n                .addExportedVariables(normalized.query, normalized.variables, normalized.context)\n                .then(fromVariables)\n                .then(function (sourcesWithInfo) { return sourcesWithInfo.sources; }));\n            // there is just no way we can synchronously get the *right* value here,\n            // so we will assume `true`, which is the behaviour before the bug fix in\n            // #10597. This means that bug is not fixed in that case, and is probably\n            // un-fixable with reasonable effort for the edge case of @export as\n            // directives.\n            containsDataFromLink = true;\n        }\n        else {\n            var sourcesWithInfo = fromVariables(normalized.variables);\n            containsDataFromLink = sourcesWithInfo.fromLink;\n            concast = new Concast(sourcesWithInfo.sources);\n        }\n        concast.promise.then(cleanupCancelFn, cleanupCancelFn);\n        return {\n            concast: concast,\n            fromLink: containsDataFromLink,\n        };\n    };\n    QueryManager.prototype.refetchQueries = function (_a) {\n        var _this = this;\n        var updateCache = _a.updateCache, include = _a.include, _b = _a.optimistic, optimistic = _b === void 0 ? false : _b, _c = _a.removeOptimistic, removeOptimistic = _c === void 0 ? optimistic ? makeUniqueId(\"refetchQueries\") : void 0 : _c, onQueryUpdated = _a.onQueryUpdated;\n        var includedQueriesById = new Map();\n        if (include) {\n            this.getObservableQueries(include).forEach(function (oq, queryId) {\n                includedQueriesById.set(queryId, {\n                    oq: oq,\n                    lastDiff: _this.getQuery(queryId).getDiff(),\n                });\n            });\n        }\n        var results = new Map();\n        if (updateCache) {\n            this.cache.batch({\n                update: updateCache,\n                // Since you can perform any combination of cache reads and/or writes in\n                // the cache.batch update function, its optimistic option can be either\n                // a boolean or a string, representing three distinct modes of\n                // operation:\n                //\n                // * false: read/write only the root layer\n                // * true: read/write the topmost layer\n                // * string: read/write a fresh optimistic layer with that ID string\n                //\n                // When typeof optimistic === \"string\", a new optimistic layer will be\n                // temporarily created within cache.batch with that string as its ID. If\n                // we then pass that same string as the removeOptimistic option, we can\n                // make cache.batch immediately remove the optimistic layer after\n                // running the updateCache function, triggering only one broadcast.\n                //\n                // However, the refetchQueries method accepts only true or false for its\n                // optimistic option (not string). We interpret true to mean a temporary\n                // optimistic layer should be created, to allow efficiently rolling back\n                // the effect of the updateCache function, which involves passing a\n                // string instead of true as the optimistic option to cache.batch, when\n                // refetchQueries receives optimistic: true.\n                //\n                // In other words, we are deliberately not supporting the use case of\n                // writing to an *existing* optimistic layer (using the refetchQueries\n                // updateCache function), since that would potentially interfere with\n                // other optimistic updates in progress. Instead, you can read/write\n                // only the root layer by passing optimistic: false to refetchQueries,\n                // or you can read/write a brand new optimistic layer that will be\n                // automatically removed by passing optimistic: true.\n                optimistic: (optimistic && removeOptimistic) || false,\n                // The removeOptimistic option can also be provided by itself, even if\n                // optimistic === false, to remove some previously-added optimistic\n                // layer safely and efficiently, like we do in markMutationResult.\n                //\n                // If an explicit removeOptimistic string is provided with optimistic:\n                // true, the removeOptimistic string will determine the ID of the\n                // temporary optimistic layer, in case that ever matters.\n                removeOptimistic: removeOptimistic,\n                onWatchUpdated: function (watch, diff, lastDiff) {\n                    var oq = watch.watcher instanceof QueryInfo && watch.watcher.observableQuery;\n                    if (oq) {\n                        if (onQueryUpdated) {\n                            // Since we're about to handle this query now, remove it from\n                            // includedQueriesById, in case it was added earlier because of\n                            // options.include.\n                            includedQueriesById.delete(oq.queryId);\n                            var result = onQueryUpdated(oq, diff, lastDiff);\n                            if (result === true) {\n                                // The onQueryUpdated function requested the default refetching\n                                // behavior by returning true.\n                                result = oq.refetch();\n                            }\n                            // Record the result in the results Map, as long as onQueryUpdated\n                            // did not return false to skip/ignore this result.\n                            if (result !== false) {\n                                results.set(oq, result);\n                            }\n                            // Allow the default cache broadcast to happen, except when\n                            // onQueryUpdated returns false.\n                            return result;\n                        }\n                        if (onQueryUpdated !== null) {\n                            // If we don't have an onQueryUpdated function, and onQueryUpdated\n                            // was not disabled by passing null, make sure this query is\n                            // \"included\" like any other options.include-specified query.\n                            includedQueriesById.set(oq.queryId, { oq: oq, lastDiff: lastDiff, diff: diff });\n                        }\n                    }\n                },\n            });\n        }\n        if (includedQueriesById.size) {\n            includedQueriesById.forEach(function (_a, queryId) {\n                var oq = _a.oq, lastDiff = _a.lastDiff, diff = _a.diff;\n                var result;\n                // If onQueryUpdated is provided, we want to use it for all included\n                // queries, even the QueryOptions ones.\n                if (onQueryUpdated) {\n                    if (!diff) {\n                        var info = oq[\"queryInfo\"];\n                        info.reset(); // Force info.getDiff() to read from cache.\n                        diff = info.getDiff();\n                    }\n                    result = onQueryUpdated(oq, diff, lastDiff);\n                }\n                // Otherwise, we fall back to refetching.\n                if (!onQueryUpdated || result === true) {\n                    result = oq.refetch();\n                }\n                if (result !== false) {\n                    results.set(oq, result);\n                }\n                if (queryId.indexOf(\"legacyOneTimeQuery\") >= 0) {\n                    _this.stopQueryNoBroadcast(queryId);\n                }\n            });\n        }\n        if (removeOptimistic) {\n            // In case no updateCache callback was provided (so cache.batch was not\n            // called above, and thus did not already remove the optimistic layer),\n            // remove it here. Since this is a no-op when the layer has already been\n            // removed, we do it even if we called cache.batch above, since it's\n            // possible this.cache is an instance of some ApolloCache subclass other\n            // than InMemoryCache, and does not fully support the removeOptimistic\n            // option for cache.batch.\n            this.cache.removeOptimistic(removeOptimistic);\n        }\n        return results;\n    };\n    QueryManager.prototype.fetchQueryByPolicy = function (queryInfo, _a, \n    // The initial networkStatus for this fetch, most often\n    // NetworkStatus.loading, but also possibly fetchMore, poll, refetch,\n    // or setVariables.\n    networkStatus) {\n        var _this = this;\n        var query = _a.query, variables = _a.variables, fetchPolicy = _a.fetchPolicy, refetchWritePolicy = _a.refetchWritePolicy, errorPolicy = _a.errorPolicy, returnPartialData = _a.returnPartialData, context = _a.context, notifyOnNetworkStatusChange = _a.notifyOnNetworkStatusChange;\n        var oldNetworkStatus = queryInfo.networkStatus;\n        queryInfo.init({\n            document: query,\n            variables: variables,\n            networkStatus: networkStatus,\n        });\n        var readCache = function () { return queryInfo.getDiff(); };\n        var resultsFromCache = function (diff, networkStatus) {\n            if (networkStatus === void 0) { networkStatus = queryInfo.networkStatus || NetworkStatus.loading; }\n            var data = diff.result;\n            if (globalThis.__DEV__ !== false && !returnPartialData && !equal(data, {})) {\n                logMissingFieldErrors(diff.missing);\n            }\n            var fromData = function (data) {\n                return Observable.of(__assign({ data: data, loading: isNetworkRequestInFlight(networkStatus), networkStatus: networkStatus }, (diff.complete ? null : { partial: true })));\n            };\n            if (data && _this.getDocumentInfo(query).hasForcedResolvers) {\n                return _this.localState\n                    .runResolvers({\n                    document: query,\n                    remoteResult: { data: data },\n                    context: context,\n                    variables: variables,\n                    onlyRunForcedResolvers: true,\n                })\n                    .then(function (resolved) { return fromData(resolved.data || void 0); });\n            }\n            // Resolves https://github.com/apollographql/apollo-client/issues/10317.\n            // If errorPolicy is 'none' and notifyOnNetworkStatusChange is true,\n            // data was incorrectly returned from the cache on refetch:\n            // if diff.missing exists, we should not return cache data.\n            if (errorPolicy === \"none\" &&\n                networkStatus === NetworkStatus.refetch &&\n                Array.isArray(diff.missing)) {\n                return fromData(void 0);\n            }\n            return fromData(data);\n        };\n        var cacheWriteBehavior = fetchPolicy === \"no-cache\" ? 0 /* CacheWriteBehavior.FORBID */\n            // Watched queries must opt into overwriting existing data on refetch,\n            // by passing refetchWritePolicy: \"overwrite\" in their WatchQueryOptions.\n            : (networkStatus === NetworkStatus.refetch &&\n                refetchWritePolicy !== \"merge\") ?\n                1 /* CacheWriteBehavior.OVERWRITE */\n                : 2 /* CacheWriteBehavior.MERGE */;\n        var resultsFromLink = function () {\n            return _this.getResultsFromLink(queryInfo, cacheWriteBehavior, {\n                query: query,\n                variables: variables,\n                context: context,\n                fetchPolicy: fetchPolicy,\n                errorPolicy: errorPolicy,\n            });\n        };\n        var shouldNotify = notifyOnNetworkStatusChange &&\n            typeof oldNetworkStatus === \"number\" &&\n            oldNetworkStatus !== networkStatus &&\n            isNetworkRequestInFlight(networkStatus);\n        switch (fetchPolicy) {\n            default:\n            case \"cache-first\": {\n                var diff = readCache();\n                if (diff.complete) {\n                    return {\n                        fromLink: false,\n                        sources: [resultsFromCache(diff, queryInfo.markReady())],\n                    };\n                }\n                if (returnPartialData || shouldNotify) {\n                    return {\n                        fromLink: true,\n                        sources: [resultsFromCache(diff), resultsFromLink()],\n                    };\n                }\n                return { fromLink: true, sources: [resultsFromLink()] };\n            }\n            case \"cache-and-network\": {\n                var diff = readCache();\n                if (diff.complete || returnPartialData || shouldNotify) {\n                    return {\n                        fromLink: true,\n                        sources: [resultsFromCache(diff), resultsFromLink()],\n                    };\n                }\n                return { fromLink: true, sources: [resultsFromLink()] };\n            }\n            case \"cache-only\":\n                return {\n                    fromLink: false,\n                    sources: [resultsFromCache(readCache(), queryInfo.markReady())],\n                };\n            case \"network-only\":\n                if (shouldNotify) {\n                    return {\n                        fromLink: true,\n                        sources: [resultsFromCache(readCache()), resultsFromLink()],\n                    };\n                }\n                return { fromLink: true, sources: [resultsFromLink()] };\n            case \"no-cache\":\n                if (shouldNotify) {\n                    return {\n                        fromLink: true,\n                        // Note that queryInfo.getDiff() for no-cache queries does not call\n                        // cache.diff, but instead returns a { complete: false } stub result\n                        // when there is no queryInfo.diff already defined.\n                        sources: [resultsFromCache(queryInfo.getDiff()), resultsFromLink()],\n                    };\n                }\n                return { fromLink: true, sources: [resultsFromLink()] };\n            case \"standby\":\n                return { fromLink: false, sources: [] };\n        }\n    };\n    QueryManager.prototype.getQuery = function (queryId) {\n        if (queryId && !this.queries.has(queryId)) {\n            this.queries.set(queryId, new QueryInfo(this, queryId));\n        }\n        return this.queries.get(queryId);\n    };\n    QueryManager.prototype.prepareContext = function (context) {\n        if (context === void 0) { context = {}; }\n        var newContext = this.localState.prepareContext(context);\n        return __assign(__assign(__assign({}, this.defaultContext), newContext), { clientAwareness: this.clientAwareness });\n    };\n    return QueryManager;\n}());\nexport { QueryManager };\n//# sourceMappingURL=QueryManager.js.map", "import { __assign } from \"tslib\";\nimport { global } from \"../globals/index.js\";\nvar cacheSizeSymbol = Symbol.for(\"apollo.cacheSize\");\n/**\n *\n * The global cache size configuration for Apollo Client.\n *\n * @remarks\n *\n * You can directly modify this object, but any modification will\n * only have an effect on caches that are created after the modification.\n *\n * So for global caches, such as `parser`, `canonicalStringify` and `print`,\n * you might need to call `.reset` on them, which will essentially re-create them.\n *\n * Alternatively, you can set `globalThis[Symbol.for(\"apollo.cacheSize\")]` before\n * you load the Apollo Client package:\n *\n * @example\n * ```ts\n * globalThis[Symbol.for(\"apollo.cacheSize\")] = {\n *   parser: 100\n * } satisfies Partial<CacheSizes> // the `satisfies` is optional if using TypeScript\n * ```\n */\nexport var cacheSizes = __assign({}, global[cacheSizeSymbol]);\n//# sourceMappingURL=sizes.js.map", "import { __assign, __spreadArray } from \"tslib\";\nimport { cacheSizes } from \"./sizes.js\";\nvar globalCaches = {};\nexport function registerGlobalCache(name, getSize) {\n    globalCaches[name] = getSize;\n}\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport var getApolloClientMemoryInternals = globalThis.__DEV__ !== false ?\n    _getApolloClientMemoryInternals\n    : undefined;\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport var getInMemoryCacheMemoryInternals = globalThis.__DEV__ !== false ?\n    _getInMemoryCacheMemoryInternals\n    : undefined;\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport var getApolloCacheMemoryInternals = globalThis.__DEV__ !== false ?\n    _getApolloCacheMemoryInternals\n    : undefined;\nfunction getCurrentCacheSizes() {\n    // `defaultCacheSizes` is a `const enum` that will be inlined during build, so we have to reconstruct it's shape here\n    var defaults = {\n        parser: 1000 /* defaultCacheSizes[\"parser\"] */,\n        canonicalStringify: 1000 /* defaultCacheSizes[\"canonicalStringify\"] */,\n        print: 2000 /* defaultCacheSizes[\"print\"] */,\n        \"documentTransform.cache\": 2000 /* defaultCacheSizes[\"documentTransform.cache\"] */,\n        \"queryManager.getDocumentInfo\": 2000 /* defaultCacheSizes[\"queryManager.getDocumentInfo\"] */,\n        \"PersistedQueryLink.persistedQueryHashes\": 2000 /* defaultCacheSizes[\"PersistedQueryLink.persistedQueryHashes\"] */,\n        \"fragmentRegistry.transform\": 2000 /* defaultCacheSizes[\"fragmentRegistry.transform\"] */,\n        \"fragmentRegistry.lookup\": 1000 /* defaultCacheSizes[\"fragmentRegistry.lookup\"] */,\n        \"fragmentRegistry.findFragmentSpreads\": 4000 /* defaultCacheSizes[\"fragmentRegistry.findFragmentSpreads\"] */,\n        \"cache.fragmentQueryDocuments\": 1000 /* defaultCacheSizes[\"cache.fragmentQueryDocuments\"] */,\n        \"removeTypenameFromVariables.getVariableDefinitions\": 2000 /* defaultCacheSizes[\"removeTypenameFromVariables.getVariableDefinitions\"] */,\n        \"inMemoryCache.maybeBroadcastWatch\": 5000 /* defaultCacheSizes[\"inMemoryCache.maybeBroadcastWatch\"] */,\n        \"inMemoryCache.executeSelectionSet\": 50000 /* defaultCacheSizes[\"inMemoryCache.executeSelectionSet\"] */,\n        \"inMemoryCache.executeSubSelectedArray\": 10000 /* defaultCacheSizes[\"inMemoryCache.executeSubSelectedArray\"] */,\n    };\n    return Object.fromEntries(Object.entries(defaults).map(function (_a) {\n        var k = _a[0], v = _a[1];\n        return [\n            k,\n            cacheSizes[k] || v,\n        ];\n    }));\n}\nfunction _getApolloClientMemoryInternals() {\n    var _a, _b, _c, _d, _e;\n    if (!(globalThis.__DEV__ !== false))\n        throw new Error(\"only supported in development mode\");\n    return {\n        limits: getCurrentCacheSizes(),\n        sizes: __assign({ print: (_a = globalCaches.print) === null || _a === void 0 ? void 0 : _a.call(globalCaches), parser: (_b = globalCaches.parser) === null || _b === void 0 ? void 0 : _b.call(globalCaches), canonicalStringify: (_c = globalCaches.canonicalStringify) === null || _c === void 0 ? void 0 : _c.call(globalCaches), links: linkInfo(this.link), queryManager: {\n                getDocumentInfo: this[\"queryManager\"][\"transformCache\"].size,\n                documentTransforms: transformInfo(this[\"queryManager\"].documentTransform),\n            } }, (_e = (_d = this.cache).getMemoryInternals) === null || _e === void 0 ? void 0 : _e.call(_d)),\n    };\n}\nfunction _getApolloCacheMemoryInternals() {\n    return {\n        cache: {\n            fragmentQueryDocuments: getWrapperInformation(this[\"getFragmentDoc\"]),\n        },\n    };\n}\nfunction _getInMemoryCacheMemoryInternals() {\n    var fragments = this.config.fragments;\n    return __assign(__assign({}, _getApolloCacheMemoryInternals.apply(this)), { addTypenameDocumentTransform: transformInfo(this[\"addTypenameTransform\"]), inMemoryCache: {\n            executeSelectionSet: getWrapperInformation(this[\"storeReader\"][\"executeSelectionSet\"]),\n            executeSubSelectedArray: getWrapperInformation(this[\"storeReader\"][\"executeSubSelectedArray\"]),\n            maybeBroadcastWatch: getWrapperInformation(this[\"maybeBroadcastWatch\"]),\n        }, fragmentRegistry: {\n            findFragmentSpreads: getWrapperInformation(fragments === null || fragments === void 0 ? void 0 : fragments.findFragmentSpreads),\n            lookup: getWrapperInformation(fragments === null || fragments === void 0 ? void 0 : fragments.lookup),\n            transform: getWrapperInformation(fragments === null || fragments === void 0 ? void 0 : fragments.transform),\n        } });\n}\nfunction isWrapper(f) {\n    return !!f && \"dirtyKey\" in f;\n}\nfunction getWrapperInformation(f) {\n    return isWrapper(f) ? f.size : undefined;\n}\nfunction isDefined(value) {\n    return value != null;\n}\nfunction transformInfo(transform) {\n    return recurseTransformInfo(transform).map(function (cache) { return ({ cache: cache }); });\n}\nfunction recurseTransformInfo(transform) {\n    return transform ?\n        __spreadArray(__spreadArray([\n            getWrapperInformation(transform === null || transform === void 0 ? void 0 : transform[\"performWork\"])\n        ], recurseTransformInfo(transform === null || transform === void 0 ? void 0 : transform[\"left\"]), true), recurseTransformInfo(transform === null || transform === void 0 ? void 0 : transform[\"right\"]), true).filter(isDefined)\n        : [];\n}\nfunction linkInfo(link) {\n    var _a;\n    return link ?\n        __spreadArray(__spreadArray([\n            (_a = link === null || link === void 0 ? void 0 : link.getMemoryInternals) === null || _a === void 0 ? void 0 : _a.call(link)\n        ], linkInfo(link === null || link === void 0 ? void 0 : link.left), true), linkInfo(link === null || link === void 0 ? void 0 : link.right), true).filter(isDefined)\n        : [];\n}\n//# sourceMappingURL=getMemoryInternals.js.map", "import { __assign } from \"tslib\";\nimport { invariant, newInvariantError } from \"../utilities/globals/index.js\";\nimport { ApolloLink, execute } from \"../link/core/index.js\";\nimport { version } from \"../version.js\";\nimport { HttpLink } from \"../link/http/index.js\";\nimport { QueryManager } from \"./QueryManager.js\";\nimport { LocalState } from \"./LocalState.js\";\nvar hasSuggestedDevtools = false;\n// Though mergeOptions now resides in @apollo/client/utilities, it was\n// previously declared and exported from this module, and then reexported from\n// @apollo/client/core. Since we need to preserve that API anyway, the easiest\n// solution is to reexport mergeOptions where it was previously declared (here).\nimport { mergeOptions } from \"../utilities/index.js\";\nimport { getApolloClientMemoryInternals } from \"../utilities/caching/getMemoryInternals.js\";\nexport { mergeOptions };\n/**\n * This is the primary Apollo Client class. It is used to send GraphQL documents (i.e. queries\n * and mutations) to a GraphQL spec-compliant server over an `ApolloLink` instance,\n * receive results from the server and cache the results in a store. It also delivers updates\n * to GraphQL queries through `Observable` instances.\n */\nvar ApolloClient = /** @class */ (function () {\n    /**\n     * Constructs an instance of `ApolloClient`.\n     *\n     * @example\n     * ```js\n     * import { ApolloClient, InMemoryCache } from '@apollo/client';\n     *\n     * const cache = new InMemoryCache();\n     *\n     * const client = new ApolloClient({\n     *   // Provide required constructor fields\n     *   cache: cache,\n     *   uri: 'http://localhost:4000/',\n     *\n     *   // Provide some optional constructor fields\n     *   name: 'react-web-client',\n     *   version: '1.3',\n     *   queryDeduplication: false,\n     *   defaultOptions: {\n     *     watchQuery: {\n     *       fetchPolicy: 'cache-and-network',\n     *     },\n     *   },\n     * });\n     * ```\n     */\n    function ApolloClient(options) {\n        var _this = this;\n        this.resetStoreCallbacks = [];\n        this.clearStoreCallbacks = [];\n        if (!options.cache) {\n            throw newInvariantError(15);\n        }\n        var uri = options.uri, credentials = options.credentials, headers = options.headers, cache = options.cache, documentTransform = options.documentTransform, _a = options.ssrMode, ssrMode = _a === void 0 ? false : _a, _b = options.ssrForceFetchDelay, ssrForceFetchDelay = _b === void 0 ? 0 : _b, \n        // Expose the client instance as window.__APOLLO_CLIENT__ and call\n        // onBroadcast in queryManager.broadcastQueries to enable browser\n        // devtools, but disable them by default in production.\n        _c = options.connectToDevTools, \n        // Expose the client instance as window.__APOLLO_CLIENT__ and call\n        // onBroadcast in queryManager.broadcastQueries to enable browser\n        // devtools, but disable them by default in production.\n        connectToDevTools = _c === void 0 ? typeof window === \"object\" &&\n            !window.__APOLLO_CLIENT__ &&\n            globalThis.__DEV__ !== false : _c, _d = options.queryDeduplication, queryDeduplication = _d === void 0 ? true : _d, defaultOptions = options.defaultOptions, defaultContext = options.defaultContext, _e = options.assumeImmutableResults, assumeImmutableResults = _e === void 0 ? cache.assumeImmutableResults : _e, resolvers = options.resolvers, typeDefs = options.typeDefs, fragmentMatcher = options.fragmentMatcher, clientAwarenessName = options.name, clientAwarenessVersion = options.version;\n        var link = options.link;\n        if (!link) {\n            link =\n                uri ? new HttpLink({ uri: uri, credentials: credentials, headers: headers }) : ApolloLink.empty();\n        }\n        this.link = link;\n        this.cache = cache;\n        this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n        this.queryDeduplication = queryDeduplication;\n        this.defaultOptions = defaultOptions || Object.create(null);\n        this.typeDefs = typeDefs;\n        if (ssrForceFetchDelay) {\n            setTimeout(function () { return (_this.disableNetworkFetches = false); }, ssrForceFetchDelay);\n        }\n        this.watchQuery = this.watchQuery.bind(this);\n        this.query = this.query.bind(this);\n        this.mutate = this.mutate.bind(this);\n        this.resetStore = this.resetStore.bind(this);\n        this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n        this.version = version;\n        this.localState = new LocalState({\n            cache: cache,\n            client: this,\n            resolvers: resolvers,\n            fragmentMatcher: fragmentMatcher,\n        });\n        this.queryManager = new QueryManager({\n            cache: this.cache,\n            link: this.link,\n            defaultOptions: this.defaultOptions,\n            defaultContext: defaultContext,\n            documentTransform: documentTransform,\n            queryDeduplication: queryDeduplication,\n            ssrMode: ssrMode,\n            clientAwareness: {\n                name: clientAwarenessName,\n                version: clientAwarenessVersion,\n            },\n            localState: this.localState,\n            assumeImmutableResults: assumeImmutableResults,\n            onBroadcast: connectToDevTools ?\n                function () {\n                    if (_this.devToolsHookCb) {\n                        _this.devToolsHookCb({\n                            action: {},\n                            state: {\n                                queries: _this.queryManager.getQueryStore(),\n                                mutations: _this.queryManager.mutationStore || {},\n                            },\n                            dataWithOptimisticResults: _this.cache.extract(true),\n                        });\n                    }\n                }\n                : void 0,\n        });\n        if (connectToDevTools)\n            this.connectToDevTools();\n    }\n    ApolloClient.prototype.connectToDevTools = function () {\n        if (typeof window === \"object\") {\n            var windowWithDevTools = window;\n            var devtoolsSymbol = Symbol.for(\"apollo.devtools\");\n            (windowWithDevTools[devtoolsSymbol] =\n                windowWithDevTools[devtoolsSymbol] || []).push(this);\n            windowWithDevTools.__APOLLO_CLIENT__ = this;\n        }\n        /**\n         * Suggest installing the devtools for developers who don't have them\n         */\n        if (!hasSuggestedDevtools && globalThis.__DEV__ !== false) {\n            hasSuggestedDevtools = true;\n            setTimeout(function () {\n                if (typeof window !== \"undefined\" &&\n                    window.document &&\n                    window.top === window.self &&\n                    !window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__) {\n                    var nav = window.navigator;\n                    var ua = nav && nav.userAgent;\n                    var url = void 0;\n                    if (typeof ua === \"string\") {\n                        if (ua.indexOf(\"Chrome/\") > -1) {\n                            url =\n                                \"https://chrome.google.com/webstore/detail/\" +\n                                    \"apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm\";\n                        }\n                        else if (ua.indexOf(\"Firefox/\") > -1) {\n                            url =\n                                \"https://addons.mozilla.org/en-US/firefox/addon/apollo-developer-tools/\";\n                        }\n                    }\n                    if (url) {\n                        globalThis.__DEV__ !== false && invariant.log(\"Download the Apollo DevTools for a better development \" +\n                            \"experience: %s\", url);\n                    }\n                }\n            }, 10000);\n        }\n    };\n    Object.defineProperty(ApolloClient.prototype, \"documentTransform\", {\n        /**\n         * The `DocumentTransform` used to modify GraphQL documents before a request\n         * is made. If a custom `DocumentTransform` is not provided, this will be the\n         * default document transform.\n         */\n        get: function () {\n            return this.queryManager.documentTransform;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Call this method to terminate any active client processes, making it safe\n     * to dispose of this `ApolloClient` instance.\n     */\n    ApolloClient.prototype.stop = function () {\n        this.queryManager.stop();\n    };\n    /**\n     * This watches the cache store of the query according to the options specified and\n     * returns an `ObservableQuery`. We can subscribe to this `ObservableQuery` and\n     * receive updated results through a GraphQL observer when the cache store changes.\n     *\n     * Note that this method is not an implementation of GraphQL subscriptions. Rather,\n     * it uses Apollo's store in order to reactively deliver updates to your query results.\n     *\n     * For example, suppose you call watchQuery on a GraphQL query that fetches a person's\n     * first and last name and this person has a particular object identifier, provided by\n     * dataIdFromObject. Later, a different query fetches that same person's\n     * first and last name and the first name has now changed. Then, any observers associated\n     * with the results of the first query will be updated with a new result object.\n     *\n     * Note that if the cache does not change, the subscriber will *not* be notified.\n     *\n     * See [here](https://medium.com/apollo-stack/the-concepts-of-graphql-bc68bd819be3#.3mb0cbcmc) for\n     * a description of store reactivity.\n     */\n    ApolloClient.prototype.watchQuery = function (options) {\n        if (this.defaultOptions.watchQuery) {\n            options = mergeOptions(this.defaultOptions.watchQuery, options);\n        }\n        // XXX Overwriting options is probably not the best way to do this long term...\n        if (this.disableNetworkFetches &&\n            (options.fetchPolicy === \"network-only\" ||\n                options.fetchPolicy === \"cache-and-network\")) {\n            options = __assign(__assign({}, options), { fetchPolicy: \"cache-first\" });\n        }\n        return this.queryManager.watchQuery(options);\n    };\n    /**\n     * This resolves a single query according to the options specified and\n     * returns a `Promise` which is either resolved with the resulting data\n     * or rejected with an error.\n     *\n     * @param options - An object of type `QueryOptions` that allows us to\n     * describe how this query should be treated e.g. whether it should hit the\n     * server at all or just resolve from the cache, etc.\n     */\n    ApolloClient.prototype.query = function (options) {\n        if (this.defaultOptions.query) {\n            options = mergeOptions(this.defaultOptions.query, options);\n        }\n        invariant(options.fetchPolicy !== \"cache-and-network\", 16);\n        if (this.disableNetworkFetches && options.fetchPolicy === \"network-only\") {\n            options = __assign(__assign({}, options), { fetchPolicy: \"cache-first\" });\n        }\n        return this.queryManager.query(options);\n    };\n    /**\n     * This resolves a single mutation according to the options specified and returns a\n     * Promise which is either resolved with the resulting data or rejected with an\n     * error. In some cases both `data` and `errors` might be undefined, for example\n     * when `errorPolicy` is set to `'ignore'`.\n     *\n     * It takes options as an object with the following keys and values:\n     */\n    ApolloClient.prototype.mutate = function (options) {\n        if (this.defaultOptions.mutate) {\n            options = mergeOptions(this.defaultOptions.mutate, options);\n        }\n        return this.queryManager.mutate(options);\n    };\n    /**\n     * This subscribes to a graphql subscription according to the options specified and returns an\n     * `Observable` which either emits received data or an error.\n     */\n    ApolloClient.prototype.subscribe = function (options) {\n        return this.queryManager.startGraphQLSubscription(options);\n    };\n    /**\n     * Tries to read some data from the store in the shape of the provided\n     * GraphQL query without making a network request. This method will start at\n     * the root query. To start at a specific id returned by `dataIdFromObject`\n     * use `readFragment`.\n     *\n     * @param optimistic - Set to `true` to allow `readQuery` to return\n     * optimistic results. Is `false` by default.\n     */\n    ApolloClient.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.cache.readQuery(options, optimistic);\n    };\n    /**\n     * Tries to read some data from the store in the shape of the provided\n     * GraphQL fragment without making a network request. This method will read a\n     * GraphQL fragment from any arbitrary id that is currently cached, unlike\n     * `readQuery` which will only read from the root query.\n     *\n     * You must pass in a GraphQL document with a single fragment or a document\n     * with multiple fragments that represent what you are reading. If you pass\n     * in a document with multiple fragments then you must also specify a\n     * `fragmentName`.\n     *\n     * @param optimistic - Set to `true` to allow `readFragment` to return\n     * optimistic results. Is `false` by default.\n     */\n    ApolloClient.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.cache.readFragment(options, optimistic);\n    };\n    /**\n     * Writes some data in the shape of the provided GraphQL query directly to\n     * the store. This method will start at the root query. To start at a\n     * specific id returned by `dataIdFromObject` then use `writeFragment`.\n     */\n    ApolloClient.prototype.writeQuery = function (options) {\n        var ref = this.cache.writeQuery(options);\n        if (options.broadcast !== false) {\n            this.queryManager.broadcastQueries();\n        }\n        return ref;\n    };\n    /**\n     * Writes some data in the shape of the provided GraphQL fragment directly to\n     * the store. This method will write to a GraphQL fragment from any arbitrary\n     * id that is currently cached, unlike `writeQuery` which will only write\n     * from the root query.\n     *\n     * You must pass in a GraphQL document with a single fragment or a document\n     * with multiple fragments that represent what you are writing. If you pass\n     * in a document with multiple fragments then you must also specify a\n     * `fragmentName`.\n     */\n    ApolloClient.prototype.writeFragment = function (options) {\n        var ref = this.cache.writeFragment(options);\n        if (options.broadcast !== false) {\n            this.queryManager.broadcastQueries();\n        }\n        return ref;\n    };\n    ApolloClient.prototype.__actionHookForDevTools = function (cb) {\n        this.devToolsHookCb = cb;\n    };\n    ApolloClient.prototype.__requestRaw = function (payload) {\n        return execute(this.link, payload);\n    };\n    /**\n     * Resets your entire store by clearing out your cache and then re-executing\n     * all of your active queries. This makes it so that you may guarantee that\n     * there is no data left in your store from a time before you called this\n     * method.\n     *\n     * `resetStore()` is useful when your user just logged out. You’ve removed the\n     * user session, and you now want to make sure that any references to data you\n     * might have fetched while the user session was active is gone.\n     *\n     * It is important to remember that `resetStore()` *will* refetch any active\n     * queries. This means that any components that might be mounted will execute\n     * their queries again using your network interface. If you do not want to\n     * re-execute any queries then you should make sure to stop watching any\n     * active queries.\n     */\n    ApolloClient.prototype.resetStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () {\n            return _this.queryManager.clearStore({\n                discardWatches: false,\n            });\n        })\n            .then(function () { return Promise.all(_this.resetStoreCallbacks.map(function (fn) { return fn(); })); })\n            .then(function () { return _this.reFetchObservableQueries(); });\n    };\n    /**\n     * Remove all data from the store. Unlike `resetStore`, `clearStore` will\n     * not refetch any active queries.\n     */\n    ApolloClient.prototype.clearStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () {\n            return _this.queryManager.clearStore({\n                discardWatches: true,\n            });\n        })\n            .then(function () { return Promise.all(_this.clearStoreCallbacks.map(function (fn) { return fn(); })); });\n    };\n    /**\n     * Allows callbacks to be registered that are executed when the store is\n     * reset. `onResetStore` returns an unsubscribe function that can be used\n     * to remove registered callbacks.\n     */\n    ApolloClient.prototype.onResetStore = function (cb) {\n        var _this = this;\n        this.resetStoreCallbacks.push(cb);\n        return function () {\n            _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    /**\n     * Allows callbacks to be registered that are executed when the store is\n     * cleared. `onClearStore` returns an unsubscribe function that can be used\n     * to remove registered callbacks.\n     */\n    ApolloClient.prototype.onClearStore = function (cb) {\n        var _this = this;\n        this.clearStoreCallbacks.push(cb);\n        return function () {\n            _this.clearStoreCallbacks = _this.clearStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    /**\n     * Refetches all of your active queries.\n     *\n     * `reFetchObservableQueries()` is useful if you want to bring the client back to proper state in case of a network outage\n     *\n     * It is important to remember that `reFetchObservableQueries()` *will* refetch any active\n     * queries. This means that any components that might be mounted will execute\n     * their queries again using your network interface. If you do not want to\n     * re-execute any queries then you should make sure to stop watching any\n     * active queries.\n     * Takes optional parameter `includeStandby` which will include queries in standby-mode when refetching.\n     */\n    ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {\n        return this.queryManager.reFetchObservableQueries(includeStandby);\n    };\n    /**\n     * Refetches specified active queries. Similar to \"reFetchObservableQueries()\" but with a specific list of queries.\n     *\n     * `refetchQueries()` is useful for use cases to imperatively refresh a selection of queries.\n     *\n     * It is important to remember that `refetchQueries()` *will* refetch specified active\n     * queries. This means that any components that might be mounted will execute\n     * their queries again using your network interface. If you do not want to\n     * re-execute any queries then you should make sure to stop watching any\n     * active queries.\n     */\n    ApolloClient.prototype.refetchQueries = function (options) {\n        var map = this.queryManager.refetchQueries(options);\n        var queries = [];\n        var results = [];\n        map.forEach(function (result, obsQuery) {\n            queries.push(obsQuery);\n            results.push(result);\n        });\n        var result = Promise.all(results);\n        // In case you need the raw results immediately, without awaiting\n        // Promise.all(results):\n        result.queries = queries;\n        result.results = results;\n        // If you decide to ignore the result Promise because you're using\n        // result.queries and result.results instead, you shouldn't have to worry\n        // about preventing uncaught rejections for the Promise.all result.\n        result.catch(function (error) {\n            globalThis.__DEV__ !== false && invariant.debug(17, error);\n        });\n        return result;\n    };\n    /**\n     * Get all currently active `ObservableQuery` objects, in a `Map` keyed by\n     * query ID strings.\n     *\n     * An \"active\" query is one that has observers and a `fetchPolicy` other than\n     * \"standby\" or \"cache-only\".\n     *\n     * You can include all `ObservableQuery` objects (including the inactive ones)\n     * by passing \"all\" instead of \"active\", or you can include just a subset of\n     * active queries by passing an array of query names or DocumentNode objects.\n     */\n    ApolloClient.prototype.getObservableQueries = function (include) {\n        if (include === void 0) { include = \"active\"; }\n        return this.queryManager.getObservableQueries(include);\n    };\n    /**\n     * Exposes the cache's complete state, in a serializable format for later restoration.\n     */\n    ApolloClient.prototype.extract = function (optimistic) {\n        return this.cache.extract(optimistic);\n    };\n    /**\n     * Replaces existing state in the cache (if any) with the values expressed by\n     * `serializedState`.\n     *\n     * Called when hydrating a cache (server side rendering, or offline storage),\n     * and also (potentially) during hot reloads.\n     */\n    ApolloClient.prototype.restore = function (serializedState) {\n        return this.cache.restore(serializedState);\n    };\n    /**\n     * Add additional local resolvers.\n     */\n    ApolloClient.prototype.addResolvers = function (resolvers) {\n        this.localState.addResolvers(resolvers);\n    };\n    /**\n     * Set (override existing) local resolvers.\n     */\n    ApolloClient.prototype.setResolvers = function (resolvers) {\n        this.localState.setResolvers(resolvers);\n    };\n    /**\n     * Get all registered local resolvers.\n     */\n    ApolloClient.prototype.getResolvers = function () {\n        return this.localState.getResolvers();\n    };\n    /**\n     * Set a custom local state fragment matcher.\n     */\n    ApolloClient.prototype.setLocalStateFragmentMatcher = function (fragmentMatcher) {\n        this.localState.setFragmentMatcher(fragmentMatcher);\n    };\n    /**\n     * Define a new ApolloLink (or link chain) that Apollo Client will use.\n     */\n    ApolloClient.prototype.setLink = function (newLink) {\n        this.link = this.queryManager.link = newLink;\n    };\n    Object.defineProperty(ApolloClient.prototype, \"defaultContext\", {\n        get: function () {\n            return this.queryManager.defaultContext;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return ApolloClient;\n}());\nexport { ApolloClient };\nif (globalThis.__DEV__ !== false) {\n    ApolloClient.prototype.getMemoryInternals = getApolloClientMemoryInternals;\n}\n//# sourceMappingURL=ApolloClient.js.map", "/* Core */\nexport { ApolloClient, mergeOptions } from \"./ApolloClient.js\";\nexport { ObservableQuery } from \"./ObservableQuery.js\";\nexport { NetworkStatus, isNetworkRequestSettled } from \"./networkStatus.js\";\nexport * from \"./types.js\";\nexport { isApolloError, ApolloError } from \"../errors/index.js\";\nexport { Cache, ApolloCache, InMemoryCache, MissingFieldError, defaultDataIdFromObject, makeVar, } from \"../cache/index.js\";\nexport * from \"../cache/inmemory/types.js\";\n/* Link */\nexport * from \"../link/core/index.js\";\nexport * from \"../link/http/index.js\";\nexport { fromError, toPromise, fromPromise, throwServerError, } from \"../link/utils/index.js\";\nexport { DocumentTransform, Observable, isReference, makeReference, } from \"../utilities/index.js\";\n/* Supporting */\n// The verbosity of invariant.{log,warn,error} can be controlled globally\n// (for anyone using the same ts-invariant package) by passing \"log\",\n// \"warn\", \"error\", or \"silent\" to setVerbosity (\"log\" is the default).\n// Note that all invariant.* logging is hidden in production.\nimport { setVerbosity } from \"ts-invariant\";\nexport { setVerbosity as setLogVerbosity };\nsetVerbosity(globalThis.__DEV__ !== false ? \"log\" : \"silent\");\n// Note that importing `gql` by itself, then destructuring\n// additional properties separately before exporting, is intentional.\n// Due to the way the `graphql-tag` library is setup, certain bundlers\n// can't find the properties added to the exported `gql` function without\n// additional guidance (e.g. Rollup - see\n// https://rollupjs.org/guide/en/#error-name-is-not-exported-by-module).\n// Instead of having people that are using bundlers with `@apollo/client` add\n// extra bundler config to help `graphql-tag` exports be found (which would be\n// awkward since they aren't importing `graphql-tag` themselves), this\n// workaround of pulling the extra properties off the `gql` function,\n// then re-exporting them separately, helps keeps bundlers happy without any\n// additional config changes.\nexport { gql, resetCaches, disableFragmentWarnings, enableExperimentalFragmentVariables, disableExperimentalFragmentVariables, } from \"graphql-tag\";\n//# sourceMappingURL=index.js.map", "\n\n/////////////////////////////\n//\n\nexport { version } from \"./_version.js\";\n\nexport {\n    decodeBytes32String, encodeBytes32String,\n\n    AbiCoder,\n    ConstructorFragment, ErrorFragment, EventFragment, Fragment, FallbackFragment, FunctionFragment, NamedFragment, ParamType, StructFragment,\n\n    checkResultErrors, ErrorDescription, Indexed, Interface, LogDescription, Result, TransactionDescription,\n    Typed,\n} from \"./abi/index.js\";\n\nexport {\n    getAddress, getIcapAddress,\n    getCreateAddress, getCreate2Address,\n    isAddressable, isAddress, resolveAddress\n} from \"./address/index.js\";\n\nexport {\n    ZeroAddress,\n    WeiPerEther, MaxUint256, MinInt256, MaxInt256, N,\n    ZeroHash,\n    EtherSymbol, MessagePrefix\n} from \"./constants/index.js\";\n\nexport {\n    BaseContract, Contract,\n    ContractFactory,\n    ContractEventPayload, ContractTransactionReceipt, ContractTransactionResponse, ContractUnknownEventPayload, EventLog, UndecodedEventLog\n} from \"./contract/index.js\";\n\nexport {\n    computeHmac,\n    randomBytes,\n    keccak256,\n    ripemd160,\n    sha256, sha512,\n    pbkdf2,\n    scrypt, scryptSync,\n    lock,\n    Signature, SigningKey\n} from \"./crypto/index.js\";\n\nexport {\n    id,\n    ensNormalize, isValidName, namehash, dnsEncode,\n    hashMessage, verifyMessage,\n    solidityPacked, solidityPackedKeccak256, solidityPackedSha256,\n    TypedDataEncoder,\n    verifyTypedData\n} from \"./hash/index.js\";\n\nexport {\n    getDefaultProvider,\n\n    Block, FeeData, Log, TransactionReceipt, TransactionResponse,\n\n    AbstractSigner, NonceManager, VoidSigner,\n\n    AbstractProvider,\n\n    FallbackProvider,\n    JsonRpcApiProvider, JsonRpcProvider, JsonRpcSigner,\n\n    BrowserProvider,\n\n    AlchemyProvider, AnkrProvider, CloudflareProvider, EtherscanProvider,\n    InfuraProvider, InfuraWebSocketProvider, PocketProvider, QuickNodeProvider,\n\n    IpcSocketProvider, SocketProvider, WebSocketProvider,\n\n    EnsResolver,\n    Network,\n\n    EnsPlugin, EtherscanPlugin,\n    FeeDataNetworkPlugin, FetchUrlFeeDataNetworkPlugin,\n    GasCostPlugin, NetworkPlugin, MulticoinProviderPlugin,\n\n    SocketBlockSubscriber, SocketEventSubscriber, SocketPendingSubscriber,\n    SocketSubscriber, UnmanagedSubscriber,\n\n    copyRequest, showThrottleMessage\n} from \"./providers/index.js\";\n\nexport {\n    accessListify,\n    computeAddress, recoverAddress,\n    Transaction\n} from \"./transaction/index.js\";\n\nexport {\n    decodeBase58, encodeBase58,\n    decodeBase64, encodeBase64,\n    concat, dataLength, dataSlice, getBytes, getBytesCopy, hexlify,\n    isHexString, isBytesLike, stripZerosLeft, zeroPadBytes, zeroPadValue,\n    defineProperties, resolveProperties,\n    assert, assertArgument, assertArgumentCount, assertNormalize, assertPrivate,\n    makeError,\n    isCallException, isError,\n    EventPayload,\n    FetchRequest, FetchResponse, FetchCancelSignal,\n    FixedNumber,\n    getBigInt, getNumber, getUint, toBeArray, toBigInt, toBeHex, toNumber, toQuantity,\n    fromTwos, toTwos, mask,\n    formatEther, parseEther, formatUnits, parseUnits,\n    toUtf8Bytes, toUtf8CodePoints, toUtf8String,\n    Utf8ErrorFuncs,\n    decodeRlp, encodeRlp,\n    uuidV4,\n} from \"./utils/index.js\";\n\nexport {\n    Mnemonic,\n    BaseWallet, HDNodeWallet, HDNodeVoidWallet,\n    Wallet,\n\n    defaultPath,\n\n    getAccountPath, getIndexedAccountPath,\n    isCrowdsaleJson, isKeystoreJson,\n\n    decryptCrowdsaleJson, decryptKeystoreJsonSync, decryptKeystoreJson,\n    encryptKeystoreJson, encryptKeystoreJsonSync,\n} from \"./wallet/index.js\";\n\nexport {\n    Wordlist, LangEn, WordlistOwl, WordlistOwlA, wordlists\n} from \"./wordlists/index.js\";\n\n\n\n/////////////////////////////\n// Types\n\nexport type {\n    JsonFragment, JsonFragmentType,\n    FormatType, FragmentType,\n    InterfaceAbi,\n    ParamTypeWalkFunc, ParamTypeWalkAsyncFunc\n} from \"./abi/index.js\";\n\nexport type {\n    Addressable, AddressLike, NameResolver\n} from \"./address/index.js\";\n\nexport type {\n    ConstantContractMethod, ContractEvent, ContractEventArgs, ContractEventName,\n    ContractInterface, ContractMethod, ContractMethodArgs, ContractTransaction,\n    DeferredTopicFilter, Overrides,\n    BaseContractMethod, ContractDeployTransaction, PostfixOverrides,\n    WrappedFallback\n} from \"./contract/index.js\";\n\nexport type { ProgressCallback, SignatureLike } from \"./crypto/index.js\";\n\nexport type { TypedDataDomain, TypedDataField } from \"./hash/index.js\";\n\nexport type {\n    Provider, Signer,\n\n    AbstractProviderOptions, FallbackProviderOptions,\n\n    AbstractProviderPlugin, BlockParams, BlockTag, ContractRunner, DebugEventBrowserProvider,\n    Eip1193Provider, EventFilter, Filter, FilterByBlockHash, GasCostParameters,\n    JsonRpcApiProviderOptions, JsonRpcError, JsonRpcPayload, JsonRpcResult,\n    JsonRpcTransactionRequest, LogParams, MinedBlock, MinedTransactionResponse, Networkish,\n    OrphanFilter, PerformActionFilter, PerformActionRequest, PerformActionTransaction,\n    PreparedTransactionRequest, ProviderEvent, Subscriber, Subscription, TopicFilter,\n    TransactionReceiptParams, TransactionRequest, TransactionResponseParams,\n    WebSocketCreator, WebSocketLike\n} from \"./providers/index.js\";\n\nexport type {\n    AccessList, AccessListish, AccessListEntry,\n    TransactionLike\n} from \"./transaction/index.js\";\n\nexport type {\n    BytesLike,\n    BigNumberish, Numeric,\n    ErrorCode,\n    FixedFormat,\n    Utf8ErrorFunc, UnicodeNormalizationForm, Utf8ErrorReason,\n    RlpStructuredData, RlpStructuredDataish,\n\n    GetUrlResponse,\n    FetchPreflightFunc, FetchProcessFunc, FetchRetryFunc,\n    FetchGatewayFunc, FetchGetUrlFunc,\n\n    EthersError, UnknownError, NotImplementedError, UnsupportedOperationError, NetworkError,\n    ServerError, TimeoutError, BadDataError, CancelledError, BufferOverrunError,\n    NumericFaultError, InvalidArgumentError, MissingArgumentError, UnexpectedArgumentError,\n    CallExceptionError, InsufficientFundsError, NonceExpiredError, OffchainFaultError,\n    ReplacementUnderpricedError, TransactionReplacedError, UnconfiguredNameError,\n    ActionRejectedError,\n    CodedEthersError,\n\n    CallExceptionAction, CallExceptionTransaction,\n    EventEmitterable, Listener\n} from \"./utils/index.js\";\n\nexport type {\n    CrowdsaleAccount, KeystoreAccount, EncryptOptions\n} from \"./wallet/index.js\";\n\n", "/* Do NOT modify this file; see /src.ts/_admin/update-version.ts */\n\n/**\n *  The current version of Ethers.\n */\nexport const version: string = \"6.11.1\";\n", "/**\n *  Property helper functions.\n *\n *  @_subsection api/utils:Properties  [about-properties]\n */\n\nfunction checkType(value: any, type: string, name: string): void {\n    const types = type.split(\"|\").map(t => t.trim());\n    for (let i = 0; i < types.length; i++) {\n        switch (type) {\n            case \"any\":\n                return;\n            case \"bigint\":\n            case \"boolean\":\n            case \"number\":\n            case \"string\":\n                if (typeof(value) === type) { return; }\n        }\n    }\n\n    const error: any = new Error(`invalid value for type ${ type }`);\n    error.code = \"INVALID_ARGUMENT\";\n    error.argument = `value.${ name }`;\n    error.value = value;\n\n    throw error;\n}\n\n/**\n *  Resolves to a new object that is a copy of %%value%%, but with all\n *  values resolved.\n */\nexport async function resolveProperties<T>(value: { [ P in keyof T ]: T[P] | Promise<T[P]>}): Promise<T> {\n    const keys = Object.keys(value);\n    const results = await Promise.all(keys.map((k) => Promise.resolve(value[<keyof T>k])));\n    return results.reduce((accum: any, v, index) => {\n        accum[keys[index]] = v;\n        return accum;\n    }, <{ [ P in keyof T]: T[P] }>{ });\n}\n\n/**\n *  Assigns the %%values%% to %%target%% as read-only values.\n *\n *  It %%types%% is specified, the values are checked.\n */\nexport function defineProperties<T>(\n target: T,\n values: { [ K in keyof T ]?: T[K] },\n types?: { [ K in keyof T ]?: string }): void {\n\n    for (let key in values) {\n        let value = values[key];\n\n        const type = (types ? types[key]: null);\n        if (type) { checkType(value, type, key); }\n\n        Object.defineProperty(target, key, { enumerable: true, value, writable: false });\n    }\n}\n", "/**\n *  All errors in ethers include properties to ensure they are both\n *  human-readable (i.e. ``.message``) and machine-readable (i.e. ``.code``).\n *\n *  The [[isError]] function can be used to check the error ``code`` and\n *  provide a type guard for the properties present on that error interface.\n *\n *  @_section: api/utils/errors:Errors  [about-errors]\n */\n\nimport { version } from \"../_version.js\";\n\nimport { defineProperties } from \"./properties.js\";\n\nimport type {\n    TransactionRequest, TransactionReceipt, TransactionResponse\n} from \"../providers/index.js\";\n\nimport type { FetchRequest, FetchResponse } from \"./fetch.js\";\n\n/**\n *  An error may contain additional properties, but those must not\n *  conflict with any implicit properties.\n */\nexport type ErrorInfo<T> = Omit<T, \"code\" | \"name\" | \"message\" | \"shortMessage\"> & { shortMessage?: string };\n\n\nfunction stringify(value: any): any {\n    if (value == null) { return \"null\"; }\n\n    if (Array.isArray(value)) {\n        return \"[ \" + (value.map(stringify)).join(\", \") + \" ]\";\n    }\n\n    if (value instanceof Uint8Array) {\n        const HEX = \"0123456789abcdef\";\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            result += HEX[value[i] >> 4];\n            result += HEX[value[i] & 0xf];\n        }\n        return result;\n    }\n\n    if (typeof(value) === \"object\" && typeof(value.toJSON) === \"function\") {\n        return stringify(value.toJSON());\n    }\n\n    switch (typeof(value)) {\n        case \"boolean\": case \"symbol\":\n            return value.toString();\n        case \"bigint\":\n            return BigInt(value).toString();\n        case \"number\":\n            return (value).toString();\n        case \"string\":\n            return JSON.stringify(value);\n        case \"object\": {\n            const keys = Object.keys(value);\n            keys.sort();\n            return \"{ \" + keys.map((k) => `${ stringify(k) }: ${ stringify(value[k]) }`).join(\", \") + \" }\";\n        }\n    }\n\n    return `[ COULD NOT SERIALIZE ]`;\n}\n\n/**\n *  All errors emitted by ethers have an **ErrorCode** to help\n *  identify and coalesce errors to simplify programmatic analysis.\n *\n *  Each **ErrorCode** is the %%code%% proerty of a coresponding\n *  [[EthersError]].\n *\n *  **Generic Errors**\n *\n *  **``\"UNKNOWN_ERROR\"``** - see [[UnknownError]]\n *\n *  **``\"NOT_IMPLEMENTED\"``** - see [[NotImplementedError]]\n *\n *  **``\"UNSUPPORTED_OPERATION\"``** - see [[UnsupportedOperationError]]\n *\n *  **``\"NETWORK_ERROR\"``** - see [[NetworkError]]\n *\n *  **``\"SERVER_ERROR\"``** - see [[ServerError]]\n *\n *  **``\"TIMEOUT\"``** - see [[TimeoutError]]\n *\n *  **``\"BAD_DATA\"``** - see [[BadDataError]]\n *\n *  **``\"CANCELLED\"``** - see [[CancelledError]]\n *\n *  **Operational Errors**\n *\n *  **``\"BUFFER_OVERRUN\"``** - see [[BufferOverrunError]]\n *\n *  **``\"NUMERIC_FAULT\"``** - see [[NumericFaultError]]\n *\n *  **Argument Errors**\n *\n *  **``\"INVALID_ARGUMENT\"``** - see [[InvalidArgumentError]]\n *\n *  **``\"MISSING_ARGUMENT\"``** - see [[MissingArgumentError]]\n *\n *  **``\"UNEXPECTED_ARGUMENT\"``** - see [[UnexpectedArgumentError]]\n *\n *  **``\"VALUE_MISMATCH\"``** - //unused//\n *\n *  **Blockchain Errors**\n *\n *  **``\"CALL_EXCEPTION\"``** - see [[CallExceptionError]]\n *\n *  **``\"INSUFFICIENT_FUNDS\"``** - see [[InsufficientFundsError]]\n *\n *  **``\"NONCE_EXPIRED\"``** - see [[NonceExpiredError]]\n *\n *  **``\"REPLACEMENT_UNDERPRICED\"``** - see [[ReplacementUnderpricedError]]\n *\n *  **``\"TRANSACTION_REPLACED\"``** - see [[TransactionReplacedError]]\n *\n *  **``\"UNCONFIGURED_NAME\"``** - see [[UnconfiguredNameError]]\n *\n *  **``\"OFFCHAIN_FAULT\"``** - see [[OffchainFaultError]]\n *\n *  **User Interaction Errors**\n *\n *  **``\"ACTION_REJECTED\"``** - see [[ActionRejectedError]]\n */\nexport type ErrorCode =\n\n    // Generic Errors\n    \"UNKNOWN_ERROR\" | \"NOT_IMPLEMENTED\" | \"UNSUPPORTED_OPERATION\" |\n    \"NETWORK_ERROR\" | \"SERVER_ERROR\" | \"TIMEOUT\" | \"BAD_DATA\" |\n    \"CANCELLED\" |\n\n    // Operational Errors\n    \"BUFFER_OVERRUN\" |  \"NUMERIC_FAULT\" |\n\n    // Argument Errors\n    \"INVALID_ARGUMENT\" | \"MISSING_ARGUMENT\" | \"UNEXPECTED_ARGUMENT\" |\n    \"VALUE_MISMATCH\" |\n\n    // Blockchain Errors\n    \"CALL_EXCEPTION\" | \"INSUFFICIENT_FUNDS\" | \"NONCE_EXPIRED\" |\n    \"REPLACEMENT_UNDERPRICED\" | \"TRANSACTION_REPLACED\" |\n    \"UNCONFIGURED_NAME\" | \"OFFCHAIN_FAULT\" |\n\n    // User Interaction\n    \"ACTION_REJECTED\"\n;\n\n/**\n *  All errors in Ethers include properties to assist in\n *  machine-readable errors.\n */\nexport interface EthersError<T extends ErrorCode = ErrorCode> extends Error {\n    /**\n     *  The string error code.\n     */\n    code: ErrorCode;\n\n    /**\n     *  A short message describing the error, with minimal additional\n     *  details.\n     */\n    shortMessage: string;\n\n    /**\n     *  Additional info regarding the error that may be useful.\n     *\n     *  This is generally helpful mostly for human-based debugging.\n     */\n    info?: Record<string, any>;\n\n    /**\n     *  Any related error.\n     */\n    error?: Error;\n}\n\n// Generic Errors\n\n/**\n *  This Error is a catch-all for when there is no way for Ethers to\n *  know what the underlying problem is.\n */\nexport interface UnknownError extends EthersError<\"UNKNOWN_ERROR\"> {\n    [ key: string ]: any;\n}\n\n/**\n *  This Error is mostly used as a stub for functionality that is\n *  intended for the future, but is currently not implemented.\n */\nexport interface NotImplementedError extends EthersError<\"NOT_IMPLEMENTED\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n}\n\n/**\n *  This Error indicates that the attempted operation is not supported.\n *\n *  This could range from a specific JSON-RPC end-point not supporting\n *  a feature to a specific configuration of an object prohibiting the\n *  operation.\n *\n *  For example, a [[Wallet]] with no connected [[Provider]] is unable\n *  to send a transaction.\n */\nexport interface UnsupportedOperationError extends EthersError<\"UNSUPPORTED_OPERATION\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n}\n\n/**\n *  This Error indicates a problem connecting to a network.\n */\nexport interface NetworkError extends EthersError<\"NETWORK_ERROR\"> {\n    /**\n     *  The network event.\n     */\n    event: string;\n}\n\n/**\n *  This Error indicates there was a problem fetching a resource from\n *  a server.\n */\nexport interface ServerError extends EthersError<\"SERVER_ERROR\"> {\n    /**\n     *  The requested resource.\n     */\n    request: FetchRequest | string;\n\n    /**\n     *  The response received from the server, if available.\n     */\n    response?: FetchResponse;\n}\n\n/**\n *  This Error indicates that the timeout duration has expired and\n *  that the operation has been implicitly cancelled.\n *\n *  The side-effect of the operation may still occur, as this\n *  generally means a request has been sent and there has simply\n *  been no response to indicate whether it was processed or not.\n */\nexport interface TimeoutError extends EthersError<\"TIMEOUT\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n\n    /**\n     *  The reason.\n     */\n    reason: string;\n\n    /**\n     *  The resource request, if available.\n     */\n    request?: FetchRequest;\n}\n\n/**\n *  This Error indicates that a provided set of data cannot\n *  be correctly interpreted.\n */\nexport interface BadDataError extends EthersError<\"BAD_DATA\"> {\n    /**\n     *  The data.\n     */\n    value: any;\n}\n\n/**\n *  This Error indicates that the operation was cancelled by a\n *  programmatic call, for example to ``cancel()``.\n */\nexport interface CancelledError extends EthersError<\"CANCELLED\"> {\n}\n\n\n// Operational Errors\n\n/**\n *  This Error indicates an attempt was made to read outside the bounds\n *  of protected data.\n *\n *  Most operations in Ethers are protected by bounds checks, to mitigate\n *  exploits when parsing data.\n */\nexport interface BufferOverrunError extends EthersError<\"BUFFER_OVERRUN\"> {\n    /**\n     *  The buffer that was overrun.\n     */\n    buffer: Uint8Array;\n\n    /**\n     *  The length of the buffer.\n     */\n    length: number;\n\n    /**\n     *  The offset that was requested.\n     */\n    offset: number;\n}\n\n/**\n *  This Error indicates an operation which would result in incorrect\n *  arithmetic output has occurred.\n *\n *  For example, trying to divide by zero or using a ``uint8`` to store\n *  a negative value.\n */\nexport interface NumericFaultError extends EthersError<\"NUMERIC_FAULT\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n\n    /**\n     *  The fault reported.\n     */\n    fault: string;\n\n    /**\n     *  The value the operation was attempted against.\n     */\n    value: any;\n}\n\n\n// Argument Errors\n\n/**\n *  This Error indicates an incorrect type or value was passed to\n *  a function or method.\n */\nexport interface InvalidArgumentError extends EthersError<\"INVALID_ARGUMENT\"> {\n    /**\n     *  The name of the argument.\n     */\n    argument: string;\n\n    /**\n     *  The value that was provided.\n     */\n    value: any;\n\n    info?: Record<string, any>\n}\n\n/**\n *  This Error indicates there were too few arguments were provided.\n */\nexport interface MissingArgumentError extends EthersError<\"MISSING_ARGUMENT\"> {\n    /**\n     *  The number of arguments received.\n     */\n    count: number;\n\n    /**\n     *  The number of arguments expected.\n     */\n    expectedCount: number;\n}\n\n/**\n *  This Error indicates too many arguments were provided.\n */\nexport interface UnexpectedArgumentError extends EthersError<\"UNEXPECTED_ARGUMENT\"> {\n    /**\n     *  The number of arguments received.\n     */\n    count: number;\n\n    /**\n     *  The number of arguments expected.\n     */\n    expectedCount: number;\n}\n\n\n// Blockchain Errors\n\n/**\n *  The action that resulted in the call exception.\n */\nexport type CallExceptionAction = \"call\" | \"estimateGas\" | \"getTransactionResult\" | \"sendTransaction\" | \"unknown\";\n\n/**\n *  The related transaction that caused the error.\n */\nexport type CallExceptionTransaction = {\n    to: null | string;\n    from?: string;\n    data: string;\n};\n\n/**\n *  This **Error** indicates a transaction reverted.\n */\nexport interface CallExceptionError extends EthersError<\"CALL_EXCEPTION\"> {\n\n    /**\n     *  The action being performed when the revert was encountered.\n     */\n    action: CallExceptionAction;\n\n    /**\n     *  The revert data returned.\n     */\n    data: null | string;\n\n    /**\n     *  A human-readable representation of data, if possible.\n     */\n    reason: null | string;\n\n    /**\n     *  The transaction that triggered the exception.\n     */\n    transaction: CallExceptionTransaction,\n\n    /**\n     *  The contract invocation details, if available.\n     */\n    invocation: null | {\n        method: string;\n        signature: string;\n        args: Array<any>;\n    }\n\n    /**\n     *  The built-in or custom revert error, if available\n     */\n    revert: null | {\n        signature: string;\n        name: string;\n        args: Array<any>;\n    }\n\n    /**\n     *  If the error occurred in a transaction that was mined\n     *  (with a status of ``0``), this is the receipt.\n     */\n    receipt?: TransactionReceipt;   // @TODO: in v7, make this `null | TransactionReceipt`\n}\n\n\n/**\n *  The sending account has insufficient funds to cover the\n *  entire transaction cost.\n */\nexport interface InsufficientFundsError extends EthersError<\"INSUFFICIENT_FUNDS\"> {\n    /**\n     *  The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n *  The sending account has already used this nonce in a\n *  transaction that has been included.\n */\nexport interface NonceExpiredError extends EthersError<\"NONCE_EXPIRED\"> {\n    /**\n     *  The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n *  A CCIP-read exception, which cannot be recovered from or\n *  be further processed.\n */\nexport interface OffchainFaultError extends EthersError<\"OFFCHAIN_FAULT\"> {\n    /**\n     *  The transaction.\n     */\n    transaction?: TransactionRequest;\n\n    /**\n     *  The reason the CCIP-read failed.\n     */\n    reason: string;\n}\n\n/**\n *  An attempt was made to replace a transaction, but with an\n *  insufficient additional fee to afford evicting the old\n *  transaction from the memory pool.\n */\nexport interface ReplacementUnderpricedError extends EthersError<\"REPLACEMENT_UNDERPRICED\"> {\n    /**\n     *  The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n *  A pending transaction was replaced by another.\n */\nexport interface TransactionReplacedError extends EthersError<\"TRANSACTION_REPLACED\"> {\n    /**\n     *  If the transaction was cancelled, such that the original\n     *  effects of the transaction cannot be assured.\n     */\n    cancelled: boolean;\n\n    /**\n     *  The reason the transaction was replaced.\n     */\n    reason: \"repriced\" | \"cancelled\" | \"replaced\";\n\n    /**\n     *  The hash of the replaced transaction.\n     */\n    hash: string;\n\n    /**\n     *  The transaction that replaced the transaction.\n     */\n    replacement: TransactionResponse;\n\n    /**\n     *  The receipt of the transaction that replace the transaction.\n     */\n    receipt: TransactionReceipt;\n}\n\n/**\n *  This Error indicates an ENS name was used, but the name has not\n *  been configured.\n *\n *  This could indicate an ENS name is unowned or that the current\n *  address being pointed to is the [[ZeroAddress]].\n */\nexport interface UnconfiguredNameError extends EthersError<\"UNCONFIGURED_NAME\"> {\n    /**\n     *  The ENS name that was requested\n     */\n    value: string;\n}\n\n/**\n *  This Error indicates a request was rejected by the user.\n *\n *  In most clients (such as MetaMask), when an operation requires user\n *  authorization (such as ``signer.sendTransaction``), the client\n *  presents a dialog box to the user. If the user denies the request\n *  this error is thrown.\n */\nexport interface ActionRejectedError extends EthersError<\"ACTION_REJECTED\"> {\n    /**\n     *  The requested action.\n     */\n    action: \"requestAccess\" | \"sendTransaction\" | \"signMessage\" | \"signTransaction\" | \"signTypedData\" | \"unknown\",\n\n    /**\n     *  The reason the action was rejected.\n     *\n     *  If there is already a pending request, some clients may indicate\n     *  there is already a ``\"pending\"`` action. This prevents an app\n     *  from spamming the user.\n     */\n    reason: \"expired\" | \"rejected\" | \"pending\"\n}\n\n// Coding; converts an ErrorCode its Typed Error\n\n/**\n *  A conditional type that transforms the [[ErrorCode]] T into\n *  its EthersError type.\n *\n *  @flatworm-skip-docs\n */\nexport type CodedEthersError<T> =\n    T extends \"UNKNOWN_ERROR\" ? UnknownError:\n    T extends \"NOT_IMPLEMENTED\" ? NotImplementedError:\n    T extends \"UNSUPPORTED_OPERATION\" ? UnsupportedOperationError:\n    T extends \"NETWORK_ERROR\" ? NetworkError:\n    T extends \"SERVER_ERROR\" ? ServerError:\n    T extends \"TIMEOUT\" ? TimeoutError:\n    T extends \"BAD_DATA\" ? BadDataError:\n    T extends \"CANCELLED\" ? CancelledError:\n\n    T extends \"BUFFER_OVERRUN\" ? BufferOverrunError:\n    T extends \"NUMERIC_FAULT\" ? NumericFaultError:\n\n    T extends \"INVALID_ARGUMENT\" ? InvalidArgumentError:\n    T extends \"MISSING_ARGUMENT\" ? MissingArgumentError:\n    T extends \"UNEXPECTED_ARGUMENT\" ? UnexpectedArgumentError:\n\n    T extends \"CALL_EXCEPTION\" ? CallExceptionError:\n    T extends \"INSUFFICIENT_FUNDS\" ? InsufficientFundsError:\n    T extends \"NONCE_EXPIRED\" ? NonceExpiredError:\n    T extends \"OFFCHAIN_FAULT\" ? OffchainFaultError:\n    T extends \"REPLACEMENT_UNDERPRICED\" ? ReplacementUnderpricedError:\n    T extends \"TRANSACTION_REPLACED\" ? TransactionReplacedError:\n    T extends \"UNCONFIGURED_NAME\" ? UnconfiguredNameError:\n\n    T extends \"ACTION_REJECTED\" ? ActionRejectedError:\n\n    never;\n\n\n\n/**\n *  Returns true if the %%error%% matches an error thrown by ethers\n *  that matches the error %%code%%.\n *\n *  In TypeScript environments, this can be used to check that %%error%%\n *  matches an EthersError type, which means the expected properties will\n *  be set.\n *\n *  @See [ErrorCodes](api:ErrorCode)\n *  @example\n *    try {\n *      // code....\n *    } catch (e) {\n *      if (isError(e, \"CALL_EXCEPTION\")) {\n *          // The Type Guard has validated this object\n *          console.log(e.data);\n *      }\n *    }\n */\nexport function isError<K extends ErrorCode, T extends CodedEthersError<K>>(error: any, code: K): error is T {\n    return (error && (<EthersError>error).code === code);\n}\n\n/**\n *  Returns true if %%error%% is a [[CallExceptionError].\n */\nexport function isCallException(error: any): error is CallExceptionError {\n    return isError(error, \"CALL_EXCEPTION\");\n}\n\n/**\n *  Returns a new Error configured to the format ethers emits errors, with\n *  the %%message%%, [[api:ErrorCode]] %%code%% and additional properties\n *  for the corresponding EthersError.\n *\n *  Each error in ethers includes the version of ethers, a\n *  machine-readable [[ErrorCode]], and depending on %%code%%, additional\n *  required properties. The error message will also include the %%message%%,\n *  ethers version, %%code%% and all additional properties, serialized.\n */\nexport function makeError<K extends ErrorCode, T extends CodedEthersError<K>>(message: string, code: K, info?: ErrorInfo<T>): T {\n    let shortMessage = message;\n\n    {\n        const details: Array<string> = [];\n        if (info) {\n            if (\"message\" in info || \"code\" in info || \"name\" in info) {\n                throw new Error(`value will overwrite populated values: ${ stringify(info) }`);\n            }\n            for (const key in info) {\n                if (key === \"shortMessage\") { continue; }\n                const value = <any>(info[<keyof ErrorInfo<T>>key]);\n//                try {\n                    details.push(key + \"=\" + stringify(value));\n//                } catch (error: any) {\n//                console.log(\"MMM\", error.message);\n//                    details.push(key + \"=[could not serialize object]\");\n//                }\n            }\n        }\n        details.push(`code=${ code }`);\n        details.push(`version=${ version }`);\n\n        if (details.length) {\n            message += \" (\" + details.join(\", \") + \")\";\n        }\n    }\n\n    let error;\n    switch (code) {\n        case \"INVALID_ARGUMENT\":\n            error = new TypeError(message);\n            break;\n        case \"NUMERIC_FAULT\":\n        case \"BUFFER_OVERRUN\":\n            error = new RangeError(message);\n            break;\n        default:\n            error = new Error(message);\n    }\n\n    defineProperties<EthersError>(<EthersError>error, { code });\n\n    if (info) { Object.assign(error, info); }\n\n    if ((<any>error).shortMessage == null) {\n        defineProperties<EthersError>(<EthersError>error, { shortMessage });\n    }\n\n    return <T>error;\n}\n\n/**\n *  Throws an EthersError with %%message%%, %%code%% and additional error\n *  %%info%% when %%check%% is falsish..\n *\n *  @see [[api:makeError]]\n */\nexport function assert<K extends ErrorCode, T extends CodedEthersError<K>>(check: unknown, message: string, code: K, info?: ErrorInfo<T>): asserts check {\n    if (!check) { throw makeError(message, code, info); }\n}\n\n\n/**\n *  A simple helper to simply ensuring provided arguments match expected\n *  constraints, throwing if not.\n *\n *  In TypeScript environments, the %%check%% has been asserted true, so\n *  any further code does not need additional compile-time checks.\n */\nexport function assertArgument(check: unknown, message: string, name: string, value: unknown): asserts check {\n    assert(check, message, \"INVALID_ARGUMENT\", { argument: name, value: value });\n}\n\nexport function assertArgumentCount(count: number, expectedCount: number, message?: string): void {\n    if (message == null) { message = \"\"; }\n    if (message) { message = \": \" + message; }\n\n    assert(count >= expectedCount, \"missing arguemnt\" + message, \"MISSING_ARGUMENT\", {\n        count: count,\n        expectedCount: expectedCount\n    });\n\n    assert(count <= expectedCount, \"too many arguments\" + message, \"UNEXPECTED_ARGUMENT\", {\n        count: count,\n        expectedCount: expectedCount\n    });\n}\n\nconst _normalizeForms = [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].reduce((accum, form) => {\n    try {\n        // General test for normalize\n        /* c8 ignore start */\n        if (\"test\".normalize(form) !== \"test\") { throw new Error(\"bad\"); };\n        /* c8 ignore stop */\n\n        if (form === \"NFD\") {\n            const check = String.fromCharCode(0xe9).normalize(\"NFD\");\n            const expected = String.fromCharCode(0x65, 0x0301)\n            /* c8 ignore start */\n            if (check !== expected) { throw new Error(\"broken\") }\n            /* c8 ignore stop */\n        }\n\n        accum.push(form);\n    } catch(error) { }\n\n    return accum;\n}, <Array<string>>[]);\n\n/**\n *  Throws if the normalization %%form%% is not supported.\n */\nexport function assertNormalize(form: string): void {\n    assert(_normalizeForms.indexOf(form) >= 0, \"platform missing String.prototype.normalize\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"String.prototype.normalize\", info: { form }\n    });\n}\n\n/**\n *  Many classes use file-scoped values to guard the constructor,\n *  making it effectively private. This facilitates that pattern\n *  by ensuring the %%givenGaurd%% matches the file-scoped %%guard%%,\n *  throwing if not, indicating the %%className%% if provided.\n */\nexport function assertPrivate(givenGuard: any, guard: any, className?: string): void {\n    if (className == null) { className = \"\"; }\n    if (givenGuard !== guard) {\n        let method = className, operation = \"new\";\n        if (className) {\n            method += \".\";\n            operation += \" \" + className;\n        }\n        assert(false, `private constructor; use ${ method }from* methods`, \"UNSUPPORTED_OPERATION\", {\n            operation\n        });\n    }\n}\n", "/**\n *  Some data helpers.\n *\n *\n *  @_subsection api/utils:Data Helpers  [about-data]\n */\nimport { assert, assertArgument } from \"./errors.js\";\n\n/**\n *  A [[HexString]] whose length is even, which ensures it is a valid\n *  representation of binary data.\n */\nexport type DataHexString = string;\n\n/**\n *  A string which is prefixed with ``0x`` and followed by any number\n *  of case-agnostic hexadecimal characters.\n *\n *  It must match the regular expression ``/0x[0-9A-Fa-f]*\\/``.\n */\nexport type HexString = string;\n\n/**\n *  An object that can be used to represent binary data.\n */\nexport type BytesLike = DataHexString | Uint8Array;\n\nfunction _getBytes(value: BytesLike, name?: string, copy?: boolean): Uint8Array {\n    if (value instanceof Uint8Array) {\n        if (copy) { return new Uint8Array(value); }\n        return value;\n    }\n\n    if (typeof(value) === \"string\" && value.match(/^0x([0-9a-f][0-9a-f])*$/i)) {\n        const result = new Uint8Array((value.length - 2) / 2);\n        let offset = 2;\n        for (let i = 0; i < result.length; i++) {\n            result[i] = parseInt(value.substring(offset, offset + 2), 16);\n            offset += 2;\n        }\n        return result;\n    }\n\n    assertArgument(false, \"invalid BytesLike value\", name || \"value\", value);\n}\n\n/**\n *  Get a typed Uint8Array for %%value%%. If already a Uint8Array\n *  the original %%value%% is returned; if a copy is required use\n *  [[getBytesCopy]].\n *\n *  @see: getBytesCopy\n */\nexport function getBytes(value: BytesLike, name?: string): Uint8Array {\n    return _getBytes(value, name, false);\n}\n\n/**\n *  Get a typed Uint8Array for %%value%%, creating a copy if necessary\n *  to prevent any modifications of the returned value from being\n *  reflected elsewhere.\n *\n *  @see: getBytes\n */\nexport function getBytesCopy(value: BytesLike, name?: string): Uint8Array {\n    return _getBytes(value, name, true);\n}\n\n\n/**\n *  Returns true if %%value%% is a valid [[HexString]].\n *\n *  If %%length%% is ``true`` or a //number//, it also checks that\n *  %%value%% is a valid [[DataHexString]] of %%length%% (if a //number//)\n *  bytes of data (e.g. ``0x1234`` is 2 bytes).\n */\nexport function isHexString(value: any, length?: number | boolean): value is `0x${ string }` {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n\n    if (typeof(length) === \"number\" && value.length !== 2 + 2 * length) { return false; }\n    if (length === true && (value.length % 2) !== 0) { return false; }\n\n    return true;\n}\n\n/**\n *  Returns true if %%value%% is a valid representation of arbitrary\n *  data (i.e. a valid [[DataHexString]] or a Uint8Array).\n */\nexport function isBytesLike(value: any): value is BytesLike {\n    return (isHexString(value, true) || (value instanceof Uint8Array));\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\n/**\n *  Returns a [[DataHexString]] representation of %%data%%.\n */\nexport function hexlify(data: BytesLike): string {\n    const bytes = getBytes(data);\n\n    let result = \"0x\";\n    for (let i = 0; i < bytes.length; i++) {\n        const v = bytes[i];\n        result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n    }\n    return result;\n}\n\n/**\n *  Returns a [[DataHexString]] by concatenating all values\n *  within %%data%%.\n */\nexport function concat(datas: ReadonlyArray<BytesLike>): string {\n    return \"0x\" + datas.map((d) => hexlify(d).substring(2)).join(\"\");\n}\n\n/**\n *  Returns the length of %%data%%, in bytes.\n */\nexport function dataLength(data: BytesLike): number {\n    if (isHexString(data, true)) { return (data.length - 2) / 2; }\n    return getBytes(data).length;\n}\n\n/**\n *  Returns a [[DataHexString]] by slicing %%data%% from the %%start%%\n *  offset to the %%end%% offset.\n *\n *  By default %%start%% is 0 and %%end%% is the length of %%data%%.\n */\nexport function dataSlice(data: BytesLike, start?: number, end?: number): string {\n    const bytes = getBytes(data);\n    if (end != null && end > bytes.length) {\n        assert(false, \"cannot slice beyond data bounds\", \"BUFFER_OVERRUN\", {\n            buffer: bytes, length: bytes.length, offset: end\n        });\n    }\n    return hexlify(bytes.slice((start == null) ? 0: start, (end == null) ? bytes.length: end));\n}\n\n/**\n *  Return the [[DataHexString]] result by stripping all **leading**\n ** zero bytes from %%data%%.\n */\nexport function stripZerosLeft(data: BytesLike): string {\n    let bytes = hexlify(data).substring(2);\n    while (bytes.startsWith(\"00\")) { bytes = bytes.substring(2); }\n    return \"0x\" + bytes;\n}\n\nfunction zeroPad(data: BytesLike, length: number, left: boolean): string {\n    const bytes = getBytes(data);\n    assert(length >= bytes.length, \"padding exceeds data length\", \"BUFFER_OVERRUN\", {\n        buffer: new Uint8Array(bytes),\n        length: length,\n        offset: length + 1\n    });\n\n    const result = new Uint8Array(length);\n    result.fill(0);\n    if (left) {\n        result.set(bytes, length - bytes.length);\n    } else {\n        result.set(bytes, 0);\n    }\n\n    return hexlify(result);\n}\n\n/**\n *  Return the [[DataHexString]] of %%data%% padded on the **left**\n *  to %%length%% bytes.\n *\n *  If %%data%% already exceeds %%length%%, a [[BufferOverrunError]] is\n *  thrown.\n *\n *  This pads data the same as **values** are in Solidity\n *  (e.g. ``uint128``).\n */\nexport function zeroPadValue(data: BytesLike, length: number): string {\n    return zeroPad(data, length, true);\n}\n\n/**\n *  Return the [[DataHexString]] of %%data%% padded on the **right**\n *  to %%length%% bytes.\n *\n *  If %%data%% already exceeds %%length%%, a [[BufferOverrunError]] is\n *  thrown.\n *\n *  This pads data the same as **bytes** are in Solidity\n *  (e.g. ``bytes16``).\n */\nexport function zeroPadBytes(data: BytesLike, length: number): string {\n    return zeroPad(data, length, false);\n}\n", "/**\n *  Some mathematic operations.\n *\n *  @_subsection: api/utils:Math Helpers  [about-maths]\n */\nimport { hexlify, isBytesLike } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\n\nimport type { BytesLike } from \"./data.js\";\n\n/**\n *  Any type that can be used where a numeric value is needed.\n */\nexport type Numeric = number | bigint;\n\n/**\n *  Any type that can be used where a big number is needed.\n */\nexport type BigNumberish = string | Numeric;\n\n\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\n\n//const BN_Max256 = (BN_1 << BigInt(256)) - BN_1;\n\n\n// IEEE 754 support 53-bits of mantissa\nconst maxValue = 0x1fffffffffffff;\n\n/**\n *  Convert %%value%% from a twos-compliment representation of %%width%%\n *  bits to its value.\n *\n *  If the highest bit is ``1``, the result will be negative.\n */\nexport function fromTwos(_value: BigNumberish, _width: Numeric): bigint {\n    const value = getUint(_value, \"value\");\n    const width = BigInt(getNumber(_width, \"width\"));\n\n    assert((value >> width) === BN_0, \"overflow\", \"NUMERIC_FAULT\", {\n        operation: \"fromTwos\", fault: \"overflow\", value: _value\n    });\n\n    // Top bit set; treat as a negative value\n    if (value >> (width - BN_1)) {\n        const mask = (BN_1 << width) - BN_1;\n        return -(((~value) & mask) + BN_1);\n    }\n\n    return value;\n}\n\n/**\n *  Convert %%value%% to a twos-compliment representation of\n *  %%width%% bits.\n *\n *  The result will always be positive.\n */\nexport function toTwos(_value: BigNumberish, _width: Numeric): bigint {\n    let value = getBigInt(_value, \"value\");\n    const width = BigInt(getNumber(_width, \"width\"));\n\n    const limit = (BN_1 << (width - BN_1));\n\n    if (value < BN_0) {\n        value = -value;\n        assert(value <= limit, \"too low\", \"NUMERIC_FAULT\", {\n            operation: \"toTwos\", fault: \"overflow\", value: _value\n        });\n        const mask = (BN_1 << width) - BN_1;\n        return ((~value) & mask) + BN_1;\n    } else {\n        assert(value < limit, \"too high\", \"NUMERIC_FAULT\", {\n            operation: \"toTwos\", fault: \"overflow\", value: _value\n        });\n    }\n\n    return value;\n}\n\n/**\n *  Mask %%value%% with a bitmask of %%bits%% ones.\n */\nexport function mask(_value: BigNumberish, _bits: Numeric): bigint {\n    const value = getUint(_value, \"value\");\n    const bits = BigInt(getNumber(_bits, \"bits\"));\n    return value & ((BN_1 << bits) - BN_1);\n}\n\n/**\n *  Gets a BigInt from %%value%%. If it is an invalid value for\n *  a BigInt, then an ArgumentError will be thrown for %%name%%.\n */\nexport function getBigInt(value: BigNumberish, name?: string): bigint {\n    switch (typeof(value)) {\n        case \"bigint\": return value;\n        case \"number\":\n            assertArgument(Number.isInteger(value), \"underflow\", name || \"value\", value);\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return BigInt(value);\n        case \"string\":\n            try {\n                if (value === \"\") { throw new Error(\"empty string\"); }\n                if (value[0] === \"-\" && value[1] !== \"-\") {\n                    return -BigInt(value.substring(1));\n                }\n                return BigInt(value);\n            } catch(e: any) {\n                assertArgument(false, `invalid BigNumberish string: ${ e.message }`, name || \"value\", value);\n            }\n    }\n    assertArgument(false, \"invalid BigNumberish value\", name || \"value\", value);\n}\n\n/**\n *  Returns %%value%% as a bigint, validating it is valid as a bigint\n *  value and that it is positive.\n */\nexport function getUint(value: BigNumberish, name?: string): bigint {\n    const result = getBigInt(value, name);\n    assert(result >= BN_0, \"unsigned value cannot be negative\", \"NUMERIC_FAULT\", {\n        fault: \"overflow\", operation: \"getUint\", value\n    });\n    return result;\n}\n\nconst Nibbles = \"0123456789abcdef\";\n\n/*\n * Converts %%value%% to a BigInt. If %%value%% is a Uint8Array, it\n * is treated as Big Endian data.\n */\nexport function toBigInt(value: BigNumberish | Uint8Array): bigint {\n    if (value instanceof Uint8Array) {\n        let result = \"0x0\";\n        for (const v of value) {\n            result += Nibbles[v >> 4];\n            result += Nibbles[v & 0x0f];\n        }\n        return BigInt(result);\n    }\n\n    return getBigInt(value);\n}\n\n/**\n *  Gets a //number// from %%value%%. If it is an invalid value for\n *  a //number//, then an ArgumentError will be thrown for %%name%%.\n */\nexport function getNumber(value: BigNumberish, name?: string): number {\n    switch (typeof(value)) {\n        case \"bigint\":\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return Number(value);\n        case \"number\":\n            assertArgument(Number.isInteger(value), \"underflow\", name || \"value\", value);\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return value;\n        case \"string\":\n            try {\n                if (value === \"\") { throw new Error(\"empty string\"); }\n                return getNumber(BigInt(value), name);\n            } catch(e: any) {\n                assertArgument(false, `invalid numeric string: ${ e.message }`, name || \"value\", value);\n            }\n    }\n    assertArgument(false, \"invalid numeric value\", name || \"value\", value);\n}\n\n\n/**\n *  Converts %%value%% to a number. If %%value%% is a Uint8Array, it\n *  is treated as Big Endian data. Throws if the value is not safe.\n */\nexport function toNumber(value: BigNumberish | Uint8Array): number {\n    return getNumber(toBigInt(value));\n}\n\n/**\n *  Converts %%value%% to a Big Endian hexstring, optionally padded to\n *  %%width%% bytes.\n */\nexport function toBeHex(_value: BigNumberish, _width?: Numeric): string {\n    const value = getUint(_value, \"value\");\n\n    let result = value.toString(16);\n\n    if (_width == null) {\n        // Ensure the value is of even length\n        if (result.length % 2) { result = \"0\" + result; }\n    } else {\n        const width = getNumber(_width, \"width\");\n        assert(width * 2 >= result.length, `value exceeds width (${ width } bytes)`, \"NUMERIC_FAULT\", {\n            operation: \"toBeHex\",\n            fault: \"overflow\",\n            value: _value\n        });\n\n        // Pad the value to the required width\n        while (result.length < (width * 2)) { result = \"0\" + result; }\n\n    }\n\n    return \"0x\" + result;\n}\n\n/**\n *  Converts %%value%% to a Big Endian Uint8Array.\n */\nexport function toBeArray(_value: BigNumberish): Uint8Array {\n    const value = getUint(_value, \"value\");\n\n    if (value === BN_0) { return new Uint8Array([ ]); }\n\n    let hex = value.toString(16);\n    if (hex.length % 2) { hex = \"0\" + hex; }\n\n    const result = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < result.length; i++) {\n        const offset = i * 2;\n        result[i] = parseInt(hex.substring(offset, offset + 2), 16);\n    }\n\n    return result;\n}\n\n/**\n *  Returns a [[HexString]] for %%value%% safe to use as a //Quantity//.\n *\n *  A //Quantity// does not have and leading 0 values unless the value is\n *  the literal value `0x0`. This is most commonly used for JSSON-RPC\n *  numeric values.\n */\nexport function toQuantity(value: BytesLike | BigNumberish): string {\n    let result = hexlify(isBytesLike(value) ? value: toBeArray(value)).substring(2);\n    while (result.startsWith(\"0\")) { result = result.substring(1); }\n    if (result === \"\") { result = \"0\"; }\n    return \"0x\" + result;\n}\n", "/**\n *  The [Base58 Encoding](link-base58) scheme allows a **numeric** value\n *  to be encoded as a compact string using a radix of 58 using only\n *  alpha-numeric characters. Confusingly similar characters are omitted\n *  (i.e. ``\"l0O\"``).\n *\n *  Note that Base58 encodes a **numeric** value, not arbitrary bytes,\n *  since any zero-bytes on the left would get removed. To mitigate this\n *  issue most schemes that use Base58 choose specific high-order values\n *  to ensure non-zero prefixes.\n *\n *  @_subsection: api/utils:Base58 Encoding [about-base58]\n */\n\nimport { getBytes } from \"./data.js\";\nimport { assertArgument } from \"./errors.js\";\nimport { toBigInt } from \"./maths.js\";\n\nimport type { BytesLike } from \"./index.js\";\n\n\nconst Alphabet = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\nlet Lookup: null | Record<string, bigint> = null;\n\nfunction getAlpha(letter: string): bigint {\n    if (Lookup == null) {\n        Lookup = { };\n        for (let i = 0; i < Alphabet.length; i++) {\n            Lookup[Alphabet[i]] = BigInt(i);\n        }\n    }\n    const result = Lookup[letter];\n    assertArgument(result != null, `invalid base58 value`, \"letter\", letter);\n    return result;\n}\n\n\nconst BN_0 = BigInt(0);\nconst BN_58 = BigInt(58);\n\n/**\n *  Encode %%value%% as a Base58-encoded string.\n */\nexport function encodeBase58(_value: BytesLike): string {\n    const bytes = getBytes(_value);\n\n    let value = toBigInt(bytes);\n    let result = \"\";\n    while (value) {\n        result = Alphabet[Number(value % BN_58)] + result;\n        value /= BN_58;\n    }\n\n    // Account for leading padding zeros\n    for (let i = 0; i < bytes.length; i++) {\n        if (bytes[i]) { break; }\n        result = Alphabet[0] + result;\n    }\n\n    return result;\n}\n\n/**\n *  Decode the Base58-encoded %%value%%.\n */\nexport function decodeBase58(value: string): bigint {\n    let result = BN_0;\n    for (let i = 0; i < value.length; i++) {\n        result *= BN_58;\n        result += getAlpha(value[i]);\n    }\n    return result;\n}\n", "\n// utils/base64-browser\n\nimport { getBytes } from \"./data.js\";\n\nimport type { BytesLike } from \"./data.js\";\n\n\nexport function decodeBase64(textData: string): Uint8Array {\n    textData = atob(textData);\n    const data = new Uint8Array(textData.length);\n    for (let i = 0; i < textData.length; i++) {\n        data[i] = textData.charCodeAt(i);\n    }\n    return getBytes(data);\n}\n\nexport function encodeBase64(_data: BytesLike): string {\n    const data = getBytes(_data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n", "/**\n *  Events allow for applications to use the observer pattern, which\n *  allows subscribing and publishing events, outside the normal\n *  execution paths.\n *\n *  @_section api/utils/events:Events  [about-events]\n */\nimport { defineProperties } from \"./properties.js\";\n\n/**\n *  A callback function called when a an event is triggered.\n */\nexport type Listener = (...args: Array<any>) => void;\n\n/**\n *  An **EventEmitterable** behaves similar to an EventEmitter\n *  except provides async access to its methods.\n *\n *  An EventEmitter implements the observer pattern.\n */\nexport interface EventEmitterable<T> {\n    /**\n     *  Registers a %%listener%% that is called whenever the\n     *  %%event%% occurs until unregistered.\n     */\n    on(event: T, listener: Listener): Promise<this>;\n\n    /**\n     *  Registers a %%listener%% that is called the next time\n     *  %%event%% occurs.\n     */\n    once(event: T, listener: Listener): Promise<this>;\n\n    /**\n     *  Triggers each listener for %%event%% with the %%args%%.\n     */\n    emit(event: T, ...args: Array<any>): Promise<boolean>;\n\n    /**\n     *  Resolves to the number of listeners for %%event%%.\n     */\n    listenerCount(event?: T): Promise<number>;\n\n    /**\n     *  Resolves to the listeners for %%event%%.\n     */\n    listeners(event?: T): Promise<Array<Listener>>;\n\n    /**\n     *  Unregister the %%listener%% for %%event%%. If %%listener%%\n     *  is unspecified, all listeners are unregistered.\n     */\n    off(event: T, listener?: Listener): Promise<this>;\n\n    /**\n     *  Unregister all listeners for %%event%%.\n     */\n    removeAllListeners(event?: T): Promise<this>;\n\n    /**\n     *  Alias for [[on]].\n     */\n    addListener(event: T, listener: Listener): Promise<this>;\n\n    /**\n     *  Alias for [[off]].\n     */\n    removeListener(event: T, listener: Listener): Promise<this>;\n}\n\n/**\n *  When an [[EventEmitterable]] triggers a [[Listener]], the\n *  callback always ahas one additional argument passed, which is\n *  an **EventPayload**.\n */\nexport class EventPayload<T> {\n    /**\n     *  The event filter.\n     */\n    readonly filter!: T;\n\n    /**\n     *  The **EventEmitterable**.\n     */\n    readonly emitter!: EventEmitterable<T>;\n\n    readonly #listener: null | Listener;\n\n    /**\n     *  Create a new **EventPayload** for %%emitter%% with\n     *  the %%listener%% and for %%filter%%.\n     */\n    constructor(emitter: EventEmitterable<T>, listener: null | Listener, filter: T) {\n        this.#listener = listener;\n        defineProperties<EventPayload<any>>(this, { emitter, filter });\n    }\n\n    /**\n     *  Unregister the triggered listener for future events.\n     */\n    async removeListener(): Promise<void> {\n        if (this.#listener == null) { return; }\n        await this.emitter.off(this.filter, this.#listener);\n    }\n}\n", "/**\n *  Using strings in Ethereum (or any security-basd system) requires\n *  additional care. These utilities attempt to mitigate some of the\n *  safety issues as well as provide the ability to recover and analyse\n *  strings.\n *\n *  @_subsection api/utils:Strings and UTF-8  [about-strings]\n */\nimport { getBytes } from \"./data.js\";\nimport { assertArgument, assertNormalize } from \"./errors.js\";\n\nimport type { BytesLike } from \"./index.js\";\n\n\n///////////////////////////////\n\n/**\n *  The stanard normalization forms.\n */\nexport type UnicodeNormalizationForm = \"NFC\" | \"NFD\" | \"NFKC\" | \"NFKD\";\n\n/**\n *  When using the UTF-8 error API the following errors can be intercepted\n *  and processed as the %%reason%% passed to the [[Utf8ErrorFunc]].\n *\n *  **``\"UNEXPECTED_CONTINUE\"``** - a continuation byte was present where there\n *  was nothing to continue.\n *\n *  **``\"BAD_PREFIX\"``** - an invalid (non-continuation) byte to start a\n *  UTF-8 codepoint was found.\n *\n *  **``\"OVERRUN\"``** - the string is too short to process the expected\n *  codepoint length.\n *\n *  **``\"MISSING_CONTINUE\"``** - a missing continuation byte was expected but\n *  not found. The %%offset%% indicates the index the continuation byte\n *  was expected at.\n *\n *  **``\"OUT_OF_RANGE\"``** - the computed code point is outside the range\n *  for UTF-8. The %%badCodepoint%% indicates the computed codepoint, which was\n *  outside the valid UTF-8 range.\n *\n *  **``\"UTF16_SURROGATE\"``** - the UTF-8 strings contained a UTF-16 surrogate\n *  pair. The %%badCodepoint%% is the computed codepoint, which was inside the\n *  UTF-16 surrogate range.\n *\n *  **``\"OVERLONG\"``** - the string is an overlong representation. The\n *  %%badCodepoint%% indicates the computed codepoint, which has already\n *  been bounds checked.\n *\n *\n *  @returns string\n */\nexport type Utf8ErrorReason = \"UNEXPECTED_CONTINUE\" | \"BAD_PREFIX\" | \"OVERRUN\" |\n    \"MISSING_CONTINUE\" | \"OUT_OF_RANGE\" | \"UTF16_SURROGATE\" | \"OVERLONG\";\n\n\n/**\n *  A callback that can be used with [[toUtf8String]] to analysis or\n *  recovery from invalid UTF-8 data.\n *\n *  Parsing UTF-8 data is done through a simple Finite-State Machine (FSM)\n *  which calls the ``Utf8ErrorFunc`` if a fault is detected.\n *\n *  The %%reason%% indicates where in the FSM execution the fault\n *  occurred and the %%offset%% indicates where the input failed.\n *\n *  The %%bytes%% represents the raw UTF-8 data that was provided and\n *  %%output%% is the current array of UTF-8 code-points, which may\n *  be updated by the ``Utf8ErrorFunc``.\n *\n *  The value of the %%badCodepoint%% depends on the %%reason%%. See\n *  [[Utf8ErrorReason]] for details.\n *\n *  The function should return the number of bytes that should be skipped\n *  when control resumes to the FSM.\n */\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number) => number;\n\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number): number {\n    assertArgument(false, `invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === \"BAD_PREFIX\" || reason === \"UNEXPECTED_CONTINUE\") {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === \"OVERRUN\") {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === \"OVERLONG\") {\n        assertArgument(typeof(badCodepoint) === \"number\", \"invalid bad code point for replacement\", \"badCodepoint\", badCodepoint);\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n/**\n *  A handful of popular, built-in UTF-8 error handling strategies.\n *\n *  **``\"error\"``** - throws on ANY illegal UTF-8 sequence or\n *  non-canonical (overlong) codepoints (this is the default)\n *\n *  **``\"ignore\"``** - silently drops any illegal UTF-8 sequence\n *  and accepts non-canonical (overlong) codepoints\n *\n *  **``\"replace\"``** - replace any illegal UTF-8 sequence with the\n *  UTF-8 replacement character (i.e. ``\"\\\\ufffd\"``) and accepts\n *  non-canonical (overlong) codepoints\n *\n *  @returns: Record<\"error\" | \"ignore\" | \"replace\", Utf8ErrorFunc>\n */\nexport const Utf8ErrorFuncs: Readonly<Record<\"error\" | \"ignore\" | \"replace\", Utf8ErrorFunc>> = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(_bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    const bytes = getBytes(_bytes, \"bytes\");\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength: null | number = null;\n        let overlongMask: null | number = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(\"UNEXPECTED_CONTINUE\", i - 1, bytes, result);\n            } else {\n                i += onError(\"BAD_PREFIX\", i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(\"OVERRUN\", i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res: null | number = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(\"MISSING_CONTINUE\", i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(\"OUT_OF_RANGE\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(\"UTF16_SURROGATE\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(\"OVERLONG\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n\n/**\n *  Returns the UTF-8 byte representation of %%str%%.\n *\n *  If %%form%% is specified, the string is normalized.\n */\nexport function toUtf8Bytes(str: string, form?: UnicodeNormalizationForm): Uint8Array {\n    assertArgument(typeof(str) === \"string\", \"invalid string value\", \"str\", str);\n\n    if (form != null) {\n        assertNormalize(form);\n        str = str.normalize(form);\n    }\n\n    let result: Array<number> = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            assertArgument(i < str.length && ((c2 & 0xfc00) === 0xdc00),\n                \"invalid surrogate pair\", \"str\", str);\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return new Uint8Array(result);\n};\n\n//export \nfunction _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\n/**\n *  Returns the string represented by the UTF-8 data %%bytes%%.\n *\n *  When %%onError%% function is specified, it is called on UTF-8\n *  errors allowing recovery using the [[Utf8ErrorFunc]] API.\n *  (default: [error](Utf8ErrorFuncs))\n */\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\n/**\n *  Returns the UTF-8 code-points for %%str%%.\n *\n *  If %%form%% is specified, the string is normalized.\n */\nexport function toUtf8CodePoints(str: string, form?: UnicodeNormalizationForm): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n\n", "import { assert } from \"./errors.js\";\n\nimport type {\n    FetchGetUrlFunc, FetchRequest, FetchCancelSignal, GetUrlResponse\n} from \"./fetch.js\";\n\n\ndeclare global {\n    class Headers {\n        constructor(values: Array<[ string, string ]>);\n        forEach(func: (v: string, k: string) => void): void;\n    }\n\n    class Response {\n        status: number;\n        statusText: string;\n        headers: Headers;\n        arrayBuffer(): Promise<ArrayBuffer>;\n    }\n\n    type FetchInit = {\n        method?: string,\n        headers?: Headers,\n        body?: Uint8Array\n    };\n\n    function fetch(url: string, init: FetchInit): Promise<Response>;\n}\n\n// @TODO: timeout is completely ignored; start a Promise.any with a reject?\n\nexport function createGetUrl(options?: Record<string, any>): FetchGetUrlFunc {\n\n    async function getUrl(req: FetchRequest, _signal?: FetchCancelSignal): Promise<GetUrlResponse> {\n        const protocol = req.url.split(\":\")[0].toLowerCase();\n\n        assert(protocol === \"http\" || protocol === \"https\", `unsupported protocol ${ protocol }`, \"UNSUPPORTED_OPERATION\", {\n            info: { protocol },\n            operation: \"request\"\n        });\n\n        assert(protocol === \"https\" || !req.credentials || req.allowInsecureAuthentication, \"insecure authorized connections unsupported\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"request\"\n        });\n\n        let signal: undefined | AbortSignal = undefined;\n        if (_signal) {\n            const controller = new AbortController();\n            signal = controller.signal;\n            _signal.addListener(() => { controller.abort(); });\n        }\n\n        const init = {\n            method: req.method,\n            headers: new Headers(Array.from(req)),\n            body: req.body || undefined,\n            signal\n        };\n\n        const resp = await fetch(req.url, init);\n\n        const headers: Record<string, string> = { };\n        resp.headers.forEach((value, key) => {\n            headers[key.toLowerCase()] = value;\n        });\n\n        const respBody = await resp.arrayBuffer();\n        const body = (respBody == null) ? null: new Uint8Array(respBody);\n\n        return {\n            statusCode: resp.status,\n            statusMessage: resp.statusText,\n            headers, body\n        };\n    }\n\n    return getUrl;\n}\n\n// @TODO: remove in v7; provided for backwards compat\nconst defaultGetUrl: FetchGetUrlFunc = createGetUrl({ });\n\nexport async function getUrl(req: FetchRequest, _signal?: FetchCancelSignal): Promise<GetUrlResponse> {\n    return defaultGetUrl(req, _signal);\n}\n\n", "/**\n *  Fetching content from the web is environment-specific, so Ethers\n *  provides an abstraction that each environment can implement to provide\n *  this service.\n *\n *  On [Node.js](link-node), the ``http`` and ``https`` libs are used to\n *  create a request object, register event listeners and process data\n *  and populate the [[FetchResponse]].\n *\n *  In a browser, the [DOM fetch](link-js-fetch) is used, and the resulting\n *  ``Promise`` is waited on to retrieve the payload.\n *\n *  The [[FetchRequest]] is responsible for handling many common situations,\n *  such as redirects, server throttling, authentication, etc.\n *\n *  It also handles common gateways, such as IPFS and data URIs.\n *\n *  @_section api/utils/fetching:Fetching Web Content  [about-fetch]\n */\nimport { decodeBase64, encodeBase64 } from \"./base64.js\";\nimport { hexlify } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\nimport { defineProperties } from \"./properties.js\";\nimport { toUtf8Bytes, toUtf8String } from \"./utf8.js\";\n\nimport { createGetUrl } from \"./geturl.js\";\n\n/**\n *  An environment's implementation of ``getUrl`` must return this type.\n */\nexport type GetUrlResponse = {\n    statusCode: number,\n    statusMessage: string,\n    headers: Record<string, string>,\n    body: null | Uint8Array\n};\n\n/**\n *  This can be used to control how throttling is handled in\n *  [[FetchRequest-setThrottleParams]].\n */\nexport type FetchThrottleParams = {\n    maxAttempts?: number;\n    slotInterval?: number;\n};\n\n/**\n *  Called before any network request, allowing updated headers (e.g. Bearer tokens), etc.\n */\nexport type FetchPreflightFunc = (req: FetchRequest) => Promise<FetchRequest>;\n\n/**\n *  Called on the response, allowing client-based throttling logic or post-processing.\n */\nexport type FetchProcessFunc = (req: FetchRequest, resp: FetchResponse) => Promise<FetchResponse>;\n\n/**\n *  Called prior to each retry; return true to retry, false to abort.\n */\nexport type FetchRetryFunc = (req: FetchRequest, resp: FetchResponse, attempt: number) => Promise<boolean>;\n\n/**\n *  Called on Gateway URLs.\n */\nexport type FetchGatewayFunc = (url: string, signal?: FetchCancelSignal) => Promise<FetchRequest | FetchResponse>;\n\n/**\n *  Used to perform a fetch; use this to override the underlying network\n *  fetch layer. In NodeJS, the default uses the \"http\" and \"https\" libraries\n *  and in the browser ``fetch`` is used. If you wish to use Axios, this is\n *  how you would register it.\n */\nexport type FetchGetUrlFunc = (req: FetchRequest, signal?: FetchCancelSignal) => Promise<GetUrlResponse>;\n\n\nconst MAX_ATTEMPTS = 12;\nconst SLOT_INTERVAL = 250;\n\n// The global FetchGetUrlFunc implementation.\nlet defaultGetUrlFunc: FetchGetUrlFunc = createGetUrl();\n\nconst reData = new RegExp(\"^data:([^;:]*)?(;base64)?,(.*)$\", \"i\");\nconst reIpfs = new RegExp(\"^ipfs:/\\/(ipfs/)?(.*)$\", \"i\");\n\n// If locked, new Gateways cannot be added\nlet locked = false;\n\n// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs\nasync function dataGatewayFunc(url: string, signal?: FetchCancelSignal): Promise<FetchResponse> {\n    try {\n        const match = url.match(reData);\n        if (!match) { throw new Error(\"invalid data\"); }\n        return new FetchResponse(200, \"OK\", {\n            \"content-type\": (match[1] || \"text/plain\"),\n        }, (match[2] ? decodeBase64(match[3]): unpercent(match[3])));\n    } catch (error) {\n        return new FetchResponse(599, \"BAD REQUEST (invalid data: URI)\", { }, null, new FetchRequest(url));\n    }\n}\n\n/**\n *  Returns a [[FetchGatewayFunc]] for fetching content from a standard\n *  IPFS gateway hosted at %%baseUrl%%.\n */\nfunction getIpfsGatewayFunc(baseUrl: string): FetchGatewayFunc {\n    async function gatewayIpfs(url: string, signal?: FetchCancelSignal): Promise<FetchRequest | FetchResponse> {\n        try {\n            const match = url.match(reIpfs);\n            if (!match) { throw new Error(\"invalid link\"); }\n            return new FetchRequest(`${ baseUrl }${ match[2] }`);\n        } catch (error) {\n            return new FetchResponse(599, \"BAD REQUEST (invalid IPFS URI)\", { }, null, new FetchRequest(url));\n        }\n    }\n\n    return gatewayIpfs;\n}\n\nconst Gateways: Record<string, FetchGatewayFunc> = {\n    \"data\": dataGatewayFunc,\n    \"ipfs\": getIpfsGatewayFunc(\"https:/\\/gateway.ipfs.io/ipfs/\")\n};\n\nconst fetchSignals: WeakMap<FetchRequest, () => void> = new WeakMap();\n\n/**\n *  @_ignore\n */\nexport class FetchCancelSignal {\n    #listeners: Array<() => void>;\n    #cancelled: boolean;\n\n    constructor(request: FetchRequest) {\n        this.#listeners = [ ];\n        this.#cancelled = false;\n\n        fetchSignals.set(request, () => {\n            if (this.#cancelled) { return; }\n            this.#cancelled = true;\n\n            for (const listener of this.#listeners) {\n                setTimeout(() => { listener(); }, 0);\n            }\n            this.#listeners = [ ];\n        });\n    }\n\n    addListener(listener: () => void): void {\n        assert(!this.#cancelled, \"singal already cancelled\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"fetchCancelSignal.addCancelListener\"\n        });\n        this.#listeners.push(listener);\n    }\n\n    get cancelled(): boolean { return this.#cancelled; }\n\n    checkSignal(): void {\n        assert(!this.cancelled, \"cancelled\", \"CANCELLED\", { });\n    }\n}\n\n// Check the signal, throwing if it is cancelled\nfunction checkSignal(signal?: FetchCancelSignal): FetchCancelSignal {\n    if (signal == null) { throw new Error(\"missing signal; should not happen\"); }\n    signal.checkSignal();\n    return signal;\n}\n\n/**\n *  Represents a request for a resource using a URI.\n *\n *  By default, the supported schemes are ``HTTP``, ``HTTPS``, ``data:``,\n *  and ``IPFS:``.\n *\n *  Additional schemes can be added globally using [[registerGateway]].\n *\n *  @example:\n *    req = new FetchRequest(\"https://www.ricmoo.com\")\n *    resp = await req.send()\n *    resp.body.length\n *    //_result:\n */\nexport class FetchRequest implements Iterable<[ key: string, value: string ]> {\n    #allowInsecure: boolean;\n    #gzip: boolean;\n    #headers: Record<string, string>;\n    #method: string;\n    #timeout: number;\n    #url: string;\n\n    #body?: Uint8Array;\n    #bodyType?: string;\n    #creds?: string;\n\n    // Hooks\n    #preflight?: null | FetchPreflightFunc;\n    #process?: null | FetchProcessFunc;\n    #retry?: null | FetchRetryFunc;\n\n    #signal?: FetchCancelSignal;\n\n    #throttle: Required<FetchThrottleParams>;\n\n    #getUrlFunc: null | FetchGetUrlFunc;\n\n    /**\n     *  The fetch URL to request.\n     */\n    get url(): string { return this.#url; }\n    set url(url: string) {\n        this.#url = String(url);\n    }\n\n    /**\n     *  The fetch body, if any, to send as the request body. //(default: null)//\n     *\n     *  When setting a body, the intrinsic ``Content-Type`` is automatically\n     *  set and will be used if **not overridden** by setting a custom\n     *  header.\n     *\n     *  If %%body%% is null, the body is cleared (along with the\n     *  intrinsic ``Content-Type``).\n     *\n     *  If %%body%% is a string, the intrinsic ``Content-Type`` is set to\n     *  ``text/plain``.\n     *\n     *  If %%body%% is a Uint8Array, the intrinsic ``Content-Type`` is set to\n     *  ``application/octet-stream``.\n     *\n     *  If %%body%% is any other object, the intrinsic ``Content-Type`` is\n     *  set to ``application/json``.\n     */\n    get body(): null | Uint8Array {\n        if (this.#body == null) { return null; }\n        return new Uint8Array(this.#body);\n    }\n    set body(body: null | string | Readonly<object> | Readonly<Uint8Array>) {\n        if (body == null) {\n            this.#body = undefined;\n            this.#bodyType = undefined;\n        } else if (typeof(body) === \"string\") {\n            this.#body = toUtf8Bytes(body);\n            this.#bodyType = \"text/plain\";\n        } else if (body instanceof Uint8Array) {\n            this.#body = body;\n            this.#bodyType = \"application/octet-stream\";\n        } else if (typeof(body) === \"object\") {\n            this.#body = toUtf8Bytes(JSON.stringify(body));\n            this.#bodyType = \"application/json\";\n        } else {\n            throw new Error(\"invalid body\");\n        }\n    }\n\n    /**\n     *  Returns true if the request has a body.\n     */\n    hasBody(): this is (FetchRequest & { body: Uint8Array }) {\n        return (this.#body != null);\n    }\n\n    /**\n     *  The HTTP method to use when requesting the URI. If no method\n     *  has been explicitly set, then ``GET`` is used if the body is\n     *  null and ``POST`` otherwise.\n     */\n    get method(): string {\n        if (this.#method) { return this.#method; }\n        if (this.hasBody()) { return \"POST\"; }\n        return \"GET\";\n    }\n    set method(method: null | string) {\n        if (method == null) { method = \"\"; }\n        this.#method = String(method).toUpperCase();\n    }\n\n    /**\n     *  The headers that will be used when requesting the URI. All\n     *  keys are lower-case.\n     *\n     *  This object is a copy, so any changes will **NOT** be reflected\n     *  in the ``FetchRequest``.\n     *\n     *  To set a header entry, use the ``setHeader`` method.\n     */\n    get headers(): Record<string, string> {\n        const headers = Object.assign({ }, this.#headers);\n\n        if (this.#creds) {\n            headers[\"authorization\"] = `Basic ${ encodeBase64(toUtf8Bytes(this.#creds)) }`;\n        };\n\n        if (this.allowGzip) {\n            headers[\"accept-encoding\"] = \"gzip\";\n        }\n\n        if (headers[\"content-type\"] == null && this.#bodyType) {\n            headers[\"content-type\"] = this.#bodyType;\n        }\n        if (this.body) { headers[\"content-length\"] = String(this.body.length); }\n\n        return headers;\n    }\n\n    /**\n     *  Get the header for %%key%%, ignoring case.\n     */\n    getHeader(key: string): string {\n        return this.headers[key.toLowerCase()];\n    }\n\n    /**\n     *  Set the header for %%key%% to %%value%%. All values are coerced\n     *  to a string.\n     */\n    setHeader(key: string, value: string | number): void {\n        this.#headers[String(key).toLowerCase()] = String(value);\n    }\n\n    /**\n     *  Clear all headers, resetting all intrinsic headers.\n     */\n    clearHeaders(): void {\n        this.#headers = { };\n    }\n\n    [Symbol.iterator](): Iterator<[ key: string, value: string ]> {\n        const headers = this.headers;\n        const keys = Object.keys(headers);\n        let index = 0;\n        return {\n            next: () => {\n                if (index < keys.length) {\n                    const key = keys[index++];\n                    return {\n                        value: [ key, headers[key] ], done: false\n                    }\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n\n    /**\n     *  The value that will be sent for the ``Authorization`` header.\n     *\n     *  To set the credentials, use the ``setCredentials`` method.\n     */\n    get credentials(): null | string {\n        return this.#creds || null;\n    }\n\n    /**\n     *  Sets an ``Authorization`` for %%username%% with %%password%%.\n     */\n    setCredentials(username: string, password: string): void {\n        assertArgument(!username.match(/:/), \"invalid basic authentication username\", \"username\", \"[REDACTED]\");\n        this.#creds = `${ username }:${ password }`;\n    }\n\n    /**\n     *  Enable and request gzip-encoded responses. The response will\n     *  automatically be decompressed. //(default: true)//\n     */\n    get allowGzip(): boolean {\n        return this.#gzip;\n    }\n    set allowGzip(value: boolean) {\n        this.#gzip = !!value;\n    }\n\n    /**\n     *  Allow ``Authentication`` credentials to be sent over insecure\n     *  channels. //(default: false)//\n     */\n    get allowInsecureAuthentication(): boolean {\n        return !!this.#allowInsecure;\n    }\n    set allowInsecureAuthentication(value: boolean) {\n        this.#allowInsecure = !!value;\n    }\n\n    /**\n     *  The timeout (in milliseconds) to wait for a complete response.\n     *  //(default: 5 minutes)//\n     */\n    get timeout(): number { return this.#timeout; }\n    set timeout(timeout: number) {\n        assertArgument(timeout >= 0, \"timeout must be non-zero\", \"timeout\", timeout);\n        this.#timeout = timeout;\n    }\n\n    /**\n     *  This function is called prior to each request, for example\n     *  during a redirection or retry in case of server throttling.\n     *\n     *  This offers an opportunity to populate headers or update\n     *  content before sending a request.\n     */\n    get preflightFunc(): null | FetchPreflightFunc {\n        return this.#preflight || null;\n    }\n    set preflightFunc(preflight: null | FetchPreflightFunc) {\n        this.#preflight = preflight;\n    }\n\n    /**\n     *  This function is called after each response, offering an\n     *  opportunity to provide client-level throttling or updating\n     *  response data.\n     *\n     *  Any error thrown in this causes the ``send()`` to throw.\n     *\n     *  To schedule a retry attempt (assuming the maximum retry limit\n     *  has not been reached), use [[response.throwThrottleError]].\n     */\n    get processFunc(): null | FetchProcessFunc {\n        return this.#process || null;\n    }\n    set processFunc(process: null | FetchProcessFunc) {\n        this.#process = process;\n    }\n\n    /**\n     *  This function is called on each retry attempt.\n     */\n    get retryFunc(): null | FetchRetryFunc {\n        return this.#retry || null;\n    }\n    set retryFunc(retry: null | FetchRetryFunc) {\n        this.#retry = retry;\n    }\n\n    /**\n     *  This function is called to fetch content from HTTP and\n     *  HTTPS URLs and is platform specific (e.g. nodejs vs\n     *  browsers).\n     *\n     *  This is by default the currently registered global getUrl\n     *  function, which can be changed using [[registerGetUrl]].\n     *  If this has been set, setting is to ``null`` will cause\n     *  this FetchRequest (and any future clones) to revert back to\n     *  using the currently registered global getUrl function.\n     *\n     *  Setting this is generally not necessary, but may be useful\n     *  for developers that wish to intercept requests or to\n     *  configurege a proxy or other agent.\n     */\n    get getUrlFunc(): FetchGetUrlFunc {\n        return this.#getUrlFunc || defaultGetUrlFunc;\n    }\n    set getUrlFunc(value: null | FetchGetUrlFunc) {\n        this.#getUrlFunc = value;\n    }\n\n    /**\n     *  Create a new FetchRequest instance with default values.\n     *\n     *  Once created, each property may be set before issuing a\n     *  ``.send()`` to make the request.\n     */\n    constructor(url: string) {\n        this.#url = String(url);\n\n        this.#allowInsecure = false;\n        this.#gzip = true;\n        this.#headers = { };\n        this.#method = \"\";\n        this.#timeout = 300000;\n\n        this.#throttle = {\n            slotInterval: SLOT_INTERVAL,\n            maxAttempts: MAX_ATTEMPTS\n        };\n\n        this.#getUrlFunc = null;\n    }\n\n    toString(): string {\n        return `<FetchRequest method=${ JSON.stringify(this.method) } url=${ JSON.stringify(this.url) } headers=${ JSON.stringify(this.headers) } body=${ this.#body ? hexlify(this.#body): \"null\" }>`;\n    }\n\n    /**\n     *  Update the throttle parameters used to determine maximum\n     *  attempts and exponential-backoff properties.\n     */\n    setThrottleParams(params: FetchThrottleParams): void {\n        if (params.slotInterval != null) {\n            this.#throttle.slotInterval = params.slotInterval;\n        }\n        if (params.maxAttempts != null) {\n            this.#throttle.maxAttempts = params.maxAttempts;\n        }\n    }\n\n    async #send(attempt: number, expires: number, delay: number, _request: FetchRequest, _response: FetchResponse): Promise<FetchResponse> {\n        if (attempt >= this.#throttle.maxAttempts) {\n            return _response.makeServerError(\"exceeded maximum retry limit\");\n        }\n\n        assert(getTime() <= expires, \"timeout\", \"TIMEOUT\", {\n            operation: \"request.send\", reason: \"timeout\", request: _request\n        });\n\n        if (delay > 0) { await wait(delay); }\n\n        let req = this.clone();\n        const scheme = (req.url.split(\":\")[0] || \"\").toLowerCase();\n\n        // Process any Gateways\n        if (scheme in Gateways) {\n            const result = await Gateways[scheme](req.url, checkSignal(_request.#signal));\n            if (result instanceof FetchResponse) {\n                let response = result;\n\n                if (this.processFunc) {\n                    checkSignal(_request.#signal);\n                    try {\n                        response = await this.processFunc(req, response);\n                    } catch (error: any) {\n\n                        // Something went wrong during processing; throw a 5xx server error\n                        if (error.throttle == null || typeof(error.stall) !== \"number\") {\n                            response.makeServerError(\"error in post-processing function\", error).assertOk();\n                        }\n\n                        // Ignore throttling\n                    }\n                }\n\n                return response;\n            }\n            req = result;\n        }\n\n        // We have a preflight function; update the request\n        if (this.preflightFunc) { req = await this.preflightFunc(req); }\n\n        const resp = await this.getUrlFunc(req, checkSignal(_request.#signal));\n        let response = new FetchResponse(resp.statusCode, resp.statusMessage, resp.headers, resp.body, _request);\n\n        if (response.statusCode === 301 || response.statusCode === 302) {\n\n            // Redirect\n            try {\n                const location = response.headers.location || \"\";\n                return req.redirect(location).#send(attempt + 1, expires, 0, _request, response);\n            } catch (error) { }\n\n            // Things won't get any better on another attempt; abort\n            return response;\n\n        } else if (response.statusCode === 429) {\n\n            // Throttle\n            if (this.retryFunc == null || (await this.retryFunc(req, response, attempt))) {\n                const retryAfter = response.headers[\"retry-after\"];\n                let delay = this.#throttle.slotInterval * Math.trunc(Math.random() * Math.pow(2, attempt));\n                if (typeof(retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                    delay = parseInt(retryAfter);\n                }\n                return req.clone().#send(attempt + 1, expires, delay, _request, response);\n            }\n        }\n\n        if (this.processFunc) {\n            checkSignal(_request.#signal);\n            try {\n                response = await this.processFunc(req, response);\n            } catch (error: any) {\n\n                // Something went wrong during processing; throw a 5xx server error\n                if (error.throttle == null || typeof(error.stall) !== \"number\") {\n                    response.makeServerError(\"error in post-processing function\", error).assertOk();\n                }\n\n                // Throttle\n                let delay = this.#throttle.slotInterval * Math.trunc(Math.random() * Math.pow(2, attempt));;\n                if (error.stall >= 0) { delay = error.stall; }\n\n                return req.clone().#send(attempt + 1, expires, delay, _request, response);\n            }\n        }\n\n        return response;\n    }\n\n    /**\n     *  Resolves to the response by sending the request.\n     */\n    send(): Promise<FetchResponse> {\n        assert(this.#signal == null, \"request already sent\", \"UNSUPPORTED_OPERATION\", { operation: \"fetchRequest.send\" });\n        this.#signal = new FetchCancelSignal(this);\n        return this.#send(0, getTime() + this.timeout, 0, this, new FetchResponse(0, \"\", { }, null, this));\n    }\n\n    /**\n     *  Cancels the inflight response, causing a ``CANCELLED``\n     *  error to be rejected from the [[send]].\n     */\n    cancel(): void {\n        assert(this.#signal != null, \"request has not been sent\", \"UNSUPPORTED_OPERATION\", { operation: \"fetchRequest.cancel\" });\n        const signal = fetchSignals.get(this);\n        if (!signal) { throw new Error(\"missing signal; should not happen\"); }\n        signal();\n    }\n\n    /**\n     *  Returns a new [[FetchRequest]] that represents the redirection\n     *  to %%location%%.\n     */\n    redirect(location: string): FetchRequest {\n        // Redirection; for now we only support absolute locations\n        const current = this.url.split(\":\")[0].toLowerCase();\n        const target = location.split(\":\")[0].toLowerCase();\n\n        // Don't allow redirecting:\n        // - non-GET requests\n        // - downgrading the security (e.g. https => http)\n        // - to non-HTTP (or non-HTTPS) protocols [this could be relaxed?]\n        assert(this.method === \"GET\" && (current !== \"https\" || target !== \"http\") && location.match(/^https?:/), `unsupported redirect`, \"UNSUPPORTED_OPERATION\", {\n            operation: `redirect(${ this.method } ${ JSON.stringify(this.url) } => ${ JSON.stringify(location) })`\n        });\n\n        // Create a copy of this request, with a new URL\n        const req = new FetchRequest(location);\n        req.method = \"GET\";\n        req.allowGzip = this.allowGzip;\n        req.timeout = this.timeout;\n        req.#headers = Object.assign({ }, this.#headers);\n        if (this.#body) { req.#body = new Uint8Array(this.#body); }\n        req.#bodyType = this.#bodyType;\n\n        // Do not forward credentials unless on the same domain; only absolute\n        //req.allowInsecure = false;\n        // paths are currently supported; may want a way to specify to forward?\n        //setStore(req.#props, \"creds\", getStore(this.#pros, \"creds\"));\n\n        return req;\n    }\n\n    /**\n     *  Create a new copy of this request.\n     */\n    clone(): FetchRequest {\n        const clone = new FetchRequest(this.url);\n\n        // Preserve \"default method\" (i.e. null)\n        clone.#method = this.#method;\n\n        // Preserve \"default body\" with type, copying the Uint8Array is present\n        if (this.#body) { clone.#body = this.#body; }\n        clone.#bodyType = this.#bodyType;\n\n        // Preserve \"default headers\"\n        clone.#headers = Object.assign({ }, this.#headers);\n\n        // Credentials is readonly, so we copy internally\n        clone.#creds = this.#creds;\n\n        if (this.allowGzip) { clone.allowGzip = true; }\n\n        clone.timeout = this.timeout;\n        if (this.allowInsecureAuthentication) { clone.allowInsecureAuthentication = true; }\n\n        clone.#preflight = this.#preflight;\n        clone.#process = this.#process;\n        clone.#retry = this.#retry;\n\n        clone.#getUrlFunc = this.#getUrlFunc;\n\n        return clone;\n    }\n\n    /**\n     *  Locks all static configuration for gateways and FetchGetUrlFunc\n     *  registration.\n     */\n    static lockConfig(): void {\n        locked = true;\n    }\n\n    /**\n     *  Get the current Gateway function for %%scheme%%.\n     */\n    static getGateway(scheme: string): null | FetchGatewayFunc {\n        return Gateways[scheme.toLowerCase()] || null;\n    }\n\n    /**\n     *  Use the %%func%% when fetching URIs using %%scheme%%.\n     *\n     *  This method affects all requests globally.\n     *\n     *  If [[lockConfig]] has been called, no change is made and this\n     *  throws.\n     */\n    static registerGateway(scheme: string, func: FetchGatewayFunc): void {\n        scheme = scheme.toLowerCase();\n        if (scheme === \"http\" || scheme === \"https\") {\n            throw new Error(`cannot intercept ${ scheme }; use registerGetUrl`);\n        }\n        if (locked) { throw new Error(\"gateways locked\"); }\n        Gateways[scheme] = func;\n    }\n\n    /**\n     *  Use %%getUrl%% when fetching URIs over HTTP and HTTPS requests.\n     *\n     *  This method affects all requests globally.\n     *\n     *  If [[lockConfig]] has been called, no change is made and this\n     *  throws.\n     */\n    static registerGetUrl(getUrl: FetchGetUrlFunc): void {\n        if (locked) { throw new Error(\"gateways locked\"); }\n        defaultGetUrlFunc = getUrl;\n    }\n\n    /**\n     *  Creates a getUrl function that fetches content from HTTP and\n     *  HTTPS URLs.\n     *\n     *  The available %%options%% are dependent on the platform\n     *  implementation of the default getUrl function.\n     *\n     *  This is not generally something that is needed, but is useful\n     *  when trying to customize simple behaviour when fetching HTTP\n     *  content.\n     */\n    static createGetUrlFunc(options?: Record<string, any>): FetchGetUrlFunc {\n        return createGetUrl(options);\n    }\n\n    /**\n     *  Creates a function that can \"fetch\" data URIs.\n     *\n     *  Note that this is automatically done internally to support\n     *  data URIs, so it is not necessary to register it.\n     *\n     *  This is not generally something that is needed, but may\n     *  be useful in a wrapper to perfom custom data URI functionality.\n     */\n    static createDataGateway(): FetchGatewayFunc {\n        return dataGatewayFunc;\n    }\n\n    /**\n     *  Creates a function that will fetch IPFS (unvalidated) from\n     *  a custom gateway baseUrl.\n     *\n     *  The default IPFS gateway used internally is\n     *  ``\"https:/\\/gateway.ipfs.io/ipfs/\"``.\n     */\n    static createIpfsGatewayFunc(baseUrl: string): FetchGatewayFunc {\n        return getIpfsGatewayFunc(baseUrl);\n    }\n}\n\n\ninterface ThrottleError extends Error {\n    stall: number;\n    throttle: true;\n};\n\n/**\n *  The response for a FetchRequest.\n */\nexport class FetchResponse implements Iterable<[ key: string, value: string ]> {\n    #statusCode: number;\n    #statusMessage: string;\n    #headers: Record<string, string>;\n    #body: null | Readonly<Uint8Array>;\n    #request: null | FetchRequest;\n\n    #error: { error?: Error, message: string };\n\n    toString(): string {\n        return `<FetchResponse status=${ this.statusCode } body=${ this.#body ? hexlify(this.#body): \"null\" }>`;\n    }\n\n    /**\n     *  The response status code.\n     */\n    get statusCode(): number { return this.#statusCode; }\n\n    /**\n     *  The response status message.\n     */\n    get statusMessage(): string { return this.#statusMessage; }\n\n    /**\n     *  The response headers. All keys are lower-case.\n     */\n    get headers(): Record<string, string> { return Object.assign({ }, this.#headers); }\n\n    /**\n     *  The response body, or ``null`` if there was no body.\n     */\n    get body(): null | Readonly<Uint8Array> {\n        return (this.#body == null) ? null: new Uint8Array(this.#body);\n    }\n\n    /**\n     *  The response body as a UTF-8 encoded string, or the empty\n     *  string (i.e. ``\"\"``) if there was no body.\n     *\n     *  An error is thrown if the body is invalid UTF-8 data.\n     */\n    get bodyText(): string {\n        try {\n            return (this.#body == null) ? \"\": toUtf8String(this.#body);\n        } catch (error) {\n            assert(false, \"response body is not valid UTF-8 data\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"bodyText\", info: { response: this }\n            });\n        }\n    }\n\n    /**\n     *  The response body, decoded as JSON.\n     *\n     *  An error is thrown if the body is invalid JSON-encoded data\n     *  or if there was no body.\n     */\n    get bodyJson(): any {\n        try {\n            return JSON.parse(this.bodyText);\n        } catch (error) {\n            assert(false, \"response body is not valid JSON\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"bodyJson\", info: { response: this }\n            });\n        }\n    }\n\n    [Symbol.iterator](): Iterator<[ key: string, value: string ]> {\n        const headers = this.headers;\n        const keys = Object.keys(headers);\n        let index = 0;\n        return {\n            next: () => {\n                if (index < keys.length) {\n                    const key = keys[index++];\n                    return {\n                        value: [ key, headers[key] ], done: false\n                    }\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n\n    constructor(statusCode: number, statusMessage: string, headers: Readonly<Record<string, string>>, body: null | Uint8Array, request?: FetchRequest) {\n        this.#statusCode = statusCode;\n        this.#statusMessage = statusMessage;\n        this.#headers = Object.keys(headers).reduce((accum, k) => {\n            accum[k.toLowerCase()] = String(headers[k]);\n            return accum;\n        }, <Record<string, string>>{ });\n        this.#body = ((body == null) ? null: new Uint8Array(body));\n        this.#request = (request || null);\n\n        this.#error = { message: \"\" };\n    }\n\n    /**\n     *  Return a Response with matching headers and body, but with\n     *  an error status code (i.e. 599) and %%message%% with an\n     *  optional %%error%%.\n     */\n    makeServerError(message?: string, error?: Error): FetchResponse {\n        let statusMessage: string;\n        if (!message) {\n            message = `${ this.statusCode } ${ this.statusMessage }`;\n            statusMessage = `CLIENT ESCALATED SERVER ERROR (${ message })`;\n        } else {\n            statusMessage = `CLIENT ESCALATED SERVER ERROR (${ this.statusCode } ${ this.statusMessage }; ${ message })`;\n        }\n        const response = new FetchResponse(599, statusMessage, this.headers,\n            this.body, this.#request || undefined);\n        response.#error = { message, error };\n        return response;\n    }\n\n    /**\n     *  If called within a [request.processFunc](FetchRequest-processFunc)\n     *  call, causes the request to retry as if throttled for %%stall%%\n     *  milliseconds.\n     */\n    throwThrottleError(message?: string, stall?: number): never {\n        if (stall == null) {\n            stall = -1;\n        } else {\n            assertArgument(Number.isInteger(stall) && stall >= 0, \"invalid stall timeout\", \"stall\", stall);\n        }\n\n        const error = new Error(message || \"throttling requests\");\n\n        defineProperties(<ThrottleError>error, { stall, throttle: true });\n\n        throw error;\n    }\n\n    /**\n     *  Get the header value for %%key%%, ignoring case.\n     */\n    getHeader(key: string): string {\n        return this.headers[key.toLowerCase()];\n    }\n\n    /**\n     *  Returns true if the response has a body.\n     */\n    hasBody(): this is (FetchResponse & { body: Uint8Array }) {\n        return (this.#body != null);\n    }\n\n    /**\n     *  The request made for this response.\n     */\n    get request(): null | FetchRequest { return this.#request; }\n\n    /**\n     *  Returns true if this response was a success statusCode.\n     */\n    ok(): boolean {\n        return (this.#error.message === \"\" && this.statusCode >= 200 && this.statusCode < 300);\n    }\n\n    /**\n     *  Throws a ``SERVER_ERROR`` if this response is not ok.\n     */\n    assertOk(): void {\n        if (this.ok()) { return; }\n        let { message, error } = this.#error;\n        if (message === \"\") {\n            message = `server response ${ this.statusCode } ${ this.statusMessage }`;\n        }\n\n        let requestUrl: null | string = null;\n        if (this.request) { requestUrl = this.request.url; }\n\n        let responseBody: null | string = null;\n        try {\n            if (this.#body) { responseBody = toUtf8String(this.#body); }\n        } catch (e) { }\n\n        assert(false, message, \"SERVER_ERROR\", {\n            request: (this.request || \"unknown request\"), response: this, error,\n            info: {\n                requestUrl, responseBody,\n                responseStatus: `${ this.statusCode } ${ this.statusMessage }` }\n        });\n    }\n}\n\n\nfunction getTime(): number { return (new Date()).getTime(); }\n\nfunction unpercent(value: string): Uint8Array {\n    return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {\n        return String.fromCharCode(parseInt(code, 16));\n    }));\n}\n\nfunction wait(delay: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, delay));\n}\n", "/**\n *  The **FixedNumber** class permits using values with decimal places,\n *  using fixed-pont math.\n *\n *  Fixed-point math is still based on integers under-the-hood, but uses an\n *  internal offset to store fractional components below, and each operation\n *  corrects for this after each operation.\n *\n *  @_section: api/utils/fixed-point-math:Fixed-Point Maths  [about-fixed-point-math]\n */\nimport { getBytes } from \"./data.js\";\nimport { assert, assertArgument, assertPrivate } from \"./errors.js\";\nimport {\n    getBigInt, getNumber, fromTwos, mask, toBigInt\n} from \"./maths.js\";\nimport { defineProperties } from \"./properties.js\";\n\nimport type { BigNumberish, BytesLike, Numeric } from \"./index.js\";\n\nconst BN_N1 = BigInt(-1);\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_5 = BigInt(5);\n\nconst _guard = { };\n\n\n// Constant to pull zeros from for multipliers\nlet Zeros = \"0000\";\nwhile (Zeros.length < 80) { Zeros += Zeros; }\n\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getTens(decimals: number): bigint {\n    let result = Zeros;\n    while (result.length < decimals) { result += result; }\n    return BigInt(\"1\" + result.substring(0, decimals));\n}\n\n\n\n    /*\n     *  Returns a new FixedFormat for %%value%%.\n     *\n     *  If %%value%% is specified as a ``number``, the bit-width is\n     *  128 bits and %%value%% is used for the ``decimals``.\n     *\n     *  A string %%value%% may begin with ``fixed`` or ``ufixed``\n     *  for signed and unsigned respectfully. If no other properties\n     *  are specified, the bit-width is 128-bits with 18 decimals.\n     *\n     *  To specify the bit-width and demicals, append them separated\n     *  by an ``\"x\"`` to the %%value%%.\n     *\n     *  For example, ``ufixed128x18`` describes an unsigned, 128-bit\n     *  wide format with 18 decimals.\n     *\n     *  If %%value%% is an other object, its properties for ``signed``,\n     *  ``width`` and ``decimals`` are checked.\n     */\n\n/**\n *  A description of a fixed-point arithmetic field.\n *\n *  When specifying the fixed format, the values override the default of\n *  a ``fixed128x18``, which implies a signed 128-bit value with 18\n *  decimals of precision.\n *\n *  The alias ``fixed`` and ``ufixed`` can be used for ``fixed128x18`` and\n *  ``ufixed128x18`` respectively.\n *\n *  When a fixed format string begins with a ``u``, it indicates the field\n *  is unsigned, so any negative values will overflow. The first number\n *  indicates the bit-width and the second number indicates the decimal\n *  precision.\n *\n *  When a ``number`` is used for a fixed format, it indicates the number\n *  of decimal places, and the default width and signed-ness will be used.\n *\n *  The bit-width must be byte aligned and the decimals can be at most 80.\n */\nexport type FixedFormat = number | string | {\n    signed?: boolean,\n    width?: number,\n    decimals?: number\n};\n\nfunction checkValue(val: bigint, format: _FixedFormat, safeOp?: string): bigint {\n    const width = BigInt(format.width);\n    if (format.signed) {\n        const limit = (BN_1 << (width - BN_1));\n        assert(safeOp == null || (val >= -limit  && val < limit), \"overflow\", \"NUMERIC_FAULT\", {\n            operation: <string>safeOp, fault: \"overflow\", value: val\n        });\n\n        if (val > BN_0) {\n            val = fromTwos(mask(val, width), width);\n        } else {\n            val = -fromTwos(mask(-val, width), width);\n        }\n\n    } else {\n        const limit = (BN_1 << width);\n        assert(safeOp == null || (val >= 0 && val < limit), \"overflow\", \"NUMERIC_FAULT\", {\n            operation: <string>safeOp, fault: \"overflow\", value: val\n        });\n        val = (((val % limit) + limit) % limit) & (limit - BN_1);\n    }\n\n    return val;\n}\n\ntype _FixedFormat = { signed: boolean, width: number, decimals: number, name: string }\n\nfunction getFormat(value?: FixedFormat): _FixedFormat {\n    if (typeof(value) === \"number\") { value = `fixed128x${value}` }\n\n    let signed = true;\n    let width = 128;\n    let decimals = 18;\n\n    if (typeof(value) === \"string\") {\n        // Parse the format string\n        if (value === \"fixed\") {\n            // defaults...\n        } else if (value === \"ufixed\") {\n            signed = false;\n        } else {\n            const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n            assertArgument(match, \"invalid fixed format\", \"format\", value);\n            signed = (match[1] !== \"u\");\n            width = parseInt(match[2]);\n            decimals = parseInt(match[3]);\n        }\n    } else if (value) {\n        // Extract the values from the object\n        const v: any = value;\n        const check = (key: string, type: string, defaultValue: any): any => {\n            if (v[key] == null) { return defaultValue; }\n            assertArgument(typeof(v[key]) === type,\n                \"invalid fixed format (\" + key + \" not \" + type +\")\", \"format.\" + key, v[key]);\n            return v[key];\n        }\n        signed = check(\"signed\", \"boolean\", signed);\n        width = check(\"width\", \"number\", width);\n        decimals = check(\"decimals\", \"number\", decimals);\n    }\n\n    assertArgument((width % 8) === 0, \"invalid FixedNumber width (not byte aligned)\", \"format.width\", width);\n    assertArgument(decimals <= 80, \"invalid FixedNumber decimals (too large)\", \"format.decimals\", decimals);\n\n    const name = (signed ? \"\": \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n\n    return { signed, width, decimals, name };\n}\n\nfunction toString(val: bigint, decimals: number) {\n    let negative = \"\";\n    if (val < BN_0) {\n        negative = \"-\";\n        val *= BN_N1;\n    }\n\n    let str = val.toString();\n\n    // No decimal point for whole values\n    if (decimals === 0) { return (negative + str); }\n\n    // Pad out to the whole component (including a whole digit)\n    while (str.length <= decimals) { str = Zeros + str; }\n\n    // Insert the decimal point\n    const index = str.length - decimals;\n    str = str.substring(0, index) + \".\" + str.substring(index);\n\n    // Trim the whole component (leaving at least one 0)\n    while (str[0] === \"0\" && str[1] !== \".\") {\n        str = str.substring(1);\n    }\n\n    // Trim the decimal component (leaving at least one 0)\n    while (str[str.length - 1] === \"0\" && str[str.length - 2] !== \".\") {\n        str = str.substring(0, str.length - 1);\n    }\n\n    return (negative + str);\n}\n\n\n/**\n *  A FixedNumber represents a value over its [[FixedFormat]]\n *  arithmetic field.\n *\n *  A FixedNumber can be used to perform math, losslessly, on\n *  values which have decmial places.\n *\n *  A FixedNumber has a fixed bit-width to store values in, and stores all\n *  values internally by multiplying the value by 10 raised to the power of\n *  %%decimals%%.\n *\n *  If operations are performed that cause a value to grow too high (close to\n *  positive infinity) or too low (close to negative infinity), the value\n *  is said to //overflow//.\n *\n *  For example, an 8-bit signed value, with 0 decimals may only be within\n *  the range ``-128`` to ``127``; so ``-128 - 1`` will overflow and become\n *  ``127``. Likewise, ``127 + 1`` will overflow and become ``-127``.\n *\n *  Many operation have a normal and //unsafe// variant. The normal variant\n *  will throw a [[NumericFaultError]] on any overflow, while the //unsafe//\n *  variant will silently allow overflow, corrupting its value value.\n *\n *  If operations are performed that cause a value to become too small\n *  (close to zero), the value loses precison and is said to //underflow//.\n *\n *  For example, an value with 1 decimal place may store a number as small\n *  as ``0.1``, but the value of ``0.1 / 2`` is ``0.05``, which cannot fit\n *  into 1 decimal place, so underflow occurs which means precision is lost\n *  and the value becomes ``0``.\n *\n *  Some operations have a normal and //signalling// variant. The normal\n *  variant will silently ignore underflow, while the //signalling// variant\n *  will thow a [[NumericFaultError]] on underflow.\n */\nexport class FixedNumber {\n\n    /**\n     *  The specific fixed-point arithmetic field for this value.\n     */\n    readonly format!: string;\n\n    readonly #format: _FixedFormat;\n\n    // The actual value (accounting for decimals)\n    #val: bigint;\n\n    // A base-10 value to multiple values by to maintain the magnitude\n    readonly #tens: bigint;\n\n    /**\n     *  This is a property so console.log shows a human-meaningful value.\n     *\n     *  @private\n     */\n    readonly _value!: string;\n\n    // Use this when changing this file to get some typing info,\n    // but then switch to any to mask the internal type\n    //constructor(guard: any, value: bigint, format: _FixedFormat) {\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, value: bigint, format: any) {\n        assertPrivate(guard, _guard, \"FixedNumber\");\n\n        this.#val = value;\n\n        this.#format = format;\n\n        const _value = toString(value, format.decimals);\n\n        defineProperties<FixedNumber>(this, { format: format.name, _value });\n\n        this.#tens = getTens(format.decimals);\n    }\n\n    /**\n     *  If true, negative values are permitted, otherwise only\n     *  positive values and zero are allowed.\n     */\n    get signed(): boolean { return this.#format.signed; }\n\n    /**\n     *  The number of bits available to store the value.\n     */\n    get width(): number { return this.#format.width; }\n\n    /**\n     *  The number of decimal places in the fixed-point arithment field.\n     */\n    get decimals(): number { return this.#format.decimals; }\n\n    /**\n     *  The value as an integer, based on the smallest unit the\n     *  [[decimals]] allow.\n     */\n    get value(): bigint { return this.#val; }\n\n    #checkFormat(other: FixedNumber): void {\n        assertArgument(this.format === other.format,\n            \"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n    }\n\n    #checkValue(val: bigint, safeOp?: string): FixedNumber {\n/*\n        const width = BigInt(this.width);\n        if (this.signed) {\n            const limit = (BN_1 << (width - BN_1));\n            assert(safeOp == null || (val >= -limit  && val < limit), \"overflow\", \"NUMERIC_FAULT\", {\n                operation: <string>safeOp, fault: \"overflow\", value: val\n            });\n\n            if (val > BN_0) {\n                val = fromTwos(mask(val, width), width);\n            } else {\n                val = -fromTwos(mask(-val, width), width);\n            }\n\n        } else {\n            const masked = mask(val, width);\n            assert(safeOp == null || (val >= 0 && val === masked), \"overflow\", \"NUMERIC_FAULT\", {\n                operation: <string>safeOp, fault: \"overflow\", value: val\n            });\n            val = masked;\n        }\n*/\n        val = checkValue(val, this.#format, safeOp);\n        return new FixedNumber(_guard, val, this.#format);\n    }\n\n    #add(o: FixedNumber, safeOp?: string): FixedNumber {\n        this.#checkFormat(o);\n        return this.#checkValue(this.#val + o.#val, safeOp);\n    }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% added\n     *  to %%other%%, ignoring overflow.\n     */\n    addUnsafe(other: FixedNumber): FixedNumber { return this.#add(other); }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% added\n     *  to %%other%%. A [[NumericFaultError]] is thrown if overflow\n     *  occurs.\n     */\n    add(other: FixedNumber): FixedNumber { return this.#add(other, \"add\"); }\n\n    #sub(o: FixedNumber, safeOp?: string): FixedNumber {\n        this.#checkFormat(o);\n        return this.#checkValue(this.#val - o.#val, safeOp);\n    }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%other%% subtracted\n     *  from %%this%%, ignoring overflow.\n     */\n    subUnsafe(other: FixedNumber): FixedNumber { return this.#sub(other); }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%other%% subtracted\n     *  from %%this%%. A [[NumericFaultError]] is thrown if overflow\n     *  occurs.\n     */\n    sub(other: FixedNumber): FixedNumber { return this.#sub(other, \"sub\"); }\n\n    #mul(o: FixedNumber, safeOp?: string): FixedNumber {\n        this.#checkFormat(o);\n        return this.#checkValue((this.#val * o.#val) / this.#tens, safeOp);\n    }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% multiplied\n     *  by %%other%%, ignoring overflow and underflow (precision loss).\n     */\n    mulUnsafe(other: FixedNumber): FixedNumber { return this.#mul(other); }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% multiplied\n     *  by %%other%%. A [[NumericFaultError]] is thrown if overflow\n     *  occurs.\n     */\n    mul(other: FixedNumber): FixedNumber { return this.#mul(other, \"mul\"); }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% multiplied\n     *  by %%other%%. A [[NumericFaultError]] is thrown if overflow\n     *  occurs or if underflow (precision loss) occurs.\n     */\n    mulSignal(other: FixedNumber): FixedNumber {\n        this.#checkFormat(other);\n        const value = this.#val * other.#val;\n        assert((value % this.#tens) === BN_0, \"precision lost during signalling mul\", \"NUMERIC_FAULT\", {\n            operation: \"mulSignal\", fault: \"underflow\", value: this\n        });\n        return this.#checkValue(value / this.#tens, \"mulSignal\");\n    }\n\n    #div(o: FixedNumber, safeOp?: string): FixedNumber {\n        assert(o.#val !== BN_0, \"division by zero\", \"NUMERIC_FAULT\", {\n            operation: \"div\", fault: \"divide-by-zero\", value: this\n        });\n        this.#checkFormat(o);\n        return this.#checkValue((this.#val * this.#tens) / o.#val, safeOp);\n    }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% divided\n     *  by %%other%%, ignoring underflow (precision loss). A\n     *  [[NumericFaultError]] is thrown if overflow occurs.\n     */\n    divUnsafe(other: FixedNumber): FixedNumber { return this.#div(other); }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% divided\n     *  by %%other%%, ignoring underflow (precision loss). A\n     *  [[NumericFaultError]] is thrown if overflow occurs.\n     */\n    div(other: FixedNumber): FixedNumber { return this.#div(other, \"div\"); }\n\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% divided\n     *  by %%other%%. A [[NumericFaultError]] is thrown if underflow\n     *  (precision loss) occurs.\n     */\n    divSignal(other: FixedNumber): FixedNumber {\n        assert(other.#val !== BN_0, \"division by zero\", \"NUMERIC_FAULT\", {\n            operation: \"div\", fault: \"divide-by-zero\", value: this\n        });\n        this.#checkFormat(other);\n        const value = (this.#val * this.#tens);\n        assert((value % other.#val) === BN_0, \"precision lost during signalling div\", \"NUMERIC_FAULT\", {\n            operation: \"divSignal\", fault: \"underflow\", value: this\n        });\n        return this.#checkValue(value / other.#val, \"divSignal\");\n    }\n\n    /**\n     *  Returns a comparison result between %%this%% and %%other%%.\n     *\n     *  This is suitable for use in sorting, where ``-1`` implies %%this%%\n     *  is smaller, ``1`` implies %%this%% is larger and ``0`` implies\n     *  both are equal.\n     */\n     cmp(other: FixedNumber): number {\n         let a = this.value, b = other.value;\n\n         // Coerce a and b to the same magnitude\n         const delta = this.decimals - other.decimals;\n         if (delta > 0) {\n             b *= getTens(delta);\n         } else if (delta < 0) {\n             a *= getTens(-delta);\n         }\n\n         // Comnpare\n         if (a < b) { return -1; }\n         if (a > b) { return 1; }\n         return 0;\n     }\n\n    /**\n     *  Returns true if %%other%% is equal to %%this%%.\n     */\n     eq(other: FixedNumber): boolean { return this.cmp(other) === 0; }\n\n    /**\n     *  Returns true if %%other%% is less than to %%this%%.\n     */\n     lt(other: FixedNumber): boolean { return this.cmp(other) < 0; }\n\n    /**\n     *  Returns true if %%other%% is less than or equal to %%this%%.\n     */\n     lte(other: FixedNumber): boolean { return this.cmp(other) <= 0; }\n\n    /**\n     *  Returns true if %%other%% is greater than to %%this%%.\n     */\n     gt(other: FixedNumber): boolean { return this.cmp(other) > 0; }\n\n    /**\n     *  Returns true if %%other%% is greater than or equal to %%this%%.\n     */\n     gte(other: FixedNumber): boolean { return this.cmp(other) >= 0; }\n\n    /**\n     *  Returns a new [[FixedNumber]] which is the largest **integer**\n     *  that is less than or equal to %%this%%.\n     *\n     *  The decimal component of the result will always be ``0``.\n     */\n    floor(): FixedNumber {\n        let val = this.#val;\n        if (this.#val < BN_0) { val -= this.#tens - BN_1; }\n        val = (this.#val / this.#tens) * this.#tens;\n        return this.#checkValue(val, \"floor\");\n    }\n\n    /**\n     *  Returns a new [[FixedNumber]] which is the smallest **integer**\n     *  that is greater than or equal to %%this%%.\n     *\n     *  The decimal component of the result will always be ``0``.\n     */\n    ceiling(): FixedNumber {\n        let val = this.#val;\n        if (this.#val > BN_0) { val += this.#tens - BN_1; }\n        val = (this.#val / this.#tens) * this.#tens;\n        return this.#checkValue(val, \"ceiling\");\n    }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the decimal component\n     *  rounded up on ties at %%decimals%% places.\n     */\n    round(decimals?: number): FixedNumber {\n        if (decimals == null) { decimals = 0; }\n\n        // Not enough precision to not already be rounded\n        if (decimals >= this.decimals) { return this; }\n\n        const delta = this.decimals - decimals;\n        const bump = BN_5 * getTens(delta - 1);\n\n        let value = this.value + bump;\n        const tens = getTens(delta);\n        value = (value / tens) * tens;\n\n        checkValue(value, this.#format, \"round\");\n\n        return new FixedNumber(_guard, value, this.#format);\n    }\n\n    /**\n     *  Returns true if %%this%% is equal to ``0``.\n     */\n    isZero(): boolean { return (this.#val === BN_0); }\n\n    /**\n     *  Returns true if %%this%% is less than ``0``.\n     */\n    isNegative(): boolean { return (this.#val < BN_0); }\n\n    /**\n     *  Returns the string representation of %%this%%.\n     */\n    toString(): string { return this._value; }\n\n    /**\n     *  Returns a float approximation.\n     *\n     *  Due to IEEE 754 precission (or lack thereof), this function\n     *  can only return an approximation and most values will contain\n     *  rounding errors.\n     */\n    toUnsafeFloat(): number { return parseFloat(this.toString()); }\n\n    /**\n     *  Return a new [[FixedNumber]] with the same value but has had\n     *  its field set to %%format%%.\n     *\n     *  This will throw if the value cannot fit into %%format%%.\n     */\n    toFormat(format: FixedFormat): FixedNumber {\n        return FixedNumber.fromString(this.toString(), format);\n    }\n\n    /**\n     *  Creates a new [[FixedNumber]] for %%value%% divided by\n     *  %%decimal%% places with %%format%%.\n     *\n     *  This will throw a [[NumericFaultError]] if %%value%% (once adjusted\n     *  for %%decimals%%) cannot fit in %%format%%, either due to overflow\n     *  or underflow (precision loss).\n     */\n    static fromValue(_value: BigNumberish, _decimals?: Numeric, _format?: FixedFormat): FixedNumber {\n        const decimals = (_decimals == null) ? 0: getNumber(_decimals);\n        const format = getFormat(_format);\n\n        let value = getBigInt(_value, \"value\");\n        const delta = decimals - format.decimals;\n        if (delta > 0) {\n            const tens = getTens(delta);\n            assert((value % tens) === BN_0, \"value loses precision for format\", \"NUMERIC_FAULT\", {\n                operation: \"fromValue\", fault: \"underflow\", value: _value\n            });\n            value /= tens;\n        } else if (delta < 0) {\n            value *= getTens(-delta);\n        }\n\n        checkValue(value, format, \"fromValue\");\n\n        return new FixedNumber(_guard, value, format);\n    }\n\n    /**\n     *  Creates a new [[FixedNumber]] for %%value%% with %%format%%.\n     *\n     *  This will throw a [[NumericFaultError]] if %%value%% cannot fit\n     *  in %%format%%, either due to overflow or underflow (precision loss).\n     */\n    static fromString(_value: string, _format?: FixedFormat): FixedNumber {\n        const match = _value.match(/^(-?)([0-9]*)\\.?([0-9]*)$/);\n        assertArgument(match && (match[2].length + match[3].length) > 0, \"invalid FixedNumber string value\", \"value\", _value);\n\n        const format = getFormat(_format);\n\n        let whole = (match[2] || \"0\"), decimal = (match[3] || \"\");\n\n        // Pad out the decimals\n        while (decimal.length < format.decimals) { decimal += Zeros; }\n\n        // Check precision is safe\n        assert(decimal.substring(format.decimals).match(/^0*$/), \"too many decimals for format\", \"NUMERIC_FAULT\", {\n            operation: \"fromString\", fault: \"underflow\", value: _value\n        });\n\n        // Remove extra padding\n        decimal = decimal.substring(0, format.decimals);\n\n        const value = BigInt(match[1] + whole + decimal)\n\n        checkValue(value, format, \"fromString\");\n\n        return new FixedNumber(_guard, value, format);\n    }\n\n    /**\n     *  Creates a new [[FixedNumber]] with the big-endian representation\n     *  %%value%% with %%format%%.\n     *\n     *  This will throw a [[NumericFaultError]] if %%value%% cannot fit\n     *  in %%format%% due to overflow.\n     */\n    static fromBytes(_value: BytesLike, _format?: FixedFormat): FixedNumber {\n        let value = toBigInt(getBytes(_value, \"value\"));\n        const format = getFormat(_format);\n\n        if (format.signed) { value = fromTwos(value, format.width); }\n\n        checkValue(value, format, \"fromBytes\");\n\n        return new FixedNumber(_guard, value, format);\n    }\n}\n\n//const f1 = FixedNumber.fromString(\"12.56\", \"fixed16x2\");\n//const f2 = FixedNumber.fromString(\"0.3\", \"fixed16x2\");\n//console.log(f1.divSignal(f2));\n//const BUMP = FixedNumber.from(\"0.5\");\n", "//See: https://github.com/ethereum/wiki/wiki/RLP\n\nimport { hexlify } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\nimport { getBytes } from \"./data.js\";\n\nimport type { BytesLike, RlpStructuredData } from \"./index.js\";\n\n\nfunction hexlifyByte(value: number): string {\n    let result = value.toString(16);\n    while (result.length < 2) { result = \"0\" + result; }\n    return \"0x\" + result;\n}\n\nfunction unarrayifyInteger(data: Uint8Array, offset: number, length: number): number {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\n\ntype Decoded = {\n    result: any;\n    consumed: number;\n};\n\nfunction _decodeChildren(data: Uint8Array, offset: number, childOffset: number, length: number): Decoded {\n    const result: Array<any> = [];\n\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n\n        result.push(decoded.result);\n\n        childOffset += decoded.consumed;\n        assert(childOffset <= offset + 1 + length, \"child data too short\", \"BUFFER_OVERRUN\", {\n            buffer: data, length, offset\n        });\n    }\n\n    return {consumed: (1 + length), result: result};\n}\n\n// returns { consumed: number, result: Object }\nfunction _decode(data: Uint8Array, offset: number): { consumed: number, result: any } {\n    assert(data.length !== 0, \"data too short\", \"BUFFER_OVERRUN\", {\n        buffer: data, length: 0, offset: 1\n    });\n\n    const checkOffset = (offset: number) => {\n        assert(offset <= data.length, \"data short segment too short\", \"BUFFER_OVERRUN\", {\n            buffer: data, length: data.length, offset\n        });\n    };\n\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        checkOffset(offset + 1 + lengthLength);\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        checkOffset(offset + 1 + lengthLength + length);\n\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n\n    } else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        checkOffset(offset + 1 + length);\n\n        return _decodeChildren(data, offset, offset + 1, length);\n\n    } else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        checkOffset(offset + 1 + lengthLength);\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        checkOffset(offset + 1 + lengthLength + length);\n\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result }\n\n    } else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        checkOffset(offset + 1 + length);\n\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result }\n    }\n\n    return { consumed: 1, result: hexlifyByte(data[offset]) };\n}\n\n/**\n *  Decodes %%data%% into the structured data it represents.\n */\nexport function decodeRlp(_data: BytesLike): RlpStructuredData {\n    const data = getBytes(_data, \"data\");\n    const decoded = _decode(data, 0);\n    assertArgument(decoded.consumed === data.length, \"unexpected junk after rlp payload\", \"data\", _data);\n    return decoded.result;\n}\n\n", "//See: https://github.com/ethereum/wiki/wiki/RLP\n\nimport { getBytes } from \"./data.js\";\n\nimport type { RlpStructuredDataish } from \"./rlp.js\";\n\n\nfunction arrayifyInteger(value: number): Array<number> {\n    const result: Array<number> = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\n\nfunction _encode(object: Array<any> | string | Uint8Array): Array<number> {\n    if (Array.isArray(object)) {\n        let payload: Array<number> = [];\n        object.forEach(function(child) {\n            payload = payload.concat(_encode(child));\n        });\n\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length)\n            return payload;\n        }\n\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n\n        return length.concat(payload);\n\n    }\n\n    const data: Array<number> = Array.prototype.slice.call(getBytes(object, \"object\"));\n\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n\n    } else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n\n    return length.concat(data);\n}\n\nconst nibbles = \"0123456789abcdef\";\n\n/**\n *  Encodes %%object%% as an RLP-encoded [[DataHexString]].\n */\nexport function encodeRlp(object: RlpStructuredDataish): string {\n    let result = \"0x\";\n    for (const v of _encode(object)) {\n        result += nibbles[v >> 4];\n        result += nibbles[v & 0xf];\n    }\n    return result;\n}\n", "/**\n *  Most interactions with Ethereum requires integer values, which use\n *  the smallest magnitude unit.\n *\n *  For example, imagine dealing with dollars and cents. Since dollars\n *  are divisible, non-integer values are possible, such as ``$10.77``.\n *  By using the smallest indivisible unit (i.e. cents), the value can\n *  be kept as the integer ``1077``.\n *\n *  When receiving decimal input from the user (as a decimal string),\n *  the value should be converted to an integer and when showing a user\n *  a value, the integer value should be converted to a decimal string.\n *\n *  This creates a clear distinction, between values to be used by code\n *  (integers) and values used for display logic to users (decimals).\n *\n *  The native unit in Ethereum, //ether// is divisible to 18 decimal places,\n *  where each individual unit is called a //wei//.\n *\n *  @_subsection api/utils:Unit Conversion  [about-units]\n */\nimport { assertArgument } from \"./errors.js\";\nimport { FixedNumber } from \"./fixednumber.js\";\nimport { getNumber } from \"./maths.js\";\n\nimport type { BigNumberish, Numeric } from \"../utils/index.js\";\n\n\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n\n/**\n *  Converts %%value%% into a //decimal string//, assuming %%unit%% decimal\n *  places. The %%unit%% may be the number of decimal places or the name of\n *  a unit (e.g. ``\"gwei\"`` for 9 decimal places).\n *\n */\nexport function formatUnits(value: BigNumberish, unit?: string | Numeric): string {\n    let decimals = 18;\n    if (typeof(unit) === \"string\") {\n        const index = names.indexOf(unit);\n        assertArgument(index >= 0, \"invalid unit\", \"unit\", unit);\n        decimals = 3 * index;\n    } else if (unit != null) {\n        decimals = getNumber(unit, \"unit\");\n    }\n\n    return FixedNumber.fromValue(value, decimals, { decimals, width: 512 }).toString();\n}\n\n/**\n *  Converts the //decimal string// %%value%% to a BigInt, assuming\n *  %%unit%% decimal places. The %%unit%% may the number of decimal places\n *  or the name of a unit (e.g. ``\"gwei\"`` for 9 decimal places).\n */\nexport function parseUnits(value: string, unit?: string | Numeric): bigint {\n    assertArgument(typeof(value) === \"string\", \"value must be a string\", \"value\", value);\n\n    let decimals = 18;\n    if (typeof(unit) === \"string\") {\n        const index = names.indexOf(unit);\n        assertArgument(index >= 0, \"invalid unit\", \"unit\", unit);\n        decimals = 3 * index;\n    } else if (unit != null) {\n        decimals = getNumber(unit, \"unit\");\n    }\n\n    return FixedNumber.fromString(value, { decimals, width: 512 }).value;\n}\n\n/**\n *  Converts %%value%% into a //decimal string// using 18 decimal places.\n */\nexport function formatEther(wei: BigNumberish): string {\n    return formatUnits(wei, 18);\n}\n\n/**\n *  Converts the //decimal string// %%ether%% to a BigInt, using 18\n *  decimal places.\n */\nexport function parseEther(ether: string): bigint {\n    return parseUnits(ether, 18);\n}\n", "/**\n *  Explain UUID and link to RFC here.\n *\n *  @_subsection: api/utils:UUID  [about-uuid]\n */\nimport { getBytes, hexlify } from \"./data.js\";\n\nimport type { BytesLike } from \"./index.js\";\n\n/**\n *  Returns the version 4 [[link-uuid]] for the %%randomBytes%%.\n *\n *  @see: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\n */\nexport function uuidV4(randomBytes: BytesLike): string {\n    const bytes = getBytes(randomBytes, \"randomBytes\");\n\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    const value = hexlify(bytes);\n\n    return [\n       value.substring(2, 10),\n       value.substring(10, 14),\n       value.substring(14, 18),\n       value.substring(18, 22),\n       value.substring(22, 34),\n    ].join(\"-\");\n}\n", "\nimport {\n    defineProperties, concat, getBytesCopy, getNumber, hexlify,\n    toBeArray, toBigInt, toNumber,\n    assert, assertArgument\n} from \"../../utils/index.js\";\n\nimport type { BigNumberish, BytesLike } from \"../../utils/index.js\";\n\n/**\n * @_ignore:\n */\nexport const WordSize: number = 32;\nconst Padding = new Uint8Array(WordSize);\n\n// Properties used to immediate pass through to the underlying object\n// - `then` is used to detect if an object is a Promise for await\nconst passProperties = [ \"then\" ];\n\nconst _guard = { };\n\nfunction throwError(name: string, error: Error): never {\n    const wrapped = new Error(`deferred error during ABI decoding triggered accessing ${ name }`);\n    (<any>wrapped).error = error;\n    throw wrapped;\n}\n\n/**\n *  A [[Result]] is a sub-class of Array, which allows accessing any\n *  of its values either positionally by its index or, if keys are\n *  provided by its name.\n *\n *  @_docloc: api/abi\n */\nexport class Result extends Array<any> {\n    readonly #names: ReadonlyArray<null | string>;\n\n    [ K: string | number ]: any\n\n    /**\n     *  @private\n     */\n    constructor(...args: Array<any>) {\n        // To properly sub-class Array so the other built-in\n        // functions work, the constructor has to behave fairly\n        // well. So, in the event we are created via fromItems()\n        // we build the read-only Result object we want, but on\n        // any other input, we use the default constructor\n\n        // constructor(guard: any, items: Array<any>, keys?: Array<null | string>);\n        const guard = args[0];\n        let items: Array<any> = args[1];\n        let names: Array<null | string> = (args[2] || [ ]).slice();\n\n        let wrap = true;\n        if (guard !== _guard) {\n            items = args;\n            names = [ ];\n            wrap = false;\n        }\n\n        // Can't just pass in ...items since an array of length 1\n        // is a special case in the super.\n        super(items.length);\n        items.forEach((item, index) => { this[index] = item; });\n\n        // Find all unique keys\n        const nameCounts = names.reduce((accum, name) => {\n            if (typeof(name) === \"string\") {\n                accum.set(name, (accum.get(name) || 0) + 1);\n            }\n            return accum;\n        }, <Map<string, number>>(new Map()));\n\n        // Remove any key thats not unique\n        this.#names = Object.freeze(items.map((item, index) => {\n            const name = names[index];\n            if (name != null && nameCounts.get(name) === 1) {\n                return name;\n            }\n            return null;\n        }));\n\n        if (!wrap) { return; }\n\n        // A wrapped Result is immutable\n        Object.freeze(this);\n\n        // Proxy indices and names so we can trap deferred errors\n        return new Proxy(this, {\n            get: (target, prop, receiver) => {\n                if (typeof(prop) === \"string\") {\n\n                    // Index accessor\n                    if (prop.match(/^[0-9]+$/)) {\n                        const index = getNumber(prop, \"%index\");\n                        if (index < 0 || index >= this.length) {\n                            throw new RangeError(\"out of result range\");\n                        }\n\n                        const item = target[index];\n                        if (item instanceof Error) {\n                            throwError(`index ${ index }`, item);\n                        }\n                        return item;\n                    }\n\n                    // Pass important checks (like `then` for Promise) through\n                    if (passProperties.indexOf(prop) >= 0) {\n                        return Reflect.get(target, prop, receiver);\n                    }\n\n                    const value = target[prop];\n                    if (value instanceof Function) {\n                        // Make sure functions work with private variables\n                        // See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy#no_private_property_forwarding\n                        return function(this: any, ...args: Array<any>) {\n                            return value.apply((this === receiver) ? target: this, args);\n                        };\n\n                    } else if (!(prop in target)) {\n                        // Possible name accessor\n                        return target.getValue.apply((this === receiver) ? target: this, [ prop ]);\n                    }\n                }\n\n                return Reflect.get(target, prop, receiver);\n            }\n        });\n    }\n\n    /**\n     *  Returns the Result as a normal Array.\n     *\n     *  This will throw if there are any outstanding deferred\n     *  errors.\n     */\n    toArray(): Array<any> {\n        const result: Array<any> = [ ];\n        this.forEach((item, index) => {\n            if (item instanceof Error) { throwError(`index ${ index }`, item); }\n            result.push(item);\n        });\n        return result;\n    }\n\n    /**\n     *  Returns the Result as an Object with each name-value pair.\n     *\n     *  This will throw if any value is unnamed, or if there are\n     *  any outstanding deferred errors.\n     */\n    toObject(): Record<string, any> {\n        return this.#names.reduce((accum, name, index) => {\n            assert(name != null, \"value at index ${ index } unnamed\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"toObject()\"\n            });\n\n            // Add values for names that don't conflict\n            if (!(name in accum)) {\n                accum[name] = this.getValue(name);\n            }\n\n            return accum;\n        }, <Record<string, any>>{});\n    }\n\n    /**\n     *  @_ignore\n     */\n    slice(start?: number | undefined, end?: number | undefined): Result {\n        if (start == null) { start = 0; }\n        if (start < 0) {\n            start += this.length;\n            if (start < 0) { start = 0; }\n        }\n\n        if (end == null) { end = this.length; }\n        if (end < 0) {\n            end += this.length;\n            if (end < 0) { end = 0; }\n        }\n        if (end > this.length) { end = this.length; }\n\n        const result: Array<any> = [ ], names: Array<null | string> = [ ];\n        for (let i = start; i < end; i++) {\n            result.push(this[i]);\n            names.push(this.#names[i]);\n        }\n\n        return new Result(_guard, result, names);\n    }\n\n    /**\n     *  @_ignore\n     */\n    filter(callback: (el: any, index: number, array: Result) => boolean, thisArg?: any): Result {\n        const result: Array<any> = [ ], names: Array<null | string> = [ ];\n        for (let i = 0; i < this.length; i++) {\n            const item = this[i];\n            if (item instanceof Error) {\n                throwError(`index ${ i }`, item);\n            }\n\n            if (callback.call(thisArg, item, i, this)) {\n                result.push(item);\n                names.push(this.#names[i]);\n            }\n        }\n\n        return new Result(_guard, result, names);\n    }\n\n    /**\n     *  @_ignore\n     */\n    map<T extends any = any>(callback: (el: any, index: number, array: Result) => T, thisArg?: any): Array<T> {\n        const result: Array<T> = [ ];\n        for (let i = 0; i < this.length; i++) {\n            const item = this[i];\n            if (item instanceof Error) {\n                throwError(`index ${ i }`, item);\n            }\n\n            result.push(callback.call(thisArg, item, i, this));\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Returns the value for %%name%%.\n     *\n     *  Since it is possible to have a key whose name conflicts with\n     *  a method on a [[Result]] or its superclass Array, or any\n     *  JavaScript keyword, this ensures all named values are still\n     *  accessible by name.\n     */\n    getValue(name: string): any {\n        const index = this.#names.indexOf(name);\n        if (index === -1) { return undefined; }\n\n        const value = this[index];\n\n        if (value instanceof Error) {\n            throwError(`property ${ JSON.stringify(name) }`, (<any>value).error);\n        }\n\n        return value;\n    }\n\n    /**\n     *  Creates a new [[Result]] for %%items%% with each entry\n     *  also accessible by its corresponding name in %%keys%%.\n     */\n    static fromItems(items: Array<any>, keys?: Array<null | string>): Result {\n        return new Result(_guard, items, keys);\n    }\n}\n\n/**\n *  Returns all errors found in a [[Result]].\n *\n *  Since certain errors encountered when creating a [[Result]] do\n *  not impact the ability to continue parsing data, they are\n *  deferred until they are actually accessed. Hence a faulty string\n *  in an Event that is never used does not impact the program flow.\n *\n *  However, sometimes it may be useful to access, identify or\n *  validate correctness of a [[Result]].\n *\n *  @_docloc api/abi\n */\nexport function checkResultErrors(result: Result): Array<{ path: Array<string | number>, error: Error }> {\n    // Find the first error (if any)\n    const errors: Array<{ path: Array<string | number>, error: Error }> = [ ];\n\n    const checkErrors = function(path: Array<string | number>, object: any): void {\n        if (!Array.isArray(object)) { return; }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n\n            try {\n                 checkErrors(childPath, object[key]);\n            } catch (error: any) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    }\n    checkErrors([ ], result);\n\n    return errors;\n\n}\n\nfunction getValue(value: BigNumberish): Uint8Array {\n    let bytes = toBeArray(value);\n\n    assert (bytes.length <= WordSize, \"value out-of-bounds\",\n        \"BUFFER_OVERRUN\", { buffer: bytes, length: WordSize, offset: bytes.length });\n\n    if (bytes.length !== WordSize) {\n        bytes = getBytesCopy(concat([ Padding.slice(bytes.length % WordSize), bytes ]));\n    }\n\n    return bytes;\n}\n\n/**\n *  @_ignore\n */\nexport abstract class Coder {\n\n    // The coder name:\n    //   - address, uint256, tuple, array, etc.\n    readonly name!: string;\n\n    // The fully expanded type, including composite types:\n    //   - address, uint256, tuple(address,bytes), uint256[3][4][],  etc.\n    readonly type!: string;\n\n    // The localName bound in the signature, in this example it is \"baz\":\n    //   - tuple(address foo, uint bar) baz\n    readonly localName!: string;\n\n    // Whether this type is dynamic:\n    //  - Dynamic: bytes, string, address[], tuple(boolean[]), etc.\n    //  - Not Dynamic: address, uint256, boolean[3], tuple(address, uint8)\n    readonly dynamic!: boolean;\n\n    constructor(name: string, type: string, localName: string, dynamic: boolean) {\n        defineProperties<Coder>(this, { name, type, localName, dynamic }, {\n            name: \"string\", type: \"string\", localName: \"string\", dynamic: \"boolean\"\n        });\n    }\n\n    _throwError(message: string, value: any): never {\n        assertArgument(false, message, this.localName, value);\n    }\n\n    abstract encode(writer: Writer, value: any): number;\n    abstract decode(reader: Reader): any;\n\n    abstract defaultValue(): any;\n}\n\n/**\n *  @_ignore\n */\nexport class Writer {\n    // An array of WordSize lengthed objects to concatenation\n    #data: Array<Uint8Array>;\n    #dataLength: number;\n\n    constructor() {\n        this.#data = [ ];\n        this.#dataLength = 0;\n    }\n\n    get data(): string {\n        return concat(this.#data);\n    }\n    get length(): number { return this.#dataLength; }\n\n    #writeData(data: Uint8Array): number {\n        this.#data.push(data);\n        this.#dataLength += data.length;\n        return data.length;\n    }\n\n    appendWriter(writer: Writer): number {\n        return this.#writeData(getBytesCopy(writer.data));\n    }\n\n    // Arrayish item; pad on the right to *nearest* WordSize\n    writeBytes(value: BytesLike): number {\n        let bytes = getBytesCopy(value);\n        const paddingOffset = bytes.length % WordSize;\n        if (paddingOffset) {\n            bytes = getBytesCopy(concat([ bytes, Padding.slice(paddingOffset) ]))\n        }\n        return this.#writeData(bytes);\n    }\n\n    // Numeric item; pad on the left *to* WordSize\n    writeValue(value: BigNumberish): number {\n        return this.#writeData(getValue(value));\n    }\n\n    // Inserts a numeric place-holder, returning a callback that can\n    // be used to asjust the value later\n    writeUpdatableValue(): (value: BigNumberish) => void {\n        const offset = this.#data.length;\n        this.#data.push(Padding);\n        this.#dataLength += WordSize;\n        return (value: BigNumberish) => {\n            this.#data[offset] = getValue(value);\n        };\n    }\n}\n\n/**\n *  @_ignore\n */\nexport class Reader {\n    // Allows incomplete unpadded data to be read; otherwise an error\n    // is raised if attempting to overrun the buffer. This is required\n    // to deal with an old Solidity bug, in which event data for\n    // external (not public thoguh) was tightly packed.\n    readonly allowLoose!: boolean;\n\n    readonly #data: Uint8Array;\n    #offset: number;\n\n    #bytesRead: number;\n    #parent: null | Reader;\n    #maxInflation: number;\n\n    constructor(data: BytesLike, allowLoose?: boolean, maxInflation?: number) {\n        defineProperties<Reader>(this, { allowLoose: !!allowLoose });\n\n        this.#data = getBytesCopy(data);\n        this.#bytesRead = 0;\n        this.#parent = null;\n        this.#maxInflation = (maxInflation != null) ? maxInflation: 1024;\n\n        this.#offset = 0;\n    }\n\n    get data(): string { return hexlify(this.#data); }\n    get dataLength(): number { return this.#data.length; }\n    get consumed(): number { return this.#offset; }\n    get bytes(): Uint8Array { return new Uint8Array(this.#data); }\n\n    #incrementBytesRead(count: number): void {\n        if (this.#parent) { return this.#parent.#incrementBytesRead(count); }\n\n        this.#bytesRead += count;\n\n        // Check for excessive inflation (see: #4537)\n        assert(this.#maxInflation < 1 || this.#bytesRead <= this.#maxInflation * this.dataLength, `compressed ABI data exceeds inflation ratio of ${ this.#maxInflation } ( see: https:/\\/github.com/ethers-io/ethers.js/issues/4537 )`,  \"BUFFER_OVERRUN\", {\n            buffer: getBytesCopy(this.#data), offset: this.#offset,\n            length: count, info: {\n                bytesRead: this.#bytesRead,\n                dataLength: this.dataLength\n            }\n        });\n    }\n\n    #peekBytes(offset: number, length: number, loose?: boolean): Uint8Array {\n        let alignedLength = Math.ceil(length / WordSize) * WordSize;\n        if (this.#offset + alignedLength > this.#data.length) {\n            if (this.allowLoose && loose && this.#offset + length <= this.#data.length) {\n                alignedLength = length;\n            } else {\n                assert(false, \"data out-of-bounds\", \"BUFFER_OVERRUN\", {\n                    buffer: getBytesCopy(this.#data),\n                    length: this.#data.length,\n                    offset: this.#offset + alignedLength\n                });\n            }\n        }\n        return this.#data.slice(this.#offset, this.#offset + alignedLength)\n    }\n\n    // Create a sub-reader with the same underlying data, but offset\n    subReader(offset: number): Reader {\n        const reader = new Reader(this.#data.slice(this.#offset + offset), this.allowLoose, this.#maxInflation);\n        reader.#parent = this;\n        return reader;\n    }\n\n    // Read bytes\n    readBytes(length: number, loose?: boolean): Uint8Array {\n        let bytes = this.#peekBytes(0, length, !!loose);\n        this.#incrementBytesRead(length);\n        this.#offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n\n    // Read a numeric values\n    readValue(): bigint {\n        return toBigInt(this.readBytes(WordSize));\n    }\n\n    readIndex(): number {\n        return toNumber(this.readBytes(WordSize));\n    }\n}\n", "function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n", "// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assertHash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assertExists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assertExists(this);\n    assertBytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n", "import { hash as assertHash, number as assertNumber } from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { Hash, CHash, Input, createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n\n// PBKDF (RFC 2898)\nexport type Pbkdf2Opt = {\n  c: number; // Iterations\n  dkLen?: number; // Desired key length in bytes (Intended output length in octets of the derived key\n  asyncTick?: number; // Maximum time in ms for which async function can block execution\n};\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash: CHash, _password: Input, _salt: Input, _opts: Pbkdf2Opt) {\n  assertHash(hash);\n  const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n  const { c, dkLen, asyncTick } = opts;\n  assertNumber(c);\n  assertNumber(dkLen);\n  assertNumber(asyncTick);\n  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');\n  const password = toBytes(_password);\n  const salt = toBytes(_salt);\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n  const DK = new Uint8Array(dkLen);\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\n  const PRF = hmac.create(hash, password);\n  const PRFSalt = PRF._cloneInto().update(salt);\n  return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\n\nfunction pbkdf2Output<T extends Hash<T>>(\n  PRF: Hash<T>,\n  PRFSalt: Hash<T>,\n  DK: Uint8Array,\n  prfW: Hash<T>,\n  u: Uint8Array\n) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  u.fill(0);\n  return DK;\n}\n\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + \u22EF + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ \u22EF ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    for (let ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc\u22121)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    }\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\nexport async function pbkdf2Async(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + \u22EF + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ \u22EF ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    await asyncLoop(c - 1, asyncTick, () => {\n      // Uc = PRF(Password, Uc\u22121)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    });\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n", "import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n", "const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n", "import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends SHA2<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nclass SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nclass SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nclass SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n", "/* Browser Crypto Shims */\n\nimport { hmac } from \"@noble/hashes/hmac\";\nimport { pbkdf2 } from \"@noble/hashes/pbkdf2\";\nimport { sha256 } from \"@noble/hashes/sha256\";\nimport { sha512 } from \"@noble/hashes/sha512\";\n\nimport { assert, assertArgument } from \"../utils/index.js\";\n\n\ndeclare global {\n    interface Window { }\n\n    const window: Window;\n    const self: Window;\n}\n\n\nfunction getGlobal(): any {\n  if (typeof self !== 'undefined') { return self; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  throw new Error('unable to locate global object');\n};\n\nconst anyGlobal = getGlobal();\nconst crypto: any = anyGlobal.crypto || anyGlobal.msCrypto;\n\n\nexport interface CryptoHasher {\n    update(data: Uint8Array): CryptoHasher;\n    digest(): Uint8Array;\n}\n\nexport function createHash(algo: string): CryptoHasher {\n    switch (algo) {\n        case \"sha256\": return sha256.create();\n        case \"sha512\": return sha512.create();\n    }\n    assertArgument(false, \"invalid hashing algorithm name\", \"algorithm\", algo);\n}\n\nexport function createHmac(_algo: string, key: Uint8Array): CryptoHasher {\n    const algo = ({ sha256, sha512 }[_algo]);\n    assertArgument(algo != null, \"invalid hmac algorithm\", \"algorithm\", _algo);\n    return hmac.create(algo, key);\n}\n\nexport function pbkdf2Sync(password: Uint8Array, salt: Uint8Array, iterations: number, keylen: number, _algo: \"sha256\" | \"sha512\"): Uint8Array {\n    const algo = ({ sha256, sha512 }[_algo]);\n    assertArgument(algo != null, \"invalid pbkdf2 algorithm\", \"algorithm\", _algo);\n    return pbkdf2(algo, password, salt, { c: iterations, dkLen: keylen });\n}\n\nexport function randomBytes(length: number): Uint8Array {\n    assert(crypto != null, \"platform does not support secure random numbers\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"randomBytes\" });\n\n    assertArgument(Number.isInteger(length) && length > 0 && length <= 1024, \"invalid length\", \"length\", length);\n\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return result;\n}\n", "/**\n *  An **HMAC** enables verification that a given key was used\n *  to authenticate a payload.\n *\n *  See: [[link-wiki-hmac]]\n *\n *  @_subsection: api/crypto:HMAC  [about-hmac]\n */\nimport { createHmac } from \"./crypto.js\";\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _computeHmac = function(algorithm: \"sha256\" | \"sha512\", key: Uint8Array, data: Uint8Array): BytesLike {\n    return createHmac(algorithm, key).update(data).digest();\n}\n\nlet __computeHmac = _computeHmac;\n\n/**\n *  Return the HMAC for %%data%% using the %%key%% key with the underlying\n *  %%algo%% used for compression.\n *\n *  @example:\n *    key = id(\"some-secret\")\n *\n *    // Compute the HMAC\n *    computeHmac(\"sha256\", key, \"0x1337\")\n *    //_result:\n *\n *    // To compute the HMAC of UTF-8 data, the data must be\n *    // converted to UTF-8 bytes\n *    computeHmac(\"sha256\", key, toUtf8Bytes(\"Hello World\"))\n *    //_result:\n *\n */\nexport function computeHmac(algorithm: \"sha256\" | \"sha512\", _key: BytesLike, _data: BytesLike): string {\n    const key = getBytes(_key, \"key\");\n    const data = getBytes(_data, \"data\");\n    return hexlify(__computeHmac(algorithm, key, data));\n}\ncomputeHmac._ = _computeHmac;\ncomputeHmac.lock =  function() { locked = true; }\ncomputeHmac.register = function(func: (algorithm: \"sha256\" | \"sha512\", key: Uint8Array, data: Uint8Array) => BytesLike) {\n    if (locked) { throw new Error(\"computeHmac is locked\"); }\n    __computeHmac = func;\n}\nObject.freeze(computeHmac);\n", "import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapXOFConstructorWithOpts,\n  HashXOF,\n} from './utils.js';\n\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA]: [number[], number[], bigint[]] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta \u03B8\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (\u03C1) and Pi (\u03C0)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (\u03C7)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (\u03B9)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    keccakP(this.state32, this.rounds);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    exists(this, false);\n    bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapXOFConstructorWithOpts<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n", "/**\n *  Cryptographic hashing functions\n *\n *  @_subsection: api/crypto:Hash Functions [about-crypto-hashing]\n */\n\nimport { keccak_256 } from \"@noble/hashes/sha3\";\n\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _keccak256 = function(data: Uint8Array): Uint8Array {\n    return keccak_256(data);\n}\n\nlet __keccak256: (data: Uint8Array) => BytesLike = _keccak256;\n\n/**\n *  Compute the cryptographic KECCAK256 hash of %%data%%.\n *\n *  The %%data%% **must** be a data representation, to compute the\n *  hash of UTF-8 data use the [[id]] function.\n *\n *  @returns DataHexstring\n *  @example:\n *    keccak256(\"0x\")\n *    //_result:\n *\n *    keccak256(\"0x1337\")\n *    //_result:\n *\n *    keccak256(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n *    // Strings are assumed to be DataHexString, otherwise it will\n *    // throw. To hash UTF-8 data, see the note above.\n *    keccak256(\"Hello World\")\n *    //_error:\n */\nexport function keccak256(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__keccak256(data));\n}\nkeccak256._ = _keccak256;\nkeccak256.lock = function(): void { locked = true; }\nkeccak256.register = function(func: (data: Uint8Array) => BytesLike) {\n    if (locked) { throw new TypeError(\"keccak256 is locked\"); }\n    __keccak256 = func;\n}\nObject.freeze(keccak256);\n", "import { SHA2 } from './_sha2.js';\nimport { wrapConstructor } from './utils.js';\n\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = /* @__PURE__ */ new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = /* @__PURE__ */ Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = /* @__PURE__ */ Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++) for (let j of [idxL, idxR]) j.push(j[i].map((k) => Rho[k]));\n\nconst shifts = /* @__PURE__ */ [\n  [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n  [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n  [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n  [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n  [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = /* @__PURE__ */ new Uint32Array([\n  0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,\n]);\nconst Kr = /* @__PURE__ */ new Uint32Array([\n  0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,\n]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word: number, shift: number) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group: number, x: number, y: number, z: number): number {\n  if (group === 0) return x ^ y ^ z;\n  else if (group === 1) return (x & y) | (~x & z);\n  else if (group === 2) return (x | ~y) ^ z;\n  else if (group === 3) return (x & z) | (y & ~z);\n  else return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = /* @__PURE__ */ new Uint32Array(16);\nexport class RIPEMD160 extends SHA2<RIPEMD160> {\n  private h0 = 0x67452301 | 0;\n  private h1 = 0xefcdab89 | 0;\n  private h2 = 0x98badcfe | 0;\n  private h3 = 0x10325476 | 0;\n  private h4 = 0xc3d2e1f0 | 0;\n\n  constructor() {\n    super(64, 20, 8, true);\n  }\n  protected get(): [number, number, number, number, number] {\n    const { h0, h1, h2, h3, h4 } = this;\n    return [h0, h1, h2, h3, h4];\n  }\n  protected set(h0: number, h1: number, h2: number, h3: number, h4: number) {\n    this.h0 = h0 | 0;\n    this.h1 = h1 | 0;\n    this.h2 = h2 | 0;\n    this.h3 = h3 | 0;\n    this.h4 = h4 | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    for (let i = 0; i < 16; i++, offset += 4) BUF[i] = view.getUint32(offset, true);\n    // prettier-ignore\n    let al = this.h0 | 0, ar = al,\n        bl = this.h1 | 0, br = bl,\n        cl = this.h2 | 0, cr = cl,\n        dl = this.h3 | 0, dr = dl,\n        el = this.h4 | 0, er = el;\n\n    // Instead of iterating 0 to 80, we split it into 5 groups\n    // And use the groups in constants, functions, etc. Much simpler\n    for (let group = 0; group < 5; group++) {\n      const rGroup = 4 - group;\n      const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n      const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n      const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n      for (let i = 0; i < 16; i++) {\n        const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n        al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n      }\n      // 2 loops are 10% faster\n      for (let i = 0; i < 16; i++) {\n        const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n        ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n      }\n    }\n    // Add the compressed chunk to the current hash value\n    this.set(\n      (this.h1 + cl + dr) | 0,\n      (this.h2 + dl + er) | 0,\n      (this.h3 + el + ar) | 0,\n      (this.h4 + al + br) | 0,\n      (this.h0 + bl + cr) | 0\n    );\n  }\n  protected roundClean() {\n    BUF.fill(0);\n  }\n  destroy() {\n    this.destroyed = true;\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0);\n  }\n}\n\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = /* @__PURE__ */ wrapConstructor(() => new RIPEMD160());\n", "import { ripemd160 as noble_ripemd160 } from \"@noble/hashes/ripemd160\";\n\nimport { getBytes,  hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _ripemd160 = function(data: Uint8Array): Uint8Array {\n    return noble_ripemd160(data);\n}\n\nlet __ripemd160: (data: Uint8Array) => BytesLike = _ripemd160;\n\n/**\n *  Compute the cryptographic RIPEMD-160 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    ripemd160(\"0x\")\n *    //_result:\n *\n *    ripemd160(\"0x1337\")\n *    //_result:\n *\n *    ripemd160(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n */\nexport function ripemd160(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__ripemd160(data));\n}\nripemd160._ = _ripemd160;\nripemd160.lock = function(): void { locked = true; }\nripemd160.register = function(func: (data: Uint8Array) => BytesLike) {\n    if (locked) { throw new TypeError(\"ripemd160 is locked\"); }\n    __ripemd160 = func;\n}\nObject.freeze(ripemd160);\n", "/**\n *  A **Password-Based Key-Derivation Function** is designed to create\n *  a sequence of bytes suitible as a **key** from a human-rememberable\n *  password.\n *\n *  @_subsection: api/crypto:Passwords  [about-pbkdf]\n */\n\nimport { pbkdf2Sync } from \"./crypto.js\";\n\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _pbkdf2 = function(password: Uint8Array, salt: Uint8Array, iterations: number, keylen: number, algo: \"sha256\" | \"sha512\"): BytesLike {\n    return pbkdf2Sync(password, salt, iterations, keylen, algo);\n}\n\nlet __pbkdf2 = _pbkdf2;\n\n/**\n *  Return the [[link-pbkdf2]] for %%keylen%% bytes for %%password%% using\n *  the %%salt%% and using %%iterations%% of %%algo%%.\n *\n *  This PBKDF is outdated and should not be used in new projects, but is\n *  required to decrypt older files.\n *\n *  @example:\n *    // The password must be converted to bytes, and it is generally\n *    // best practices to ensure the string has been normalized. Many\n *    // formats explicitly indicate the normalization form to use.\n *    password = \"hello\"\n *    passwordBytes = toUtf8Bytes(password, \"NFKC\")\n *\n *    salt = id(\"some-salt\")\n *\n *    // Compute the PBKDF2\n *    pbkdf2(passwordBytes, salt, 1024, 16, \"sha256\")\n *    //_result:\n */\nexport function pbkdf2(_password: BytesLike, _salt: BytesLike, iterations: number, keylen: number, algo: \"sha256\" | \"sha512\"): string {\n    const password = getBytes(_password, \"password\");\n    const salt = getBytes(_salt, \"salt\");\n    return hexlify(__pbkdf2(password, salt, iterations, keylen, algo));\n}\npbkdf2._ = _pbkdf2;\npbkdf2.lock = function(): void { locked = true; }\npbkdf2.register = function(func: (password: Uint8Array, salt: Uint8Array, iterations: number, keylen: number, algo: \"sha256\" | \"sha512\") => BytesLike) {\n    if (locked) { throw new Error(\"pbkdf2 is locked\"); }\n    __pbkdf2 = func;\n}\nObject.freeze(pbkdf2);\n", "/**\n *  A **Cryptographically Secure Random Value** is one that has been\n *  generated with additional care take to prevent side-channels\n *  from allowing others to detect it and prevent others from through\n *  coincidence generate the same values.\n *\n *  @_subsection: api/crypto:Random Values  [about-crypto-random]\n */\nimport { randomBytes as crypto_random } from \"./crypto.js\";\n\nlet locked = false;\n\nconst _randomBytes = function(length: number): Uint8Array {\n    return new Uint8Array(crypto_random(length));\n}\n\nlet __randomBytes = _randomBytes;\n\n/**\n *  Return %%length%% bytes of cryptographically secure random data.\n *\n *  @example:\n *    randomBytes(8)\n *    //_result:\n */\nexport function randomBytes(length: number): Uint8Array {\n    return __randomBytes(length);\n}\n\nrandomBytes._ = _randomBytes;\nrandomBytes.lock = function(): void { locked = true; }\nrandomBytes.register = function(func: (length: number) => Uint8Array) {\n    if (locked) { throw new Error(\"randomBytes is locked\"); }\n    __randomBytes = func;\n}\nObject.freeze(randomBytes);\n", "import { number as assertNumber } from './_assert.js';\nimport { sha256 } from './sha256.js';\nimport { pbkdf2 } from './pbkdf2.js';\nimport { asyncLoop, checkOpts, Input, u32 } from './utils.js';\n\n// RFC 7914 Scrypt KDF\n\n// Left rotate for uint32\nconst rotl = (a: number, b: number) => (a << b) | (a >>> (32 - b));\n\n// The main Scrypt loop: uses Salsa extensively.\n// Six versions of the function were tried, this is the fastest one.\n// prettier-ignore\nfunction XorAndSalsa(\n  prev: Uint32Array,\n  pi: number,\n  input: Uint32Array,\n  ii: number,\n  out: Uint32Array,\n  oi: number\n) {\n  // Based on https://cr.yp.to/salsa20.html\n  // Xor blocks\n  let y00 = prev[pi++] ^ input[ii++], y01 = prev[pi++] ^ input[ii++];\n  let y02 = prev[pi++] ^ input[ii++], y03 = prev[pi++] ^ input[ii++];\n  let y04 = prev[pi++] ^ input[ii++], y05 = prev[pi++] ^ input[ii++];\n  let y06 = prev[pi++] ^ input[ii++], y07 = prev[pi++] ^ input[ii++];\n  let y08 = prev[pi++] ^ input[ii++], y09 = prev[pi++] ^ input[ii++];\n  let y10 = prev[pi++] ^ input[ii++], y11 = prev[pi++] ^ input[ii++];\n  let y12 = prev[pi++] ^ input[ii++], y13 = prev[pi++] ^ input[ii++];\n  let y14 = prev[pi++] ^ input[ii++], y15 = prev[pi++] ^ input[ii++];\n  // Save state to temporary variables (salsa)\n  let x00 = y00, x01 = y01, x02 = y02, x03 = y03,\n      x04 = y04, x05 = y05, x06 = y06, x07 = y07,\n      x08 = y08, x09 = y09, x10 = y10, x11 = y11,\n      x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n  // Main loop (salsa)\n  for (let i = 0; i < 8; i += 2) {\n    x04 ^= rotl(x00 + x12 | 0,  7); x08 ^= rotl(x04 + x00 | 0,  9);\n    x12 ^= rotl(x08 + x04 | 0, 13); x00 ^= rotl(x12 + x08 | 0, 18);\n    x09 ^= rotl(x05 + x01 | 0,  7); x13 ^= rotl(x09 + x05 | 0,  9);\n    x01 ^= rotl(x13 + x09 | 0, 13); x05 ^= rotl(x01 + x13 | 0, 18);\n    x14 ^= rotl(x10 + x06 | 0,  7); x02 ^= rotl(x14 + x10 | 0,  9);\n    x06 ^= rotl(x02 + x14 | 0, 13); x10 ^= rotl(x06 + x02 | 0, 18);\n    x03 ^= rotl(x15 + x11 | 0,  7); x07 ^= rotl(x03 + x15 | 0,  9);\n    x11 ^= rotl(x07 + x03 | 0, 13); x15 ^= rotl(x11 + x07 | 0, 18);\n    x01 ^= rotl(x00 + x03 | 0,  7); x02 ^= rotl(x01 + x00 | 0,  9);\n    x03 ^= rotl(x02 + x01 | 0, 13); x00 ^= rotl(x03 + x02 | 0, 18);\n    x06 ^= rotl(x05 + x04 | 0,  7); x07 ^= rotl(x06 + x05 | 0,  9);\n    x04 ^= rotl(x07 + x06 | 0, 13); x05 ^= rotl(x04 + x07 | 0, 18);\n    x11 ^= rotl(x10 + x09 | 0,  7); x08 ^= rotl(x11 + x10 | 0,  9);\n    x09 ^= rotl(x08 + x11 | 0, 13); x10 ^= rotl(x09 + x08 | 0, 18);\n    x12 ^= rotl(x15 + x14 | 0,  7); x13 ^= rotl(x12 + x15 | 0,  9);\n    x14 ^= rotl(x13 + x12 | 0, 13); x15 ^= rotl(x14 + x13 | 0, 18);\n  }\n  // Write output (salsa)\n  out[oi++] = (y00 + x00) | 0; out[oi++] = (y01 + x01) | 0;\n  out[oi++] = (y02 + x02) | 0; out[oi++] = (y03 + x03) | 0;\n  out[oi++] = (y04 + x04) | 0; out[oi++] = (y05 + x05) | 0;\n  out[oi++] = (y06 + x06) | 0; out[oi++] = (y07 + x07) | 0;\n  out[oi++] = (y08 + x08) | 0; out[oi++] = (y09 + x09) | 0;\n  out[oi++] = (y10 + x10) | 0; out[oi++] = (y11 + x11) | 0;\n  out[oi++] = (y12 + x12) | 0; out[oi++] = (y13 + x13) | 0;\n  out[oi++] = (y14 + x14) | 0; out[oi++] = (y15 + x15) | 0;\n}\n\nfunction BlockMix(input: Uint32Array, ii: number, out: Uint32Array, oi: number, r: number) {\n  // The block B is r 128-byte chunks (which is equivalent of 2r 64-byte chunks)\n  let head = oi + 0;\n  let tail = oi + 16 * r;\n  for (let i = 0; i < 16; i++) out[tail + i] = input[ii + (2 * r - 1) * 16 + i]; // X \u2190 B[2r\u22121]\n  for (let i = 0; i < r; i++, head += 16, ii += 16) {\n    // We write odd & even Yi at same time. Even: 0bXXXXX0 Odd:  0bXXXXX1\n    XorAndSalsa(out, tail, input, ii, out, head); // head[i] = Salsa(blockIn[2*i] ^ tail[i-1])\n    if (i > 0) tail += 16; // First iteration overwrites tmp value in tail\n    XorAndSalsa(out, head, input, (ii += 16), out, tail); // tail[i] = Salsa(blockIn[2*i+1] ^ head[i])\n  }\n}\n\nexport type ScryptOpts = {\n  N: number; // cost factor\n  r: number; // block size\n  p: number; // parallelization\n  dkLen?: number; // key length\n  asyncTick?: number; // block execution max time\n  maxmem?: number;\n  onProgress?: (progress: number) => void;\n};\n\n// Common prologue and epilogue for sync/async functions\nfunction scryptInit(password: Input, salt: Input, _opts?: ScryptOpts) {\n  // Maxmem - 1GB+1KB by default\n  const opts = checkOpts(\n    {\n      dkLen: 32,\n      asyncTick: 10,\n      maxmem: 1024 ** 3 + 1024,\n    },\n    _opts\n  );\n  const { N, r, p, dkLen, asyncTick, maxmem, onProgress } = opts;\n  assertNumber(N);\n  assertNumber(r);\n  assertNumber(p);\n  assertNumber(dkLen);\n  assertNumber(asyncTick);\n  assertNumber(maxmem);\n  if (onProgress !== undefined && typeof onProgress !== 'function')\n    throw new Error('progressCb should be function');\n  const blockSize = 128 * r;\n  const blockSize32 = blockSize / 4;\n  if (N <= 1 || (N & (N - 1)) !== 0 || N >= 2 ** (blockSize / 8) || N > 2 ** 32) {\n    // NOTE: we limit N to be less than 2**32 because of 32 bit variant of Integrify function\n    // There is no JS engines that allows alocate more than 4GB per single Uint8Array for now, but can change in future.\n    throw new Error(\n      'Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32'\n    );\n  }\n  if (p < 0 || p > ((2 ** 32 - 1) * 32) / blockSize) {\n    throw new Error(\n      'Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)'\n    );\n  }\n  if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {\n    throw new Error(\n      'Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32'\n    );\n  }\n  const memUsed = blockSize * (N + p);\n  if (memUsed > maxmem) {\n    throw new Error(\n      `Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`\n    );\n  }\n  // [B0...Bp\u22121] \u2190 PBKDF2HMAC-SHA256(Passphrase, Salt, 1, blockSize*ParallelizationFactor)\n  // Since it has only one iteration there is no reason to use async variant\n  const B = pbkdf2(sha256, password, salt, { c: 1, dkLen: blockSize * p });\n  const B32 = u32(B);\n  // Re-used between parallel iterations. Array(iterations) of B\n  const V = u32(new Uint8Array(blockSize * N));\n  const tmp = u32(new Uint8Array(blockSize));\n  let blockMixCb = () => {};\n  if (onProgress) {\n    const totalBlockMix = 2 * N * p;\n    // Invoke callback if progress changes from 10.01 to 10.02\n    // Allows to draw smooth progress bar on up to 8K screen\n    const callbackPer = Math.max(Math.floor(totalBlockMix / 10000), 1);\n    let blockMixCnt = 0;\n    blockMixCb = () => {\n      blockMixCnt++;\n      if (onProgress && (!(blockMixCnt % callbackPer) || blockMixCnt === totalBlockMix))\n        onProgress(blockMixCnt / totalBlockMix);\n    };\n  }\n  return { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick };\n}\n\nfunction scryptOutput(\n  password: Input,\n  dkLen: number,\n  B: Uint8Array,\n  V: Uint32Array,\n  tmp: Uint32Array\n) {\n  const res = pbkdf2(sha256, password, B, { c: 1, dkLen });\n  B.fill(0);\n  V.fill(0);\n  tmp.fill(0);\n  return res;\n}\n\n/**\n * Scrypt KDF from RFC 7914.\n * @param password - pass\n * @param salt - salt\n * @param opts - parameters\n * - `N` is cpu/mem work factor (power of 2 e.g. 2**18)\n * - `r` is block size (8 is common), fine-tunes sequential memory read size and performance\n * - `p` is parallelization factor (1 is common)\n * - `dkLen` is output key length in bytes e.g. 32.\n * - `asyncTick` - (default: 10) max time in ms for which async function can block execution\n * - `maxmem` - (default: `1024 ** 3 + 1024` aka 1GB+1KB). A limit that the app could use for scrypt\n * - `onProgress` - callback function that would be executed for progress report\n * @returns Derived key\n */\nexport function scrypt(password: Input, salt: Input, opts: ScryptOpts) {\n  const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb } = scryptInit(\n    password,\n    salt,\n    opts\n  );\n  for (let pi = 0; pi < p; pi++) {\n    const Pi = blockSize32 * pi;\n    for (let i = 0; i < blockSize32; i++) V[i] = B32[Pi + i]; // V[0] = B[i]\n    for (let i = 0, pos = 0; i < N - 1; i++) {\n      BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n      blockMixCb();\n    }\n    BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n    blockMixCb();\n    for (let i = 0; i < N; i++) {\n      // First u32 of the last 64-byte block (u32 is LE)\n      const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n      for (let k = 0; k < blockSize32; k++) tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n      BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n      blockMixCb();\n    }\n  }\n  return scryptOutput(password, dkLen, B, V, tmp);\n}\n\n/**\n * Scrypt KDF from RFC 7914.\n */\nexport async function scryptAsync(password: Input, salt: Input, opts: ScryptOpts) {\n  const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick } = scryptInit(\n    password,\n    salt,\n    opts\n  );\n  for (let pi = 0; pi < p; pi++) {\n    const Pi = blockSize32 * pi;\n    for (let i = 0; i < blockSize32; i++) V[i] = B32[Pi + i]; // V[0] = B[i]\n    let pos = 0;\n    await asyncLoop(N - 1, asyncTick, () => {\n      BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n      blockMixCb();\n    });\n    BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n    blockMixCb();\n    await asyncLoop(N, asyncTick, () => {\n      // First u32 of the last 64-byte block (u32 is LE)\n      const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n      for (let k = 0; k < blockSize32; k++) tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n      BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n      blockMixCb();\n    });\n  }\n  return scryptOutput(password, dkLen, B, V, tmp);\n}\n", "import { scrypt as _nobleSync, scryptAsync as _nobleAsync } from \"@noble/hashes/scrypt\";\n\nimport { getBytes, hexlify as H } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n/**\n *  A callback during long-running operations to update any\n *  UI or provide programatic access to the progress.\n *\n *  The %%percent%% is a value between ``0`` and ``1``.\n *\n *  @_docloc: api/crypto:Passwords\n */\nexport type ProgressCallback = (percent: number) => void;\n\n\nlet lockedSync = false, lockedAsync = false;\n\nconst _scryptAsync = async function(passwd: Uint8Array, salt: Uint8Array, N: number, r: number, p: number, dkLen: number, onProgress?: ProgressCallback) {\n    return await _nobleAsync(passwd, salt, { N, r, p, dkLen, onProgress });\n}\nconst _scryptSync = function(passwd: Uint8Array, salt: Uint8Array, N: number, r: number, p: number, dkLen: number) {\n    return _nobleSync(passwd, salt, { N, r, p, dkLen });\n}\n\nlet __scryptAsync: (passwd: Uint8Array, salt: Uint8Array, N: number, r: number, p: number, dkLen: number, onProgress?: ProgressCallback) => Promise<BytesLike> = _scryptAsync;\nlet __scryptSync: (passwd: Uint8Array, salt: Uint8Array, N: number, r: number, p: number, dkLen: number) => BytesLike = _scryptSync\n\n\n/**\n *  The [[link-wiki-scrypt]] uses a memory and cpu hard method of\n *  derivation to increase the resource cost to brute-force a password\n *  for a given key.\n *\n *  This means this algorithm is intentionally slow, and can be tuned to\n *  become slower. As computation and memory speed improve over time,\n *  increasing the difficulty maintains the cost of an attacker.\n *\n *  For example, if a target time of 5 seconds is used, a legitimate user\n *  which knows their password requires only 5 seconds to unlock their\n *  account. A 6 character password has 68 billion possibilities, which\n *  would require an attacker to invest over 10,000 years of CPU time. This\n *  is of course a crude example (as password generally aren't random),\n *  but demonstrates to value of imposing large costs to decryption.\n *\n *  For this reason, if building a UI which involved decrypting or\n *  encrypting datsa using scrypt, it is recommended to use a\n *  [[ProgressCallback]] (as event short periods can seem lik an eternity\n *  if the UI freezes). Including the phrase //\"decrypting\"// in the UI\n *  can also help, assuring the user their waiting is for a good reason.\n *\n *  @_docloc: api/crypto:Passwords\n *\n *  @example:\n *    // The password must be converted to bytes, and it is generally\n *    // best practices to ensure the string has been normalized. Many\n *    // formats explicitly indicate the normalization form to use.\n *    password = \"hello\"\n *    passwordBytes = toUtf8Bytes(password, \"NFKC\")\n *\n *    salt = id(\"some-salt\")\n *\n *    // Compute the scrypt\n *    scrypt(passwordBytes, salt, 1024, 8, 1, 16)\n *    //_result:\n */\nexport async function scrypt(_passwd: BytesLike, _salt: BytesLike, N: number, r: number, p: number, dkLen: number, progress?: ProgressCallback): Promise<string> {\n    const passwd = getBytes(_passwd, \"passwd\");\n    const salt = getBytes(_salt, \"salt\");\n    return H(await __scryptAsync(passwd, salt, N, r, p, dkLen, progress));\n}\nscrypt._ = _scryptAsync;\nscrypt.lock = function(): void { lockedAsync = true; }\nscrypt.register = function(func: (passwd: Uint8Array, salt: Uint8Array, N: number, r: number, p: number, dkLen: number, progress?: ProgressCallback) => Promise<BytesLike>) {\n    if (lockedAsync) { throw new Error(\"scrypt is locked\"); }\n    __scryptAsync = func;\n}\nObject.freeze(scrypt);\n\n/**\n *  Provides a synchronous variant of [[scrypt]].\n *\n *  This will completely lock up and freeze the UI in a browser and will\n *  prevent any event loop from progressing. For this reason, it is\n *  preferred to use the [async variant](scrypt).\n *\n *  @_docloc: api/crypto:Passwords\n *\n *  @example:\n *    // The password must be converted to bytes, and it is generally\n *    // best practices to ensure the string has been normalized. Many\n *    // formats explicitly indicate the normalization form to use.\n *    password = \"hello\"\n *    passwordBytes = toUtf8Bytes(password, \"NFKC\")\n *\n *    salt = id(\"some-salt\")\n *\n *    // Compute the scrypt\n *    scryptSync(passwordBytes, salt, 1024, 8, 1, 16)\n *    //_result:\n */\nexport function scryptSync(_passwd: BytesLike, _salt: BytesLike, N: number, r: number, p: number, dkLen: number): string {\n    const passwd = getBytes(_passwd, \"passwd\");\n    const salt = getBytes(_salt, \"salt\");\n    return H(__scryptSync(passwd, salt, N, r, p, dkLen));\n}\nscryptSync._ = _scryptSync;\nscryptSync.lock = function(): void { lockedSync = true; }\nscryptSync.register = function(func: (passwd: Uint8Array, salt: Uint8Array, N: number, r: number, p: number, dkLen: number) => BytesLike) {\n    if (lockedSync) { throw new Error(\"scryptSync is locked\"); }\n    __scryptSync = func;\n}\nObject.freeze(scryptSync);\n", "import { createHash } from \"./crypto.js\";\n\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nconst _sha256 = function(data: Uint8Array): Uint8Array {\n    return createHash(\"sha256\").update(data).digest();\n}\n\nconst _sha512 = function(data: Uint8Array): Uint8Array {\n    return createHash(\"sha512\").update(data).digest();\n}\n\nlet __sha256: (data: Uint8Array) => BytesLike = _sha256;\nlet __sha512: (data: Uint8Array) => BytesLike = _sha512;\n\nlet locked256 = false, locked512 = false;\n\n\n/**\n *  Compute the cryptographic SHA2-256 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    sha256(\"0x\")\n *    //_result:\n *\n *    sha256(\"0x1337\")\n *    //_result:\n *\n *    sha256(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n */\nexport function sha256(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__sha256(data));\n}\nsha256._ = _sha256;\nsha256.lock = function(): void { locked256 = true; }\nsha256.register = function(func: (data: Uint8Array) => BytesLike): void {\n    if (locked256) { throw new Error(\"sha256 is locked\"); }\n    __sha256 = func;\n}\nObject.freeze(sha256);\n\n\n/**\n *  Compute the cryptographic SHA2-512 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    sha512(\"0x\")\n *    //_result:\n *\n *    sha512(\"0x1337\")\n *    //_result:\n *\n *    sha512(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n */\nexport function sha512(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__sha512(data));\n}\nsha512._ = _sha512;\nsha512.lock = function(): void { locked512 = true; }\nsha512.register = function(func: (data: Uint8Array) => BytesLike): void {\n    if (locked512) { throw new Error(\"sha512 is locked\"); }\n    __sha512 = func;\n}\nObject.freeze(sha256);\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (u8a(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\nexport function equalBytes(b1: Uint8Array, b2: Uint8Array) {\n  // We don't care about timing attacks here\n  if (b1.length !== b2.length) return false;\n  for (let i = 0; i < b1.length; i++) if (b1[i] !== b2[i]) return false;\n  return true;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number) {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n: bigint, pos: number, value: boolean) => {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  stringOrUint8Array: (val: any) => typeof val === 'string' || val instanceof Uint8Array,\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  numberToBytesBE,\n  numberToBytesLE,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) \u2261 1    if a is a square (mod p)\n  // (a | p) \u2261 -1   if a is not a square (mod p)\n  // (a | p) \u2261 0    if a \u2261 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) \u2261 -1 and set c \u2261 zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be \u2261 -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P \u2261 3 (mod 4)\n  // \u221An = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q \u2261 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P \u2261 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Field is not always over prime: for example, Fp2 has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in\n  // [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#section-4.1).\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\n\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder: bigint): number {\n  if (typeof fieldOrder !== 'bigint') throw new Error('field order must be bigint');\n  const bitLength = fieldOrder.toString(2).length;\n  return Math.ceil(bitLength / 8);\n}\n\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder: bigint): number {\n  const length = getFieldBytesLength(fieldOrder);\n  return length + Math.ceil(length / 2);\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key: Uint8Array, fieldOrder: bigint, isLE = false): Uint8Array {\n  const len = key.length;\n  const fieldLen = getFieldBytesLength(fieldOrder);\n  const minLen = getMinHashLength(fieldOrder);\n  // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n  if (len < 16 || len < minLen || len > 1024)\n    throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n  const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n  // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n  const reduced = mod(num, fieldOrder - _1n) + _1n;\n  return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / \uD835\uDC4A) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(\uD835\uDC4A\u22121) * (Math.ceil(\uD835\uDC5B / \uD835\uDC4A) + 1), where:\n     * - \uD835\uDC4A is the window size\n     * - \uD835\uDC5B is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y\u00B2 = x\u00B3 + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | true;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    if (res[0] & 0b10000000) throw new E('Invalid signature integer: negative');\n    if (res[0] === 0x00 && !(res[1] & 0b10000000))\n      throw new E('Invalid signature integer: unnecessary leading zero');\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    if (!(data instanceof Uint8Array)) throw new Error('ui8a expected');\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>) {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((_c: ProjConstructor<T>, point: ProjPointType<T>, _isCompressed: boolean) => {\n      const a = point.toAffine();\n      return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y\u00B2 = x\u00B3 + ax + b: Short weierstrass curve formula\n   * @returns y\u00B2\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (key instanceof Uint8Array) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) \u220B (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(readonly px: T, readonly py: T, readonly pz: T) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      if (this.is0()) {\n        // (0, 1, 0) aka ZERO is invalid in most contexts.\n        // In BLS, ZERO can be serialized, so we allow it.\n        // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n        if (CURVE.allowInfinityPoint && !Fp.is0(this.py)) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y\u00B2\n      const right = weierstrassEquation(x); // x\u00B3 + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) \u220B (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): RecoveredSignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\nexport type RecoveredSignatureType = SignatureType & {\n  readonly recovery: number;\n};\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => RecoveredSignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(_c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y\u00B2 = x\u00B3 + ax + b\n        let y = Fp.sqrt(y2); // y = y\u00B2 ^ (p+1)/4\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(readonly r: bigint, readonly s: bigint, readonly recovery?: number) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const length = mod.getMinHashLength(CURVE.n);\n      return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): RecoveredSignature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b \u2208 [1,q\u22121] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery) as RecoveredSignature; // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash with a private key.\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G \u00D7 k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n   * @param privKey private key\n   * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n   * @returns signature with recovery param\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): RecoveredSignature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const C = CURVE;\n    const drbg = ut.createHmacDrbg<RecoveredSignature>(C.hash.outputLen, C.nByteLength, C.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1\u22C5G - U2\u22C5P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || sg instanceof Uint8Array) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1\u22C5G + u2\u22C5P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(Fp: mod.IField<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass, CurveType } from './abstract/weierstrass.js';\nimport { CHash } from './abstract/utils.js';\n\n// connects noble-curves to noble-hashes\nexport function getHash(hash: CHash) {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n// Same API as @noble/hashes, with ability to create curve with custom hash\ntype CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport function createCurve(curveDef: CurveDef, defHash: CHash) {\n  const create = (hash: CHash) => weierstrass({ ...curveDef, ...getHash(hash) });\n  return Object.freeze({ ...create(defHash), create });\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { ProjPointType as PointType, mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport type { Hex, PrivKey } from './abstract/utils.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * \u221An = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fp.eql(Fp.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\nexport const secp256k1 = createCurve(\n  {\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'\u22C5G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  if (!fe(x)) throw new Error('bad x: need 0 < x < p'); // Fail if x \u2265 p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x\u00B3 + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'\u2265n. Ret bytes(d'\u22C5G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'\u22C5G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r \u2265 p.\n    if (!fe(r)) return false;\n    const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s \u2265 n.\n    if (!ge(s)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s\u22C5G - e\u22C5P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) \u2260 r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const schnorr = /* @__PURE__ */ (() => ({\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n}))();\n\nconst isoMap = /* @__PURE__ */ (() =>\n  isogenyMap(\n    Fp,\n    [\n      // xNum\n      [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n      ],\n      // xDen\n      [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n      // yNum\n      [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n      ],\n      // yDen\n      [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n    ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n  ))();\nconst mapSWU = /* @__PURE__ */ (() =>\n  mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n  }))();\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    secp256k1.ProjectivePoint,\n    (scalars: bigint[]) => {\n      const { x, y } = mapSWU(Fp.create(scalars[0]));\n      return isoMap(x, y);\n    },\n    {\n      DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n      encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n      p: Fp.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha256,\n    }\n  ))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n", "\n/**\n *  A constant for the zero address.\n *\n *  (**i.e.** ``\"0x0000000000000000000000000000000000000000\"``)\n */\nexport const ZeroAddress: string = \"0x0000000000000000000000000000000000000000\";\n\n", "/**\n *  A constant for the zero hash.\n *\n *  (**i.e.** ``\"0x0000000000000000000000000000000000000000000000000000000000000000\"``)\n */\nexport const ZeroHash: string = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\n", "\n/**\n *  A constant for the order N for the secp256k1 curve.\n *\n *  (**i.e.** ``0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141n``)\n */\nexport const N: bigint = BigInt(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n\n/**\n *  A constant for the number of wei in a single ether.\n *\n *  (**i.e.** ``1000000000000000000n``)\n */\nexport const WeiPerEther: bigint = BigInt(\"1000000000000000000\");\n\n/**\n *  A constant for the maximum value for a ``uint256``.\n *\n *  (**i.e.** ``0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn``)\n */\nexport const MaxUint256: bigint = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\n/**\n *  A constant for the minimum value for an ``int256``.\n *\n *  (**i.e.** ``-8000000000000000000000000000000000000000000000000000000000000000n``)\n */\nexport const MinInt256: bigint = BigInt(\"0x8000000000000000000000000000000000000000000000000000000000000000\") * BigInt(-1);\n\n/**\n *  A constant for the maximum value for an ``int256``.\n *\n *  (**i.e.** ``0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn``)\n */\nexport const MaxInt256: bigint = BigInt(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n", "// NFKC (composed)             // (decomposed)\n\n/**\n *  A constant for the ether symbol (normalized using NFKC).\n *\n *  (**i.e.** ``\"\\\\u039e\"``)\n */\nexport const EtherSymbol: string = \"\\u039e\";  // \"\\uD835\\uDF63\";\n\n\n/**\n *  A constant for the [[link-eip-191]] personal message prefix.\n *\n *  (**i.e.** ``\"\\\\x19Ethereum Signed Message:\\\\n\"``)\n */\nexport const MessagePrefix: string = \"\\x19Ethereum Signed Message:\\n\";\n", "\nimport { ZeroHash } from \"../constants/index.js\";\nimport {\n    concat, dataLength, getBigInt, getBytes, getNumber, hexlify,\n    toBeArray, isHexString, zeroPadValue,\n    assertArgument, assertPrivate\n} from \"../utils/index.js\";\n\nimport type {\n    BigNumberish, BytesLike, Numeric\n} from \"../utils/index.js\";\n\n\n// Constants\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_2 = BigInt(2);\nconst BN_27 = BigInt(27);\nconst BN_28 = BigInt(28);\nconst BN_35 = BigInt(35);\n\n\nconst _guard = { };\n\n// @TODO: Allow Uint8Array\n\n/**\n *  A SignatureLike\n *\n *  @_docloc: api/crypto:Signing\n */\nexport type SignatureLike = Signature | string | {\n    r: string;\n    s: string;\n    v: BigNumberish;\n    yParity?: 0 | 1;\n    yParityAndS?: string;\n} | {\n    r: string;\n    yParityAndS: string;\n    yParity?: 0 | 1;\n    s?: string;\n    v?: number;\n} | {\n    r: string;\n    s: string;\n    yParity: 0 | 1;\n    v?: BigNumberish;\n    yParityAndS?: string;\n};\n\nfunction toUint256(value: BigNumberish): string {\n    return zeroPadValue(toBeArray(value), 32);\n}\n\n/**\n *  A Signature  @TODO\n *\n *\n *  @_docloc: api/crypto:Signing\n */\nexport class Signature {\n    #r: string;\n    #s: string;\n    #v: 27 | 28;\n    #networkV: null | bigint;\n\n    /**\n     *  The ``r`` value for a signautre.\n     *\n     *  This represents the ``x`` coordinate of a \"reference\" or\n     *  challenge point, from which the ``y`` can be computed.\n     */\n    get r(): string { return this.#r; }\n    set r(value: BytesLike) {\n        assertArgument(dataLength(value) === 32, \"invalid r\", \"value\", value);\n        this.#r = hexlify(value);\n    }\n\n    /**\n     *  The ``s`` value for a signature.\n     */\n    get s(): string { return this.#s; }\n    set s(_value: BytesLike) {\n        assertArgument(dataLength(_value) === 32, \"invalid s\", \"value\", _value);\n        const value = hexlify(_value);\n        assertArgument(parseInt(value.substring(0, 3)) < 8, \"non-canonical s\", \"value\", value);\n        this.#s = value;\n    }\n\n    /**\n     *  The ``v`` value for a signature.\n     *\n     *  Since a given ``x`` value for ``r`` has two possible values for\n     *  its correspondin ``y``, the ``v`` indicates which of the two ``y``\n     *  values to use.\n     *\n     *  It is normalized to the values ``27`` or ``28`` for legacy\n     *  purposes.\n     */\n    get v(): 27 | 28 { return this.#v; }\n    set v(value: BigNumberish) {\n        const v = getNumber(value, \"value\");\n        assertArgument(v === 27 || v === 28, \"invalid v\", \"v\", value);\n        this.#v = v;\n    }\n\n    /**\n     *  The EIP-155 ``v`` for legacy transactions. For non-legacy\n     *  transactions, this value is ``null``.\n     */\n    get networkV(): null | bigint { return this.#networkV; }\n\n    /**\n     *  The chain ID for EIP-155 legacy transactions. For non-legacy\n     *  transactions, this value is ``null``.\n     */\n    get legacyChainId(): null | bigint {\n        const v = this.networkV;\n        if (v == null) { return null; }\n        return Signature.getChainId(v);\n    }\n\n    /**\n     *  The ``yParity`` for the signature.\n     *\n     *  See ``v`` for more details on how this value is used.\n     */\n    get yParity(): 0 | 1 {\n        return (this.v === 27) ? 0: 1;\n    }\n\n    /**\n     *  The [[link-eip-2098]] compact representation of the ``yParity``\n     *  and ``s`` compacted into a single ``bytes32``.\n     */\n    get yParityAndS(): string {\n        // The EIP-2098 compact representation\n        const yParityAndS = getBytes(this.s);\n        if (this.yParity) { yParityAndS[0] |= 0x80; }\n        return hexlify(yParityAndS);\n    }\n\n    /**\n     *  The [[link-eip-2098]] compact representation.\n     */\n    get compactSerialized(): string {\n        return concat([ this.r, this.yParityAndS ]);\n    }\n\n    /**\n     *  The serialized representation.\n     */\n    get serialized(): string {\n        return concat([ this.r, this.s, (this.yParity ? \"0x1c\": \"0x1b\") ]);\n    }\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, r: string, s: string, v: 27 | 28) {\n        assertPrivate(guard, _guard, \"Signature\");\n        this.#r = r;\n        this.#s = s;\n        this.#v = v;\n        this.#networkV = null;\n    }\n\n    [Symbol.for('nodejs.util.inspect.custom')](): string {\n        return `Signature { r: \"${ this.r }\", s: \"${ this.s }\", yParity: ${ this.yParity }, networkV: ${ this.networkV } }`;\n    }\n\n    /**\n     *  Returns a new identical [[Signature]].\n     */\n    clone(): Signature {\n        const clone = new Signature(_guard, this.r, this.s, this.v);\n        if (this.networkV) { clone.#networkV = this.networkV; }\n        return clone;\n    }\n\n    /**\n     *  Returns a representation that is compatible with ``JSON.stringify``.\n     */\n    toJSON(): any {\n        const networkV = this.networkV;\n        return {\n            _type: \"signature\",\n            networkV: ((networkV != null) ? networkV.toString(): null),\n            r: this.r, s: this.s, v: this.v,\n        };\n    }\n\n    /**\n     *  Compute the chain ID from the ``v`` in a legacy EIP-155 transactions.\n     *\n     *  @example:\n     *    Signature.getChainId(45)\n     *    //_result:\n     *\n     *    Signature.getChainId(46)\n     *    //_result:\n     */\n    static getChainId(v: BigNumberish): bigint {\n        const bv = getBigInt(v, \"v\");\n\n        // The v is not an EIP-155 v, so it is the unspecified chain ID\n        if ((bv == BN_27) || (bv == BN_28)) { return BN_0; }\n\n        // Bad value for an EIP-155 v\n        assertArgument(bv >= BN_35, \"invalid EIP-155 v\", \"v\", v);\n\n        return (bv - BN_35) / BN_2;\n    }\n\n    /**\n     *  Compute the ``v`` for a chain ID for a legacy EIP-155 transactions.\n     *\n     *  Legacy transactions which use [[link-eip-155]] hijack the ``v``\n     *  property to include the chain ID.\n     *\n     *  @example:\n     *    Signature.getChainIdV(5, 27)\n     *    //_result:\n     *\n     *    Signature.getChainIdV(5, 28)\n     *    //_result:\n     *\n     */\n    static getChainIdV(chainId: BigNumberish, v: 27 | 28): bigint {\n        return (getBigInt(chainId) * BN_2) + BigInt(35 + v - 27);\n    }\n\n    /**\n     *  Compute the normalized legacy transaction ``v`` from a ``yParirty``,\n     *  a legacy transaction ``v`` or a legacy [[link-eip-155]] transaction.\n     *\n     *  @example:\n     *    // The values 0 and 1 imply v is actually yParity\n     *    Signature.getNormalizedV(0)\n     *    //_result:\n     *\n     *    // Legacy non-EIP-1559 transaction (i.e. 27 or 28)\n     *    Signature.getNormalizedV(27)\n     *    //_result:\n     *\n     *    // Legacy EIP-155 transaction (i.e. >= 35)\n     *    Signature.getNormalizedV(46)\n     *    //_result:\n     *\n     *    // Invalid values throw\n     *    Signature.getNormalizedV(5)\n     *    //_error:\n     */\n    static getNormalizedV(v: BigNumberish): 27 | 28 {\n        const bv = getBigInt(v);\n\n        if (bv === BN_0 || bv === BN_27) { return 27; }\n        if (bv === BN_1 || bv === BN_28) { return 28; }\n\n        assertArgument(bv >= BN_35, \"invalid v\", \"v\", v);\n\n        // Otherwise, EIP-155 v means odd is 27 and even is 28\n        return (bv & BN_1) ? 27: 28;\n    }\n\n    /**\n     *  Creates a new [[Signature]].\n     *\n     *  If no %%sig%% is provided, a new [[Signature]] is created\n     *  with default values.\n     *\n     *  If %%sig%% is a string, it is parsed.\n     */\n    static from(sig?: SignatureLike): Signature {\n        function assertError(check: unknown, message: string): asserts check {\n            assertArgument(check, message, \"signature\", sig);\n        };\n\n        if (sig == null) {\n            return new Signature(_guard, ZeroHash, ZeroHash, 27);\n        }\n\n        if (typeof(sig) === \"string\") {\n            const bytes = getBytes(sig, \"signature\");\n            if (bytes.length === 64) {\n                const r = hexlify(bytes.slice(0, 32));\n                const s = bytes.slice(32, 64);\n                const v = (s[0] & 0x80) ? 28: 27;\n                s[0] &= 0x7f;\n                return new Signature(_guard, r, hexlify(s), v);\n            }\n\n            if (bytes.length === 65) {\n                const r = hexlify(bytes.slice(0, 32));\n                const s = bytes.slice(32, 64);\n                assertError((s[0] & 0x80) === 0, \"non-canonical s\");\n                const v = Signature.getNormalizedV(bytes[64]);\n                return new Signature(_guard, r, hexlify(s), v);\n            }\n\n            assertError(false, \"invalid raw signature length\");\n        }\n\n        if (sig instanceof Signature) { return sig.clone(); }\n\n        // Get r\n        const _r = sig.r;\n        assertError(_r != null, \"missing r\");\n        const r = toUint256(_r);\n\n        // Get s; by any means necessary (we check consistency below)\n        const s = (function(s?: string, yParityAndS?: string) {\n            if (s != null) { return toUint256(s); }\n\n            if (yParityAndS != null) {\n                assertError(isHexString(yParityAndS, 32), \"invalid yParityAndS\");\n                const bytes = getBytes(yParityAndS);\n                bytes[0] &= 0x7f;\n                return hexlify(bytes);\n            }\n\n            assertError(false, \"missing s\");\n        })(sig.s, sig.yParityAndS);\n        assertError((getBytes(s)[0] & 0x80) == 0, \"non-canonical s\");\n\n        // Get v; by any means necessary (we check consistency below)\n        const { networkV, v } = (function(_v?: BigNumberish, yParityAndS?: string, yParity?: Numeric): { networkV?: bigint, v: 27 | 28 } {\n            if (_v != null) {\n                const v = getBigInt(_v);\n                return {\n                    networkV: ((v >= BN_35) ? v: undefined),\n                    v: Signature.getNormalizedV(v)\n                };\n            }\n\n            if (yParityAndS != null) {\n                assertError(isHexString(yParityAndS, 32), \"invalid yParityAndS\");\n                return { v: ((getBytes(yParityAndS)[0] & 0x80) ? 28: 27) };\n            }\n\n            if (yParity != null) {\n                switch (getNumber(yParity, \"sig.yParity\")) {\n                    case 0: return { v: 27 };\n                    case 1: return { v: 28 };\n                }\n                assertError(false, \"invalid yParity\");\n            }\n\n            assertError(false, \"missing v\");\n        })(sig.v, sig.yParityAndS, sig.yParity);\n\n        const result = new Signature(_guard, r, s, v);\n        if (networkV) { result.#networkV =  networkV; }\n\n        // If multiple of v, yParity, yParityAndS we given, check they match\n        assertError(sig.yParity == null || getNumber(sig.yParity, \"sig.yParity\") === result.yParity, \"yParity mismatch\");\n        assertError(sig.yParityAndS == null || sig.yParityAndS === result.yParityAndS, \"yParityAndS mismatch\");\n\n        return result;\n    }\n}\n\n", "/**\n *  Add details about signing here.\n *\n *  @_subsection: api/crypto:Signing  [about-signing]\n */\n\nimport { secp256k1 } from \"@noble/curves/secp256k1\";\n\nimport {\n    concat, dataLength, getBytes, getBytesCopy, hexlify, toBeHex,\n    assertArgument\n} from \"../utils/index.js\";\n\nimport { Signature } from \"./signature.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\nimport type { SignatureLike } from \"./index.js\";\n\n\n/**\n *  A **SigningKey** provides high-level access to the elliptic curve\n *  cryptography (ECC) operations and key management.\n */\nexport class SigningKey {\n    #privateKey: string;\n\n    /**\n     *  Creates a new **SigningKey** for %%privateKey%%.\n     */\n    constructor(privateKey: BytesLike) {\n        assertArgument(dataLength(privateKey) === 32, \"invalid private key\", \"privateKey\", \"[REDACTED]\");\n        this.#privateKey = hexlify(privateKey);\n    }\n\n    /**\n     *  The private key.\n     */\n    get privateKey(): string { return this.#privateKey; }\n\n    /**\n     *  The uncompressed public key.\n     *\n     * This will always begin with the prefix ``0x04`` and be 132\n     * characters long (the ``0x`` prefix and 130 hexadecimal nibbles).\n     */\n    get publicKey(): string { return SigningKey.computePublicKey(this.#privateKey); }\n\n    /**\n     *  The compressed public key.\n     *\n     *  This will always begin with either the prefix ``0x02`` or ``0x03``\n     *  and be 68 characters long (the ``0x`` prefix and 33 hexadecimal\n     *  nibbles)\n     */\n    get compressedPublicKey(): string { return SigningKey.computePublicKey(this.#privateKey, true); }\n\n    /**\n     *  Return the signature of the signed %%digest%%.\n     */\n    sign(digest: BytesLike): Signature {\n        assertArgument(dataLength(digest) === 32, \"invalid digest length\", \"digest\", digest);\n\n        const sig = secp256k1.sign(getBytesCopy(digest), getBytesCopy(this.#privateKey), {\n            lowS: true\n        });\n\n        return Signature.from({\n            r: toBeHex(sig.r, 32),\n            s: toBeHex(sig.s, 32),\n            v: (sig.recovery ? 0x1c: 0x1b)\n        });\n    }\n\n    /**\n     *  Returns the [[link-wiki-ecdh]] shared secret between this\n     *  private key and the %%other%% key.\n     *\n     *  The %%other%% key may be any type of key, a raw public key,\n     *  a compressed/uncompressed pubic key or aprivate key.\n     *\n     *  Best practice is usually to use a cryptographic hash on the\n     *  returned value before using it as a symetric secret.\n     *\n     *  @example:\n     *    sign1 = new SigningKey(id(\"some-secret-1\"))\n     *    sign2 = new SigningKey(id(\"some-secret-2\"))\n     *\n     *    // Notice that privA.computeSharedSecret(pubB)...\n     *    sign1.computeSharedSecret(sign2.publicKey)\n     *    //_result:\n     *\n     *    // ...is equal to privB.computeSharedSecret(pubA).\n     *    sign2.computeSharedSecret(sign1.publicKey)\n     *    //_result:\n     */\n    computeSharedSecret(other: BytesLike): string {\n        const pubKey = SigningKey.computePublicKey(other);\n        return hexlify(secp256k1.getSharedSecret(getBytesCopy(this.#privateKey), getBytes(pubKey), false));\n    }\n\n    /**\n     *  Compute the public key for %%key%%, optionally %%compressed%%.\n     *\n     *  The %%key%% may be any type of key, a raw public key, a\n     *  compressed/uncompressed public key or private key.\n     *\n     *  @example:\n     *    sign = new SigningKey(id(\"some-secret\"));\n     *\n     *    // Compute the uncompressed public key for a private key\n     *    SigningKey.computePublicKey(sign.privateKey)\n     *    //_result:\n     *\n     *    // Compute the compressed public key for a private key\n     *    SigningKey.computePublicKey(sign.privateKey, true)\n     *    //_result:\n     *\n     *    // Compute the uncompressed public key\n     *    SigningKey.computePublicKey(sign.publicKey, false);\n     *    //_result:\n     *\n     *    // Compute the Compressed a public key\n     *    SigningKey.computePublicKey(sign.publicKey, true);\n     *    //_result:\n     */\n    static computePublicKey(key: BytesLike, compressed?: boolean): string {\n        let bytes = getBytes(key, \"key\");\n\n        // private key\n        if (bytes.length === 32) {\n            const pubKey = secp256k1.getPublicKey(bytes, !!compressed);\n            return hexlify(pubKey);\n        }\n\n        // raw public key; use uncompressed key with 0x04 prefix\n        if (bytes.length === 64) {\n            const pub = new Uint8Array(65);\n            pub[0] = 0x04;\n            pub.set(bytes, 1);\n            bytes = pub;\n        }\n\n        const point = secp256k1.ProjectivePoint.fromHex(bytes);\n        return hexlify(point.toRawBytes(compressed));\n    }\n\n    /**\n     *  Returns the public key for the private key which produced the\n     *  %%signature%% for the given %%digest%%.\n     *\n     *  @example:\n     *    key = new SigningKey(id(\"some-secret\"))\n     *    digest = id(\"hello world\")\n     *    sig = key.sign(digest)\n     *\n     *    // Notice the signer public key...\n     *    key.publicKey\n     *    //_result:\n     *\n     *    // ...is equal to the recovered public key\n     *    SigningKey.recoverPublicKey(digest, sig)\n     *    //_result:\n     *\n     */\n    static recoverPublicKey(digest: BytesLike, signature: SignatureLike): string {\n        assertArgument(dataLength(digest) === 32, \"invalid digest length\", \"digest\", digest);\n\n        const sig = Signature.from(signature);\n\n        let secpSig = secp256k1.Signature.fromCompact(getBytesCopy(concat([ sig.r, sig.s ])));\n        secpSig = secpSig.addRecoveryBit(sig.yParity);\n\n        const pubKey = secpSig.recoverPublicKey(getBytesCopy(digest));\n        assertArgument(pubKey != null, \"invalid signautre for digest\", \"signature\", signature);\n\n        return \"0x\" + pubKey.toHex(false);\n    }\n\n    /**\n     *  Returns the point resulting from adding the ellipic curve points\n     *  %%p0%% and %%p1%%.\n     *\n     *  This is not a common function most developers should require, but\n     *  can be useful for certain privacy-specific techniques.\n     *\n     *  For example, it is used by [[HDNodeWallet]] to compute child\n     *  addresses from parent public keys and chain codes.\n     */\n    static addPoints(p0: BytesLike, p1: BytesLike, compressed?: boolean): string {\n        const pub0 = secp256k1.ProjectivePoint.fromHex(SigningKey.computePublicKey(p0).substring(2));\n        const pub1 = secp256k1.ProjectivePoint.fromHex(SigningKey.computePublicKey(p1).substring(2));\n        return \"0x\" + pub0.add(pub1).toHex(!!compressed)\n    }\n}\n\n", "/**\n *  A fundamental building block of Ethereum is the underlying\n *  cryptographic primitives.\n *\n *  @_section: api/crypto:Cryptographic Functions   [about-crypto]\n */\n\nnull\n\n// We import all these so we can export lock()\nimport { computeHmac } from \"./hmac.js\";\nimport { keccak256 } from \"./keccak.js\";\nimport { ripemd160 } from \"./ripemd160.js\";\nimport { pbkdf2 } from \"./pbkdf2.js\";\nimport { randomBytes } from \"./random.js\";\nimport { scrypt, scryptSync } from \"./scrypt.js\";\nimport { sha256, sha512 } from \"./sha2.js\";\n\nexport {\n    computeHmac,\n\n    randomBytes,\n\n    keccak256,\n    ripemd160,\n    sha256, sha512,\n\n    pbkdf2,\n    scrypt, scryptSync\n};\n\nexport { SigningKey } from \"./signing-key.js\";\nexport { Signature } from \"./signature.js\";\n\n/**\n *  Once called, prevents any future change to the underlying cryptographic\n *  primitives using the ``.register`` feature for hooks.\n */\nfunction lock(): void {\n    computeHmac.lock();\n    keccak256.lock();\n    pbkdf2.lock();\n    randomBytes.lock();\n    ripemd160.lock();\n    scrypt.lock();\n    scryptSync.lock();\n    sha256.lock();\n    sha512.lock();\n    randomBytes.lock();\n}\n\nexport { lock };\n\n/////////////////////////////\n// Types\n\nexport type { ProgressCallback } from \"./scrypt.js\";\n\nexport type { SignatureLike } from \"./signature.js\";\n", "import { keccak256 } from \"../crypto/index.js\";\nimport { getBytes, assertArgument } from \"../utils/index.js\";\n\n\nconst BN_0 = BigInt(0);\nconst BN_36 = BigInt(36);\n\nfunction getChecksumAddress(address: string): string {\n//    if (!isHexString(address, 20)) {\n//        logger.throwArgumentError(\"invalid address\", \"address\", address);\n//    }\n\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split(\"\");\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = getBytes(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return \"0x\" + chars.join(\"\");\n}\n\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\n// Create lookup table\nconst ibanLookup: { [character: string]: string } = { };\nfor (let i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }\nfor (let i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }\n\n// How many decimal digits can we process? (for 64-bit float, this is 15)\n// i.e. Math.floor(Math.log10(Number.MAX_SAFE_INTEGER));\nconst safeDigits = 15;\n\nfunction ibanChecksum(address: string): string {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits){\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) { checksum = \"0\" + checksum; }\n\n    return checksum;\n};\n\nconst Base36 = (function() {;\n    const result: Record<string, bigint> = { };\n    for (let i = 0; i < 36; i++) {\n        const key = \"0123456789abcdefghijklmnopqrstuvwxyz\"[i];\n        result[key] = BigInt(i);\n    }\n    return result;\n})();\n\nfunction fromBase36(value: string): bigint {\n    value = value.toLowerCase();\n\n    let result = BN_0;\n    for (let i = 0; i < value.length; i++) {\n        result = result * BN_36 + Base36[value[i]];\n    }\n    return result;\n}\n\n/**\n *  Returns a normalized and checksumed address for %%address%%.\n *  This accepts non-checksum addresses, checksum addresses and\n *  [[getIcapAddress]] formats.\n *\n *  The checksum in Ethereum uses the capitalization (upper-case\n *  vs lower-case) of the characters within an address to encode\n *  its checksum, which offers, on average, a checksum of 15-bits.\n *\n *  If %%address%% contains both upper-case and lower-case, it is\n *  assumed to already be a checksum address and its checksum is\n *  validated, and if the address fails its expected checksum an\n *  error is thrown.\n *\n *  If you wish the checksum of %%address%% to be ignore, it should\n *  be converted to lower-case (i.e. ``.toLowercase()``) before\n *  being passed in. This should be a very rare situation though,\n *  that you wish to bypass the safegaurds in place to protect\n *  against an address that has been incorrectly copied from another\n *  source.\n *\n *  @example:\n *    // Adds the checksum (via upper-casing specific letters)\n *    getAddress(\"0x8ba1f109551bd432803012645ac136ddd64dba72\")\n *    //_result:\n *\n *    // Converts ICAP address and adds checksum\n *    getAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\");\n *    //_result:\n *\n *    // Throws an error if an address contains mixed case,\n *    // but the checksum fails\n *    getAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_error:\n */\nexport function getAddress(address: string): string {\n\n    assertArgument(typeof(address) === \"string\", \"invalid address\", \"address\", address);\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n\n        // Missing the 0x prefix\n        if (!address.startsWith(\"0x\")) { address = \"0x\" + address; }\n\n        const result = getChecksumAddress(address);\n\n        // It is a checksummed address with a bad checksum\n        assertArgument(!address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) || result === address,\n            \"bad address checksum\", \"address\", address);\n\n        return result;\n    }\n\n    // Maybe ICAP? (we only support direct mode)\n    if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        assertArgument(address.substring(2, 4) === ibanChecksum(address), \"bad icap checksum\", \"address\", address);\n\n        let result = fromBase36(address.substring(4)).toString(16);\n        while (result.length < 40) { result = \"0\" + result; }\n        return  getChecksumAddress(\"0x\" + result);\n    }\n\n    assertArgument(false, \"invalid address\", \"address\", address);\n}\n\n/**\n *  The [ICAP Address format](link-icap) format is an early checksum\n *  format which attempts to be compatible with the banking\n *  industry [IBAN format](link-wiki-iban) for bank accounts.\n *\n *  It is no longer common or a recommended format.\n *\n *  @example:\n *    getIcapAddress(\"0x8ba1f109551bd432803012645ac136ddd64dba72\");\n *    //_result:\n *\n *    getIcapAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\");\n *    //_result:\n *\n *    // Throws an error if the ICAP checksum is wrong\n *    getIcapAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK37\");\n *    //_error:\n */\nexport function getIcapAddress(address: string): string {\n    //let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    let base36 = BigInt(getAddress(address)).toString(36).toUpperCase();\n    while (base36.length < 30) { base36 = \"0\" + base36; }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n", "import { keccak256 } from \"../crypto/index.js\";\nimport {\n    concat, dataSlice, getBigInt, getBytes, encodeRlp, assertArgument\n} from \"../utils/index.js\";\n\nimport { getAddress } from \"./address.js\";\n\nimport type { BigNumberish, BytesLike } from \"../utils/index.js\";\n\n\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\n\n/**\n *  Returns the address that would result from a ``CREATE`` for %%tx%%.\n *\n *  This can be used to compute the address a contract will be\n *  deployed to by an EOA when sending a deployment transaction (i.e.\n *  when the ``to`` address is ``null``).\n *\n *  This can also be used to compute the address a contract will be\n *  deployed to by a contract, by using the contract's address as the\n *  ``to`` and the contract's nonce.\n *\n *  @example\n *    from = \"0x8ba1f109551bD432803012645Ac136ddd64DBA72\";\n *    nonce = 5;\n *\n *    getCreateAddress({ from, nonce });\n *    //_result:\n */\nexport function getCreateAddress(tx: { from: string, nonce: BigNumberish }): string {\n    const from = getAddress(tx.from);\n    const nonce = getBigInt(tx.nonce, \"tx.nonce\");\n\n    let nonceHex = nonce.toString(16);\n    if (nonceHex === \"0\") {\n        nonceHex = \"0x\";\n    } else if (nonceHex.length % 2) {\n        nonceHex = \"0x0\" + nonceHex;\n    } else {\n        nonceHex = \"0x\" + nonceHex;\n    }\n\n    return getAddress(dataSlice(keccak256(encodeRlp([ from, nonceHex ])), 12));\n}\n\n/**\n *  Returns the address that would result from a ``CREATE2`` operation\n *  with the given %%from%%, %%salt%% and %%initCodeHash%%.\n *\n *  To compute the %%initCodeHash%% from a contract's init code, use\n *  the [[keccak256]] function.\n *\n *  For a quick overview and example of ``CREATE2``, see [[link-ricmoo-wisps]].\n *\n *  @example\n *    // The address of the contract\n *    from = \"0x8ba1f109551bD432803012645Ac136ddd64DBA72\"\n *\n *    // The salt\n *    salt = id(\"HelloWorld\")\n *\n *    // The hash of the initCode\n *    initCode = \"0x6394198df16000526103ff60206004601c335afa6040516060f3\";\n *    initCodeHash = keccak256(initCode)\n *\n *    getCreate2Address(from, salt, initCodeHash)\n *    //_result:\n */\nexport function getCreate2Address(_from: string, _salt: BytesLike, _initCodeHash: BytesLike): string {\n    const from = getAddress(_from);\n    const salt = getBytes(_salt, \"salt\");\n    const initCodeHash = getBytes(_initCodeHash, \"initCodeHash\");\n\n    assertArgument(salt.length === 32, \"salt must be 32 bytes\", \"salt\", _salt);\n\n    assertArgument(initCodeHash.length === 32, \"initCodeHash must be 32 bytes\", \"initCodeHash\", _initCodeHash);\n\n    return getAddress(dataSlice(keccak256(concat([ \"0xff\", from, salt, initCodeHash ])), 12))\n}\n", "import { assert, assertArgument } from \"../utils/index.js\";\n\nimport { getAddress } from \"./address.js\";\n\nimport type { Addressable, AddressLike, NameResolver } from \"./index.js\";\n\n\n/**\n *  Returns true if %%value%% is an object which implements the\n *  [[Addressable]] interface.\n *\n *  @example:\n *    // Wallets and AbstractSigner sub-classes\n *    isAddressable(Wallet.createRandom())\n *    //_result:\n *\n *    // Contracts\n *    contract = new Contract(\"dai.tokens.ethers.eth\", [ ], provider)\n *    isAddressable(contract)\n *    //_result:\n */\nexport function isAddressable(value: any): value is Addressable {\n    return (value && typeof(value.getAddress) === \"function\");\n}\n\n/**\n *  Returns true if %%value%% is a valid address.\n *\n *  @example:\n *    // Valid address\n *    isAddress(\"0x8ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_result:\n *\n *    // Valid ICAP address\n *    isAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\")\n *    //_result:\n *\n *    // Invalid checksum\n *    isAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBa72\")\n *    //_result:\n *\n *    // Invalid ICAP checksum\n *    isAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_result:\n *\n *    // Not an address (an ENS name requires a provided and an\n *    // asynchronous API to access)\n *    isAddress(\"ricmoo.eth\")\n *    //_result:\n */\nexport function isAddress(value: any): value is string {\n    try {\n        getAddress(value);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nasync function checkAddress(target: any, promise: Promise<null | string>): Promise<string> {\n    const result = await promise;\n    if (result == null || result === \"0x0000000000000000000000000000000000000000\") {\n        assert(typeof(target) !== \"string\", \"unconfigured name\", \"UNCONFIGURED_NAME\", { value: target });\n        assertArgument(false, \"invalid AddressLike value; did not resolve to a value address\", \"target\", target);\n    }\n    return getAddress(result);\n}\n\n/**\n *  Resolves to an address for the %%target%%, which may be any\n *  supported address type, an [[Addressable]] or a Promise which\n *  resolves to an address.\n *\n *  If an ENS name is provided, but that name has not been correctly\n *  configured a [[UnconfiguredNameError]] is thrown.\n *\n *  @example:\n *    addr = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\"\n *\n *    // Addresses are return synchronously\n *    resolveAddress(addr, provider)\n *    //_result:\n *\n *    // Address promises are resolved asynchronously\n *    resolveAddress(Promise.resolve(addr))\n *    //_result:\n *\n *    // ENS names are resolved asynchronously\n *    resolveAddress(\"dai.tokens.ethers.eth\", provider)\n *    //_result:\n *\n *    // Addressable objects are resolved asynchronously\n *    contract = new Contract(addr, [ ])\n *    resolveAddress(contract, provider)\n *    //_result:\n *\n *    // Unconfigured ENS names reject\n *    resolveAddress(\"nothing-here.ricmoo.eth\", provider)\n *    //_error:\n *\n *    // ENS names require a NameResolver object passed in\n *    // (notice the provider was omitted)\n *    resolveAddress(\"nothing-here.ricmoo.eth\")\n *    //_error:\n */\nexport function resolveAddress(target: AddressLike, resolver?: null | NameResolver): string | Promise<string> {\n\n    if (typeof(target) === \"string\") {\n        if (target.match(/^0x[0-9a-f]{40}$/i)) { return getAddress(target); }\n\n        assert(resolver != null, \"ENS resolution requires a provider\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"resolveName\" });\n\n        return checkAddress(target, resolver.resolveName(target));\n\n    } else if (isAddressable(target)) {\n        return checkAddress(target, target.getAddress());\n\n    } else if (target && typeof(target.then) === \"function\") {\n        return checkAddress(target, target);\n    }\n\n    assertArgument(false, \"unsupported addressable value\", \"target\", target);\n}\n", "/**\n *  A Typed object allows a value to have its type explicitly\n *  specified.\n *\n *  For example, in Solidity, the value ``45`` could represent a\n *  ``uint8`` or a ``uint256``. The value ``0x1234`` could represent\n *  a ``bytes2`` or ``bytes``.\n *\n *  Since JavaScript has no meaningful way to explicitly inform any\n *  APIs which what the type is, this allows transparent interoperation\n *  with Soldity.\n *\n *  @_subsection: api/abi:Typed Values\n */\n\nimport { assertPrivate, defineProperties } from \"../utils/index.js\";\n\nimport type { Addressable } from \"../address/index.js\";\nimport type { BigNumberish, BytesLike } from \"../utils/index.js\";\n\nimport type { Result } from \"./coders/abstract-coder.js\";\n\nconst _gaurd = { };\n\nfunction n(value: BigNumberish, width: number): Typed {\n    let signed = false;\n    if (width < 0) {\n        signed = true;\n        width *= -1;\n    }\n\n    // @TODO: Check range is valid for value\n    return new Typed(_gaurd, `${ signed ? \"\": \"u\" }int${ width }`, value, { signed, width });\n}\n\nfunction b(value: BytesLike, size?: number): Typed {\n    // @TODO: Check range is valid for value\n    return new Typed(_gaurd, `bytes${ (size) ? size: \"\" }`, value, { size });\n}\n\n// @TODO: Remove this in v7, it was replaced by TypedBigInt\n/**\n *  @_ignore:\n */\nexport interface TypedNumber extends Typed {\n    value: number;\n    defaultValue(): number;\n    minValue(): number;\n    maxValue(): number;\n}\n\n/**\n *  A **Typed** that represents a numeric value.\n */\nexport interface TypedBigInt extends Typed {\n    /**\n     *  The value.\n     */\n    value: bigint;\n\n    /**\n     *  The default value for all numeric types is ``0``.\n     */\n    defaultValue(): bigint;\n\n    /**\n     *  The minimum value for this type, accounting for bit-width and signed-ness.\n     */\n    minValue(): bigint;\n\n    /**\n     *  The minimum value for this type, accounting for bit-width.\n     */\n    maxValue(): bigint;\n}\n\n/**\n *  A **Typed** that represents a binary sequence of data as bytes.\n */\nexport interface TypedData extends Typed {\n    /**\n     *  The value.\n     */\n    value: string;\n\n    /**\n     *  The default value for this type.\n     */\n    defaultValue(): string;\n}\n\n/**\n *  A **Typed** that represents a UTF-8 sequence of bytes.\n */\nexport interface TypedString extends Typed {\n    /**\n     *  The value.\n     */\n    value: string;\n\n    /**\n     *  The default value for the string type is the empty string (i.e. ``\"\"``).\n     */\n    defaultValue(): string;\n}\n\nconst _typedSymbol = Symbol.for(\"_ethers_typed\");\n\n/**\n *  The **Typed** class to wrap values providing explicit type information.\n */\nexport class Typed {\n\n    /**\n     *  The type, as a Solidity-compatible type.\n     */\n    readonly type!: string;\n\n    /**\n     *  The actual value.\n     */\n    readonly value!: any;\n\n    readonly #options: any;\n\n    /**\n     *  @_ignore:\n     */\n    readonly _typedSymbol!: Symbol;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(gaurd: any, type: string, value: any, options?: any) {\n        if (options == null) { options = null; }\n        assertPrivate(_gaurd, gaurd, \"Typed\");\n        defineProperties<Typed>(this, { _typedSymbol, type, value });\n        this.#options = options;\n\n        // Check the value is valid\n        this.format();\n    }\n\n    /**\n     *  Format the type as a Human-Readable type.\n     */\n    format(): string {\n        if (this.type === \"array\") {\n            throw new Error(\"\");\n        } else if (this.type === \"dynamicArray\") {\n            throw new Error(\"\");\n        } else if (this.type === \"tuple\") {\n            return `tuple(${ this.value.map((v: Typed) => v.format()).join(\",\") })`\n        }\n\n        return this.type;\n    }\n\n    /**\n     *  The default value returned by this type.\n     */\n    defaultValue(): string | number | bigint | Result {\n        return 0;\n    }\n\n    /**\n     *  The minimum value for numeric types.\n     */\n    minValue(): string | number | bigint {\n        return 0;\n    }\n\n    /**\n     *  The maximum value for numeric types.\n     */\n    maxValue(): string | number | bigint {\n        return 0;\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard is this is a [[TypedBigInt]].\n     */\n    isBigInt(): this is TypedBigInt {\n        return !!(this.type.match(/^u?int[0-9]+$/));\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard is this is a [[TypedData]].\n     */\n    isData(): this is TypedData {\n        return this.type.startsWith(\"bytes\");\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard is this is a [[TypedString]].\n     */\n    isString(): this is TypedString {\n        return (this.type === \"string\");\n    }\n\n    /**\n     *  Returns the tuple name, if this is a tuple. Throws otherwise.\n     */\n    get tupleName(): null | string {\n        if (this.type !== \"tuple\") { throw TypeError(\"not a tuple\"); }\n        return this.#options;\n    }\n\n    // Returns the length of this type as an array\n    // - `null` indicates the length is unforced, it could be dynamic\n    // - `-1` indicates the length is dynamic\n    // - any other value indicates it is a static array and is its length\n\n    /**\n     *  Returns the length of the array type or ``-1`` if it is dynamic.\n     *\n     *  Throws if the type is not an array.\n     */\n    get arrayLength(): null | number {\n        if (this.type !== \"array\") { throw TypeError(\"not an array\"); }\n        if (this.#options === true) { return -1; }\n        if (this.#options === false) { return (<Array<any>>(this.value)).length; }\n        return null;\n    }\n\n    /**\n     *  Returns a new **Typed** of %%type%% with the %%value%%.\n     */\n    static from(type: string, value: any): Typed {\n        return new Typed(_gaurd, type, value);\n    }\n\n    /**\n     *  Return a new ``uint8`` type for %%v%%.\n     */\n    static uint8(v: BigNumberish): Typed { return n(v, 8); }\n\n    /**\n     *  Return a new ``uint16`` type for %%v%%.\n     */\n    static uint16(v: BigNumberish): Typed { return n(v, 16); }\n\n    /**\n     *  Return a new ``uint24`` type for %%v%%.\n     */\n    static uint24(v: BigNumberish): Typed { return n(v, 24); }\n\n    /**\n     *  Return a new ``uint32`` type for %%v%%.\n     */\n    static uint32(v: BigNumberish): Typed { return n(v, 32); }\n\n    /**\n     *  Return a new ``uint40`` type for %%v%%.\n     */\n    static uint40(v: BigNumberish): Typed { return n(v, 40); }\n\n    /**\n     *  Return a new ``uint48`` type for %%v%%.\n     */\n    static uint48(v: BigNumberish): Typed { return n(v, 48); }\n\n    /**\n     *  Return a new ``uint56`` type for %%v%%.\n     */\n    static uint56(v: BigNumberish): Typed { return n(v, 56); }\n\n    /**\n     *  Return a new ``uint64`` type for %%v%%.\n     */\n    static uint64(v: BigNumberish): Typed { return n(v, 64); }\n\n    /**\n     *  Return a new ``uint72`` type for %%v%%.\n     */\n    static uint72(v: BigNumberish): Typed { return n(v, 72); }\n\n    /**\n     *  Return a new ``uint80`` type for %%v%%.\n     */\n    static uint80(v: BigNumberish): Typed { return n(v, 80); }\n\n    /**\n     *  Return a new ``uint88`` type for %%v%%.\n     */\n    static uint88(v: BigNumberish): Typed { return n(v, 88); }\n\n    /**\n     *  Return a new ``uint96`` type for %%v%%.\n     */\n    static uint96(v: BigNumberish): Typed { return n(v, 96); }\n\n    /**\n     *  Return a new ``uint104`` type for %%v%%.\n     */\n    static uint104(v: BigNumberish): Typed { return n(v, 104); }\n\n    /**\n     *  Return a new ``uint112`` type for %%v%%.\n     */\n    static uint112(v: BigNumberish): Typed { return n(v, 112); }\n\n    /**\n     *  Return a new ``uint120`` type for %%v%%.\n     */\n    static uint120(v: BigNumberish): Typed { return n(v, 120); }\n\n    /**\n     *  Return a new ``uint128`` type for %%v%%.\n     */\n    static uint128(v: BigNumberish): Typed { return n(v, 128); }\n\n    /**\n     *  Return a new ``uint136`` type for %%v%%.\n     */\n    static uint136(v: BigNumberish): Typed { return n(v, 136); }\n\n    /**\n     *  Return a new ``uint144`` type for %%v%%.\n     */\n    static uint144(v: BigNumberish): Typed { return n(v, 144); }\n\n    /**\n     *  Return a new ``uint152`` type for %%v%%.\n     */\n    static uint152(v: BigNumberish): Typed { return n(v, 152); }\n\n    /**\n     *  Return a new ``uint160`` type for %%v%%.\n     */\n    static uint160(v: BigNumberish): Typed { return n(v, 160); }\n\n    /**\n     *  Return a new ``uint168`` type for %%v%%.\n     */\n    static uint168(v: BigNumberish): Typed { return n(v, 168); }\n\n    /**\n     *  Return a new ``uint176`` type for %%v%%.\n     */\n    static uint176(v: BigNumberish): Typed { return n(v, 176); }\n\n    /**\n     *  Return a new ``uint184`` type for %%v%%.\n     */\n    static uint184(v: BigNumberish): Typed { return n(v, 184); }\n\n    /**\n     *  Return a new ``uint192`` type for %%v%%.\n     */\n    static uint192(v: BigNumberish): Typed { return n(v, 192); }\n\n    /**\n     *  Return a new ``uint200`` type for %%v%%.\n     */\n    static uint200(v: BigNumberish): Typed { return n(v, 200); }\n\n    /**\n     *  Return a new ``uint208`` type for %%v%%.\n     */\n    static uint208(v: BigNumberish): Typed { return n(v, 208); }\n\n    /**\n     *  Return a new ``uint216`` type for %%v%%.\n     */\n    static uint216(v: BigNumberish): Typed { return n(v, 216); }\n\n    /**\n     *  Return a new ``uint224`` type for %%v%%.\n     */\n    static uint224(v: BigNumberish): Typed { return n(v, 224); }\n\n    /**\n     *  Return a new ``uint232`` type for %%v%%.\n     */\n    static uint232(v: BigNumberish): Typed { return n(v, 232); }\n\n    /**\n     *  Return a new ``uint240`` type for %%v%%.\n     */\n    static uint240(v: BigNumberish): Typed { return n(v, 240); }\n\n    /**\n     *  Return a new ``uint248`` type for %%v%%.\n     */\n    static uint248(v: BigNumberish): Typed { return n(v, 248); }\n\n    /**\n     *  Return a new ``uint256`` type for %%v%%.\n     */\n    static uint256(v: BigNumberish): Typed { return n(v, 256); }\n\n    /**\n     *  Return a new ``uint256`` type for %%v%%.\n     */\n    static uint(v: BigNumberish): Typed { return n(v, 256); }\n\n    /**\n     *  Return a new ``int8`` type for %%v%%.\n     */\n    static int8(v: BigNumberish): Typed { return n(v, -8); }\n\n    /**\n     *  Return a new ``int16`` type for %%v%%.\n     */\n    static int16(v: BigNumberish): Typed { return n(v, -16); }\n\n    /**\n     *  Return a new ``int24`` type for %%v%%.\n     */\n    static int24(v: BigNumberish): Typed { return n(v, -24); }\n\n    /**\n     *  Return a new ``int32`` type for %%v%%.\n     */\n    static int32(v: BigNumberish): Typed { return n(v, -32); }\n\n    /**\n     *  Return a new ``int40`` type for %%v%%.\n     */\n    static int40(v: BigNumberish): Typed { return n(v, -40); }\n\n    /**\n     *  Return a new ``int48`` type for %%v%%.\n     */\n    static int48(v: BigNumberish): Typed { return n(v, -48); }\n\n    /**\n     *  Return a new ``int56`` type for %%v%%.\n     */\n    static int56(v: BigNumberish): Typed { return n(v, -56); }\n\n    /**\n     *  Return a new ``int64`` type for %%v%%.\n     */\n    static int64(v: BigNumberish): Typed { return n(v, -64); }\n\n    /**\n     *  Return a new ``int72`` type for %%v%%.\n     */\n    static int72(v: BigNumberish): Typed { return n(v, -72); }\n\n    /**\n     *  Return a new ``int80`` type for %%v%%.\n     */\n    static int80(v: BigNumberish): Typed { return n(v, -80); }\n\n    /**\n     *  Return a new ``int88`` type for %%v%%.\n     */\n    static int88(v: BigNumberish): Typed { return n(v, -88); }\n\n    /**\n     *  Return a new ``int96`` type for %%v%%.\n     */\n    static int96(v: BigNumberish): Typed { return n(v, -96); }\n\n    /**\n     *  Return a new ``int104`` type for %%v%%.\n     */\n    static int104(v: BigNumberish): Typed { return n(v, -104); }\n\n    /**\n     *  Return a new ``int112`` type for %%v%%.\n     */\n    static int112(v: BigNumberish): Typed { return n(v, -112); }\n\n    /**\n     *  Return a new ``int120`` type for %%v%%.\n     */\n    static int120(v: BigNumberish): Typed { return n(v, -120); }\n\n    /**\n     *  Return a new ``int128`` type for %%v%%.\n     */\n    static int128(v: BigNumberish): Typed { return n(v, -128); }\n\n    /**\n     *  Return a new ``int136`` type for %%v%%.\n     */\n    static int136(v: BigNumberish): Typed { return n(v, -136); }\n\n    /**\n     *  Return a new ``int144`` type for %%v%%.\n     */\n    static int144(v: BigNumberish): Typed { return n(v, -144); }\n\n    /**\n     *  Return a new ``int52`` type for %%v%%.\n     */\n    static int152(v: BigNumberish): Typed { return n(v, -152); }\n\n    /**\n     *  Return a new ``int160`` type for %%v%%.\n     */\n    static int160(v: BigNumberish): Typed { return n(v, -160); }\n\n    /**\n     *  Return a new ``int168`` type for %%v%%.\n     */\n    static int168(v: BigNumberish): Typed { return n(v, -168); }\n\n    /**\n     *  Return a new ``int176`` type for %%v%%.\n     */\n    static int176(v: BigNumberish): Typed { return n(v, -176); }\n\n    /**\n     *  Return a new ``int184`` type for %%v%%.\n     */\n    static int184(v: BigNumberish): Typed { return n(v, -184); }\n\n    /**\n     *  Return a new ``int92`` type for %%v%%.\n     */\n    static int192(v: BigNumberish): Typed { return n(v, -192); }\n\n    /**\n     *  Return a new ``int200`` type for %%v%%.\n     */\n    static int200(v: BigNumberish): Typed { return n(v, -200); }\n\n    /**\n     *  Return a new ``int208`` type for %%v%%.\n     */\n    static int208(v: BigNumberish): Typed { return n(v, -208); }\n\n    /**\n     *  Return a new ``int216`` type for %%v%%.\n     */\n    static int216(v: BigNumberish): Typed { return n(v, -216); }\n\n    /**\n     *  Return a new ``int224`` type for %%v%%.\n     */\n    static int224(v: BigNumberish): Typed { return n(v, -224); }\n\n    /**\n     *  Return a new ``int232`` type for %%v%%.\n     */\n    static int232(v: BigNumberish): Typed { return n(v, -232); }\n\n    /**\n     *  Return a new ``int240`` type for %%v%%.\n     */\n    static int240(v: BigNumberish): Typed { return n(v, -240); }\n\n    /**\n     *  Return a new ``int248`` type for %%v%%.\n     */\n    static int248(v: BigNumberish): Typed { return n(v, -248); }\n\n    /**\n     *  Return a new ``int256`` type for %%v%%.\n     */\n    static int256(v: BigNumberish): Typed { return n(v, -256); }\n\n    /**\n     *  Return a new ``int256`` type for %%v%%.\n     */\n    static int(v: BigNumberish): Typed { return n(v, -256); }\n\n    /**\n     *  Return a new ``bytes1`` type for %%v%%.\n     */\n    static bytes1(v: BytesLike): Typed { return b(v, 1); }\n\n    /**\n     *  Return a new ``bytes2`` type for %%v%%.\n     */\n    static bytes2(v: BytesLike): Typed { return b(v, 2); }\n\n    /**\n     *  Return a new ``bytes3`` type for %%v%%.\n     */\n    static bytes3(v: BytesLike): Typed { return b(v, 3); }\n\n    /**\n     *  Return a new ``bytes4`` type for %%v%%.\n     */\n    static bytes4(v: BytesLike): Typed { return b(v, 4); }\n\n    /**\n     *  Return a new ``bytes5`` type for %%v%%.\n     */\n    static bytes5(v: BytesLike): Typed { return b(v, 5); }\n\n    /**\n     *  Return a new ``bytes6`` type for %%v%%.\n     */\n    static bytes6(v: BytesLike): Typed { return b(v, 6); }\n\n    /**\n     *  Return a new ``bytes7`` type for %%v%%.\n     */\n    static bytes7(v: BytesLike): Typed { return b(v, 7); }\n\n    /**\n     *  Return a new ``bytes8`` type for %%v%%.\n     */\n    static bytes8(v: BytesLike): Typed { return b(v, 8); }\n\n    /**\n     *  Return a new ``bytes9`` type for %%v%%.\n     */\n    static bytes9(v: BytesLike): Typed { return b(v, 9); }\n\n    /**\n     *  Return a new ``bytes10`` type for %%v%%.\n     */\n    static bytes10(v: BytesLike): Typed { return b(v, 10); }\n\n    /**\n     *  Return a new ``bytes11`` type for %%v%%.\n     */\n    static bytes11(v: BytesLike): Typed { return b(v, 11); }\n\n    /**\n     *  Return a new ``bytes12`` type for %%v%%.\n     */\n    static bytes12(v: BytesLike): Typed { return b(v, 12); }\n\n    /**\n     *  Return a new ``bytes13`` type for %%v%%.\n     */\n    static bytes13(v: BytesLike): Typed { return b(v, 13); }\n\n    /**\n     *  Return a new ``bytes14`` type for %%v%%.\n     */\n    static bytes14(v: BytesLike): Typed { return b(v, 14); }\n\n    /**\n     *  Return a new ``bytes15`` type for %%v%%.\n     */\n    static bytes15(v: BytesLike): Typed { return b(v, 15); }\n\n    /**\n     *  Return a new ``bytes16`` type for %%v%%.\n     */\n    static bytes16(v: BytesLike): Typed { return b(v, 16); }\n\n    /**\n     *  Return a new ``bytes17`` type for %%v%%.\n     */\n    static bytes17(v: BytesLike): Typed { return b(v, 17); }\n\n    /**\n     *  Return a new ``bytes18`` type for %%v%%.\n     */\n    static bytes18(v: BytesLike): Typed { return b(v, 18); }\n\n    /**\n     *  Return a new ``bytes19`` type for %%v%%.\n     */\n    static bytes19(v: BytesLike): Typed { return b(v, 19); }\n\n    /**\n     *  Return a new ``bytes20`` type for %%v%%.\n     */\n    static bytes20(v: BytesLike): Typed { return b(v, 20); }\n\n    /**\n     *  Return a new ``bytes21`` type for %%v%%.\n     */\n    static bytes21(v: BytesLike): Typed { return b(v, 21); }\n\n    /**\n     *  Return a new ``bytes22`` type for %%v%%.\n     */\n    static bytes22(v: BytesLike): Typed { return b(v, 22); }\n\n    /**\n     *  Return a new ``bytes23`` type for %%v%%.\n     */\n    static bytes23(v: BytesLike): Typed { return b(v, 23); }\n\n    /**\n     *  Return a new ``bytes24`` type for %%v%%.\n     */\n    static bytes24(v: BytesLike): Typed { return b(v, 24); }\n\n    /**\n     *  Return a new ``bytes25`` type for %%v%%.\n     */\n    static bytes25(v: BytesLike): Typed { return b(v, 25); }\n\n    /**\n     *  Return a new ``bytes26`` type for %%v%%.\n     */\n    static bytes26(v: BytesLike): Typed { return b(v, 26); }\n\n    /**\n     *  Return a new ``bytes27`` type for %%v%%.\n     */\n    static bytes27(v: BytesLike): Typed { return b(v, 27); }\n\n    /**\n     *  Return a new ``bytes28`` type for %%v%%.\n     */\n    static bytes28(v: BytesLike): Typed { return b(v, 28); }\n\n    /**\n     *  Return a new ``bytes29`` type for %%v%%.\n     */\n    static bytes29(v: BytesLike): Typed { return b(v, 29); }\n\n    /**\n     *  Return a new ``bytes30`` type for %%v%%.\n     */\n    static bytes30(v: BytesLike): Typed { return b(v, 30); }\n\n    /**\n     *  Return a new ``bytes31`` type for %%v%%.\n     */\n    static bytes31(v: BytesLike): Typed { return b(v, 31); }\n\n    /**\n     *  Return a new ``bytes32`` type for %%v%%.\n     */\n    static bytes32(v: BytesLike): Typed { return b(v, 32); }\n\n\n    /**\n     *  Return a new ``address`` type for %%v%%.\n     */\n    static address(v: string | Addressable): Typed { return new Typed(_gaurd, \"address\", v); }\n\n    /**\n     *  Return a new ``bool`` type for %%v%%.\n     */\n    static bool(v: any): Typed { return new Typed(_gaurd, \"bool\", !!v); }\n\n    /**\n     *  Return a new ``bytes`` type for %%v%%.\n     */\n    static bytes(v: BytesLike): Typed { return new Typed(_gaurd, \"bytes\", v); }\n\n    /**\n     *  Return a new ``string`` type for %%v%%.\n     */\n    static string(v: string): Typed { return new Typed(_gaurd, \"string\", v); }\n\n\n    /**\n     *  Return a new ``array`` type for %%v%%, allowing %%dynamic%% length.\n     */\n    static array(v: Array<any | Typed>, dynamic?: null | boolean): Typed {\n        throw new Error(\"not implemented yet\");\n        return new Typed(_gaurd, \"array\", v, dynamic);\n    }\n\n\n    /**\n     *  Return a new ``tuple`` type for %%v%%, with the optional %%name%%.\n     */\n    static tuple(v: Array<any | Typed> | Record<string, any | Typed>, name?: string): Typed {\n        throw new Error(\"not implemented yet\");\n        return new Typed(_gaurd, \"tuple\", v, name);\n    }\n\n\n    /**\n     *  Return a new ``uint8`` type for %%v%%.\n     */\n    static overrides(v: Record<string, any>): Typed {\n        return new Typed(_gaurd, \"overrides\", Object.assign({ }, v));\n    }\n\n    /**\n     *  Returns true only if %%value%% is a [[Typed]] instance.\n     */\n    static isTyped(value: any): value is Typed {\n        return (value\n            && typeof(value) === \"object\"\n            && \"_typedSymbol\" in value\n            && value._typedSymbol === _typedSymbol);\n    }\n\n    /**\n     *  If the value is a [[Typed]] instance, validates the underlying value\n     *  and returns it, otherwise returns value directly.\n     *\n     *  This is useful for functions that with to accept either a [[Typed]]\n     *  object or values.\n     */\n    static dereference<T>(value: Typed | T, type: string): T {\n        if (Typed.isTyped(value)) {\n            if (value.type !== type) {\n                throw new Error(`invalid type: expecetd ${ type }, got ${ value.type }`);\n            }\n            return value.value;\n        }\n        return value;\n    }\n}\n", "import { getAddress } from \"../../address/index.js\";\nimport { toBeHex } from \"../../utils/maths.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\n/**\n *  @_ignore\n */\nexport class AddressCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"address\", \"address\", localName, false);\n    }\n\n    defaultValue(): string {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n\n    encode(writer: Writer, _value: string | Typed): number {\n        let value = Typed.dereference(_value, \"string\");\n        try {\n            value = getAddress(value);\n        } catch (error: any) {\n            return this._throwError(error.message, _value);\n        }\n        return writer.writeValue(value);\n    }\n\n    decode(reader: Reader): any {\n        return getAddress(toBeHex(reader.readValue(), 20));\n    }\n}\n", "import { Coder } from \"./abstract-coder.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n/**\n *  Clones the functionality of an existing Coder, but without a localName\n *\n *  @_ignore\n */\nexport class AnonymousCoder extends Coder {\n    private coder: Coder;\n\n    constructor(coder: Coder) {\n        super(coder.name, coder.type, \"_\", coder.dynamic);\n        this.coder = coder;\n    }\n\n    defaultValue(): any {\n        return this.coder.defaultValue();\n    }\n\n    encode(writer: Writer, value: any): number {\n        return this.coder.encode(writer, value);\n    }\n\n    decode(reader: Reader): any {\n        return this.coder.decode(reader);\n    }\n}\n", "import {\n    defineProperties, isError, assert, assertArgument, assertArgumentCount\n} from \"../../utils/index.js\";\n\nimport { Typed } from \"../typed.js\";\n\nimport { Coder, Result, WordSize, Writer } from \"./abstract-coder.js\";\nimport { AnonymousCoder } from \"./anonymous.js\";\n\nimport type { Reader } from \"./abstract-coder.js\";\n\n/**\n *  @_ignore\n */\nexport function pack(writer: Writer, coders: ReadonlyArray<Coder>, values: Array<any> | { [ name: string ]: any }): number {\n    let arrayValues: Array<any> = [ ];\n\n    if (Array.isArray(values)) {\n       arrayValues = values;\n\n    } else if (values && typeof(values) === \"object\") {\n        let unique: { [ name: string ]: boolean } = { };\n\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            assert(name, \"cannot encode object for signature with missing names\",\n                \"INVALID_ARGUMENT\", { argument: \"values\", info: { coder }, value: values });\n\n            assert(!unique[name], \"cannot encode object for signature with duplicate names\",\n                \"INVALID_ARGUMENT\", { argument: \"values\", info: { coder }, value: values });\n\n            unique[name] = true;\n\n            return values[name];\n        });\n\n    } else {\n        assertArgument(false, \"invalid tuple value\", \"tuple\", values);\n    }\n\n    assertArgument(coders.length === arrayValues.length, \"types/value length mismatch\", \"tuple\", values);\n\n    let staticWriter = new Writer();\n    let dynamicWriter = new Writer();\n\n    let updateFuncs: Array<(baseOffset: number) => void> = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset: number) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n\n        } else {\n            coder.encode(staticWriter, value);\n        }\n    });\n\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\n\n/**\n *  @_ignore\n */\nexport function unpack(reader: Reader, coders: ReadonlyArray<Coder>): Result {\n    let values: Array<any> = [];\n    let keys: Array<null | string> = [ ];\n\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n\n    coders.forEach((coder) => {\n        let value: any = null;\n\n        if (coder.dynamic) {\n            let offset = reader.readIndex();\n            let offsetReader = baseReader.subReader(offset);\n            try {\n                value = coder.decode(offsetReader);\n            } catch (error: any) {\n                // Cannot recover from this\n                if (isError(error, \"BUFFER_OVERRUN\")) {\n                    throw error;\n                }\n\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n\n        } else {\n            try {\n                value = coder.decode(reader);\n            } catch (error: any) {\n                // Cannot recover from this\n                if (isError(error, \"BUFFER_OVERRUN\")) {\n                    throw error;\n                }\n\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n\n        if (value == undefined) {\n            throw new Error(\"investigate\");\n        }\n\n        values.push(value);\n        keys.push(coder.localName || null);\n    });\n\n    return Result.fromItems(values, keys);\n}\n\n/**\n *  @_ignore\n */\nexport class ArrayCoder extends Coder {\n    readonly coder!: Coder;\n    readonly length!: number;\n\n    constructor(coder: Coder, length: number, localName: string) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length: \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n        defineProperties<ArrayCoder>(this, { coder, length });\n    }\n\n    defaultValue(): Array<any> {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n\n        const result: Array<any> = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n\n    encode(writer: Writer, _value: Array<any> | Typed): number {\n        const value = Typed.dereference(_value, \"array\");\n\n        if(!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n\n        let count = this.length;\n\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n\n        assertArgumentCount(value.length, count, \"coder array\" + (this.localName? (\" \"+ this.localName): \"\"));\n\n        let coders: Array<Coder> = [ ];\n        for (let i = 0; i < value.length; i++) { coders.push(this.coder); }\n\n        return pack(writer, coders, value);\n    }\n\n    decode(reader: Reader): any {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readIndex();\n\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            assert(count * WordSize <= reader.dataLength, \"insufficient data length\",\n                \"BUFFER_OVERRUN\", { buffer: reader.bytes, offset: count * WordSize, length: reader.dataLength });\n        }\n        let coders: Array<Coder> = [];\n        for (let i = 0; i < count; i++) { coders.push(new AnonymousCoder(this.coder)); }\n\n        return unpack(reader, coders);\n    }\n}\n\n", "import { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n/**\n *  @_ignore\n */\nexport class BooleanCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n\n    defaultValue(): boolean {\n        return false;\n    }\n\n    encode(writer: Writer, _value: boolean | Typed): number {\n        const value = Typed.dereference(_value, \"bool\");\n        return writer.writeValue(value ? 1: 0);\n    }\n\n    decode(reader: Reader): any {\n        return !!reader.readValue();\n    }\n}\n", "import { getBytesCopy, hexlify } from \"../../utils/index.js\";\n\nimport { Coder } from \"./abstract-coder.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\n/**\n *  @_ignore\n */\nexport class DynamicBytesCoder extends Coder {\n    constructor(type: string, localName: string) {\n       super(type, type, localName, true);\n    }\n\n    defaultValue(): string {\n        return \"0x\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        value = getBytesCopy(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n\n    decode(reader: Reader): any {\n        return reader.readBytes(reader.readIndex(), true);\n    }\n}\n\n/**\n *  @_ignore\n */\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName: string) {\n        super(\"bytes\", localName);\n    }\n\n    decode(reader: Reader): any {\n        return hexlify(super.decode(reader));\n    }\n}\n", "\nimport { defineProperties, getBytesCopy, hexlify } from \"../../utils/index.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n\nimport type { BytesLike } from \"../../utils/index.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\n/**\n *  @_ignore\n */\nexport class FixedBytesCoder extends Coder {\n    readonly size!: number;\n\n    constructor(size: number, localName: string) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        defineProperties<FixedBytesCoder>(this, { size }, { size: \"number\" });\n    }\n\n    defaultValue(): string {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n\n    encode(writer: Writer, _value: BytesLike | Typed): number {\n        let data = getBytesCopy(Typed.dereference(_value, this.type));\n        if (data.length !== this.size) { this._throwError(\"incorrect data length\", _value); }\n        return writer.writeBytes(data);\n    }\n\n    decode(reader: Reader): any {\n        return hexlify(reader.readBytes(this.size));\n    }\n}\n", "import { Coder } from \"./abstract-coder.js\";\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\nconst Empty = new Uint8Array([ ]);\n\n/**\n *  @_ignore\n */\nexport class NullCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"null\", \"\", localName, false);\n    }\n\n    defaultValue(): null {\n        return null;\n    }\n\n    encode(writer: Writer, value: any): number {\n        if (value != null) { this._throwError(\"not null\", value); }\n        return writer.writeBytes(Empty);\n    }\n\n    decode(reader: Reader): any {\n        reader.readBytes(0);\n        return null;\n    }\n}\n", "import {\n    defineProperties, fromTwos, getBigInt, mask, toTwos\n} from \"../../utils/index.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { Coder, WordSize } from \"./abstract-coder.js\";\n\nimport type { BigNumberish } from \"../../utils/index.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\n/**\n *  @_ignore\n */\nexport class NumberCoder extends Coder {\n    readonly size!: number;\n    readonly signed!: boolean;\n\n    constructor(size: number, signed: boolean, localName: string) {\n        const name = ((signed ? \"int\": \"uint\") + (size * 8));\n        super(name, name, localName, false);\n\n        defineProperties<NumberCoder>(this, { size, signed }, { size: \"number\", signed: \"boolean\" });\n    }\n\n    defaultValue(): number {\n        return 0;\n    }\n\n    encode(writer: Writer, _value: BigNumberish | Typed): number {\n        let value = getBigInt(Typed.dereference(_value, this.type));\n\n        // Check bounds are safe for encoding\n        let maxUintValue = mask(BN_MAX_UINT256, WordSize * 8);\n        if (this.signed) {\n            let bounds = mask(maxUintValue, (this.size * 8) - 1);\n            if (value > bounds || value < -(bounds + BN_1)) {\n                this._throwError(\"value out-of-bounds\", _value);\n            }\n            value = toTwos(value, 8 * WordSize);\n        } else if (value < BN_0 || value > mask(maxUintValue, this.size * 8)) {\n            this._throwError(\"value out-of-bounds\", _value);\n        }\n\n        return writer.writeValue(value);\n    }\n\n    decode(reader: Reader): any {\n        let value = mask(reader.readValue(), this.size * 8);\n\n        if (this.signed) {\n            value = fromTwos(value, this.size * 8);\n        }\n\n        return value;\n    }\n}\n\n", "import { toUtf8Bytes, toUtf8String } from \"../../utils/utf8.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { DynamicBytesCoder } from \"./bytes.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\n/**\n *  @_ignore\n */\nexport class StringCoder extends DynamicBytesCoder {\n\n    constructor(localName: string) {\n        super(\"string\", localName);\n    }\n\n    defaultValue(): string {\n        return \"\";\n    }\n\n    encode(writer: Writer, _value: string | Typed): number {\n        return super.encode(writer, toUtf8Bytes(Typed.dereference(_value, \"string\")));\n    }\n\n    decode(reader: Reader): any {\n        return toUtf8String(super.decode(reader));\n    }\n}\n", "import { defineProperties } from \"../../utils/properties.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n\nimport { pack, unpack } from \"./array.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n/**\n *  @_ignore\n */\nexport class TupleCoder extends Coder {\n    readonly coders!: ReadonlyArray<Coder>;\n\n    constructor(coders: Array<Coder>, localName: string) {\n        let dynamic = false;\n        const types: Array<string> = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) { dynamic = true; }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n\n        super(\"tuple\", type, localName, dynamic);\n        defineProperties<TupleCoder>(this, { coders: Object.freeze(coders.slice()) });\n    }\n\n    defaultValue(): any {\n        const values: any = [ ];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) { accum[name] = 0; }\n                accum[name]++;\n            }\n            return accum;\n        }, <{ [ name: string ]: number }>{ });\n\n        // Add named values\n        this.coders.forEach((coder: Coder, index: number) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) { return; }\n\n            if (name === \"length\") { name = \"_length\"; }\n\n            if (values[name] != null) { return; }\n\n            values[name] = values[index];\n        });\n\n        return Object.freeze(values);\n    }\n\n    encode(writer: Writer, _value: Array<any> | { [ name: string ]: any } | Typed): number {\n        const value = Typed.dereference(_value, \"tuple\");\n        return pack(writer, this.coders, value);\n    }\n\n    decode(reader: Reader): any {\n        return unpack(reader, this.coders);\n    }\n}\n\n", "import { keccak256 } from \"../crypto/index.js\";\nimport { toUtf8Bytes } from \"../utils/index.js\";\n\n/**\n *  A simple hashing function which operates on UTF-8 strings to\n *  compute an 32-byte identifier.\n *\n *  This simply computes the [UTF-8 bytes](toUtf8Bytes) and computes\n *  the [[keccak256]].\n *\n *  @example:\n *    id(\"hello world\")\n *    //_result:\n */\nexport function id(value: string): string {\n    return keccak256(toUtf8Bytes(value));\n}\n", "// created 2023-09-25T01:01:55.148Z\n// compressed base64-encoded blob for include-ens data\n// source: https://github.com/adraffy/ens-normalize.js/blob/main/src/make.js\n// see: https://github.com/adraffy/ens-normalize.js#security\n// SHA-256: 0565ed049b9cf1614bb9e11ba7d8ac6a6fb96c893253d890f7e2b2884b9ded32\nvar COMPRESSED$1 = '';\nconst FENCED = new Map([[8217,\"apostrophe\"],[8260,\"fraction slash\"],[12539,\"middle dot\"]]);\nconst NSM_MAX = 4;\n\nfunction decode_arithmetic(bytes) {\r\n\tlet pos = 0;\r\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\r\n\t\r\n\t// decode the frequency table\r\n\tlet symbol_count = u16();\r\n\tlet total = 1;\r\n\tlet acc = [0, 1]; // first symbol has frequency 1\r\n\tfor (let i = 1; i < symbol_count; i++) {\r\n\t\tacc.push(total += u16());\r\n\t}\r\n\r\n\t// skip the sized-payload that the last 3 symbols index into\r\n\tlet skip = u16();\r\n\tlet pos_payload = pos;\r\n\tpos += skip;\r\n\r\n\tlet read_width = 0;\r\n\tlet read_buffer = 0; \r\n\tfunction read_bit() {\r\n\t\tif (read_width == 0) {\r\n\t\t\t// this will read beyond end of buffer\r\n\t\t\t// but (undefined|0) => zero pad\r\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\r\n\t\t\tread_width = 8;\r\n\t\t}\r\n\t\treturn (read_buffer >> --read_width) & 1;\r\n\t}\r\n\r\n\tconst N = 31;\r\n\tconst FULL = 2**N;\r\n\tconst HALF = FULL >>> 1;\r\n\tconst QRTR = HALF >> 1;\r\n\tconst MASK = FULL - 1;\r\n\r\n\t// fill register\r\n\tlet register = 0;\r\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\r\n\r\n\tlet symbols = [];\r\n\tlet low = 0;\r\n\tlet range = FULL; // treat like a float\r\n\twhile (true) {\r\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\r\n\t\tlet start = 0;\r\n\t\tlet end = symbol_count;\r\n\t\twhile (end - start > 1) { // binary search\r\n\t\t\tlet mid = (start + end) >>> 1;\r\n\t\t\tif (value < acc[mid]) {\r\n\t\t\t\tend = mid;\r\n\t\t\t} else {\r\n\t\t\t\tstart = mid;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (start == 0) break; // first symbol is end mark\r\n\t\tsymbols.push(start);\r\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\r\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1;\r\n\t\twhile (((a ^ b) & HALF) == 0) {\r\n\t\t\tregister = (register << 1) & MASK | read_bit();\r\n\t\t\ta = (a << 1) & MASK;\r\n\t\t\tb = (b << 1) & MASK | 1;\r\n\t\t}\r\n\t\twhile (a & ~b & QRTR) {\r\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\r\n\t\t\ta = (a << 1) ^ HALF;\r\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\r\n\t\t}\r\n\t\tlow = a;\r\n\t\trange = 1 + b - a;\r\n\t}\r\n\tlet offset = symbol_count - 4;\r\n\treturn symbols.map(x => { // index into payload\r\n\t\tswitch (x - offset) {\r\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\r\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\r\n\t\t\tcase 1: return offset + bytes[pos_payload++];\r\n\t\t\tdefault: return x - 1;\r\n\t\t}\r\n\t});\r\n}\t\r\n\r\n// returns an iterator which returns the next symbol\r\nfunction read_payload(v) {\r\n\tlet pos = 0;\r\n\treturn () => v[pos++];\r\n}\r\nfunction read_compressed_payload(s) {\r\n\treturn read_payload(decode_arithmetic(unsafe_atob(s)));\r\n}\r\n\r\n// unsafe in the sense:\r\n// expected well-formed Base64 w/o padding \r\n// 20220922: added for https://github.com/adraffy/ens-normalize.js/issues/4\r\nfunction unsafe_atob(s) {\r\n\tlet lookup = [];\r\n\t[...'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'].forEach((c, i) => lookup[c.charCodeAt(0)] = i);\r\n\tlet n = s.length;\r\n\tlet ret = new Uint8Array((6 * n) >> 3);\r\n\tfor (let i = 0, pos = 0, width = 0, carry = 0; i < n; i++) {\r\n\t\tcarry = (carry << 6) | lookup[s.charCodeAt(i)];\r\n\t\twidth += 6;\r\n\t\tif (width >= 8) {\r\n\t\t\tret[pos++] = (carry >> (width -= 8));\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\r\nfunction signed(i) { \r\n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\r\n}\r\n\r\nfunction read_deltas(n, next) {\r\n\tlet v = Array(n);\r\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\r\n\treturn v;\r\n}\r\n\r\n// [123][5] => [0 3] [1 1] [0 0]\r\nfunction read_sorted(next, prev = 0) {\r\n\tlet ret = [];\r\n\twhile (true) {\r\n\t\tlet x = next();\r\n\t\tlet n = next();\r\n\t\tif (!n) break;\r\n\t\tprev += x;\r\n\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\tret.push(prev + i);\r\n\t\t}\r\n\t\tprev += n + 1;\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction read_sorted_arrays(next) {\r\n\treturn read_array_while(() => { \r\n\t\tlet v = read_sorted(next);\r\n\t\tif (v.length) return v;\r\n\t});\r\n}\r\n\r\n// returns map of x => ys\r\nfunction read_mapped(next) {\r\n\tlet ret = [];\r\n\twhile (true) {\r\n\t\tlet w = next();\r\n\t\tif (w == 0) break;\r\n\t\tret.push(read_linear_table(w, next));\r\n\t}\r\n\twhile (true) {\r\n\t\tlet w = next() - 1;\r\n\t\tif (w < 0) break;\r\n\t\tret.push(read_replacement_table(w, next));\r\n\t}\r\n\treturn ret.flat();\r\n}\r\n\r\n// read until next is falsy\r\n// return array of read values\r\nfunction read_array_while(next) {\r\n\tlet v = [];\r\n\twhile (true) {\r\n\t\tlet x = next(v.length);\r\n\t\tif (!x) break;\r\n\t\tv.push(x);\r\n\t}\r\n\treturn v;\r\n}\r\n\r\n// read w columns of length n\r\n// return as n rows of length w\r\nfunction read_transposed(n, w, next) {\r\n\tlet m = Array(n).fill().map(() => []);\r\n\tfor (let i = 0; i < w; i++) {\r\n\t\tread_deltas(n, next).forEach((x, j) => m[j].push(x));\r\n\t}\r\n\treturn m;\r\n}\r\n \r\n// returns [[x, ys], [x+dx, ys+dy], [x+2*dx, ys+2*dy], ...]\r\n// where dx/dy = steps, n = run size, w = length of y\r\nfunction read_linear_table(w, next) {\r\n\tlet dx = 1 + next();\r\n\tlet dy = next();\r\n\tlet vN = read_array_while(next);\r\n\tlet m = read_transposed(vN.length, 1+w, next);\r\n\treturn m.flatMap((v, i) => {\r\n\t\tlet [x, ...ys] = v;\r\n\t\treturn Array(vN[i]).fill().map((_, j) => {\r\n\t\t\tlet j_dy = j * dy;\r\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\r\n\t\t});\r\n\t});\r\n}\r\n\r\n// return [[x, ys...], ...]\r\n// where w = length of y\r\nfunction read_replacement_table(w, next) { \r\n\tlet n = 1 + next();\r\n\tlet m = read_transposed(n, 1+w, next);\r\n\treturn m.map(v => [v[0], v.slice(1)]);\r\n}\r\n\r\n\r\nfunction read_trie(next) {\r\n\tlet ret = [];\r\n\tlet sorted = read_sorted(next); \r\n\texpand(decode([]), []);\r\n\treturn ret; // not sorted\r\n\tfunction decode(Q) { // characters that lead into this node\r\n\t\tlet S = next(); // state: valid, save, check\r\n\t\tlet B = read_array_while(() => { // buckets leading to new nodes\r\n\t\t\tlet cps = read_sorted(next).map(i => sorted[i]);\r\n\t\t\tif (cps.length) return decode(cps);\r\n\t\t});\r\n\t\treturn {S, B, Q};\r\n\t}\r\n\tfunction expand({S, B}, cps, saved) {\r\n\t\tif (S & 4 && saved === cps[cps.length-1]) return;\r\n\t\tif (S & 2) saved = cps[cps.length-1];\r\n\t\tif (S & 1) ret.push(cps); \r\n\t\tfor (let br of B) {\r\n\t\t\tfor (let cp of br.Q) {\r\n\t\t\t\texpand(br, [...cps, cp], saved);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\n\nfunction hex_cp(cp) {\r\n\treturn cp.toString(16).toUpperCase().padStart(2, '0');\r\n}\r\n\r\nfunction quote_cp(cp) {\r\n\treturn `{${hex_cp(cp)}}`; // raffy convention: like \"\\u{X}\" w/o the \"\\u\"\r\n}\r\n\r\n/*\r\nexport function explode_cp(s) {\r\n\treturn [...s].map(c => c.codePointAt(0));\r\n}\r\n*/\r\nfunction explode_cp(s) { // this is about 2x faster\r\n\tlet cps = [];\r\n\tfor (let pos = 0, len = s.length; pos < len; ) {\r\n\t\tlet cp = s.codePointAt(pos);\r\n\t\tpos += cp < 0x10000 ? 1 : 2;\r\n\t\tcps.push(cp);\r\n\t}\r\n\treturn cps;\r\n}\r\n\r\nfunction str_from_cps(cps) {\r\n\tconst chunk = 4096;\r\n\tlet len = cps.length;\r\n\tif (len < chunk) return String.fromCodePoint(...cps);\r\n\tlet buf = [];\r\n\tfor (let i = 0; i < len; ) {\r\n\t\tbuf.push(String.fromCodePoint(...cps.slice(i, i += chunk)));\r\n\t}\r\n\treturn buf.join('');\r\n}\r\n\r\nfunction compare_arrays(a, b) {\r\n\tlet n = a.length;\r\n\tlet c = n - b.length;\r\n\tfor (let i = 0; c == 0 && i < n; i++) c = a[i] - b[i];\r\n\treturn c;\r\n}\n\n// created 2023-09-25T01:01:55.148Z\n// compressed base64-encoded blob for include-nf data\n// source: https://github.com/adraffy/ens-normalize.js/blob/main/src/make.js\n// see: https://github.com/adraffy/ens-normalize.js#security\n// SHA-256: a974b6f8541fc29d919bc85118af0a44015851fab5343f8679cb31be2bdb209e\nvar COMPRESSED = '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';\n\n// https://unicode.org/reports/tr15/\r\n// for reference implementation\r\n// see: /derive/nf.js\r\n\r\n\r\n// algorithmic hangul\r\n// https://www.unicode.org/versions/Unicode15.0.0/ch03.pdf (page 144)\r\nconst S0 = 0xAC00;\r\nconst L0 = 0x1100;\r\nconst V0 = 0x1161;\r\nconst T0 = 0x11A7;\r\nconst L_COUNT = 19;\r\nconst V_COUNT = 21;\r\nconst T_COUNT = 28;\r\nconst N_COUNT = V_COUNT * T_COUNT;\r\nconst S_COUNT = L_COUNT * N_COUNT;\r\nconst S1 = S0 + S_COUNT;\r\nconst L1 = L0 + L_COUNT;\r\nconst V1 = V0 + V_COUNT;\r\nconst T1 = T0 + T_COUNT;\r\n\r\nfunction unpack_cc(packed) {\r\n\treturn (packed >> 24) & 0xFF;\r\n}\r\nfunction unpack_cp(packed) {\r\n\treturn packed & 0xFFFFFF;\r\n}\r\n\r\nlet SHIFTED_RANK, EXCLUSIONS, DECOMP, RECOMP;\r\n\r\nfunction init$1() {\r\n\t//console.time('nf');\r\n\tlet r = read_compressed_payload(COMPRESSED);\r\n\tSHIFTED_RANK = new Map(read_sorted_arrays(r).flatMap((v, i) => v.map(x => [x, (i+1) << 24]))); // pre-shifted\r\n\tEXCLUSIONS = new Set(read_sorted(r));\r\n\tDECOMP = new Map();\r\n\tRECOMP = new Map();\r\n\tfor (let [cp, cps] of read_mapped(r)) {\r\n\t\tif (!EXCLUSIONS.has(cp) && cps.length == 2) {\r\n\t\t\tlet [a, b] = cps;\r\n\t\t\tlet bucket = RECOMP.get(a);\r\n\t\t\tif (!bucket) {\r\n\t\t\t\tbucket = new Map();\r\n\t\t\t\tRECOMP.set(a, bucket);\r\n\t\t\t}\r\n\t\t\tbucket.set(b, cp);\r\n\t\t}\r\n\t\tDECOMP.set(cp, cps.reverse()); // stored reversed\r\n\t}\r\n\t//console.timeEnd('nf');\r\n\t// 20230905: 11ms\r\n}\r\n\r\nfunction is_hangul(cp) {\r\n\treturn cp >= S0 && cp < S1;\r\n}\r\n\r\nfunction compose_pair(a, b) {\r\n\tif (a >= L0 && a < L1 && b >= V0 && b < V1) {\r\n\t\treturn S0 + (a - L0) * N_COUNT + (b - V0) * T_COUNT;\r\n\t} else if (is_hangul(a) && b > T0 && b < T1 && (a - S0) % T_COUNT == 0) {\r\n\t\treturn a + (b - T0);\r\n\t} else {\r\n\t\tlet recomp = RECOMP.get(a);\r\n\t\tif (recomp) {\r\n\t\t\trecomp = recomp.get(b);\r\n\t\t\tif (recomp) {\r\n\t\t\t\treturn recomp;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n}\r\n\r\nfunction decomposed(cps) {\r\n\tif (!SHIFTED_RANK) init$1();\r\n\tlet ret = [];\r\n\tlet buf = [];\r\n\tlet check_order = false;\r\n\tfunction add(cp) {\r\n\t\tlet cc = SHIFTED_RANK.get(cp);\r\n\t\tif (cc) {\r\n\t\t\tcheck_order = true;\r\n\t\t\tcp |= cc;\r\n\t\t}\r\n\t\tret.push(cp);\r\n\t}\r\n\tfor (let cp of cps) {\r\n\t\twhile (true) {\r\n\t\t\tif (cp < 0x80) {\r\n\t\t\t\tret.push(cp);\r\n\t\t\t} else if (is_hangul(cp)) {\r\n\t\t\t\tlet s_index = cp - S0;\r\n\t\t\t\tlet l_index = s_index / N_COUNT | 0;\r\n\t\t\t\tlet v_index = (s_index % N_COUNT) / T_COUNT | 0;\r\n\t\t\t\tlet t_index = s_index % T_COUNT;\r\n\t\t\t\tadd(L0 + l_index);\r\n\t\t\t\tadd(V0 + v_index);\r\n\t\t\t\tif (t_index > 0) add(T0 + t_index);\r\n\t\t\t} else {\r\n\t\t\t\tlet mapped = DECOMP.get(cp);\r\n\t\t\t\tif (mapped) {\r\n\t\t\t\t\tbuf.push(...mapped);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tadd(cp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!buf.length) break;\r\n\t\t\tcp = buf.pop();\r\n\t\t}\r\n\t}\r\n\tif (check_order && ret.length > 1) {\r\n\t\tlet prev_cc = unpack_cc(ret[0]);\r\n\t\tfor (let i = 1; i < ret.length; i++) {\r\n\t\t\tlet cc = unpack_cc(ret[i]);\r\n\t\t\tif (cc == 0 || prev_cc <= cc) {\r\n\t\t\t\tprev_cc = cc;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlet j = i-1;\r\n\t\t\twhile (true) {\r\n\t\t\t\tlet tmp = ret[j+1];\r\n\t\t\t\tret[j+1] = ret[j];\r\n\t\t\t\tret[j] = tmp;\r\n\t\t\t\tif (!j) break;\r\n\t\t\t\tprev_cc = unpack_cc(ret[--j]);\r\n\t\t\t\tif (prev_cc <= cc) break;\r\n\t\t\t}\r\n\t\t\tprev_cc = unpack_cc(ret[i]);\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction composed_from_decomposed(v) {\r\n\tlet ret = [];\r\n\tlet stack = [];\r\n\tlet prev_cp = -1;\r\n\tlet prev_cc = 0;\r\n\tfor (let packed of v) {\r\n\t\tlet cc = unpack_cc(packed);\r\n\t\tlet cp = unpack_cp(packed);\r\n\t\tif (prev_cp == -1) {\r\n\t\t\tif (cc == 0) {\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tret.push(cp);\r\n\t\t\t}\r\n\t\t} else if (prev_cc > 0 && prev_cc >= cc) {\r\n\t\t\tif (cc == 0) {\r\n\t\t\t\tret.push(prev_cp, ...stack);\r\n\t\t\t\tstack.length = 0;\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tstack.push(cp);\r\n\t\t\t}\r\n\t\t\tprev_cc = cc;\r\n\t\t} else {\r\n\t\t\tlet composed = compose_pair(prev_cp, cp);\r\n\t\t\tif (composed >= 0) {\r\n\t\t\t\tprev_cp = composed;\r\n\t\t\t} else if (prev_cc == 0 && cc == 0) {\r\n\t\t\t\tret.push(prev_cp);\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tstack.push(cp);\r\n\t\t\t\tprev_cc = cc;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (prev_cp >= 0) {\r\n\t\tret.push(prev_cp, ...stack);\t\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\n// note: cps can be iterable\r\nfunction nfd(cps) {\r\n\treturn decomposed(cps).map(unpack_cp);\r\n}\r\nfunction nfc(cps) {\r\n\treturn composed_from_decomposed(decomposed(cps));\r\n}\n\nconst HYPHEN = 0x2D;\r\nconst STOP = 0x2E;\r\nconst STOP_CH = '.';\r\nconst FE0F = 0xFE0F;\r\nconst UNIQUE_PH = 1;\r\n\r\n// 20230913: replace [...v] with Array_from(v) to avoid large spreads\r\nconst Array_from = x => Array.from(x); // Array.from.bind(Array);\r\n\r\nfunction group_has_cp(g, cp) {\r\n\t// 20230913: keep primary and secondary distinct instead of creating valid union\r\n\treturn g.P.has(cp) || g.Q.has(cp);\r\n}\r\n\r\nclass Emoji extends Array {\r\n\tget is_emoji() { return true; } // free tagging system\r\n}\r\n\r\nlet MAPPED, IGNORED, CM, NSM, ESCAPE, NFC_CHECK, GROUPS, WHOLE_VALID, WHOLE_MAP, VALID, EMOJI_LIST, EMOJI_ROOT;\r\n\r\nfunction init() {\r\n\tif (MAPPED) return;\r\n\t\r\n\tlet r = read_compressed_payload(COMPRESSED$1);\r\n\tconst read_sorted_array = () => read_sorted(r);\r\n\tconst read_sorted_set = () => new Set(read_sorted_array());\r\n\tconst set_add_many = (set, v) => v.forEach(x => set.add(x));\r\n\r\n\tMAPPED = new Map(read_mapped(r)); \r\n\tIGNORED = read_sorted_set(); // ignored characters are not valid, so just read raw codepoints\r\n\r\n\t/*\r\n\t// direct include from payload is smaller than the decompression code\r\n\tconst FENCED = new Map(read_array_while(() => {\r\n\t\tlet cp = r();\r\n\t\tif (cp) return [cp, read_str(r())];\r\n\t}));\r\n\t*/\r\n\t// 20230217: we still need all CM for proper error formatting\r\n\t// but norm only needs NSM subset that are potentially-valid\r\n\tCM = read_sorted_array();\r\n\tNSM = new Set(read_sorted_array().map(i => CM[i]));\r\n\tCM = new Set(CM);\r\n\t\r\n\tESCAPE = read_sorted_set(); // characters that should not be printed\r\n\tNFC_CHECK = read_sorted_set(); // only needed to illustrate ens_tokenize() transformations\r\n\r\n\tlet chunks = read_sorted_arrays(r);\r\n\tlet unrestricted = r();\r\n\t//const read_chunked = () => new Set(read_sorted_array().flatMap(i => chunks[i]).concat(read_sorted_array()));\r\n\tconst read_chunked = () => {\r\n\t\t// 20230921: build set in parts, 2x faster\r\n\t\tlet set = new Set();\r\n\t\tread_sorted_array().forEach(i => set_add_many(set, chunks[i]));\r\n\t\tset_add_many(set, read_sorted_array());\r\n\t\treturn set; \r\n\t};\r\n\tGROUPS = read_array_while(i => {\r\n\t\t// minifier property mangling seems unsafe\r\n\t\t// so these are manually renamed to single chars\r\n\t\tlet N = read_array_while(r).map(x => x+0x60);\r\n\t\tif (N.length) {\r\n\t\t\tlet R = i >= unrestricted; // unrestricted then restricted\r\n\t\t\tN[0] -= 32; // capitalize\r\n\t\t\tN = str_from_cps(N);\r\n\t\t\tif (R) N=`Restricted[${N}]`;\r\n\t\t\tlet P = read_chunked(); // primary\r\n\t\t\tlet Q = read_chunked(); // secondary\r\n\t\t\tlet M = !r(); // not-whitelisted, check for NSM\r\n\t\t\t// *** this code currently isn't needed ***\r\n\t\t\t/*\r\n\t\t\tlet V = [...P, ...Q].sort((a, b) => a-b); // derive: sorted valid\r\n\t\t\tlet M = r()-1; // number of combining mark\r\n\t\t\tif (M < 0) { // whitelisted\r\n\t\t\t\tM = new Map(read_array_while(() => {\r\n\t\t\t\t\tlet i = r();\r\n\t\t\t\t\tif (i) return [V[i-1], read_array_while(() => {\r\n\t\t\t\t\t\tlet v = read_array_while(r);\r\n\t\t\t\t\t\tif (v.length) return v.map(x => x-1);\r\n\t\t\t\t\t})];\r\n\t\t\t\t}));\r\n\t\t\t}*/\r\n\t\t\treturn {N, P, Q, M, R};\r\n\t\t}\r\n\t});\r\n\r\n\t// decode compressed wholes\r\n\tWHOLE_VALID = read_sorted_set();\r\n\tWHOLE_MAP = new Map();\r\n\tlet wholes = read_sorted_array().concat(Array_from(WHOLE_VALID)).sort((a, b) => a-b); // must be sorted\r\n\twholes.forEach((cp, i) => {\r\n\t\tlet d = r(); \r\n\t\tlet w = wholes[i] = d ? wholes[i-d] : {V: [], M: new Map()};\r\n\t\tw.V.push(cp); // add to member set\r\n\t\tif (!WHOLE_VALID.has(cp)) {\r\n\t\t\tWHOLE_MAP.set(cp, w);  // register with whole map\r\n\t\t}\r\n\t});\r\n\r\n\t// compute confusable-extent complements\r\n\t// usage: WHOLE_MAP.get(cp).M.get(cp) = complement set\r\n\tfor (let {V, M} of new Set(WHOLE_MAP.values())) {\r\n\t\t// connect all groups that have each whole character\r\n\t\tlet recs = [];\r\n\t\tfor (let cp of V) {\r\n\t\t\tlet gs = GROUPS.filter(g => group_has_cp(g, cp));\r\n\t\t\tlet rec = recs.find(({G}) => gs.some(g => G.has(g)));\r\n\t\t\tif (!rec) {\r\n\t\t\t\trec = {G: new Set(), V: []};\r\n\t\t\t\trecs.push(rec);\r\n\t\t\t}\r\n\t\t\trec.V.push(cp);\r\n\t\t\tset_add_many(rec.G, gs);\r\n\t\t}\r\n\t\t// per character cache groups which are not a member of the extent\r\n\t\tlet union = recs.flatMap(x => Array_from(x.G)); // all of the groups used by this whole\r\n\t\tfor (let {G, V} of recs) {\r\n\t\t\tlet complement = new Set(union.filter(g => !G.has(g))); // groups not covered by the extent\r\n\t\t\tfor (let cp of V) {\r\n\t\t\t\tM.set(cp, complement); // this is the same reference\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// compute valid set\r\n\t// 20230924: VALID was union but can be re-used\r\n\tVALID = new Set(); // exists in 1+ groups\r\n\tlet multi = new Set(); // exists in 2+ groups\r\n\tconst add_to_union = cp => VALID.has(cp) ? multi.add(cp) : VALID.add(cp);\r\n\tfor (let g of GROUPS) {\r\n\t\tfor (let cp of g.P) add_to_union(cp);\r\n\t\tfor (let cp of g.Q) add_to_union(cp);\r\n\t}\r\n\t// dual purpose WHOLE_MAP: return placeholder if unique non-confusable\r\n\tfor (let cp of VALID) {\r\n\t\tif (!WHOLE_MAP.has(cp) && !multi.has(cp)) {\r\n\t\t\tWHOLE_MAP.set(cp, UNIQUE_PH);\r\n\t\t}\r\n\t}\r\n\t// add all decomposed parts\r\n\t// see derive: \"Valid is Closed (via Brute-force)\"\r\n\tset_add_many(VALID, nfd(VALID));\r\n\t\r\n\t// decode emoji\r\n\t// 20230719: emoji are now fully-expanded to avoid quirk logic \r\n\tEMOJI_LIST = read_trie(r).map(v => Emoji.from(v)).sort(compare_arrays);\r\n\tEMOJI_ROOT = new Map(); // this has approx 7K nodes (2+ per emoji)\r\n\tfor (let cps of EMOJI_LIST) {\r\n\t\t// 20230719: change to *slightly* stricter algorithm which disallows \r\n\t\t// insertion of misplaced FE0F in emoji sequences (matching ENSIP-15)\r\n\t\t// example: beautified [A B] (eg. flag emoji) \r\n\t\t//  before: allow: [A FE0F B], error: [A FE0F FE0F B] \r\n\t\t//   after: error: both\r\n\t\t// note: this code now matches ENSNormalize.{cs,java} logic\r\n\t\tlet prev = [EMOJI_ROOT];\r\n\t\tfor (let cp of cps) {\r\n\t\t\tlet next = prev.map(node => {\r\n\t\t\t\tlet child = node.get(cp);\r\n\t\t\t\tif (!child) {\r\n\t\t\t\t\t// should this be object? \r\n\t\t\t\t\t// (most have 1-2 items, few have many)\r\n\t\t\t\t\t// 20230719: no, v8 default map is 4?\r\n\t\t\t\t\tchild = new Map();\r\n\t\t\t\t\tnode.set(cp, child);\r\n\t\t\t\t}\r\n\t\t\t\treturn child;\r\n\t\t\t});\r\n\t\t\tif (cp === FE0F) {\r\n\t\t\t\tprev.push(...next); // less than 20 elements\r\n\t\t\t} else {\r\n\t\t\t\tprev = next;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let x of prev) {\r\n\t\t\tx.V = cps;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// if escaped: {HEX}\r\n//       else: \"x\" {HEX}\r\nfunction quoted_cp(cp) {\r\n\treturn (should_escape(cp) ? '' : `${bidi_qq(safe_str_from_cps([cp]))} `) + quote_cp(cp);\r\n}\r\n\r\n// 20230211: some messages can be mixed-directional and result in spillover\r\n// use 200E after a quoted string to force the remainder of a string from \r\n// acquring the direction of the quote\r\n// https://www.w3.org/International/questions/qa-bidi-unicode-controls#exceptions\r\nfunction bidi_qq(s) {\r\n\treturn `\"${s}\"\\u200E`; // strong LTR\r\n}\r\n\r\nfunction check_label_extension(cps) {\r\n\tif (cps.length >= 4 && cps[2] == HYPHEN && cps[3] == HYPHEN) {\r\n\t\tthrow new Error(`invalid label extension: \"${str_from_cps(cps.slice(0, 4))}\"`); // this can only be ascii so cant be bidi\r\n\t}\r\n}\r\nfunction check_leading_underscore(cps) {\r\n\tconst UNDERSCORE = 0x5F;\r\n\tfor (let i = cps.lastIndexOf(UNDERSCORE); i > 0; ) {\r\n\t\tif (cps[--i] !== UNDERSCORE) {\r\n\t\t\tthrow new Error('underscore allowed only at start');\r\n\t\t}\r\n\t}\r\n}\r\n// check that a fenced cp is not leading, trailing, or touching another fenced cp\r\nfunction check_fenced(cps) {\r\n\tlet cp = cps[0];\r\n\tlet prev = FENCED.get(cp);\r\n\tif (prev) throw error_placement(`leading ${prev}`);\r\n\tlet n = cps.length;\r\n\tlet last = -1; // prevents trailing from throwing\r\n\tfor (let i = 1; i < n; i++) {\r\n\t\tcp = cps[i];\r\n\t\tlet match = FENCED.get(cp);\r\n\t\tif (match) {\r\n\t\t\t// since cps[0] isn't fenced, cps[1] cannot throw\r\n\t\t\tif (last == i) throw error_placement(`${prev} + ${match}`);\r\n\t\t\tlast = i + 1;\r\n\t\t\tprev = match;\r\n\t\t}\r\n\t}\r\n\tif (last == n) throw error_placement(`trailing ${prev}`);\r\n}\r\n\r\n// create a safe to print string \r\n// invisibles are escaped\r\n// leading cm uses placeholder\r\n// if cps exceed max, middle truncate with ellipsis\r\n// quoter(cp) => string, eg. 3000 => \"{3000}\"\r\n// note: in html, you'd call this function then replace [<>&] with entities\r\nfunction safe_str_from_cps(cps, max = Infinity, quoter = quote_cp) {\r\n\t//if (Number.isInteger(cps)) cps = [cps];\r\n\t//if (!Array.isArray(cps)) throw new TypeError(`expected codepoints`);\r\n\tlet buf = [];\r\n\tif (is_combining_mark(cps[0])) buf.push('\u25CC');\r\n\tif (cps.length > max) {\r\n\t\tmax >>= 1;\r\n\t\tcps = [...cps.slice(0, max), 0x2026, ...cps.slice(-max)];\r\n\t}\r\n\tlet prev = 0;\r\n\tlet n = cps.length;\r\n\tfor (let i = 0; i < n; i++) {\r\n\t\tlet cp = cps[i];\r\n\t\tif (should_escape(cp)) {\r\n\t\t\tbuf.push(str_from_cps(cps.slice(prev, i)));\r\n\t\t\tbuf.push(quoter(cp));\r\n\t\t\tprev = i + 1;\r\n\t\t}\r\n\t}\r\n\tbuf.push(str_from_cps(cps.slice(prev, n)));\r\n\treturn buf.join('');\r\n}\r\n\r\n// note: set(s) cannot be exposed because they can be modified\r\n// note: Object.freeze() doesn't work\r\nfunction is_combining_mark(cp) {\r\n\tinit();\r\n\treturn CM.has(cp);\r\n}\r\nfunction should_escape(cp) {\r\n\tinit();\r\n\treturn ESCAPE.has(cp);\r\n}\r\n\r\n// return all supported emoji as fully-qualified emoji \r\n// ordered by length then lexicographic \r\nfunction ens_emoji() {\r\n\tinit();\r\n\treturn EMOJI_LIST.map(x => x.slice()); // emoji are exposed so copy\r\n}\r\n\r\nfunction ens_normalize_fragment(frag, decompose) {\r\n\tinit();\r\n\tlet nf = decompose ? nfd : nfc;\r\n\treturn frag.split(STOP_CH).map(label => str_from_cps(tokens_from_str(explode_cp(label), nf, filter_fe0f).flat())).join(STOP_CH);\r\n}\r\n\r\nfunction ens_normalize(name) {\r\n\treturn flatten(split(name, nfc, filter_fe0f));\r\n}\r\n\r\nfunction ens_beautify(name) {\r\n\tlet labels = split(name, nfc, x => x); // emoji not exposed\r\n\tfor (let {type, output, error} of labels) {\r\n\t\tif (error) break; // flatten will throw\r\n\r\n\t\t// replace leading/trailing hyphen\r\n\t\t// 20230121: consider beautifing all or leading/trailing hyphen to unicode variant\r\n\t\t// not exactly the same in every font, but very similar: \"-\" vs \"\u2010\"\r\n\t\t/*\r\n\t\tconst UNICODE_HYPHEN = 0x2010;\r\n\t\t// maybe this should replace all for visual consistancy?\r\n\t\t// `node tools/reg-count.js regex ^-\\{2,\\}` => 592\r\n\t\t//for (let i = 0; i < output.length; i++) if (output[i] == 0x2D) output[i] = 0x2010;\r\n\t\tif (output[0] == HYPHEN) output[0] = UNICODE_HYPHEN;\r\n\t\tlet end = output.length-1;\r\n\t\tif (output[end] == HYPHEN) output[end] = UNICODE_HYPHEN;\r\n\t\t*/\r\n\t\t// 20230123: WHATWG URL uses \"CheckHyphens\" false\r\n\t\t// https://url.spec.whatwg.org/#idna\r\n\r\n\t\t// update ethereum symbol\r\n\t\t// \u03BE => \u039E if not greek\r\n\t\tif (type !== 'Greek') array_replace(output, 0x3BE, 0x39E);\r\n\r\n\t\t// 20221213: fixes bidi subdomain issue, but breaks invariant (200E is disallowed)\r\n\t\t// could be fixed with special case for: 2D (.) + 200E (LTR)\r\n\t\t// https://discuss.ens.domains/t/bidi-label-ordering-spoof/15824\r\n\t\t//output.splice(0, 0, 0x200E);\r\n\t}\r\n\treturn flatten(labels);\r\n}\r\n\r\nfunction array_replace(v, a, b) {\r\n\tlet prev = 0;\r\n\twhile (true) {\r\n\t\tlet next = v.indexOf(a, prev);\r\n\t\tif (next < 0) break;\r\n\t\tv[next] = b; \r\n\t\tprev = next + 1;\r\n\t}\r\n}\r\n\r\nfunction ens_split(name, preserve_emoji) {\r\n\treturn split(name, nfc, preserve_emoji ? x => x.slice() : filter_fe0f); // emoji are exposed so copy\r\n}\r\n\r\nfunction split(name, nf, ef) {\r\n\tif (!name) return []; // 20230719: empty name allowance\r\n\tinit();\r\n\tlet offset = 0;\r\n\t// https://unicode.org/reports/tr46/#Validity_Criteria\r\n\t// 4.) \"The label must not contain a U+002E ( . ) FULL STOP.\"\r\n\treturn name.split(STOP_CH).map(label => {\r\n\t\tlet input = explode_cp(label);\r\n\t\tlet info = {\r\n\t\t\tinput,\r\n\t\t\toffset, // codepoint, not substring!\r\n\t\t};\r\n\t\toffset += input.length + 1; // + stop\r\n\t\ttry {\r\n\t\t\t// 1.) \"The label must be in Unicode Normalization Form NFC\"\r\n\t\t\tlet tokens = info.tokens = tokens_from_str(input, nf, ef);\r\n\t\t\tlet token_count = tokens.length;\r\n\t\t\tlet type;\r\n\t\t\tif (!token_count) { // the label was effectively empty (could of had ignored characters)\r\n\t\t\t\t//norm = [];\r\n\t\t\t\t//type = 'None'; // use this instead of next match, \"ASCII\"\r\n\t\t\t\t// 20230120: change to strict\r\n\t\t\t\t// https://discuss.ens.domains/t/ens-name-normalization-2nd/14564/59\r\n\t\t\t\tthrow new Error(`empty label`);\r\n\t\t\t} \r\n\t\t\tlet norm = info.output = tokens.flat();\r\n\t\t\tcheck_leading_underscore(norm);\r\n\t\t\tlet emoji = info.emoji = token_count > 1 || tokens[0].is_emoji; // same as: tokens.some(x => x.is_emoji);\r\n\t\t\tif (!emoji && norm.every(cp => cp < 0x80)) { // special case for ascii\r\n\t\t\t\t// 20230123: matches matches WHATWG, see note 3.3\r\n\t\t\t\tcheck_label_extension(norm); // only needed for ascii\r\n\t\t\t\t// cant have fenced\r\n\t\t\t\t// cant have cm\r\n\t\t\t\t// cant have wholes\r\n\t\t\t\t// see derive: \"Fastpath ASCII\"\r\n\t\t\t\ttype = 'ASCII';\r\n\t\t\t} else {\r\n\t\t\t\tlet chars = tokens.flatMap(x => x.is_emoji ? [] : x); // all of the nfc tokens concat together\r\n\t\t\t\tif (!chars.length) { // theres no text, just emoji\r\n\t\t\t\t\ttype = 'Emoji';\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 5.) \"The label must not begin with a combining mark, that is: General_Category=Mark.\"\r\n\t\t\t\t\tif (CM.has(norm[0])) throw error_placement('leading combining mark');\r\n\t\t\t\t\tfor (let i = 1; i < token_count; i++) { // we've already checked the first token\r\n\t\t\t\t\t\tlet cps = tokens[i];\r\n\t\t\t\t\t\tif (!cps.is_emoji && CM.has(cps[0])) { // every text token has emoji neighbors, eg. EtEEEtEt...\r\n\t\t\t\t\t\t\t// bidi_qq() not needed since emoji is LTR and cps is a CM\r\n\t\t\t\t\t\t\tthrow error_placement(`emoji + combining mark: \"${str_from_cps(tokens[i-1])} + ${safe_str_from_cps([cps[0]])}\"`); \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcheck_fenced(norm);\r\n\t\t\t\t\tlet unique = Array_from(new Set(chars));\r\n\t\t\t\t\tlet [g] = determine_group(unique); // take the first match\r\n\t\t\t\t\t// see derive: \"Matching Groups have Same CM Style\"\r\n\t\t\t\t\t// alternative: could form a hybrid type: Latin/Japanese/...\t\r\n\t\t\t\t\tcheck_group(g, chars); // need text in order\r\n\t\t\t\t\tcheck_whole(g, unique); // only need unique text (order would be required for multiple-char confusables)\r\n\t\t\t\t\ttype = g.N;\r\n\t\t\t\t\t// 20230121: consider exposing restricted flag\r\n\t\t\t\t\t// it's simpler to just check for 'Restricted'\r\n\t\t\t\t\t// or even better: type.endsWith(']')\r\n\t\t\t\t\t//if (g.R) info.restricted = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinfo.type = type;\r\n\t\t} catch (err) {\r\n\t\t\tinfo.error = err; // use full error object\r\n\t\t}\r\n\t\treturn info;\r\n\t});\r\n}\r\n\r\nfunction check_whole(group, unique) {\r\n\tlet maker;\r\n\tlet shared = [];\r\n\tfor (let cp of unique) {\r\n\t\tlet whole = WHOLE_MAP.get(cp);\r\n\t\tif (whole === UNIQUE_PH) return; // unique, non-confusable\r\n\t\tif (whole) {\r\n\t\t\tlet set = whole.M.get(cp); // groups which have a character that look-like this character\r\n\t\t\tmaker = maker ? maker.filter(g => set.has(g)) : Array_from(set);\r\n\t\t\tif (!maker.length) return; // confusable intersection is empty\r\n\t\t} else {\r\n\t\t\tshared.push(cp); \r\n\t\t}\r\n\t}\r\n\tif (maker) {\r\n\t\t// we have 1+ confusable\r\n\t\t// check if any of the remaining groups\r\n\t\t// contain the shared characters too\r\n\t\tfor (let g of maker) {\r\n\t\t\tif (shared.every(cp => group_has_cp(g, cp))) {\r\n\t\t\t\tthrow new Error(`whole-script confusable: ${group.N}/${g.N}`);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// assumption: unique.size > 0\r\n// returns list of matching groups\r\nfunction determine_group(unique) {\r\n\tlet groups = GROUPS;\r\n\tfor (let cp of unique) {\r\n\t\t// note: we need to dodge CM that are whitelisted\r\n\t\t// but that code isn't currently necessary\r\n\t\tlet gs = groups.filter(g => group_has_cp(g, cp));\r\n\t\tif (!gs.length) {\r\n\t\t\tif (!GROUPS.some(g => group_has_cp(g, cp))) { \r\n\t\t\t\t// the character was composed of valid parts\r\n\t\t\t\t// but it's NFC form is invalid\r\n\t\t\t\t// 20230716: change to more exact statement, see: ENSNormalize.{cs,java}\r\n\t\t\t\t// note: this doesn't have to be a composition\r\n\t\t\t\t// 20230720: change to full check\r\n\t\t\t\tthrow error_disallowed(cp); // this should be rare\r\n\t\t\t} else {\r\n\t\t\t\t// there is no group that contains all these characters\r\n\t\t\t\t// throw using the highest priority group that matched\r\n\t\t\t\t// https://www.unicode.org/reports/tr39/#mixed_script_confusables\r\n\t\t\t\tthrow error_group_member(groups[0], cp);\r\n\t\t\t}\r\n\t\t}\r\n\t\tgroups = gs;\r\n\t\tif (gs.length == 1) break; // there is only one group left\r\n\t}\r\n\t// there are at least 1 group(s) with all of these characters\r\n\treturn groups;\r\n}\r\n\r\n// throw on first error\r\nfunction flatten(split) {\r\n\treturn split.map(({input, error, output}) => {\r\n\t\tif (error) {\r\n\t\t\t// don't print label again if just a single label\r\n\t\t\tlet msg = error.message;\r\n\t\t\t// bidi_qq() only necessary if msg is digits\r\n\t\t\tthrow new Error(split.length == 1 ? msg : `Invalid label ${bidi_qq(safe_str_from_cps(input, 63))}: ${msg}`); \r\n\t\t}\r\n\t\treturn str_from_cps(output);\r\n\t}).join(STOP_CH);\r\n}\r\n\r\nfunction error_disallowed(cp) {\r\n\t// TODO: add cp to error?\r\n\treturn new Error(`disallowed character: ${quoted_cp(cp)}`); \r\n}\r\nfunction error_group_member(g, cp) {\r\n\tlet quoted = quoted_cp(cp);\r\n\tlet gg = GROUPS.find(g => g.P.has(cp)); // only check primary\r\n\tif (gg) {\r\n\t\tquoted = `${gg.N} ${quoted}`;\r\n\t}\r\n\treturn new Error(`illegal mixture: ${g.N} + ${quoted}`);\r\n}\r\nfunction error_placement(where) {\r\n\treturn new Error(`illegal placement: ${where}`);\r\n}\r\n\r\n// assumption: cps.length > 0\r\n// assumption: cps[0] isn't a CM\r\n// assumption: the previous character isn't an emoji\r\nfunction check_group(g, cps) {\r\n\tfor (let cp of cps) {\r\n\t\tif (!group_has_cp(g, cp)) {\r\n\t\t\t// for whitelisted scripts, this will throw illegal mixture on invalid cm, eg. \"e{300}{300}\"\r\n\t\t\t// at the moment, it's unnecessary to introduce an extra error type\r\n\t\t\t// until there exists a whitelisted multi-character\r\n\t\t\t//   eg. if (M < 0 && is_combining_mark(cp)) { ... }\r\n\t\t\t// there are 3 cases:\r\n\t\t\t//   1. illegal cm for wrong group => mixture error\r\n\t\t\t//   2. illegal cm for same group => cm error\r\n\t\t\t//       requires set of whitelist cm per group: \r\n\t\t\t//        eg. new Set([...g.P, ...g.Q].flatMap(nfc).filter(cp => CM.has(cp)))\r\n\t\t\t//   3. wrong group => mixture error\r\n\t\t\tthrow error_group_member(g, cp);\r\n\t\t}\r\n\t}\r\n\t//if (M >= 0) { // we have a known fixed cm count\r\n\tif (g.M) { // we need to check for NSM\r\n\t\tlet decomposed = nfd(cps);\r\n\t\tfor (let i = 1, e = decomposed.length; i < e; i++) { // see: assumption\r\n\t\t\t// 20230210: bugfix: using cps instead of decomposed h/t Carbon225\r\n\t\t\t/*\r\n\t\t\tif (CM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\twhile (j < e && CM.has(decomposed[j])) j++;\r\n\t\t\t\tif (j - i > M) {\r\n\t\t\t\t\tthrow new Error(`too many combining marks: ${g.N} ${bidi_qq(str_from_cps(decomposed.slice(i-1, j)))} (${j-i}/${M})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\t// 20230217: switch to NSM counting\r\n\t\t\t// https://www.unicode.org/reports/tr39/#Optional_Detection\r\n\t\t\tif (NSM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\tfor (let cp; j < e && NSM.has(cp = decomposed[j]); j++) {\r\n\t\t\t\t\t// a. Forbid sequences of the same nonspacing mark.\r\n\t\t\t\t\tfor (let k = i; k < j; k++) { // O(n^2) but n < 100\r\n\t\t\t\t\t\tif (decomposed[k] == cp) {\r\n\t\t\t\t\t\t\tthrow new Error(`duplicate non-spacing marks: ${quoted_cp(cp)}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// parse to end so we have full nsm count\r\n\t\t\t\t// b. Forbid sequences of more than 4 nonspacing marks (gc=Mn or gc=Me).\r\n\t\t\t\tif (j - i > NSM_MAX) {\r\n\t\t\t\t\t// note: this slice starts with a base char or spacing-mark cm\r\n\t\t\t\t\tthrow new Error(`excessive non-spacing marks: ${bidi_qq(safe_str_from_cps(decomposed.slice(i-1, j)))} (${j-i}/${NSM_MAX})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// *** this code currently isn't needed ***\r\n\t/*\r\n\tlet cm_whitelist = M instanceof Map;\r\n\tfor (let i = 0, e = cps.length; i < e; ) {\r\n\t\tlet cp = cps[i++];\r\n\t\tlet seqs = cm_whitelist && M.get(cp);\r\n\t\tif (seqs) { \r\n\t\t\t// list of codepoints that can follow\r\n\t\t\t// if this exists, this will always be 1+\r\n\t\t\tlet j = i;\r\n\t\t\twhile (j < e && CM.has(cps[j])) j++;\r\n\t\t\tlet cms = cps.slice(i, j);\r\n\t\t\tlet match = seqs.find(seq => !compare_arrays(seq, cms));\r\n\t\t\tif (!match) throw new Error(`disallowed combining mark sequence: \"${safe_str_from_cps([cp, ...cms])}\"`);\r\n\t\t\ti = j;\r\n\t\t} else if (!V.has(cp)) {\r\n\t\t\t// https://www.unicode.org/reports/tr39/#mixed_script_confusables\r\n\t\t\tlet quoted = quoted_cp(cp);\r\n\t\t\tfor (let cp of cps) {\r\n\t\t\t\tlet u = UNIQUE.get(cp);\r\n\t\t\t\tif (u && u !== g) {\r\n\t\t\t\t\t// if both scripts are restricted this error is confusing\r\n\t\t\t\t\t// because we don't differentiate RestrictedA from RestrictedB \r\n\t\t\t\t\tif (!u.R) quoted = `${quoted} is ${u.N}`;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthrow new Error(`disallowed ${g.N} character: ${quoted}`);\r\n\t\t\t//throw new Error(`disallowed character: ${quoted} (expected ${g.N})`);\r\n\t\t\t//throw new Error(`${g.N} does not allow: ${quoted}`);\r\n\t\t}\r\n\t}\r\n\tif (!cm_whitelist) {\r\n\t\tlet decomposed = nfd(cps);\r\n\t\tfor (let i = 1, e = decomposed.length; i < e; i++) { // we know it can't be cm leading\r\n\t\t\tif (CM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\twhile (j < e && CM.has(decomposed[j])) j++;\r\n\t\t\t\tif (j - i > M) {\r\n\t\t\t\t\tthrow new Error(`too many combining marks: \"${str_from_cps(decomposed.slice(i-1, j))}\" (${j-i}/${M})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t*/\r\n}\r\n\r\n// given a list of codepoints\r\n// returns a list of lists, where emoji are a fully-qualified (as Array subclass)\r\n// eg. explode_cp(\"abc\uD83D\uDCA9d\") => [[61, 62, 63], Emoji[1F4A9, FE0F], [64]]\r\n// 20230818: rename for 'process' name collision h/t Javarome\r\n// https://github.com/adraffy/ens-normalize.js/issues/23\r\nfunction tokens_from_str(input, nf, ef) {\r\n\tlet ret = [];\r\n\tlet chars = [];\r\n\tinput = input.slice().reverse(); // flip so we can pop\r\n\twhile (input.length) {\r\n\t\tlet emoji = consume_emoji_reversed(input);\r\n\t\tif (emoji) {\r\n\t\t\tif (chars.length) {\r\n\t\t\t\tret.push(nf(chars));\r\n\t\t\t\tchars = [];\r\n\t\t\t}\r\n\t\t\tret.push(ef(emoji));\r\n\t\t} else {\r\n\t\t\tlet cp = input.pop();\r\n\t\t\tif (VALID.has(cp)) {\r\n\t\t\t\tchars.push(cp);\r\n\t\t\t} else {\r\n\t\t\t\tlet cps = MAPPED.get(cp);\r\n\t\t\t\tif (cps) {\r\n\t\t\t\t\tchars.push(...cps); // less than 10 elements\r\n\t\t\t\t} else if (!IGNORED.has(cp)) {\r\n\t\t\t\t\t// 20230912: unicode 15.1 changed the order of processing such that\r\n\t\t\t\t\t// disallowed parts are only rejected after NFC\r\n\t\t\t\t\t// https://unicode.org/reports/tr46/#Validity_Criteria\r\n\t\t\t\t\t// this doesn't impact normalization as of today\r\n\t\t\t\t\t// technically, this error can be removed as the group logic will apply similar logic\r\n\t\t\t\t\t// however the error type might be less clear\r\n\t\t\t\t\tthrow error_disallowed(cp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (chars.length) {\r\n\t\tret.push(nf(chars));\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction filter_fe0f(cps) {\r\n\treturn cps.filter(cp => cp != FE0F);\r\n}\r\n\r\n// given array of codepoints\r\n// returns the longest valid emoji sequence (or undefined if no match)\r\n// *MUTATES* the supplied array\r\n// disallows interleaved ignored characters\r\n// fills (optional) eaten array with matched codepoints\r\nfunction consume_emoji_reversed(cps, eaten) {\r\n\tlet node = EMOJI_ROOT;\r\n\tlet emoji;\r\n\tlet pos = cps.length;\r\n\twhile (pos) {\r\n\t\tnode = node.get(cps[--pos]);\r\n\t\tif (!node) break;\r\n\t\tlet {V} = node;\r\n\t\tif (V) { // this is a valid emoji (so far)\r\n\t\t\temoji = V;\r\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // (optional) copy input, used for ens_tokenize()\r\n\t\t\tcps.length = pos; // truncate\r\n\t\t}\r\n\t}\r\n\treturn emoji;\r\n}\r\n\r\n// ************************************************************\r\n// tokenizer \r\n\r\nconst TY_VALID = 'valid';\r\nconst TY_MAPPED = 'mapped';\r\nconst TY_IGNORED = 'ignored';\r\nconst TY_DISALLOWED = 'disallowed';\r\nconst TY_EMOJI = 'emoji';\r\nconst TY_NFC = 'nfc';\r\nconst TY_STOP = 'stop';\r\n\r\nfunction ens_tokenize(name, {\r\n\tnf = true, // collapse unnormalized runs into a single token\r\n} = {}) {\r\n\tinit();\r\n\tlet input = explode_cp(name).reverse();\r\n\tlet eaten = [];\r\n\tlet tokens = [];\r\n\twhile (input.length) {\r\n\t\tlet emoji = consume_emoji_reversed(input, eaten);\r\n\t\tif (emoji) {\r\n\t\t\ttokens.push({\r\n\t\t\t\ttype: TY_EMOJI,\r\n\t\t\t\temoji: emoji.slice(), // copy emoji\r\n\t\t\t\tinput: eaten,\r\n\t\t\t\tcps: filter_fe0f(emoji)\r\n\t\t\t});\r\n\t\t\teaten = []; // reset buffer\r\n\t\t} else {\r\n\t\t\tlet cp = input.pop();\r\n\t\t\tif (cp == STOP) {\r\n\t\t\t\ttokens.push({type: TY_STOP, cp});\r\n\t\t\t} else if (VALID.has(cp)) {\r\n\t\t\t\ttokens.push({type: TY_VALID, cps: [cp]});\r\n\t\t\t} else if (IGNORED.has(cp)) {\r\n\t\t\t\ttokens.push({type: TY_IGNORED, cp});\r\n\t\t\t} else {\r\n\t\t\t\tlet cps = MAPPED.get(cp);\r\n\t\t\t\tif (cps) {\r\n\t\t\t\t\ttokens.push({type: TY_MAPPED, cp, cps: cps.slice()});\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttokens.push({type: TY_DISALLOWED, cp});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (nf) {\r\n\t\tfor (let i = 0, start = -1; i < tokens.length; i++) {\r\n\t\t\tlet token = tokens[i];\r\n\t\t\tif (is_valid_or_mapped(token.type)) {\r\n\t\t\t\tif (requires_check(token.cps)) { // normalization might be needed\r\n\t\t\t\t\tlet end = i + 1;\r\n\t\t\t\t\tfor (let pos = end; pos < tokens.length; pos++) { // find adjacent text\r\n\t\t\t\t\t\tlet {type, cps} = tokens[pos];\r\n\t\t\t\t\t\tif (is_valid_or_mapped(type)) {\r\n\t\t\t\t\t\t\tif (!requires_check(cps)) break;\r\n\t\t\t\t\t\t\tend = pos + 1;\r\n\t\t\t\t\t\t} else if (type !== TY_IGNORED) { // || type !== TY_DISALLOWED) { \r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (start < 0) start = i;\r\n\t\t\t\t\tlet slice = tokens.slice(start, end);\r\n\t\t\t\t\tlet cps0 = slice.flatMap(x => is_valid_or_mapped(x.type) ? x.cps : []); // strip junk tokens\r\n\t\t\t\t\tlet cps = nfc(cps0);\r\n\t\t\t\t\tif (compare_arrays(cps, cps0)) { // bundle into an nfc token\r\n\t\t\t\t\t\ttokens.splice(start, end - start, {\r\n\t\t\t\t\t\t\ttype: TY_NFC, \r\n\t\t\t\t\t\t\tinput: cps0, // there are 3 states: tokens0 ==(process)=> input ==(nfc)=> tokens/cps\r\n\t\t\t\t\t\t\tcps, \r\n\t\t\t\t\t\t\ttokens0: collapse_valid_tokens(slice),\r\n\t\t\t\t\t\t\ttokens: ens_tokenize(str_from_cps(cps), {nf: false})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\ti = start;\r\n\t\t\t\t\t} else { \r\n\t\t\t\t\t\ti = end - 1; // skip to end of slice\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstart = -1; // reset\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstart = i; // remember last\r\n\t\t\t\t}\r\n\t\t\t} else if (token.type !== TY_IGNORED) { // 20221024: is this correct?\r\n\t\t\t\tstart = -1; // reset\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn collapse_valid_tokens(tokens);\r\n}\r\n\r\nfunction is_valid_or_mapped(type) {\r\n\treturn type == TY_VALID || type == TY_MAPPED;\r\n}\r\n\r\nfunction requires_check(cps) {\r\n\treturn cps.some(cp => NFC_CHECK.has(cp));\r\n}\r\n\r\nfunction collapse_valid_tokens(tokens) {\r\n\tfor (let i = 0; i < tokens.length; i++) {\r\n\t\tif (tokens[i].type == TY_VALID) {\r\n\t\t\tlet j = i + 1;\r\n\t\t\twhile (j < tokens.length && tokens[j].type == TY_VALID) j++;\r\n\t\t\ttokens.splice(i, j - i, {type: TY_VALID, cps: tokens.slice(i, j).flatMap(x => x.cps)});\r\n\t\t}\r\n\t}\r\n\treturn tokens;\r\n}\n\nexport { ens_beautify, ens_emoji, ens_normalize, ens_normalize_fragment, ens_split, ens_tokenize, is_combining_mark, nfc, nfd, safe_str_from_cps, should_escape };\n", "\nimport { keccak256 } from \"../crypto/index.js\";\nimport {\n    concat, hexlify, assertArgument, toUtf8Bytes\n} from \"../utils/index.js\";\n\n\nimport { ens_normalize } from \"@adraffy/ens-normalize\";\n\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\n\nfunction checkComponent(comp: Uint8Array): Uint8Array {\n    assertArgument(comp.length !== 0, \"invalid ENS name; empty component\", \"comp\", comp)\n    return comp;\n}\n\nfunction ensNameSplit(name: string): Array<Uint8Array> {\n    const bytes = toUtf8Bytes(ensNormalize(name));\n    const comps: Array<Uint8Array> = [ ];\n\n    if (name.length === 0) { return comps; }\n\n    let last = 0;\n    for (let i = 0; i < bytes.length; i++) {\n        const d = bytes[i];\n\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n\n    // There was a stray separator at the end of the name\n    assertArgument(last < bytes.length, \"invalid ENS name; empty component\", \"name\", name);\n\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\n\n/**\n *  Returns the ENS %%name%% normalized.\n */\nexport function ensNormalize(name: string): string {\n    try {\n        if (name.length === 0) { throw new Error(\"empty label\"); }\n        return ens_normalize(name);\n    } catch (error: any) {\n        assertArgument(false, `invalid ENS name (${ error.message })`, \"name\", name);\n    }\n}\n\n/**\n *  Returns ``true`` if %%name%% is a valid ENS name.\n */\nexport function isValidName(name: string): name is string {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    } catch (error) { }\n    return false;\n}\n\n/**\n *  Returns the [[link-namehash]] for %%name%%.\n */\nexport function namehash(name: string): string {\n    assertArgument(typeof(name) === \"string\", \"invalid ENS name; not a string\", \"name\", name);\n\n    assertArgument(name.length, `invalid ENS name (empty label)`, \"name\", name);\n\n    let result: string | Uint8Array = Zeros;\n\n    const comps = ensNameSplit(name);\n    while (comps.length) {\n        result = keccak256(concat([ result, keccak256(<Uint8Array>(comps.pop()))] ));\n    }\n\n    return hexlify(result);\n}\n\n/**\n *  Returns the DNS encoded %%name%%.\n *\n *  This is used for various parts of ENS name resolution, such\n *  as the wildcard resolution.\n */\nexport function dnsEncode(name: string, _maxLength?: number): string {\n    const length = (_maxLength != null) ? _maxLength: 63;\n\n    assertArgument(length <= 255, \"DNS encoded label cannot exceed 255\", \"length\", length);\n\n    return hexlify(concat(ensNameSplit(name).map((comp) => {\n        assertArgument(comp.length <= length, `label ${ JSON.stringify(name) } exceeds ${ length } bytes`, \"name\", name);\n\n        const bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n    }))) + \"00\";\n}\n", "import { getAddress } from \"../address/index.js\";\nimport { assertArgument, isHexString } from \"../utils/index.js\";\n\nimport type { AccessList, AccessListish } from \"./index.js\";\n\n\nfunction accessSetify(addr: string, storageKeys: Array<string>): { address: string,storageKeys: Array<string> } {\n    return {\n        address: getAddress(addr),\n        storageKeys: storageKeys.map((storageKey, index) => {\n            assertArgument(isHexString(storageKey, 32), \"invalid slot\", `storageKeys[${ index }]`, storageKey);\n            return storageKey.toLowerCase();\n        })\n    };\n}\n\n/**\n *  Returns a [[AccessList]] from any ethers-supported access-list structure.\n */\nexport function accessListify(value: AccessListish): AccessList {\n    if (Array.isArray(value)) {\n        return (<Array<[ string, Array<string>] | { address: string, storageKeys: Array<string>}>>value).map((set, index) => {\n            if (Array.isArray(set)) {\n                assertArgument(set.length === 2, \"invalid slot set\", `value[${ index }]`, set);\n                return accessSetify(set[0], set[1])\n            }\n            assertArgument(set != null && typeof(set) === \"object\", \"invalid address-slot set\", \"value\", value);\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n\n    assertArgument(value != null && typeof(value) === \"object\", \"invalid access list\", \"value\", value);\n\n    const result: Array<{ address: string, storageKeys: Array<string> }> = Object.keys(value).map((addr) => {\n        const storageKeys: Record<string, true> = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, <Record<string, true>>{ });\n        return accessSetify(addr, Object.keys(storageKeys).sort())\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n", "import { getAddress } from \"../address/index.js\";\nimport { keccak256, SigningKey } from \"../crypto/index.js\";\n\nimport type { SignatureLike } from \"../crypto/index.js\";\nimport type { BytesLike } from \"../utils/index.js\";\n\n/**\n *  Returns the address for the %%key%%.\n *\n *  The key may be any standard form of public key or a private key.\n */\nexport function computeAddress(key: string | SigningKey): string {\n    let pubkey: string;\n    if (typeof(key) === \"string\") {\n        pubkey = SigningKey.computePublicKey(key, false);\n    } else {\n        pubkey = key.publicKey;\n    }\n    return getAddress(keccak256(\"0x\" + pubkey.substring(4)).substring(26));\n}\n\n/**\n *  Returns the recovered address for the private key that was\n *  used to sign %%digest%% that resulted in %%signature%%.\n */\nexport function recoverAddress(digest: BytesLike, signature: SignatureLike): string {\n    return computeAddress(SigningKey.recoverPublicKey(digest, signature));\n}\n", "\nimport { getAddress } from \"../address/index.js\";\nimport { ZeroAddress } from \"../constants/addresses.js\";\nimport { keccak256, Signature, SigningKey } from \"../crypto/index.js\";\nimport {\n    concat, decodeRlp, encodeRlp, getBytes, getBigInt, getNumber, hexlify,\n    assert, assertArgument, isHexString, toBeArray, zeroPadValue\n} from \"../utils/index.js\";\n\nimport { accessListify } from \"./accesslist.js\";\nimport { recoverAddress } from \"./address.js\";\n\nimport type { BigNumberish, BytesLike } from \"../utils/index.js\";\nimport type { SignatureLike } from \"../crypto/index.js\";\n\nimport type { AccessList, AccessListish } from \"./index.js\";\n\n\nconst BN_0 = BigInt(0);\nconst BN_2 = BigInt(2);\nconst BN_27 = BigInt(27)\nconst BN_28 = BigInt(28)\nconst BN_35 = BigInt(35);\nconst BN_MAX_UINT = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\n\n/**\n *  A **TransactionLike** is an object which is appropriate as a loose\n *  input for many operations which will populate missing properties of\n *  a transaction.\n */\nexport interface TransactionLike<A = string> {\n    /**\n     *  The type.\n     */\n    type?: null | number;\n\n    /**\n     *  The recipient address or ``null`` for an ``init`` transaction.\n     */\n    to?: null | A;\n\n    /**\n     *  The sender.\n     */\n    from?: null | A;\n\n    /**\n     *  The nonce.\n     */\n    nonce?: null | number;\n\n    /**\n     *  The maximum amount of gas that can be used.\n     */\n    gasLimit?: null | BigNumberish;\n\n    /**\n     *  The gas price for legacy and berlin transactions.\n     */\n    gasPrice?: null | BigNumberish;\n\n    /**\n     *  The maximum priority fee per gas for london transactions.\n     */\n    maxPriorityFeePerGas?: null | BigNumberish;\n\n    /**\n     *  The maximum total fee per gas for london transactions.\n     */\n    maxFeePerGas?: null | BigNumberish;\n\n    /**\n     *  The data.\n     */\n    data?: null | string;\n\n    /**\n     *  The value (in wei) to send.\n     */\n    value?: null | BigNumberish;\n\n    /**\n     *  The chain ID the transaction is valid on.\n     */\n    chainId?: null | BigNumberish;\n\n    /**\n     *  The transaction hash.\n     */\n    hash?: null | string;\n\n    /**\n     *  The signature provided by the sender.\n     */\n    signature?: null | SignatureLike;\n\n    /**\n     *  The access list for berlin and london transactions.\n     */\n    accessList?: null | AccessListish;\n\n    /**\n     *  The maximum fee per blob gas (see [[link-eip-4844]]).\n     */\n    maxFeePerBlobGas?: null | BigNumberish;\n\n    /**\n     *  The versioned hashes (see [[link-eip-4844]]).\n     */\n    blobVersionedHashes?: null | Array<string>;\n}\n\nfunction handleAddress(value: string): null | string {\n    if (value === \"0x\") { return null; }\n    return getAddress(value);\n}\n\nfunction handleAccessList(value: any, param: string): AccessList {\n    try {\n        return accessListify(value);\n    } catch (error: any) {\n        assertArgument(false, error.message, param, value);\n    }\n}\n\nfunction handleNumber(_value: string, param: string): number {\n    if (_value === \"0x\") { return 0; }\n    return getNumber(_value, param);\n}\n\nfunction handleUint(_value: string, param: string): bigint {\n    if (_value === \"0x\") { return BN_0; }\n    const value = getBigInt(_value, param);\n    assertArgument(value <= BN_MAX_UINT, \"value exceeds uint size\", param, value);\n    return value;\n}\n\nfunction formatNumber(_value: BigNumberish, name: string): Uint8Array {\n    const value = getBigInt(_value, \"value\");\n    const result = toBeArray(value);\n    assertArgument(result.length <= 32, `value too large`, `tx.${ name }`, value);\n    return result;\n}\n\nfunction formatAccessList(value: AccessListish): Array<[ string, Array<string> ]> {\n    return accessListify(value).map((set) => [ set.address, set.storageKeys ]);\n}\n\nfunction formatHashes(value: Array<string>, param: string): Array<string> {\n    assertArgument(Array.isArray(value), `invalid ${ param }`, \"value\", value);\n    for (let i = 0; i < value.length; i++) {\n        assertArgument(isHexString(value[i], 32), \"invalid ${ param } hash\", `value[${ i }]`, value[i]);\n    }\n    return value;\n}\n\nfunction _parseLegacy(data: Uint8Array): TransactionLike {\n    const fields: any = decodeRlp(data);\n\n    assertArgument(Array.isArray(fields) && (fields.length === 9 || fields.length === 6),\n        \"invalid field count for legacy transaction\", \"data\", data);\n\n    const tx: TransactionLike = {\n        type:     0,\n        nonce:    handleNumber(fields[0], \"nonce\"),\n        gasPrice: handleUint(fields[1], \"gasPrice\"),\n        gasLimit: handleUint(fields[2], \"gasLimit\"),\n        to:       handleAddress(fields[3]),\n        value:    handleUint(fields[4], \"value\"),\n        data:     hexlify(fields[5]),\n        chainId:  BN_0\n    };\n\n    // Legacy unsigned transaction\n    if (fields.length === 6) { return tx; }\n\n    const v = handleUint(fields[6], \"v\");\n    const r = handleUint(fields[7], \"r\");\n    const s = handleUint(fields[8], \"s\");\n\n    if (r === BN_0 && s === BN_0) {\n        // EIP-155 unsigned transaction\n        tx.chainId = v;\n\n    } else {\n\n        // Compute the EIP-155 chain ID (or 0 for legacy)\n        let chainId = (v - BN_35) / BN_2;\n        if (chainId < BN_0) { chainId = BN_0; }\n        tx.chainId = chainId\n\n        // Signed Legacy Transaction\n        assertArgument(chainId !== BN_0 || (v === BN_27 || v === BN_28), \"non-canonical legacy v\", \"v\", fields[6]);\n\n        tx.signature = Signature.from({\n            r: zeroPadValue(fields[7], 32),\n            s: zeroPadValue(fields[8], 32),\n            v\n        });\n\n        tx.hash = keccak256(data);\n    }\n\n    return tx;\n}\n\nfunction _serializeLegacy(tx: Transaction, sig?: Signature): string {\n    const fields: Array<any> = [\n        formatNumber(tx.nonce, \"nonce\"),\n        formatNumber(tx.gasPrice || 0, \"gasPrice\"),\n        formatNumber(tx.gasLimit, \"gasLimit\"),\n        (tx.to || \"0x\"),\n        formatNumber(tx.value, \"value\"),\n        tx.data,\n    ];\n\n    let chainId = BN_0;\n    if (tx.chainId != BN_0) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = getBigInt(tx.chainId, \"tx.chainId\");\n\n        // We have a chainId in the tx and an EIP-155 v in the signature,\n        // make sure they agree with each other\n        assertArgument(!sig || sig.networkV == null || sig.legacyChainId === chainId,\n             \"tx.chainId/sig.v mismatch\", \"sig\", sig);\n\n    } else if (tx.signature) {\n        // No explicit chainId, but EIP-155 have a derived implicit chainId\n        const legacy = tx.signature.legacyChainId;\n        if (legacy != null) { chainId = legacy; }\n    }\n\n    // Requesting an unsigned transaction\n    if (!sig) {\n        // We have an EIP-155 transaction (chainId was specified and non-zero)\n        if (chainId !== BN_0) {\n            fields.push(toBeArray(chainId));\n            fields.push(\"0x\");\n            fields.push(\"0x\");\n        }\n\n        return encodeRlp(fields);\n    }\n\n    // @TODO: We should probably check that tx.signature, chainId, and sig\n    //        match but that logic could break existing code, so schedule\n    //        this for the next major bump.\n\n    // Compute the EIP-155 v\n    let v = BigInt(27 + sig.yParity);\n    if (chainId !== BN_0) {\n        v = Signature.getChainIdV(chainId, sig.v);\n    } else if (BigInt(sig.v) !== v) {\n        assertArgument(false, \"tx.chainId/sig.v mismatch\", \"sig\", sig);\n    }\n\n    // Add the signature\n    fields.push(toBeArray(v));\n    fields.push(toBeArray(sig.r));\n    fields.push(toBeArray(sig.s));\n\n    return encodeRlp(fields);\n}\n\nfunction _parseEipSignature(tx: TransactionLike, fields: Array<string>): void {\n    let yParity: number;\n    try {\n        yParity = handleNumber(fields[0], \"yParity\");\n        if (yParity !== 0 && yParity !== 1) { throw new Error(\"bad yParity\"); }\n    } catch (error) {\n        assertArgument(false, \"invalid yParity\", \"yParity\", fields[0]);\n    }\n\n    const r = zeroPadValue(fields[1], 32);\n    const s = zeroPadValue(fields[2], 32);\n\n    const signature = Signature.from({ r, s, yParity });\n    tx.signature = signature;\n}\n\nfunction _parseEip1559(data: Uint8Array): TransactionLike {\n    const fields: any = decodeRlp(getBytes(data).slice(1));\n\n    assertArgument(Array.isArray(fields) && (fields.length === 9 || fields.length === 12),\n        \"invalid field count for transaction type: 2\", \"data\", hexlify(data));\n\n    const tx: TransactionLike = {\n        type:                  2,\n        chainId:               handleUint(fields[0], \"chainId\"),\n        nonce:                 handleNumber(fields[1], \"nonce\"),\n        maxPriorityFeePerGas:  handleUint(fields[2], \"maxPriorityFeePerGas\"),\n        maxFeePerGas:          handleUint(fields[3], \"maxFeePerGas\"),\n        gasPrice:              null,\n        gasLimit:              handleUint(fields[4], \"gasLimit\"),\n        to:                    handleAddress(fields[5]),\n        value:                 handleUint(fields[6], \"value\"),\n        data:                  hexlify(fields[7]),\n        accessList:            handleAccessList(fields[8], \"accessList\"),\n    };\n\n    // Unsigned EIP-1559 Transaction\n    if (fields.length === 9) { return tx; }\n\n    tx.hash = keccak256(data);\n\n    _parseEipSignature(tx, fields.slice(9));\n\n    return tx;\n}\n\nfunction _serializeEip1559(tx: Transaction, sig?: Signature): string {\n    const fields: Array<any> = [\n        formatNumber(tx.chainId, \"chainId\"),\n        formatNumber(tx.nonce, \"nonce\"),\n        formatNumber(tx.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(tx.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(tx.gasLimit, \"gasLimit\"),\n        (tx.to || \"0x\"),\n        formatNumber(tx.value, \"value\"),\n        tx.data,\n        formatAccessList(tx.accessList || [ ])\n    ];\n\n    if (sig) {\n        fields.push(formatNumber(sig.yParity, \"yParity\"));\n        fields.push(toBeArray(sig.r));\n        fields.push(toBeArray(sig.s));\n    }\n\n    return concat([ \"0x02\", encodeRlp(fields)]);\n}\n\nfunction _parseEip2930(data: Uint8Array): TransactionLike {\n    const fields: any = decodeRlp(getBytes(data).slice(1));\n\n    assertArgument(Array.isArray(fields) && (fields.length === 8 || fields.length === 11),\n        \"invalid field count for transaction type: 1\", \"data\", hexlify(data));\n\n    const tx: TransactionLike = {\n        type:       1,\n        chainId:    handleUint(fields[0], \"chainId\"),\n        nonce:      handleNumber(fields[1], \"nonce\"),\n        gasPrice:   handleUint(fields[2], \"gasPrice\"),\n        gasLimit:   handleUint(fields[3], \"gasLimit\"),\n        to:         handleAddress(fields[4]),\n        value:      handleUint(fields[5], \"value\"),\n        data:       hexlify(fields[6]),\n        accessList: handleAccessList(fields[7], \"accessList\")\n    };\n\n    // Unsigned EIP-2930 Transaction\n    if (fields.length === 8) { return tx; }\n\n    tx.hash = keccak256(data);\n\n    _parseEipSignature(tx, fields.slice(8));\n\n    return tx;\n}\n\nfunction _serializeEip2930(tx: Transaction, sig?: Signature): string {\n    const fields: any = [\n        formatNumber(tx.chainId, \"chainId\"),\n        formatNumber(tx.nonce, \"nonce\"),\n        formatNumber(tx.gasPrice || 0, \"gasPrice\"),\n        formatNumber(tx.gasLimit, \"gasLimit\"),\n        (tx.to || \"0x\"),\n        formatNumber(tx.value, \"value\"),\n        tx.data,\n        formatAccessList(tx.accessList || [ ])\n    ];\n\n    if (sig) {\n        fields.push(formatNumber(sig.yParity, \"recoveryParam\"));\n        fields.push(toBeArray(sig.r));\n        fields.push(toBeArray(sig.s));\n    }\n\n    return concat([ \"0x01\", encodeRlp(fields)]);\n}\n\nfunction _parseEip4844(data: Uint8Array): TransactionLike {\n    const fields: any = decodeRlp(getBytes(data).slice(1));\n\n    assertArgument(Array.isArray(fields) && (fields.length === 11 || fields.length === 14),\n        \"invalid field count for transaction type: 3\", \"data\", hexlify(data));\n\n    const tx: TransactionLike = {\n        type:                  3,\n        chainId:               handleUint(fields[0], \"chainId\"),\n        nonce:                 handleNumber(fields[1], \"nonce\"),\n        maxPriorityFeePerGas:  handleUint(fields[2], \"maxPriorityFeePerGas\"),\n        maxFeePerGas:          handleUint(fields[3], \"maxFeePerGas\"),\n        gasPrice:              null,\n        gasLimit:              handleUint(fields[4], \"gasLimit\"),\n        to:                    handleAddress(fields[5]),\n        value:                 handleUint(fields[6], \"value\"),\n        data:                  hexlify(fields[7]),\n        accessList:            handleAccessList(fields[8], \"accessList\"),\n        maxFeePerBlobGas:      handleUint(fields[9], \"maxFeePerBlobGas\"),\n        blobVersionedHashes:   fields[10]\n    };\n\n    assertArgument(tx.to != null, \"invalid address for transaction type: 3\", \"data\", data);\n\n    assertArgument(Array.isArray(tx.blobVersionedHashes), \"invalid blobVersionedHashes: must be an array\", \"data\", data);\n    for (let i = 0; i < tx.blobVersionedHashes.length; i++) {\n        assertArgument(isHexString(tx.blobVersionedHashes[i], 32), `invalid blobVersionedHash at index ${ i }: must be length 32`, \"data\", data);\n    }\n\n    // Unsigned EIP-4844 Transaction\n    if (fields.length === 11) { return tx; }\n\n    tx.hash = keccak256(data);\n\n    _parseEipSignature(tx, fields.slice(11));\n\n    return tx;\n}\n\nfunction _serializeEip4844(tx: Transaction, sig?: Signature): string {\n    const fields: Array<any> = [\n        formatNumber(tx.chainId, \"chainId\"),\n        formatNumber(tx.nonce, \"nonce\"),\n        formatNumber(tx.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(tx.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(tx.gasLimit, \"gasLimit\"),\n        (tx.to || ZeroAddress),\n        formatNumber(tx.value, \"value\"),\n        tx.data,\n        formatAccessList(tx.accessList || [ ]),\n        formatNumber(tx.maxFeePerBlobGas || 0, \"maxFeePerBlobGas\"),\n        formatHashes(tx.blobVersionedHashes || [ ], \"blobVersionedHashes\")\n    ];\n\n    if (sig) {\n        fields.push(formatNumber(sig.yParity, \"yParity\"));\n        fields.push(toBeArray(sig.r));\n        fields.push(toBeArray(sig.s));\n    }\n\n    return concat([ \"0x03\", encodeRlp(fields)]);\n}\n\n/**\n *  A **Transaction** describes an operation to be executed on\n *  Ethereum by an Externally Owned Account (EOA). It includes\n *  who (the [[to]] address), what (the [[data]]) and how much (the\n *  [[value]] in ether) the operation should entail.\n *\n *  @example:\n *    tx = new Transaction()\n *    //_result:\n *\n *    tx.data = \"0x1234\";\n *    //_result:\n */\nexport class Transaction implements TransactionLike<string> {\n    #type: null | number;\n    #to: null | string;\n    #data: string;\n    #nonce: number;\n    #gasLimit: bigint;\n    #gasPrice: null | bigint;\n    #maxPriorityFeePerGas: null | bigint;\n    #maxFeePerGas: null | bigint;\n    #value: bigint;\n    #chainId: bigint;\n    #sig: null | Signature;\n    #accessList: null | AccessList;\n    #maxFeePerBlobGas: null | bigint;\n    #blobVersionedHashes: null | Array<string>;\n\n    /**\n     *  The transaction type.\n     *\n     *  If null, the type will be automatically inferred based on\n     *  explicit properties.\n     */\n    get type(): null | number { return this.#type; }\n    set type(value: null | number | string) {\n        switch (value) {\n            case null:\n                this.#type = null;\n                break;\n            case 0: case \"legacy\":\n                this.#type = 0;\n                break;\n            case 1: case \"berlin\": case \"eip-2930\":\n                this.#type = 1;\n                break;\n            case 2: case \"london\": case \"eip-1559\":\n                this.#type = 2;\n                break;\n            case 3: case \"cancun\": case \"eip-4844\":\n                this.#type = 3;\n                break;\n            default:\n                assertArgument(false, \"unsupported transaction type\", \"type\", value);\n        }\n    }\n\n    /**\n     *  The name of the transaction type.\n     */\n    get typeName(): null | string {\n        switch (this.type) {\n            case 0: return \"legacy\";\n            case 1: return \"eip-2930\";\n            case 2: return \"eip-1559\";\n            case 3: return \"eip-4844\";\n        }\n\n        return null;\n    }\n\n    /**\n     *  The ``to`` address for the transaction or ``null`` if the\n     *  transaction is an ``init`` transaction.\n     */\n    get to(): null | string {\n        const value = this.#to;\n        if (value == null && this.type === 3) { return ZeroAddress; }\n        return value;\n    }\n    set to(value: null | string) {\n        this.#to = (value == null) ? null: getAddress(value);\n    }\n\n    /**\n     *  The transaction nonce.\n     */\n    get nonce(): number { return this.#nonce; }\n    set nonce(value: BigNumberish) { this.#nonce = getNumber(value, \"value\"); }\n\n    /**\n     *  The gas limit.\n     */\n    get gasLimit(): bigint { return this.#gasLimit; }\n    set gasLimit(value: BigNumberish) { this.#gasLimit = getBigInt(value); }\n\n    /**\n     *  The gas price.\n     *\n     *  On legacy networks this defines the fee that will be paid. On\n     *  EIP-1559 networks, this should be ``null``.\n     */\n    get gasPrice(): null | bigint {\n        const value = this.#gasPrice;\n        if (value == null && (this.type === 0 || this.type === 1)) { return BN_0; }\n        return value;\n    }\n    set gasPrice(value: null | BigNumberish) {\n        this.#gasPrice = (value == null) ? null: getBigInt(value, \"gasPrice\");\n    }\n\n    /**\n     *  The maximum priority fee per unit of gas to pay. On legacy\n     *  networks this should be ``null``.\n     */\n    get maxPriorityFeePerGas(): null | bigint {\n        const value = this.#maxPriorityFeePerGas;\n        if (value == null) {\n            if (this.type === 2 || this.type === 3) { return BN_0; }\n            return null;\n        }\n        return value;\n    }\n    set maxPriorityFeePerGas(value: null | BigNumberish) {\n        this.#maxPriorityFeePerGas = (value == null) ? null: getBigInt(value, \"maxPriorityFeePerGas\");\n    }\n\n    /**\n     *  The maximum total fee per unit of gas to pay. On legacy\n     *  networks this should be ``null``.\n     */\n    get maxFeePerGas(): null | bigint {\n        const value = this.#maxFeePerGas;\n        if (value == null) {\n            if (this.type === 2 || this.type === 3) { return BN_0; }\n            return null;\n        }\n        return value;\n    }\n    set maxFeePerGas(value: null | BigNumberish) {\n        this.#maxFeePerGas = (value == null) ? null: getBigInt(value, \"maxFeePerGas\");\n    }\n\n    /**\n     *  The transaction data. For ``init`` transactions this is the\n     *  deployment code.\n     */\n    get data(): string { return this.#data; }\n    set data(value: BytesLike) { this.#data = hexlify(value); }\n\n    /**\n     *  The amount of ether (in wei) to send in this transactions.\n     */\n    get value(): bigint { return this.#value; }\n    set value(value: BigNumberish) {\n        this.#value = getBigInt(value, \"value\");\n    }\n\n    /**\n     *  The chain ID this transaction is valid on.\n     */\n    get chainId(): bigint { return this.#chainId; }\n    set chainId(value: BigNumberish) { this.#chainId = getBigInt(value); }\n\n    /**\n     *  If signed, the signature for this transaction.\n     */\n    get signature(): null | Signature { return this.#sig || null; }\n    set signature(value: null | SignatureLike) {\n        this.#sig = (value == null) ? null: Signature.from(value);\n    }\n\n    /**\n     *  The access list.\n     *\n     *  An access list permits discounted (but pre-paid) access to\n     *  bytecode and state variable access within contract execution.\n     */\n    get accessList(): null | AccessList {\n        const value = this.#accessList || null;\n        if (value == null) {\n            if (this.type === 1 || this.type === 2 || this.type === 3) {\n                // @TODO: in v7, this should assign the value or become\n                // a live object itself, otherwise mutation is inconsistent\n                return [ ];\n            }\n            return null;\n        }\n        return value;\n    }\n    set accessList(value: null | AccessListish) {\n        this.#accessList = (value == null) ? null: accessListify(value);\n    }\n\n    /**\n     *  The max fee per blob gas for Cancun transactions.\n     */\n    get maxFeePerBlobGas(): null | bigint {\n        const value = this.#maxFeePerBlobGas;\n        if (value == null && this.type === 3) { return BN_0; }\n        return value;\n    }\n    set maxFeePerBlobGas(value: null | BigNumberish) {\n        this.#maxFeePerBlobGas = (value == null) ? null: getBigInt(value, \"maxFeePerBlobGas\");\n    }\n\n    /**\n     *  The BLOB versioned hashes for Cancun transactions.\n     */\n    get blobVersionedHashes(): null | Array<string> {\n        // @TODO: Mutation is inconsistent; if unset, the returned value\n        // cannot mutate the object, if set it can\n        let value = this.#blobVersionedHashes;\n        if (value == null && this.type === 3) { return [ ]; }\n        return value;\n    }\n    set blobVersionedHashes(value: null | Array<string>) {\n        if (value != null) {\n            assertArgument(Array.isArray(value), \"blobVersionedHashes must be an Array\", \"value\", value);\n            value = value.slice();\n            for (let i = 0; i < value.length; i++) {\n                assertArgument(isHexString(value[i], 32), \"invalid blobVersionedHash\", `value[${ i }]`, value[i]);\n            }\n        }\n        this.#blobVersionedHashes = value;\n    }\n\n    /**\n     *  Creates a new Transaction with default values.\n     */\n    constructor() {\n        this.#type = null;\n        this.#to = null;\n        this.#nonce = 0;\n        this.#gasLimit = BN_0;\n        this.#gasPrice = null;\n        this.#maxPriorityFeePerGas = null;\n        this.#maxFeePerGas = null;\n        this.#data = \"0x\";\n        this.#value = BN_0;\n        this.#chainId = BN_0;\n        this.#sig = null;\n        this.#accessList = null;\n        this.#maxFeePerBlobGas = null;\n        this.#blobVersionedHashes = null;\n    }\n\n    /**\n     *  The transaction hash, if signed. Otherwise, ``null``.\n     */\n    get hash(): null | string {\n        if (this.signature == null) { return null; }\n        return keccak256(this.serialized);\n    }\n\n    /**\n     *  The pre-image hash of this transaction.\n     *\n     *  This is the digest that a [[Signer]] must sign to authorize\n     *  this transaction.\n     */\n    get unsignedHash(): string {\n        return keccak256(this.unsignedSerialized);\n    }\n\n    /**\n     *  The sending address, if signed. Otherwise, ``null``.\n     */\n    get from(): null | string {\n        if (this.signature == null) { return null; }\n        return recoverAddress(this.unsignedHash, this.signature);\n    }\n\n    /**\n     *  The public key of the sender, if signed. Otherwise, ``null``.\n     */\n    get fromPublicKey(): null | string {\n        if (this.signature == null) { return null; }\n        return SigningKey.recoverPublicKey(this.unsignedHash, this.signature);\n    }\n\n    /**\n     *  Returns true if signed.\n     *\n     *  This provides a Type Guard that properties requiring a signed\n     *  transaction are non-null.\n     */\n    isSigned(): this is (Transaction & { type: number, typeName: string, from: string, signature: Signature }) {\n        return this.signature != null;\n    }\n\n    /**\n     *  The serialized transaction.\n     *\n     *  This throws if the transaction is unsigned. For the pre-image,\n     *  use [[unsignedSerialized]].\n     */\n    get serialized(): string {\n        assert(this.signature != null, \"cannot serialize unsigned transaction; maybe you meant .unsignedSerialized\", \"UNSUPPORTED_OPERATION\", { operation: \".serialized\"});\n\n        switch (this.inferType()) {\n            case 0:\n                return _serializeLegacy(this, this.signature);\n            case 1:\n                return _serializeEip2930(this, this.signature);\n            case 2:\n                return _serializeEip1559(this, this.signature);\n            case 3:\n                return _serializeEip4844(this, this.signature);\n        }\n\n        assert(false, \"unsupported transaction type\", \"UNSUPPORTED_OPERATION\", { operation: \".serialized\" });\n    }\n\n    /**\n     *  The transaction pre-image.\n     *\n     *  The hash of this is the digest which needs to be signed to\n     *  authorize this transaction.\n     */\n    get unsignedSerialized(): string {\n        switch (this.inferType()) {\n            case 0:\n                return _serializeLegacy(this);\n            case 1:\n                return _serializeEip2930(this);\n            case 2:\n                return _serializeEip1559(this);\n            case 3:\n                return _serializeEip4844(this);\n        }\n\n        assert(false, \"unsupported transaction type\", \"UNSUPPORTED_OPERATION\", { operation: \".unsignedSerialized\" });\n    }\n\n    /**\n     *  Return the most \"likely\" type; currently the highest\n     *  supported transaction type.\n     */\n    inferType(): number {\n        const types = this.inferTypes();\n\n        // Prefer London (EIP-1559) over Cancun (BLOb)\n        if (types.indexOf(2) >= 0) { return 2; }\n\n        // Return the highest inferred type\n        return <number>(types.pop());\n    }\n\n    /**\n     *  Validates the explicit properties and returns a list of compatible\n     *  transaction types.\n     */\n    inferTypes(): Array<number> {\n\n        // Checks that there are no conflicting properties set\n        const hasGasPrice = this.gasPrice != null;\n        const hasFee = (this.maxFeePerGas != null || this.maxPriorityFeePerGas != null);\n        const hasAccessList = (this.accessList != null);\n        const hasBlob = (this.#maxFeePerBlobGas != null || this.#blobVersionedHashes);\n\n        //if (hasGasPrice && hasFee) {\n        //    throw new Error(\"transaction cannot have gasPrice and maxFeePerGas\");\n        //}\n\n        if (this.maxFeePerGas != null && this.maxPriorityFeePerGas != null) {\n            assert(this.maxFeePerGas >= this.maxPriorityFeePerGas, \"priorityFee cannot be more than maxFee\", \"BAD_DATA\", { value: this });\n        }\n\n        //if (this.type === 2 && hasGasPrice) {\n        //    throw new Error(\"eip-1559 transaction cannot have gasPrice\");\n        //}\n\n        assert(!hasFee || (this.type !== 0 && this.type !== 1), \"transaction type cannot have maxFeePerGas or maxPriorityFeePerGas\", \"BAD_DATA\", { value: this });\n        assert(this.type !== 0 || !hasAccessList, \"legacy transaction cannot have accessList\", \"BAD_DATA\", { value: this })\n\n        const types: Array<number> = [ ];\n\n        // Explicit type\n        if (this.type != null) {\n            types.push(this.type);\n\n        } else {\n            if (hasFee) {\n                types.push(2);\n            } else if (hasGasPrice) {\n                types.push(1);\n                if (!hasAccessList) { types.push(0); }\n            } else if (hasAccessList) {\n                types.push(1);\n                types.push(2);\n            } else if (hasBlob && this.to) {\n                types.push(3);\n            } else {\n                types.push(0);\n                types.push(1);\n                types.push(2);\n                types.push(3);\n            }\n        }\n\n        types.sort();\n\n        return types;\n    }\n\n    /**\n     *  Returns true if this transaction is a legacy transaction (i.e.\n     *  ``type === 0``).\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isLegacy(): this is (Transaction & { type: 0, gasPrice: bigint }) {\n        return (this.type === 0);\n    }\n\n    /**\n     *  Returns true if this transaction is berlin hardform transaction (i.e.\n     *  ``type === 1``).\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isBerlin(): this is (Transaction & { type: 1, gasPrice: bigint, accessList: AccessList }) {\n        return (this.type === 1);\n    }\n\n    /**\n     *  Returns true if this transaction is london hardform transaction (i.e.\n     *  ``type === 2``).\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isLondon(): this is (Transaction & { type: 2, accessList: AccessList, maxFeePerGas: bigint, maxPriorityFeePerGas: bigint }) {\n        return (this.type === 2);\n    }\n\n    /**\n     *  Returns true if this transaction is an [[link-eip-4844]] BLOB\n     *  transaction.\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isCancun(): this is (Transaction & { type: 3, to: string, accessList: AccessList, maxFeePerGas: bigint, maxPriorityFeePerGas: bigint, maxFeePerBlobGas: bigint, blobVersionedHashes: Array<string> }) {\n        return (this.type === 3);\n    }\n\n    /**\n     *  Create a copy of this transaciton.\n     */\n    clone(): Transaction {\n        return Transaction.from(this);\n    }\n\n    /**\n     *  Return a JSON-friendly object.\n     */\n    toJSON(): any {\n        const s = (v: null | bigint) => {\n            if (v == null) { return null; }\n            return v.toString();\n        };\n\n        return {\n            type: this.type,\n            to: this.to,\n//            from: this.from,\n            data: this.data,\n            nonce: this.nonce,\n            gasLimit: s(this.gasLimit),\n            gasPrice: s(this.gasPrice),\n            maxPriorityFeePerGas: s(this.maxPriorityFeePerGas),\n            maxFeePerGas: s(this.maxFeePerGas),\n            value: s(this.value),\n            chainId: s(this.chainId),\n            sig: this.signature ? this.signature.toJSON(): null,\n            accessList: this.accessList\n        };\n    }\n\n    /**\n     *  Create a **Transaction** from a serialized transaction or a\n     *  Transaction-like object.\n     */\n    static from(tx?: string | TransactionLike<string>): Transaction {\n        if (tx == null) { return new Transaction(); }\n\n        if (typeof(tx) === \"string\") {\n            const payload = getBytes(tx);\n\n            if (payload[0] >= 0x7f) { // @TODO: > vs >= ??\n                return Transaction.from(_parseLegacy(payload));\n            }\n\n            switch(payload[0]) {\n                case 1: return Transaction.from(_parseEip2930(payload));\n                case 2: return Transaction.from(_parseEip1559(payload));\n                case 3: return Transaction.from(_parseEip4844(payload));\n            }\n            assert(false, \"unsupported transaction type\", \"UNSUPPORTED_OPERATION\", { operation: \"from\" });\n        }\n\n        const result = new Transaction();\n        if (tx.type != null) { result.type = tx.type; }\n        if (tx.to != null) { result.to = tx.to; }\n        if (tx.nonce != null) { result.nonce = tx.nonce; }\n        if (tx.gasLimit != null) { result.gasLimit = tx.gasLimit; }\n        if (tx.gasPrice != null) { result.gasPrice = tx.gasPrice; }\n        if (tx.maxPriorityFeePerGas != null) { result.maxPriorityFeePerGas = tx.maxPriorityFeePerGas; }\n        if (tx.maxFeePerGas != null) { result.maxFeePerGas = tx.maxFeePerGas; }\n        if (tx.maxFeePerBlobGas != null) { result.maxFeePerBlobGas = tx.maxFeePerBlobGas; }\n        if (tx.data != null) { result.data = tx.data; }\n        if (tx.value != null) { result.value = tx.value; }\n        if (tx.chainId != null) { result.chainId = tx.chainId; }\n        if (tx.signature != null) { result.signature = Signature.from(tx.signature); }\n        if (tx.accessList != null) { result.accessList = tx.accessList; }\n        if (tx.blobVersionedHashes != null) { result.blobVersionedHashes = tx.blobVersionedHashes; }\n\n        if (tx.hash != null) {\n            assertArgument(result.isSigned(), \"unsigned transaction cannot define hash\", \"tx\", tx);\n            assertArgument(result.hash === tx.hash, \"hash mismatch\", \"tx\", tx);\n        }\n\n        if (tx.from != null) {\n            assertArgument(result.isSigned(), \"unsigned transaction cannot define from\", \"tx\", tx);\n            assertArgument(result.from.toLowerCase() === (tx.from || \"\").toLowerCase(), \"from mismatch\", \"tx\", tx);\n        }\n\n        return result;\n    }\n}\n", "import { keccak256 } from \"../crypto/index.js\";\nimport { MessagePrefix } from \"../constants/index.js\";\nimport { recoverAddress } from \"../transaction/index.js\";\nimport { concat, toUtf8Bytes } from \"../utils/index.js\";\n\nimport type { SignatureLike } from \"../crypto/index.js\";\n/**\n *  Computes the [[link-eip-191]] personal-sign message digest to sign.\n *\n *  This prefixes the message with [[MessagePrefix]] and the decimal length\n *  of %%message%% and computes the [[keccak256]] digest.\n *\n *  If %%message%% is a string, it is converted to its UTF-8 bytes\n *  first. To compute the digest of a [[DataHexString]], it must be converted\n *  to [bytes](getBytes).\n *\n *  @example:\n *    hashMessage(\"Hello World\")\n *    //_result:\n *\n *    // Hashes the SIX (6) string characters, i.e.\n *    // [ \"0\", \"x\", \"4\", \"2\", \"4\", \"3\" ]\n *    hashMessage(\"0x4243\")\n *    //_result:\n *\n *    // Hashes the TWO (2) bytes [ 0x42, 0x43 ]...\n *    hashMessage(getBytes(\"0x4243\"))\n *    //_result:\n *\n *    // ...which is equal to using data\n *    hashMessage(new Uint8Array([ 0x42, 0x43 ]))\n *    //_result:\n *\n */\nexport function hashMessage(message: Uint8Array | string): string {\n    if (typeof(message) === \"string\") { message = toUtf8Bytes(message); }\n    return keccak256(concat([\n        toUtf8Bytes(MessagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n\n/**\n *  Return the address of the private key that produced\n *  the signature %%sig%% during signing for %%message%%.\n */\nexport function verifyMessage(message: Uint8Array | string, sig: SignatureLike): string {\n    const digest = hashMessage(message);\n    return recoverAddress(digest, sig);\n}\n", "import { getAddress } from \"../address/index.js\";\nimport {\n    keccak256 as _keccak256, sha256 as _sha256\n} from \"../crypto/index.js\";\nimport {\n    concat, dataLength, getBytes, hexlify, toBeArray, toTwos, toUtf8Bytes, zeroPadBytes, zeroPadValue,\n    assertArgument\n} from \"../utils/index.js\";\n\n\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\n\n\nfunction _pack(type: string, value: any, isArray?: boolean): Uint8Array {\n    switch(type) {\n        case \"address\":\n            if (isArray) { return getBytes(zeroPadValue(value, 32)); }\n            return getBytes(getAddress(value));\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return getBytes(value);\n        case \"bool\":\n            value = (!!value ? \"0x01\": \"0x00\");\n            if (isArray) { return getBytes(zeroPadValue(value, 32)); }\n            return getBytes(value);\n    }\n\n    let match =  type.match(regexNumber);\n    if (match) {\n        let signed = (match[1] === \"int\");\n        let size = parseInt(match[2] || \"256\")\n\n        assertArgument((!match[2] || match[2] === String(size)) && (size % 8 === 0) && size !== 0 && size <= 256, \"invalid number type\", \"type\", type);\n\n        if (isArray) { size = 256; }\n\n        if (signed) { value = toTwos(value, size); }\n\n        return getBytes(zeroPadValue(toBeArray(value), size / 8));\n    }\n\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n\n        assertArgument(String(size) === match[1] && size !== 0 && size <= 32, \"invalid bytes type\", \"type\", type);\n        assertArgument(dataLength(value) === size, `invalid value for ${ type }`, \"value\", value);\n\n        if (isArray) { return getBytes(zeroPadBytes(value, 32)); }\n        return value;\n    }\n\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        assertArgument(count === value.length, `invalid array length for ${ type }`, \"value\", value);\n\n        const result: Array<Uint8Array> = [];\n        value.forEach(function(value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return getBytes(concat(result));\n    }\n\n    assertArgument(false, \"invalid type\", \"type\", type)\n}\n\n// @TODO: Array Enum\n\n/**\n *   Computes the [[link-solc-packed]] representation of %%values%%\n *   respectively to their %%types%%.\n *\n *   @example:\n *       addr = \"0x8ba1f109551bd432803012645ac136ddd64dba72\"\n *       solidityPacked([ \"address\", \"uint\" ], [ addr, 45 ]);\n *       //_result:\n */\nexport function solidityPacked(types: ReadonlyArray<string>, values: ReadonlyArray<any>): string {\n    assertArgument(types.length === values.length, \"wrong number of values; expected ${ types.length }\", \"values\", values);\n\n    const tight: Array<Uint8Array> = [];\n    types.forEach(function(type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\n\n/**\n *   Computes the [[link-solc-packed]] [[keccak256]] hash of %%values%%\n *   respectively to their %%types%%.\n *\n *   @example:\n *       addr = \"0x8ba1f109551bd432803012645ac136ddd64dba72\"\n *       solidityPackedKeccak256([ \"address\", \"uint\" ], [ addr, 45 ]);\n *       //_result:\n */\nexport function solidityPackedKeccak256(types: ReadonlyArray<string>, values: ReadonlyArray<any>): string {\n    return _keccak256(solidityPacked(types, values));\n}\n\n/**\n *   Computes the [[link-solc-packed]] [[sha256]] hash of %%values%%\n *   respectively to their %%types%%.\n *\n *   @example:\n *       addr = \"0x8ba1f109551bd432803012645ac136ddd64dba72\"\n *       solidityPackedSha256([ \"address\", \"uint\" ], [ addr, 45 ]);\n *       //_result:\n */\nexport function solidityPackedSha256(types: ReadonlyArray<string>, values: ReadonlyArray<any>): string {\n    return _sha256(solidityPacked(types, values));\n}\n", "//import { TypedDataDomain, TypedDataField } from \"@ethersproject/providerabstract-signer\";\nimport { getAddress } from \"../address/index.js\";\nimport { keccak256 } from \"../crypto/index.js\";\nimport { recoverAddress } from \"../transaction/index.js\";\nimport {\n    concat, defineProperties, getBigInt, getBytes, hexlify, isHexString, mask, toBeHex, toQuantity, toTwos, zeroPadValue,\n    assertArgument\n} from \"../utils/index.js\";\n\nimport { id } from \"./id.js\";\n\nimport type { SignatureLike } from \"../crypto/index.js\";\nimport type { BigNumberish, BytesLike } from \"../utils/index.js\";\n\n\nconst padding = new Uint8Array(32);\npadding.fill(0);\n\nconst BN__1 = BigInt(-1);\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\n// @TODO: in v7, verifyingContract should be an AddressLike and use resolveAddress\n\n/**\n *  The domain for an [[link-eip-712]] payload.\n */\nexport interface TypedDataDomain {\n    /**\n     *  The human-readable name of the signing domain.\n     */\n    name?: null | string;\n\n    /**\n     *  The major version of the signing domain.\n     */\n    version?: null | string;\n\n    /**\n     *  The chain ID of the signing domain.\n     */\n    chainId?: null | BigNumberish;\n\n    /**\n     *  The the address of the contract that will verify the signature.\n     */\n    verifyingContract?: null | string;\n\n    /**\n     *  A salt used for purposes decided by the specific domain.\n     */\n    salt?: null | BytesLike;\n};\n\n/**\n *  A specific field of a structured [[link-eip-712]] type.\n */\nexport interface TypedDataField {\n    /**\n     *  The field name.\n     */\n    name: string;\n\n    /**\n     *  The type of the field.\n     */\n    type: string;\n};\n\nfunction hexPadRight(value: BytesLike): string {\n    const bytes = getBytes(value);\n    const padOffset = bytes.length % 32\n    if (padOffset) {\n        return concat([ bytes, padding.slice(padOffset) ]);\n    }\n    return hexlify(bytes);\n}\n\nconst hexTrue = toBeHex(BN_1, 32);\nconst hexFalse = toBeHex(BN_0, 32);\n\nconst domainFieldTypes: Record<string, string> = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\n\nconst domainFieldNames: Array<string> = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\n\nfunction checkString(key: string): (value: any) => string {\n    return function (value: any){\n        assertArgument(typeof(value) === \"string\", `invalid domain value for ${ JSON.stringify(key) }`, `domain.${ key }`, value);\n        return value;\n    }\n}\n\nconst domainChecks: Record<string, (value: any) => any> = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function(_value: any) {\n        const value = getBigInt(_value, \"domain.chainId\");\n        assertArgument(value >= 0, \"invalid chain ID\", \"domain.chainId\", _value);\n        if (Number.isSafeInteger(value)) { return Number(value); }\n        return toQuantity(value);\n    },\n    verifyingContract: function(value: any) {\n        try {\n            return getAddress(value).toLowerCase();\n        } catch (error) { }\n        assertArgument(false, `invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function(value: any) {\n        const bytes = getBytes(value, \"domain.salt\");\n        assertArgument(bytes.length === 32, `invalid domain value \"salt\"`, \"domain.salt\", value);\n        return hexlify(bytes);\n    }\n}\n\nfunction getBaseEncoder(type: string): null | ((value: any) => string) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d+)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n\n            const width = parseInt(match[2]);\n            assertArgument(width % 8 === 0 && width !== 0 && width <= 256 && match[2] === String(width), \"invalid numeric width\", \"type\", type);\n\n            const boundsUpper = mask(BN_MAX_UINT256, signed ? (width - 1): width);\n            const boundsLower = signed ? ((boundsUpper + BN_1) * BN__1): BN_0;\n\n            return function(_value: BigNumberish) {\n                const value = getBigInt(_value, \"value\");\n\n                assertArgument(value >= boundsLower && value <= boundsUpper, `value out-of-bounds for ${ type }`, \"value\", value);\n\n                return toBeHex(signed ? toTwos(value, 256): value, 32);\n            };\n        }\n    }\n\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            assertArgument(width !== 0 && width <= 32 && match[1] === String(width), \"invalid bytes width\", \"type\", type);\n\n            return function(value: BytesLike) {\n                const bytes = getBytes(value);\n                assertArgument(bytes.length === width, `invalid length for ${ type }`, \"value\", value);\n                return hexPadRight(value);\n            };\n        }\n    }\n\n    switch (type) {\n        case \"address\": return function(value: string) {\n            return zeroPadValue(getAddress(value), 32);\n        };\n        case \"bool\": return function(value: boolean) {\n            return ((!value) ? hexFalse: hexTrue);\n        };\n        case \"bytes\": return function(value: BytesLike) {\n            return keccak256(value);\n        };\n        case \"string\": return function(value: string) {\n            return id(value);\n        };\n    }\n\n    return null;\n}\n\nfunction encodeType(name: string, fields: Array<TypedDataField>): string {\n    return `${ name }(${ fields.map(({ name, type }) => (type + \" \" + name)).join(\",\") })`;\n}\n\ntype ArrayResult = {\n    base: string;         // The base type\n    index?: string;       // the full Index (if any)\n    array?: {             // The Array... (if index)\n        base: string;     // ...base type (same as above)\n        prefix: string;   // ...sans the final Index\n        count: number;    // ...the final Index (-1 for dynamic)\n    }\n};\n\n// foo[][3] => { base: \"foo\", index: \"[][3]\", array: {\n//     base: \"foo\", prefix: \"foo[]\", count: 3 } }\nfunction splitArray(type: string): ArrayResult {\n    const match = type.match(/^([^\\x5b]*)((\\x5b\\d*\\x5d)*)(\\x5b(\\d*)\\x5d)$/);\n    if (match) {\n        return {\n            base: match[1],\n            index: (match[2] + match[4]),\n            array: {\n                base: match[1],\n                prefix: (match[1] + match[2]),\n                count: (match[5] ? parseInt(match[5]): -1),\n            }\n        };\n    }\n\n    return { base: type };\n}\n\n/**\n *  A **TypedDataEncode** prepares and encodes [[link-eip-712]] payloads\n *  for signed typed data.\n *\n *  This is useful for those that wish to compute various components of a\n *  typed data hash, primary types, or sub-components, but generally the\n *  higher level [[Signer-signTypedData]] is more useful.\n */\nexport class TypedDataEncoder {\n    /**\n     *  The primary type for the structured [[types]].\n     *\n     *  This is derived automatically from the [[types]], since no\n     *  recursion is possible, once the DAG for the types is consturcted\n     *  internally, the primary type must be the only remaining type with\n     *  no parent nodes.\n     */\n    readonly primaryType!: string;\n\n    readonly #types: string;\n\n    /**\n     *  The types.\n     */\n    get types(): Record<string, Array<TypedDataField>> {\n        return JSON.parse(this.#types);\n    }\n\n    readonly #fullTypes: Map<string, string>\n\n    readonly #encoderCache: Map<string, (value: any) => string>;\n\n    /**\n     *  Create a new **TypedDataEncoder** for %%types%%.\n     *\n     *  This performs all necessary checking that types are valid and\n     *  do not violate the [[link-eip-712]] structural constraints as\n     *  well as computes the [[primaryType]].\n     */\n    constructor(_types: Record<string, Array<TypedDataField>>) {\n        this.#fullTypes = new Map();\n        this.#encoderCache = new Map();\n\n        // Link struct types to their direct child structs\n        const links: Map<string, Set<string>> = new Map();\n\n        // Link structs to structs which contain them as a child\n        const parents: Map<string, Array<string>> = new Map();\n\n        // Link all subtypes within a given struct\n        const subtypes: Map<string, Set<string>> = new Map();\n\n        const types: Record<string, Array<TypedDataField>> = { };\n        Object.keys(_types).forEach((type) => {\n            types[type] = _types[type].map(({ name, type }) => {\n\n                // Normalize the base type (unless name conflict)\n                let { base, index } = splitArray(type);\n                if (base === \"int\" && !_types[\"int\"]) { base = \"int256\"; }\n                if (base === \"uint\" && !_types[\"uint\"]) { base = \"uint256\"; }\n\n                return { name, type: (base + (index || \"\")) };\n            });\n\n            links.set(type, new Set());\n            parents.set(type, [ ]);\n            subtypes.set(type, new Set());\n        });\n        this.#types = JSON.stringify(types);\n\n        for (const name in types) {\n            const uniqueNames: Set<string> = new Set();\n\n            for (const field of types[name]) {\n\n                // Check each field has a unique name\n                assertArgument(!uniqueNames.has(field.name), `duplicate variable name ${ JSON.stringify(field.name) } in ${ JSON.stringify(name) }`, \"types\", _types);\n                uniqueNames.add(field.name);\n\n                // Get the base type (drop any array specifiers)\n                const baseType = splitArray(field.type).base;\n                assertArgument(baseType !== name, `circular type reference to ${ JSON.stringify(baseType) }`, \"types\", _types);\n\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) { continue; }\n\n                assertArgument(parents.has(baseType), `unknown type ${ JSON.stringify(baseType) }`, \"types\", _types);\n\n                // Add linkage\n                (parents.get(baseType) as Array<string>).push(name);\n                (links.get(name) as Set<string>).add(baseType);\n            }\n        }\n\n        // Deduce the primary type\n        const primaryTypes = Array.from(parents.keys()).filter((n) => ((parents.get(n) as Array<string>).length === 0));\n        assertArgument(primaryTypes.length !== 0, \"missing primary type\", \"types\", _types);\n        assertArgument(primaryTypes.length === 1, `ambiguous primary types or unused types: ${ primaryTypes.map((t) => (JSON.stringify(t))).join(\", \") }`, \"types\", _types);\n\n        defineProperties<TypedDataEncoder>(this, { primaryType: primaryTypes[0] });\n\n        // Check for circular type references\n        function checkCircular(type: string, found: Set<string>) {\n            assertArgument(!found.has(type), `circular type reference to ${ JSON.stringify(type) }`, \"types\", _types);\n\n            found.add(type);\n\n            for (const child of (links.get(type) as Set<string>)) {\n                if (!parents.has(child)) { continue; }\n\n                // Recursively check children\n                checkCircular(child, found);\n\n                // Mark all ancestors as having this decendant\n                for (const subtype of found) {\n                    (subtypes.get(subtype) as Set<string>).add(child);\n                }\n            }\n\n            found.delete(type);\n        }\n        checkCircular(this.primaryType, new Set());\n\n        // Compute each fully describe type\n        for (const [ name, set ] of subtypes) {\n            const st = Array.from(set);\n            st.sort();\n            this.#fullTypes.set(name, encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\"));\n        }\n    }\n\n    /**\n     *  Returnthe encoder for the specific %%type%%.\n     */\n    getEncoder(type: string): (value: any) => string {\n        let encoder = this.#encoderCache.get(type);\n        if (!encoder) {\n            encoder = this.#getEncoder(type);\n            this.#encoderCache.set(type, encoder);\n        }\n        return encoder;\n    }\n\n    #getEncoder(type: string): (value: any) => string {\n\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return encoder; }\n        }\n\n        // Array\n        const array = splitArray(type).array;\n        if (array) {\n            const subtype = array.prefix;\n            const subEncoder = this.getEncoder(subtype);\n            return (value: Array<any>) => {\n                assertArgument(array.count === -1 || array.count === value.length, `array length mismatch; expected length ${ array.count }`, \"value\", value);\n\n                let result = value.map(subEncoder);\n                if (this.#fullTypes.has(subtype)) {\n                    result = result.map(keccak256);\n                }\n\n                return keccak256(concat(result));\n            };\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this.#fullTypes.get(type) as string);\n            return (value: Record<string, any>) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this.#fullTypes.has(type)) { return keccak256(result); }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return concat(values);\n            }\n        }\n\n        assertArgument(false, `unknown type: ${ type }`, \"type\", type);\n    }\n\n    /**\n     *  Return the full type for %%name%%.\n     */\n    encodeType(name: string): string {\n        const result = this.#fullTypes.get(name);\n        assertArgument(result, `unknown type: ${ JSON.stringify(name) }`, \"name\", name);\n        return result;\n    }\n\n    /**\n     *  Return the encoded %%value%% for the %%type%%.\n     */\n    encodeData(type: string, value: any): string {\n        return this.getEncoder(type)(value);\n    }\n\n    /**\n     *  Returns the hash of %%value%% for the type of %%name%%.\n     */\n    hashStruct(name: string, value: Record<string, any>): string {\n        return keccak256(this.encodeData(name, value));\n    }\n\n    /**\n     *  Return the fulled encoded %%value%% for the [[types]].\n     */\n    encode(value: Record<string, any>): string {\n        return this.encodeData(this.primaryType, value);\n    }\n\n    /**\n     *  Return the hash of the fully encoded %%value%% for the [[types]].\n     */\n    hash(value: Record<string, any>): string {\n        return this.hashStruct(this.primaryType, value);\n    }\n\n    /**\n     *  @_ignore:\n     */\n    _visit(type: string, value: any, callback: (type: string, data: any) => any): any {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return callback(type, value); }\n        }\n\n        // Array\n        const array = splitArray(type).array;\n        if (array) {\n            assertArgument(array.count === -1 || array.count === value.length, `array length mismatch; expected length ${ array.count }`, \"value\", value);\n            return value.map((v: any) => this._visit(array.prefix, v, callback));\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, <Record<string, any>>{});\n        }\n\n        assertArgument(false, `unknown type: ${ type }`, \"type\", type);\n    }\n\n    /**\n     *  Call %%calback%% for each value in %%value%%, passing the type and\n     *  component within %%value%%.\n     *\n     *  This is useful for replacing addresses or other transformation that\n     *  may be desired on each component, based on its type.\n     */\n    visit(value: Record<string, any>, callback: (type: string, data: any) => any): any {\n        return this._visit(this.primaryType, value, callback);\n    }\n\n    /**\n     *  Create a new **TypedDataEncoder** for %%types%%.\n     */\n    static from(types: Record<string, Array<TypedDataField>>): TypedDataEncoder {\n        return new TypedDataEncoder(types);\n    }\n\n    /**\n     *  Return the primary type for %%types%%.\n     */\n    static getPrimaryType(types: Record<string, Array<TypedDataField>>): string {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n\n    /**\n     *  Return the hashed struct for %%value%% using %%types%% and %%name%%.\n     */\n    static hashStruct(name: string, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n\n    /**\n     *  Return the domain hash for %%domain%%.\n     */\n    static hashDomain(domain: TypedDataDomain): string {\n        const domainFields: Array<TypedDataField> = [ ];\n        for (const name in domain) {\n            if ((<Record<string, any>>domain)[name] == null) { continue; }\n            const type = domainFieldTypes[name];\n            assertArgument(type, `invalid typed-data domain key: ${ JSON.stringify(name) }`, \"domain\", domain);\n            domainFields.push({ name, type });\n        }\n\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n\n    /**\n     *  Return the fully encoded [[link-eip-712]] %%value%% for %%types%% with %%domain%%.\n     */\n    static encode(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return concat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n\n    /**\n     *  Return the hash of the fully encoded [[link-eip-712]] %%value%% for %%types%% with %%domain%%.\n     */\n    static hash(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n\n    // Replaces all address types with ENS names with their looked up address\n    /**\n     * Resolves to the value from resolving all addresses in %%value%% for\n     * %%types%% and the %%domain%%.\n     */\n    static async resolveNames(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, resolveName: (name: string) => Promise<string>): Promise<{ domain: TypedDataDomain, value: any }> {\n        // Make a copy to isolate it from the object passed in\n        domain = Object.assign({ }, domain);\n\n        // Allow passing null to ignore value\n        for (const key in domain) {\n            if ((<Record<string, any>>domain)[key] == null) {\n                delete (<Record<string, any>>domain)[key];\n            }\n        }\n\n        // Look up all ENS names\n        const ensCache: Record<string, string> = { };\n\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get a list of all the addresses\n        encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && ensCache[value]) { return ensCache[value]; }\n            return value;\n        });\n\n        return { domain, value };\n    }\n\n    /**\n     *  Returns the JSON-encoded payload expected by nodes which implement\n     *  the JSON-RPC [[link-eip-712]] method.\n     */\n    static getPayload(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): any {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n\n        // Derive the EIP712Domain Struct reference type\n        const domainValues: Record<string, any> = { };\n        const domainTypes: Array<{ name: string, type:string }> = [ ];\n\n        domainFieldNames.forEach((name) => {\n            const value = (<any>domain)[name];\n            if (value == null) { return; }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get the normalized types\n        types = encoder.types;\n\n        const typesWithDomain = Object.assign({ }, types);\n        assertArgument(typesWithDomain.EIP712Domain == null, \"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n\n        typesWithDomain.EIP712Domain = domainTypes;\n\n        // Validate the data structures and types\n        encoder.encode(value);\n\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type: string, value: any) => {\n\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(getBytes(value));\n                }\n\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return getBigInt(value).toString();\n                }\n\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        assertArgument(typeof(value) === \"string\", \"invalid string\", \"value\", value);\n                        return value;\n                }\n\n                assertArgument(false, \"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n\n/**\n *  Compute the address used to sign the typed data for the %%signature%%.\n */\nexport function verifyTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, signature: SignatureLike): string {\n    return recoverAddress(TypedDataEncoder.hash(domain, types, value), signature);\n}\n", "/**\n *  A fragment is a single item from an ABI, which may represent any of:\n *\n *  - [Functions](FunctionFragment)\n *  - [Events](EventFragment)\n *  - [Constructors](ConstructorFragment)\n *  - Custom [Errors](ErrorFragment)\n *  - [Fallback or Receive](FallbackFragment) functions\n *\n *  @_subsection api/abi/abi-coder:Fragments  [about-fragments]\n */\n\nimport {\n    defineProperties, getBigInt, getNumber,\n    assert, assertPrivate, assertArgument\n} from \"../utils/index.js\";\nimport { id } from \"../hash/index.js\";\n\n/**\n *  A Type description in a [JSON ABI format](link-solc-jsonabi).\n */\nexport interface JsonFragmentType {\n    /**\n     *  The parameter name.\n     */\n    readonly name?: string;\n\n    /**\n     *  If the parameter is indexed.\n     */\n    readonly indexed?: boolean;\n\n    /**\n     *  The type of the parameter.\n     */\n    readonly type?: string;\n\n    /**\n     *  The internal Solidity type.\n     */\n    readonly internalType?: string;\n\n    /**\n     *  The components for a tuple.\n     */\n    readonly components?: ReadonlyArray<JsonFragmentType>;\n}\n\n/**\n *  A fragment for a method, event or error in a [JSON ABI format](link-solc-jsonabi).\n */\nexport interface JsonFragment {\n    /**\n     *  The name of the error, event, function, etc.\n     */\n    readonly name?: string;\n\n    /**\n     *  The type of the fragment (e.g. ``event``, ``\"function\"``, etc.)\n     */\n    readonly type?: string;\n\n    /**\n     *  If the event is anonymous.\n     */\n    readonly anonymous?: boolean;\n\n    /**\n     *  If the function is payable.\n     */\n    readonly payable?: boolean;\n\n    /**\n     *  If the function is constant.\n     */\n    readonly constant?: boolean;\n\n    /**\n     *  The mutability state of the function.\n     */\n    readonly stateMutability?: string;\n\n    /**\n     *  The input parameters.\n     */\n    readonly inputs?: ReadonlyArray<JsonFragmentType>;\n\n    /**\n     *  The output parameters.\n     */\n    readonly outputs?: ReadonlyArray<JsonFragmentType>;\n\n    /**\n     *  The gas limit to use when sending a transaction for this function.\n     */\n    readonly gas?: string;\n};\n\n/**\n *  The format to serialize the output as.\n *\n *  **``\"sighash\"``** - the bare formatting, used to compute the selector\n *  or topic hash; this format cannot be reversed (as it discards ``indexed``)\n *  so cannot by used to export an [[Interface]].\n *\n *  **``\"minimal\"``** - Human-Readable ABI with minimal spacing and without\n *  names, so it is compact, but will result in Result objects that cannot\n *  be accessed by name.\n *\n *  **``\"full\"``** - Full Human-Readable ABI, with readable spacing and names\n *  intact; this is generally the recommended format.\n *\n *  **``\"json\"``** - The [JSON ABI format](link-solc-jsonabi).\n */\nexport type FormatType = \"sighash\" | \"minimal\" | \"full\" | \"json\";\n\n// [ \"a\", \"b\" ] => { \"a\": 1, \"b\": 1 }\nfunction setify(items: Array<string>): ReadonlySet<string> {\n    const result: Set<string> = new Set();\n    items.forEach((k) => result.add(k));\n    return Object.freeze(result);\n}\n\nconst _kwVisibDeploy = \"external public payable override\";\nconst KwVisibDeploy = setify(_kwVisibDeploy.split(\" \"));\n\n// Visibility Keywords\nconst _kwVisib = \"constant external internal payable private public pure view override\";\nconst KwVisib = setify(_kwVisib.split(\" \"));\n\nconst _kwTypes = \"constructor error event fallback function receive struct\";\nconst KwTypes = setify(_kwTypes.split(\" \"));\n\nconst _kwModifiers = \"calldata memory storage payable indexed\";\nconst KwModifiers = setify(_kwModifiers.split(\" \"));\n\nconst _kwOther = \"tuple returns\";\n\n// All Keywords\nconst _keywords = [ _kwTypes, _kwModifiers, _kwOther, _kwVisib ].join(\" \");\nconst Keywords = setify(_keywords.split(\" \"));\n\n// Single character tokens\nconst SimpleTokens: Record<string, string> = {\n  \"(\": \"OPEN_PAREN\", \")\": \"CLOSE_PAREN\",\n  \"[\": \"OPEN_BRACKET\", \"]\": \"CLOSE_BRACKET\",\n  \",\": \"COMMA\", \"@\": \"AT\"\n};\n\n// Parser regexes to consume the next token\nconst regexWhitespacePrefix = new RegExp(\"^(\\\\s*)\");\nconst regexNumberPrefix = new RegExp(\"^([0-9]+)\");\nconst regexIdPrefix = new RegExp(\"^([a-zA-Z$_][a-zA-Z0-9$_]*)\");\n\n// Parser regexs to check validity\nconst regexId = new RegExp(\"^([a-zA-Z$_][a-zA-Z0-9$_]*)$\");\nconst regexType = new RegExp(\"^(address|bool|bytes([0-9]*)|string|u?int([0-9]*))$\");\n\n/**\n *  @ignore:\n */\ntype Token = Readonly<{\n    // Type of token (e.g. TYPE, KEYWORD, NUMBER, etc)\n    type: string;\n\n    // Offset into the original source code\n    offset: number;\n\n    // Actual text content of the token\n    text: string;\n\n    // The parenthesis depth\n    depth: number;\n\n    // If a parenthesis, the offset (in tokens) that balances it\n    match: number;\n\n    // For parenthesis and commas, the offset (in tokens) to the\n    // previous/next parenthesis or comma in the list\n    linkBack: number;\n    linkNext: number;\n\n    // If a BRACKET, the value inside\n    value: number;\n}>;\n\nclass TokenString {\n    #offset: number;\n    #tokens: ReadonlyArray<Token>;\n\n    get offset(): number { return this.#offset; }\n    get length(): number { return this.#tokens.length - this.#offset; }\n\n    constructor(tokens: ReadonlyArray<Token>) {\n        this.#offset = 0;\n        this.#tokens = tokens.slice();\n    }\n\n    clone(): TokenString { return new TokenString(this.#tokens); }\n    reset(): void { this.#offset = 0; }\n\n    #subTokenString(from: number = 0, to: number = 0): TokenString {\n        return new TokenString(this.#tokens.slice(from, to).map((t) => {\n            return Object.freeze(Object.assign({ }, t, {\n                match: (t.match - from),\n                linkBack: (t.linkBack - from),\n                linkNext: (t.linkNext - from),\n            }));\n        }));\n    }\n\n    // Pops and returns the value of the next token, if it is a keyword in allowed; throws if out of tokens\n    popKeyword(allowed: ReadonlySet<string>): string {\n        const top = this.peek();\n        if (top.type !== \"KEYWORD\" || !allowed.has(top.text)) { throw new Error(`expected keyword ${ top.text }`); }\n        return this.pop().text;\n    }\n\n    // Pops and returns the value of the next token if it is `type`; throws if out of tokens\n    popType(type: string): string {\n        if (this.peek().type !== type) {\n            const top = this.peek();\n            throw new Error(`expected ${ type }; got ${ top.type } ${ JSON.stringify(top.text) }`);\n        }\n        return this.pop().text;\n    }\n\n    // Pops and returns a \"(\" TOKENS \")\"\n    popParen(): TokenString {\n        const top = this.peek();\n        if (top.type !== \"OPEN_PAREN\") { throw new Error(\"bad start\"); }\n        const result = this.#subTokenString(this.#offset + 1, top.match + 1);\n        this.#offset = top.match + 1;\n        return result;\n    }\n\n    // Pops and returns the items within \"(\" ITEM1 \",\" ITEM2 \",\" ... \")\"\n    popParams(): Array<TokenString> {\n        const top = this.peek();\n\n        if (top.type !== \"OPEN_PAREN\") { throw new Error(\"bad start\"); }\n\n        const result: Array<TokenString> = [ ];\n\n        while(this.#offset < top.match - 1) {\n            const link = this.peek().linkNext;\n            result.push(this.#subTokenString(this.#offset + 1, link));\n            this.#offset = link;\n        }\n\n        this.#offset = top.match + 1;\n\n        return result;\n    }\n\n    // Returns the top Token, throwing if out of tokens\n    peek(): Token {\n        if (this.#offset >= this.#tokens.length) {\n            throw new Error(\"out-of-bounds\");\n        }\n        return this.#tokens[this.#offset];\n    }\n\n    // Returns the next value, if it is a keyword in `allowed`\n    peekKeyword(allowed: ReadonlySet<string>): null | string {\n        const top = this.peekType(\"KEYWORD\");\n        return (top != null && allowed.has(top)) ? top: null;\n    }\n\n    // Returns the value of the next token if it is `type`\n    peekType(type: string): null | string {\n        if (this.length === 0) { return null; }\n        const top = this.peek();\n        return (top.type === type) ? top.text: null;\n    }\n\n    // Returns the next token; throws if out of tokens\n    pop(): Token {\n        const result = this.peek();\n        this.#offset++;\n        return result;\n    }\n\n    toString(): string {\n        const tokens: Array<string> = [ ];\n        for (let i = this.#offset; i < this.#tokens.length; i++) {\n            const token = this.#tokens[i];\n            tokens.push(`${ token.type }:${ token.text }`);\n        }\n        return `<TokenString ${ tokens.join(\" \") }>`\n    }\n}\n\ntype Writeable<T> = { -readonly [P in keyof T]: T[P] };\n\nfunction lex(text: string): TokenString {\n    const tokens: Array<Token> = [ ];\n\n    const throwError = (message: string) => {\n        const token = (offset < text.length) ? JSON.stringify(text[offset]): \"$EOI\";\n        throw new Error(`invalid token ${ token } at ${ offset }: ${ message }`);\n    };\n\n    let brackets: Array<number> = [ ];\n    let commas: Array<number> = [ ];\n\n    let offset = 0;\n    while (offset < text.length) {\n\n        // Strip off any leading whitespace\n        let cur = text.substring(offset);\n        let match = cur.match(regexWhitespacePrefix);\n        if (match) {\n            offset += match[1].length;\n            cur = text.substring(offset);\n        }\n\n        const token = { depth: brackets.length, linkBack: -1, linkNext: -1, match: -1, type: \"\", text: \"\", offset, value: -1 };\n        tokens.push(token);\n\n        let type = (SimpleTokens[cur[0]] || \"\");\n        if (type) {\n            token.type = type;\n            token.text = cur[0];\n            offset++;\n\n            if (type === \"OPEN_PAREN\") {\n                brackets.push(tokens.length - 1);\n                commas.push(tokens.length - 1);\n\n            } else if (type == \"CLOSE_PAREN\") {\n                if (brackets.length === 0) { throwError(\"no matching open bracket\"); }\n\n                token.match = brackets.pop() as number;\n                (<Writeable<Token>>(tokens[token.match])).match = tokens.length - 1;\n                token.depth--;\n\n                token.linkBack = commas.pop() as number;\n                (<Writeable<Token>>(tokens[token.linkBack])).linkNext = tokens.length - 1;\n\n            } else if (type === \"COMMA\") {\n                token.linkBack = commas.pop() as number;\n                (<Writeable<Token>>(tokens[token.linkBack])).linkNext = tokens.length - 1;\n                commas.push(tokens.length - 1);\n\n            } else if (type === \"OPEN_BRACKET\") {\n                token.type = \"BRACKET\";\n\n            } else if (type === \"CLOSE_BRACKET\") {\n                // Remove the CLOSE_BRACKET\n                let suffix = (tokens.pop() as Token).text;\n                if (tokens.length > 0 && tokens[tokens.length - 1].type === \"NUMBER\") {\n                    const value = (tokens.pop() as Token).text;\n                    suffix = value + suffix;\n                    (<Writeable<Token>>(tokens[tokens.length - 1])).value = getNumber(value);\n                }\n                if (tokens.length === 0 || tokens[tokens.length - 1].type !== \"BRACKET\") {\n                    throw new Error(\"missing opening bracket\");\n                }\n                (<Writeable<Token>>(tokens[tokens.length - 1])).text += suffix;\n            }\n\n            continue;\n        }\n\n        match = cur.match(regexIdPrefix);\n        if (match) {\n            token.text = match[1];\n            offset += token.text.length;\n\n            if (Keywords.has(token.text)) {\n                token.type = \"KEYWORD\";\n                continue;\n            }\n\n            if (token.text.match(regexType)) {\n                token.type = \"TYPE\";\n                continue;\n            }\n\n            token.type = \"ID\";\n            continue;\n        }\n\n        match = cur.match(regexNumberPrefix);\n        if (match) {\n            token.text = match[1];\n            token.type = \"NUMBER\";\n            offset += token.text.length;\n            continue;\n        }\n\n        throw new Error(`unexpected token ${ JSON.stringify(cur[0]) } at position ${ offset }`);\n    }\n\n    return new TokenString(tokens.map((t) => Object.freeze(t)));\n}\n\n// Check only one of `allowed` is in `set`\nfunction allowSingle(set: ReadonlySet<string>, allowed: ReadonlySet<string>): void {\n    let included: Array<string> = [ ];\n    for (const key in allowed.keys()) {\n        if (set.has(key)) { included.push(key); }\n    }\n    if (included.length > 1) { throw new Error(`conflicting types: ${ included.join(\", \") }`); }\n}\n\n// Functions to process a Solidity Signature TokenString from left-to-right for...\n\n// ...the name with an optional type, returning the name\nfunction consumeName(type: string, tokens: TokenString): string {\n    if (tokens.peekKeyword(KwTypes)) {\n        const keyword = tokens.pop().text;\n        if (keyword !== type) {\n            throw new Error(`expected ${ type }, got ${ keyword }`);\n        }\n    }\n\n    return tokens.popType(\"ID\");\n}\n\n// ...all keywords matching allowed, returning the keywords\nfunction consumeKeywords(tokens: TokenString, allowed?: ReadonlySet<string>): ReadonlySet<string> {\n    const keywords: Set<string> = new Set();\n    while (true) {\n        const keyword = tokens.peekType(\"KEYWORD\");\n\n        if (keyword == null || (allowed && !allowed.has(keyword))) { break; }\n        tokens.pop();\n\n        if (keywords.has(keyword)) { throw new Error(`duplicate keywords: ${ JSON.stringify(keyword) }`); }\n        keywords.add(keyword);\n    }\n\n    return Object.freeze(keywords);\n}\n\n// ...all visibility keywords, returning the coalesced mutability\nfunction consumeMutability(tokens: TokenString): \"payable\" | \"nonpayable\" | \"view\" | \"pure\" {\n    let modifiers = consumeKeywords(tokens, KwVisib);\n\n    // Detect conflicting modifiers\n    allowSingle(modifiers, setify(\"constant payable nonpayable\".split(\" \")));\n    allowSingle(modifiers, setify(\"pure view payable nonpayable\".split(\" \")));\n\n    // Process mutability states\n    if (modifiers.has(\"view\")) { return \"view\"; }\n    if (modifiers.has(\"pure\")) { return \"pure\"; }\n    if (modifiers.has(\"payable\")) { return \"payable\"; }\n    if (modifiers.has(\"nonpayable\")) { return \"nonpayable\"; }\n\n    // Process legacy `constant` last\n    if (modifiers.has(\"constant\")) { return \"view\"; }\n\n    return \"nonpayable\";\n}\n\n// ...a parameter list, returning the ParamType list\nfunction consumeParams(tokens: TokenString, allowIndexed?: boolean): Array<ParamType> {\n    return tokens.popParams().map((t) => ParamType.from(t, allowIndexed));\n}\n\n// ...a gas limit, returning a BigNumber or null if none\nfunction consumeGas(tokens: TokenString): null | bigint {\n    if (tokens.peekType(\"AT\")) {\n        tokens.pop();\n        if (tokens.peekType(\"NUMBER\")) {\n            return getBigInt(tokens.pop().text);\n        }\n        throw new Error(\"invalid gas\");\n    }\n    return null;\n}\n\nfunction consumeEoi(tokens: TokenString): void {\n    if (tokens.length) {\n        throw new Error(`unexpected tokens at offset ${ tokens.offset }: ${ tokens.toString() }`);\n    }\n}\n\nconst regexArrayType = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\n\nfunction verifyBasicType(type: string): string {\n    const match = type.match(regexType);\n    assertArgument(match, \"invalid type\", \"type\", type);\n    if (type === \"uint\") { return \"uint256\"; }\n    if (type === \"int\") { return \"int256\"; }\n\n    if (match[2]) {\n        // bytesXX\n        const length = parseInt(match[2]);\n        assertArgument(length !== 0 && length <= 32, \"invalid bytes length\", \"type\", type);\n\n    } else if (match[3]) {\n        // intXX or uintXX\n        const size = parseInt(match[3] as string);\n        assertArgument(size !== 0 && size <= 256 && (size % 8) === 0, \"invalid numeric width\", \"type\", type);\n    }\n\n    return type;\n}\n\n// Make the Fragment constructors effectively private\nconst _guard = { };\n\n\n/**\n *  When [walking](ParamType-walk) a [[ParamType]], this is called\n *  on each component.\n */\nexport type ParamTypeWalkFunc = (type: string, value: any) => any;\n\n/**\n *  When [walking asynchronously](ParamType-walkAsync) a [[ParamType]],\n *  this is called on each component.\n */\nexport type ParamTypeWalkAsyncFunc = (type: string, value: any) => any | Promise<any>;\n\nconst internal = Symbol.for(\"_ethers_internal\");\n\nconst ParamTypeInternal = \"_ParamTypeInternal\";\nconst ErrorFragmentInternal = \"_ErrorInternal\";\nconst EventFragmentInternal = \"_EventInternal\";\nconst ConstructorFragmentInternal = \"_ConstructorInternal\";\nconst FallbackFragmentInternal = \"_FallbackInternal\";\nconst FunctionFragmentInternal = \"_FunctionInternal\";\nconst StructFragmentInternal = \"_StructInternal\";\n\n/**\n *  Each input and output of a [[Fragment]] is an Array of **ParamType**.\n */\nexport class ParamType {\n\n    /**\n     *  The local name of the parameter (or ``\"\"`` if unbound)\n     */\n    readonly name!: string;\n\n    /**\n     *  The fully qualified type (e.g. ``\"address\"``, ``\"tuple(address)\"``,\n     *  ``\"uint256[3][]\"``)\n     */\n    readonly type!: string;\n\n    /**\n     *  The base type (e.g. ``\"address\"``, ``\"tuple\"``, ``\"array\"``)\n     */\n    readonly baseType!: string;\n\n    /**\n     *  True if the parameters is indexed.\n     *\n     *  For non-indexable types this is ``null``.\n     */\n    readonly indexed!: null | boolean;\n\n    /**\n     *  The components for the tuple.\n     *\n     *  For non-tuple types this is ``null``.\n     */\n    readonly components!: null | ReadonlyArray<ParamType>;\n\n    /**\n     *  The array length, or ``-1`` for dynamic-lengthed arrays.\n     *\n     *  For non-array types this is ``null``.\n     */\n    readonly arrayLength!: null | number;\n\n    /**\n     *  The type of each child in the array.\n     *\n     *  For non-array types this is ``null``.\n     */\n    readonly arrayChildren!: null | ParamType;\n\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, name: string, type: string, baseType: string, indexed: null | boolean, components: null | ReadonlyArray<ParamType>, arrayLength: null | number, arrayChildren: null | ParamType) {\n        assertPrivate(guard, _guard, \"ParamType\");\n        Object.defineProperty(this, internal, { value: ParamTypeInternal });\n\n        if (components) { components = Object.freeze(components.slice()); }\n\n        if (baseType === \"array\") {\n            if (arrayLength == null || arrayChildren == null) {\n                throw new Error(\"\");\n            }\n        } else if (arrayLength != null || arrayChildren != null) {\n            throw new Error(\"\");\n        }\n\n        if (baseType === \"tuple\") {\n            if (components == null) { throw new Error(\"\"); }\n        } else if (components != null) {\n            throw new Error(\"\");\n        }\n\n        defineProperties<ParamType>(this, {\n            name, type, baseType, indexed, components, arrayLength, arrayChildren\n        });\n    }\n\n    /**\n     *  Return a string representation of this type.\n     *\n     *  For example,\n     *\n     *  ``sighash\" => \"(uint256,address)\"``\n     *\n     *  ``\"minimal\" => \"tuple(uint256,address) indexed\"``\n     *\n     *  ``\"full\" => \"tuple(uint256 foo, address bar) indexed baz\"``\n     */\n    format(format?: FormatType): string {\n        if (format == null) { format = \"sighash\"; }\n        if (format === \"json\") {\n            const name = this.name || \"\";\n\n            if (this.isArray()) {\n                const result = JSON.parse(this.arrayChildren.format(\"json\"));\n                result.name = name;\n                result.type += `[${ (this.arrayLength < 0 ? \"\": String(this.arrayLength)) }]`;\n                return JSON.stringify(result);\n            }\n\n            const result: any = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\": this.type),\n                name\n            };\n\n\n            if (typeof(this.indexed) === \"boolean\") { result.indexed = this.indexed; }\n            if (this.isTuple()) {\n                result.components = this.components.map((c) => JSON.parse(c.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n\n        let result = \"\";\n\n        // Array\n        if (this.isArray()) {\n            result += this.arrayChildren.format(format);\n            result += `[${ (this.arrayLength < 0 ? \"\": String(this.arrayLength)) }]`;\n        } else {\n            if (this.isTuple()) {\n                result += \"(\" + this.components.map(\n                    (comp) => comp.format(format)\n                ).join((format === \"full\") ? \", \": \",\") + \")\";\n            } else {\n                result += this.type;\n            }\n        }\n\n        if (format !== \"sighash\") {\n            if (this.indexed === true) { result += \" indexed\"; }\n            if (format === \"full\" && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     *  Returns true if %%this%% is an Array type.\n     *\n     *  This provides a type gaurd ensuring that [[arrayChildren]]\n     *  and [[arrayLength]] are non-null.\n     */\n    isArray(): this is (ParamType & { arrayChildren: ParamType, arrayLength: number }) {\n        return (this.baseType === \"array\")\n    }\n\n    /**\n     *  Returns true if %%this%% is a Tuple type.\n     *\n     *  This provides a type gaurd ensuring that [[components]]\n     *  is non-null.\n     */\n    isTuple(): this is (ParamType & { components: ReadonlyArray<ParamType> }) {\n        return (this.baseType === \"tuple\");\n    }\n\n    /**\n     *  Returns true if %%this%% is an Indexable type.\n     *\n     *  This provides a type gaurd ensuring that [[indexed]]\n     *  is non-null.\n     */\n    isIndexable(): this is (ParamType & { indexed: boolean }) {\n        return (this.indexed != null);\n    }\n\n    /**\n     *  Walks the **ParamType** with %%value%%, calling %%process%%\n     *  on each type, destructing the %%value%% recursively.\n     */\n    walk(value: any, process: ParamTypeWalkFunc): any {\n        if (this.isArray()) {\n            if (!Array.isArray(value)) { throw new Error(\"invalid array value\"); }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error(\"array is wrong length\");\n            }\n            const _this = this;\n            return value.map((v) => (_this.arrayChildren.walk(v, process)));\n        }\n\n        if (this.isTuple()) {\n            if (!Array.isArray(value)) { throw new Error(\"invalid tuple value\"); }\n            if (value.length !== this.components.length) {\n                throw new Error(\"array is wrong length\");\n            }\n            const _this = this;\n            return value.map((v, i) => (_this.components[i].walk(v, process)));\n        }\n\n        return process(this.type, value);\n    }\n\n    #walkAsync(promises: Array<Promise<void>>, value: any, process: ParamTypeWalkAsyncFunc, setValue: (value: any) => void): void {\n\n        if (this.isArray()) {\n            if (!Array.isArray(value)) { throw new Error(\"invalid array value\"); }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error(\"array is wrong length\");\n            }\n            const childType = this.arrayChildren;\n\n            const result = value.slice();\n            result.forEach((value, index) => {\n                childType.#walkAsync(promises, value, process, (value: any) => {\n                    result[index] = value;\n                });\n            });\n            setValue(result);\n            return;\n        }\n\n        if (this.isTuple()) {\n            const components = this.components;\n\n            // Convert the object into an array\n            let result: Array<any>;\n            if (Array.isArray(value)) {\n                result = value.slice();\n\n            } else {\n                if (value == null || typeof(value) !== \"object\") {\n                    throw new Error(\"invalid tuple value\");\n                }\n\n                result = components.map((param) => {\n                    if (!param.name) { throw new Error(\"cannot use object value with unnamed components\"); }\n                    if (!(param.name in value)) {\n                        throw new Error(`missing value for component ${ param.name }`);\n                    }\n                    return value[param.name];\n                });\n            }\n\n            if (result.length !== this.components.length) {\n                throw new Error(\"array is wrong length\");\n            }\n\n            result.forEach((value, index) => {\n                components[index].#walkAsync(promises, value, process, (value: any) => {\n                    result[index] = value;\n                });\n            });\n            setValue(result);\n            return;\n        }\n\n        const result = process(this.type, value);\n        if (result.then) {\n            promises.push((async function() { setValue(await result); })());\n        } else {\n            setValue(result);\n        }\n    }\n\n    /**\n     *  Walks the **ParamType** with %%value%%, asynchronously calling\n     *  %%process%% on each type, destructing the %%value%% recursively.\n     *\n     *  This can be used to resolve ENS naes by walking and resolving each\n     *  ``\"address\"`` type.\n     */\n    async walkAsync(value: any, process: ParamTypeWalkAsyncFunc): Promise<any> {\n        const promises: Array<Promise<void>> = [ ];\n        const result: [ any ] = [ value ];\n        this.#walkAsync(promises, value, process, (value: any) => {\n            result[0] = value;\n        });\n        if (promises.length) { await Promise.all(promises); }\n        return result[0];\n    }\n\n    /**\n     *  Creates a new **ParamType** for %%obj%%.\n     *\n     *  If %%allowIndexed%% then the ``indexed`` keyword is permitted,\n     *  otherwise the ``indexed`` keyword will throw an error.\n     */\n    static from(obj: any, allowIndexed?: boolean): ParamType {\n        if (ParamType.isParamType(obj)) { return obj; }\n\n        if (typeof(obj) === \"string\") {\n            try {\n                return ParamType.from(lex(obj), allowIndexed);\n            } catch (error) {\n                assertArgument(false, \"invalid param type\", \"obj\", obj);\n            }\n\n        } else if (obj instanceof TokenString) {\n            let type = \"\", baseType = \"\";\n            let comps: null | Array<ParamType> = null;\n\n            if (consumeKeywords(obj, setify([ \"tuple\" ])).has(\"tuple\") || obj.peekType(\"OPEN_PAREN\")) {\n                // Tuple\n                baseType = \"tuple\";\n                comps = obj.popParams().map((t) => ParamType.from(t));\n                type = `tuple(${ comps.map((c) => c.format()).join(\",\") })`;\n            } else {\n                // Normal\n                type = verifyBasicType(obj.popType(\"TYPE\"));\n                baseType = type;\n            }\n\n            // Check for Array\n            let arrayChildren: null | ParamType  = null;\n            let arrayLength: null | number = null;\n\n            while (obj.length && obj.peekType(\"BRACKET\")) {\n                const bracket = obj.pop(); //arrays[i];\n                arrayChildren = new ParamType(_guard, \"\", type, baseType, null, comps, arrayLength, arrayChildren);\n                arrayLength = bracket.value;\n                type += bracket.text;\n                baseType = \"array\";\n                comps = null;\n            }\n\n            let indexed: null | boolean = null;\n            const keywords = consumeKeywords(obj, KwModifiers);\n            if (keywords.has(\"indexed\")) {\n                if (!allowIndexed) { throw new Error(\"\"); }\n                indexed = true;\n            }\n\n            const name = (obj.peekType(\"ID\") ? obj.pop().text: \"\");\n\n            if (obj.length) { throw new Error(\"leftover tokens\"); }\n\n            return new ParamType(_guard, name, type, baseType, indexed, comps, arrayLength, arrayChildren);\n        }\n\n        const name = obj.name;\n        assertArgument(!name || (typeof(name) === \"string\" && name.match(regexId)),\n            \"invalid name\", \"obj.name\", name);\n\n        let indexed = obj.indexed;\n        if (indexed != null) {\n            assertArgument(allowIndexed, \"parameter cannot be indexed\", \"obj.indexed\", obj.indexed);\n            indexed = !!indexed;\n        }\n\n        let type = obj.type;\n\n        let arrayMatch = type.match(regexArrayType);\n        if (arrayMatch) {\n            const arrayLength = parseInt(arrayMatch[2] || \"-1\");\n            const arrayChildren = ParamType.from({\n                type: arrayMatch[1],\n                components: obj.components\n            });\n\n            return new ParamType(_guard, name || \"\", type, \"array\", indexed, null, arrayLength, arrayChildren);\n        }\n\n        if (type === \"tuple\" || type.startsWith(\"tuple(\"/* fix: ) */) || type.startsWith(\"(\" /* fix: ) */)) {\n            const comps = (obj.components != null) ? obj.components.map((c: any) => ParamType.from(c)): null;\n            const tuple = new ParamType(_guard, name || \"\", type, \"tuple\", indexed, comps, null, null);\n            // @TODO: use lexer to validate and normalize type\n            return tuple;\n        }\n\n        type = verifyBasicType(obj.type);\n\n        return new ParamType(_guard, name || \"\", type, type, indexed, null, null, null);\n    }\n\n    /**\n     *  Returns true if %%value%% is a **ParamType**.\n     */\n    static isParamType(value: any): value is ParamType {\n        return (value && value[internal] === ParamTypeInternal);\n    }\n}\n\n/**\n *  The type of a [[Fragment]].\n */\nexport type FragmentType = \"constructor\" | \"error\" | \"event\" | \"fallback\" | \"function\" | \"struct\";\n\n/**\n *  An abstract class to represent An individual fragment from a parse ABI.\n */\nexport abstract class Fragment {\n    /**\n     *  The type of the fragment.\n     */\n    readonly type!: FragmentType;\n\n    /**\n     *  The inputs for the fragment.\n     */\n    readonly inputs!: ReadonlyArray<ParamType>;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, type: FragmentType, inputs: ReadonlyArray<ParamType>) {\n        assertPrivate(guard, _guard, \"Fragment\");\n        inputs = Object.freeze(inputs.slice());\n        defineProperties<Fragment>(this, { type, inputs });\n    }\n\n    /**\n     *  Returns a string representation of this fragment as %%format%%.\n     */\n    abstract format(format?: FormatType): string;\n\n    /**\n     *  Creates a new **Fragment** for %%obj%%, wich can be any supported\n     *  ABI frgament type.\n     */\n    static from(obj: any): Fragment {\n        if (typeof(obj) === \"string\") {\n\n            // Try parsing JSON...\n            try {\n                Fragment.from(JSON.parse(obj));\n            } catch (e) { }\n\n            // ...otherwise, use the human-readable lexer\n            return Fragment.from(lex(obj));\n        }\n\n        if (obj instanceof TokenString) {\n            // Human-readable ABI (already lexed)\n\n            const type = obj.peekKeyword(KwTypes);\n\n            switch (type) {\n                case \"constructor\": return ConstructorFragment.from(obj);\n                case \"error\": return ErrorFragment.from(obj);\n                case \"event\": return EventFragment.from(obj);\n                case \"fallback\": case \"receive\":\n                    return FallbackFragment.from(obj);\n                case \"function\": return FunctionFragment.from(obj);\n                case \"struct\": return StructFragment.from(obj);\n            }\n\n        } else if (typeof(obj) === \"object\") {\n            // JSON ABI\n\n            switch (obj.type) {\n                case \"constructor\": return ConstructorFragment.from(obj);\n                case \"error\": return ErrorFragment.from(obj);\n                case \"event\": return EventFragment.from(obj);\n                case \"fallback\": case \"receive\":\n                    return FallbackFragment.from(obj);\n                case \"function\": return FunctionFragment.from(obj);\n                case \"struct\": return StructFragment.from(obj);\n            }\n\n            assert(false, `unsupported type: ${ obj.type }`, \"UNSUPPORTED_OPERATION\", {\n                operation: \"Fragment.from\"\n            });\n        }\n\n        assertArgument(false, \"unsupported frgament object\", \"obj\", obj);\n    }\n\n    /**\n     *  Returns true if %%value%% is a [[ConstructorFragment]].\n     */\n    static isConstructor(value: any): value is ConstructorFragment {\n        return ConstructorFragment.isFragment(value);\n    }\n\n    /**\n     *  Returns true if %%value%% is an [[ErrorFragment]].\n     */\n    static isError(value: any): value is ErrorFragment {\n        return ErrorFragment.isFragment(value);\n    }\n\n    /**\n     *  Returns true if %%value%% is an [[EventFragment]].\n     */\n    static isEvent(value: any): value is EventFragment {\n        return EventFragment.isFragment(value);\n    }\n\n    /**\n     *  Returns true if %%value%% is a [[FunctionFragment]].\n     */\n    static isFunction(value: any): value is FunctionFragment {\n        return FunctionFragment.isFragment(value);\n    }\n\n    /**\n     *  Returns true if %%value%% is a [[StructFragment]].\n     */\n    static isStruct(value: any): value is StructFragment {\n        return StructFragment.isFragment(value);\n    }\n}\n\n/**\n *  An abstract class to represent An individual fragment\n *  which has a name from a parse ABI.\n */\nexport abstract class NamedFragment extends Fragment {\n    /**\n     *  The name of the fragment.\n     */\n    readonly name!: string;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, type: FragmentType, name: string, inputs: ReadonlyArray<ParamType>) {\n        super(guard, type, inputs);\n        assertArgument(typeof(name) === \"string\" && name.match(regexId),\n            \"invalid identifier\", \"name\", name);\n        inputs = Object.freeze(inputs.slice());\n        defineProperties<NamedFragment>(this, { name });\n    }\n}\n\nfunction joinParams(format: FormatType, params: ReadonlyArray<ParamType>): string { \n    return \"(\" + params.map((p) => p.format(format)).join((format === \"full\") ? \", \": \",\") + \")\";\n}\n\n/**\n *  A Fragment which represents a //Custom Error//.\n */\nexport class ErrorFragment extends NamedFragment {\n    /**\n     *  @private\n     */\n    constructor(guard: any, name: string, inputs: ReadonlyArray<ParamType>) {\n        super(guard, \"error\", name, inputs);\n        Object.defineProperty(this, internal, { value: ErrorFragmentInternal });\n    }\n\n    /**\n     *  The Custom Error selector.\n     */\n    get selector(): string {\n        return id(this.format(\"sighash\")).substring(0, 10);\n    }\n\n    /**\n     *  Returns a string representation of this fragment as %%format%%.\n     */\n    format(format?: FormatType): string {\n        if (format == null) { format = \"sighash\"; }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n\n        const result: Array<string> = [ ];\n        if (format !== \"sighash\") { result.push(\"error\"); }\n        result.push(this.name + joinParams(format, this.inputs));\n        return result.join(\" \");\n    }\n\n    /**\n     *  Returns a new **ErrorFragment** for %%obj%%.\n     */\n    static from(obj: any): ErrorFragment {\n        if (ErrorFragment.isFragment(obj)) { return obj; }\n\n        if (typeof(obj) === \"string\") {\n            return ErrorFragment.from(lex(obj));\n\n        } else if (obj instanceof TokenString) {\n            const name = consumeName(\"error\", obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n\n            return new ErrorFragment(_guard, name, inputs);\n        }\n\n        return new ErrorFragment(_guard, obj.name,\n            obj.inputs ? obj.inputs.map(ParamType.from): [ ]);\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is an\n     *  **ErrorFragment**.\n     */\n    static isFragment(value: any): value is ErrorFragment {\n        return (value && value[internal] === ErrorFragmentInternal);\n    }\n}\n\n/**\n *  A Fragment which represents an Event.\n */\nexport class EventFragment extends NamedFragment {\n    /**\n     *  Whether this event is anonymous.\n     */\n    readonly anonymous!: boolean;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, name: string, inputs: ReadonlyArray<ParamType>, anonymous: boolean) {\n        super(guard, \"event\", name, inputs);\n        Object.defineProperty(this, internal, { value: EventFragmentInternal });\n        defineProperties<EventFragment>(this, { anonymous });\n    }\n\n    /**\n     *  The Event topic hash.\n     */\n    get topicHash(): string {\n        return id(this.format(\"sighash\"));\n    }\n\n    /**\n     *  Returns a string representation of this event as %%format%%.\n     */\n    format(format?: FormatType): string {\n        if (format == null) { format = \"sighash\"; }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format)))\n            });\n        }\n\n        const result: Array<string> = [ ];\n        if (format !== \"sighash\") { result.push(\"event\"); }\n        result.push(this.name + joinParams(format, this.inputs));\n        if (format !== \"sighash\" && this.anonymous) { result.push(\"anonymous\"); }\n        return result.join(\" \");\n    }\n\n    /**\n     *  Return the topic hash for an event with %%name%% and %%params%%.\n     */\n    static getTopicHash(name: string, params?: Array<any>): string {\n        params = (params || []).map((p) => ParamType.from(p));\n        const fragment = new EventFragment(_guard, name, params, false);\n        return fragment.topicHash;\n    }\n\n    /**\n     *  Returns a new **EventFragment** for %%obj%%.\n     */\n    static from(obj: any): EventFragment {\n        if (EventFragment.isFragment(obj)) { return obj; }\n\n        if (typeof(obj) === \"string\") {\n            try {\n                return EventFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, \"invalid event fragment\", \"obj\", obj);\n            }\n\n        } else if (obj instanceof TokenString) {\n            const name = consumeName(\"event\", obj);\n            const inputs = consumeParams(obj, true);\n            const anonymous = !!consumeKeywords(obj, setify([ \"anonymous\" ])).has(\"anonymous\");\n            consumeEoi(obj);\n\n            return new EventFragment(_guard, name, inputs, anonymous);\n        }\n\n        return new EventFragment(_guard, obj.name,\n            obj.inputs ? obj.inputs.map((p: any) => ParamType.from(p, true)): [ ], !!obj.anonymous);\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is an\n     *  **EventFragment**.\n     */\n    static isFragment(value: any): value is EventFragment {\n        return (value && value[internal] === EventFragmentInternal);\n    }\n}\n\n/**\n *  A Fragment which represents a constructor.\n */\nexport class ConstructorFragment extends Fragment {\n\n    /**\n     *  Whether the constructor can receive an endowment.\n     */\n    readonly payable!: boolean;\n\n    /**\n     *  The recommended gas limit for deployment or ``null``.\n     */\n    readonly gas!: null | bigint;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, type: FragmentType, inputs: ReadonlyArray<ParamType>, payable: boolean, gas: null | bigint) {\n        super(guard, type, inputs);\n        Object.defineProperty(this, internal, { value: ConstructorFragmentInternal });\n        defineProperties<ConstructorFragment>(this, { payable, gas });\n    }\n\n    /**\n     *  Returns a string representation of this constructor as %%format%%.\n     */\n    format(format?: FormatType): string {\n        assert(format != null && format !== \"sighash\", \"cannot format a constructor for sighash\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"format(sighash)\" });\n\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: (this.payable ? \"payable\": \"undefined\"),\n                payable: this.payable,\n                gas: ((this.gas != null) ? this.gas: undefined),\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format)))\n            });\n        }\n\n        const result = [ `constructor${ joinParams(format, this.inputs) }` ];\n        if (this.payable) { result.push(\"payable\"); }\n        if (this.gas != null) { result.push(`@${ this.gas.toString() }`); }\n        return result.join(\" \");\n    }\n\n    /**\n     *  Returns a new **ConstructorFragment** for %%obj%%.\n     */\n    static from(obj: any): ConstructorFragment {\n        if (ConstructorFragment.isFragment(obj)) { return obj; }\n\n        if (typeof(obj) === \"string\") {\n            try {\n                return ConstructorFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, \"invalid constuctor fragment\", \"obj\", obj);\n            }\n\n        } else if (obj instanceof TokenString) {\n            consumeKeywords(obj, setify([ \"constructor\" ]));\n            const inputs = consumeParams(obj);\n            const payable = !!consumeKeywords(obj, KwVisibDeploy).has(\"payable\");\n            const gas = consumeGas(obj);\n            consumeEoi(obj);\n\n            return new ConstructorFragment(_guard, \"constructor\", inputs, payable, gas);\n        }\n\n        return new ConstructorFragment(_guard, \"constructor\",\n            obj.inputs ? obj.inputs.map(ParamType.from): [ ],\n            !!obj.payable, (obj.gas != null) ? obj.gas: null);\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **ConstructorFragment**.\n     */\n    static isFragment(value: any): value is ConstructorFragment {\n        return (value && value[internal] === ConstructorFragmentInternal);\n    }\n}\n\n/**\n *  A Fragment which represents a method.\n */\nexport class FallbackFragment extends Fragment {\n\n    /**\n     *  If the function can be sent value during invocation.\n     */\n    readonly payable!: boolean;\n\n    constructor(guard: any, inputs: ReadonlyArray<ParamType>, payable: boolean) {\n        super(guard, \"fallback\", inputs);\n        Object.defineProperty(this, internal, { value: FallbackFragmentInternal });\n        defineProperties<FallbackFragment>(this, { payable });\n    }\n\n    /**\n     *  Returns a string representation of this fallback as %%format%%.\n     */\n    format(format?: FormatType): string {\n        const type = ((this.inputs.length === 0) ? \"receive\": \"fallback\");\n\n        if (format === \"json\") {\n            const stateMutability = (this.payable ? \"payable\": \"nonpayable\");\n            return JSON.stringify({ type, stateMutability });\n        }\n\n        return `${ type }()${ this.payable ? \" payable\": \"\" }`;\n    }\n\n    /**\n     *  Returns a new **FallbackFragment** for %%obj%%.\n     */\n    static from(obj: any): FallbackFragment {\n        if (FallbackFragment.isFragment(obj)) { return obj; }\n\n        if (typeof(obj) === \"string\") {\n            try {\n                return FallbackFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, \"invalid fallback fragment\", \"obj\", obj);\n            }\n\n        } else if (obj instanceof TokenString) {\n            const errorObj = obj.toString();\n\n            const topIsValid = obj.peekKeyword(setify([ \"fallback\", \"receive\" ]));\n            assertArgument(topIsValid, \"type must be fallback or receive\", \"obj\", errorObj);\n\n            const type = obj.popKeyword(setify([ \"fallback\", \"receive\" ]));\n\n            // receive()\n            if (type === \"receive\") {\n                const inputs = consumeParams(obj);\n                assertArgument(inputs.length === 0, `receive cannot have arguments`, \"obj.inputs\", inputs);\n                consumeKeywords(obj, setify([ \"payable\" ]));\n                consumeEoi(obj);\n                return new FallbackFragment(_guard, [ ], true);\n            }\n\n            // fallback() [payable]\n            // fallback(bytes) [payable] returns (bytes)\n            let inputs = consumeParams(obj);\n            if (inputs.length) {\n                assertArgument(inputs.length === 1 && inputs[0].type === \"bytes\",\n                    \"invalid fallback inputs\", \"obj.inputs\",\n                    inputs.map((i) => i.format(\"minimal\")).join(\", \"));\n            } else {\n                inputs = [ ParamType.from(\"bytes\") ];\n            }\n\n            const mutability = consumeMutability(obj);\n            assertArgument(mutability === \"nonpayable\" || mutability === \"payable\", \"fallback cannot be constants\", \"obj.stateMutability\", mutability);\n\n            if (consumeKeywords(obj, setify([ \"returns\" ])).has(\"returns\")) {\n                const outputs = consumeParams(obj);\n                assertArgument(outputs.length === 1 && outputs[0].type === \"bytes\",\n                    \"invalid fallback outputs\", \"obj.outputs\",\n                    outputs.map((i) => i.format(\"minimal\")).join(\", \"));\n            }\n\n            consumeEoi(obj);\n\n            return new FallbackFragment(_guard, inputs, mutability === \"payable\");\n        }\n\n        if (obj.type === \"receive\") {\n            return new FallbackFragment(_guard, [ ], true);\n        }\n\n        if (obj.type === \"fallback\") {\n            const inputs = [ ParamType.from(\"bytes\") ];\n            const payable = (obj.stateMutability === \"payable\");\n            return new FallbackFragment(_guard, inputs, payable);\n        }\n\n        assertArgument(false, \"invalid fallback description\", \"obj\", obj);\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **FallbackFragment**.\n     */\n    static isFragment(value: any): value is FallbackFragment {\n        return (value && value[internal] === FallbackFragmentInternal);\n    }\n}\n\n\n/**\n *  A Fragment which represents a method.\n */\nexport class FunctionFragment extends NamedFragment {\n    /**\n     *  If the function is constant (e.g. ``pure`` or ``view`` functions).\n     */\n    readonly constant!: boolean;\n\n    /**\n     *  The returned types for the result of calling this function.\n     */\n    readonly outputs!: ReadonlyArray<ParamType>;\n\n    /**\n     *  The state mutability (e.g. ``payable``, ``nonpayable``, ``view``\n     *  or ``pure``)\n     */\n    readonly stateMutability!: \"payable\" | \"nonpayable\" | \"view\" | \"pure\";\n\n    /**\n     *  If the function can be sent value during invocation.\n     */\n    readonly payable!: boolean;\n\n    /**\n     *  The recommended gas limit to send when calling this function.\n     */\n    readonly gas!: null | bigint;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, name: string, stateMutability: \"payable\" | \"nonpayable\" | \"view\" | \"pure\", inputs: ReadonlyArray<ParamType>, outputs: ReadonlyArray<ParamType>, gas: null | bigint) {\n        super(guard, \"function\", name, inputs);\n        Object.defineProperty(this, internal, { value: FunctionFragmentInternal });\n        outputs = Object.freeze(outputs.slice());\n        const constant = (stateMutability === \"view\" || stateMutability === \"pure\");\n        const payable = (stateMutability === \"payable\");\n        defineProperties<FunctionFragment>(this, { constant, gas, outputs, payable, stateMutability });\n    }\n\n    /**\n     *  The Function selector.\n     */\n    get selector(): string {\n        return id(this.format(\"sighash\")).substring(0, 10);\n    }\n\n    /**\n     *  Returns a string representation of this function as %%format%%.\n     */\n    format(format?: FormatType): string {\n        if (format == null) { format = \"sighash\"; }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability: undefined),\n                payable: this.payable,\n                gas: ((this.gas != null) ? this.gas: undefined),\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format))),\n                outputs: this.outputs.map((o) => JSON.parse(o.format(format))),\n            });\n        }\n\n        const result: Array<string> = [];\n\n        if (format !== \"sighash\") { result.push(\"function\"); }\n\n        result.push(this.name + joinParams(format, this.inputs));\n\n        if (format !== \"sighash\") {\n            if (this.stateMutability !== \"nonpayable\") {\n                result.push(this.stateMutability);\n            }\n\n            if (this.outputs && this.outputs.length) {\n                result.push(\"returns\");\n                result.push(joinParams(format, this.outputs));\n            }\n\n            if (this.gas != null) { result.push(`@${ this.gas.toString() }`); }\n        }\n        return result.join(\" \");\n    }\n\n    /**\n     *  Return the selector for a function with %%name%% and %%params%%.\n     */\n    static getSelector(name: string, params?: Array<any>): string {\n        params = (params || []).map((p) => ParamType.from(p));\n        const fragment = new FunctionFragment(_guard, name, \"view\", params, [ ], null);\n        return fragment.selector;\n    }\n\n    /**\n     *  Returns a new **FunctionFragment** for %%obj%%.\n     */\n    static from(obj: any): FunctionFragment {\n        if (FunctionFragment.isFragment(obj)) { return obj; }\n\n        if (typeof(obj) === \"string\") {\n            try {\n                return FunctionFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, \"invalid function fragment\", \"obj\", obj);\n            }\n\n        } else if (obj instanceof TokenString) {\n            const name = consumeName(\"function\", obj);\n            const inputs = consumeParams(obj);\n            const mutability = consumeMutability(obj);\n\n            let outputs: Array<ParamType> = [ ];\n            if (consumeKeywords(obj, setify([ \"returns\" ])).has(\"returns\")) {\n                outputs = consumeParams(obj);\n            }\n\n            const gas = consumeGas(obj);\n\n            consumeEoi(obj);\n\n            return new FunctionFragment(_guard, name, mutability, inputs, outputs, gas);\n        }\n\n        let stateMutability = obj.stateMutability;\n\n        // Use legacy Solidity ABI logic if stateMutability is missing\n        if (stateMutability == null) {\n            stateMutability = \"payable\";\n\n            if (typeof(obj.constant) === \"boolean\") {\n                stateMutability = \"view\";\n                if (!obj.constant) {\n                    stateMutability = \"payable\"\n                    if (typeof(obj.payable) === \"boolean\" && !obj.payable) {\n                        stateMutability = \"nonpayable\";\n                    }\n                }\n            } else if (typeof(obj.payable) === \"boolean\" && !obj.payable) {\n                stateMutability = \"nonpayable\";\n            }\n        }\n\n        // @TODO: verifyState for stateMutability (e.g. throw if\n        //        payable: false but stateMutability is \"nonpayable\")\n\n        return new FunctionFragment(_guard, obj.name, stateMutability,\n             obj.inputs ? obj.inputs.map(ParamType.from): [ ],\n             obj.outputs ? obj.outputs.map(ParamType.from): [ ],\n             (obj.gas != null) ? obj.gas: null);\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **FunctionFragment**.\n     */\n    static isFragment(value: any): value is FunctionFragment {\n        return (value && value[internal] === FunctionFragmentInternal);\n    }\n}\n\n/**\n *  A Fragment which represents a structure.\n */\nexport class StructFragment extends NamedFragment {\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, name: string, inputs: ReadonlyArray<ParamType>) {\n        super(guard, \"struct\", name, inputs);\n        Object.defineProperty(this, internal, { value: StructFragmentInternal });\n    }\n\n    /**\n     *  Returns a string representation of this struct as %%format%%.\n     */\n    format(): string {\n        throw new Error(\"@TODO\");\n    }\n\n    /**\n     *  Returns a new **StructFragment** for %%obj%%.\n     */\n    static from(obj: any): StructFragment {\n        if (typeof(obj) === \"string\") {\n            try {\n                return StructFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, \"invalid struct fragment\", \"obj\", obj);\n            }\n\n        } else if (obj instanceof TokenString) {\n            const name = consumeName(\"struct\", obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n            return new StructFragment(_guard, name, inputs);\n        }\n\n        return new StructFragment(_guard, obj.name, obj.inputs ? obj.inputs.map(ParamType.from): [ ]);\n    }\n\n// @TODO: fix this return type\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **StructFragment**.\n     */\n    static isFragment(value: any): value is FunctionFragment {\n        return (value && value[internal] === StructFragmentInternal);\n    }\n}\n\n", "/**\n *  When sending values to or receiving values from a [[Contract]], the\n *  data is generally encoded using the [ABI standard](link-solc-abi).\n *\n *  The AbiCoder provides a utility to encode values to ABI data and\n *  decode values from ABI data.\n *\n *  Most of the time, developers should favour the [[Contract]] class,\n *  which further abstracts a lot of the finer details of ABI data.\n *\n *  @_section api/abi/abi-coder:ABI Encoding\n */\n\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\n\nimport { assertArgumentCount, assertArgument } from \"../utils/index.js\";\n\nimport { Coder, Reader, Result, Writer } from \"./coders/abstract-coder.js\";\nimport { AddressCoder } from \"./coders/address.js\";\nimport { ArrayCoder } from \"./coders/array.js\";\nimport { BooleanCoder } from \"./coders/boolean.js\";\nimport { BytesCoder } from \"./coders/bytes.js\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes.js\";\nimport { NullCoder } from \"./coders/null.js\";\nimport { NumberCoder } from \"./coders/number.js\";\nimport { StringCoder } from \"./coders/string.js\";\nimport { TupleCoder } from \"./coders/tuple.js\";\nimport { ParamType } from \"./fragments.js\";\n\nimport { getAddress } from \"../address/index.js\";\nimport { getBytes, hexlify, makeError } from \"../utils/index.js\";\n\nimport type {\n    BytesLike,\n    CallExceptionAction, CallExceptionError, CallExceptionTransaction\n} from \"../utils/index.js\";\n\n// https://docs.soliditylang.org/en/v0.8.17/control-structures.html\nconst PanicReasons: Map<number, string> = new Map();\nPanicReasons.set(0x00, \"GENERIC_PANIC\");\nPanicReasons.set(0x01, \"ASSERT_FALSE\");\nPanicReasons.set(0x11, \"OVERFLOW\");\nPanicReasons.set(0x12, \"DIVIDE_BY_ZERO\");\nPanicReasons.set(0x21, \"ENUM_RANGE_ERROR\");\nPanicReasons.set(0x22, \"BAD_STORAGE_DATA\");\nPanicReasons.set(0x31, \"STACK_UNDERFLOW\");\nPanicReasons.set(0x32, \"ARRAY_RANGE_ERROR\");\nPanicReasons.set(0x41, \"OUT_OF_MEMORY\");\nPanicReasons.set(0x51, \"UNINITIALIZED_FUNCTION_CALL\");\n\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\n\n\nlet defaultCoder: null | AbiCoder = null;\nlet defaultMaxInflation = 1024;\n\nfunction getBuiltinCallException(action: CallExceptionAction, tx: { to?: null | string, from?: null | string, data?: string }, data: null | BytesLike, abiCoder: AbiCoder): CallExceptionError {\n    let message = \"missing revert data\";\n\n    let reason: null | string = null;\n    const invocation = null;\n    let revert: null | { signature: string, name: string, args: Array<any> } = null;\n\n    if (data) {\n        message = \"execution reverted\";\n\n        const bytes = getBytes(data);\n        data = hexlify(data);\n\n        if (bytes.length === 0) {\n            message += \" (no data present; likely require(false) occurred\";\n            reason = \"require(false)\";\n\n        } else if (bytes.length % 32 !== 4) {\n            message += \" (could not decode reason; invalid data length)\";\n\n        } else if (hexlify(bytes.slice(0, 4)) === \"0x08c379a0\") {\n            // Error(string)\n            try {\n                reason = abiCoder.decode([ \"string\" ], bytes.slice(4))[0]\n                revert = {\n                    signature: \"Error(string)\",\n                    name: \"Error\",\n                    args: [ reason ]\n                };\n                message += `: ${ JSON.stringify(reason) }`;\n\n            } catch (error) {\n                message += \" (could not decode reason; invalid string data)\";\n            }\n\n        } else if (hexlify(bytes.slice(0, 4)) === \"0x4e487b71\") {\n            // Panic(uint256)\n            try {\n                const code = Number(abiCoder.decode([ \"uint256\" ], bytes.slice(4))[0]);\n                revert = {\n                    signature: \"Panic(uint256)\",\n                    name: \"Panic\",\n                    args: [ code ]\n                };\n                reason = `Panic due to ${ PanicReasons.get(code) || \"UNKNOWN\" }(${ code })`;\n                message += `: ${ reason }`;\n            } catch (error) {\n                message += \" (could not decode panic code)\";\n            }\n        } else {\n            message += \" (unknown custom error)\";\n        }\n    }\n\n    const transaction: CallExceptionTransaction = {\n        to: (tx.to ? getAddress(tx.to): null),\n        data: (tx.data || \"0x\")\n    };\n    if (tx.from) { transaction.from = getAddress(tx.from); }\n\n    return makeError(message, \"CALL_EXCEPTION\", {\n        action, data, reason, transaction, invocation, revert\n    });\n}\n\n/**\n *  The **AbiCoder** is a low-level class responsible for encoding JavaScript\n *  values into binary data and decoding binary data into JavaScript values.\n */\nexport class AbiCoder {\n\n    #getCoder(param: ParamType): Coder {\n        if (param.isArray()) {\n            return new ArrayCoder(this.#getCoder(param.arrayChildren), param.arrayLength, param.name);\n        }\n\n        if (param.isTuple()) {\n            return new TupleCoder(param.components.map((c) => this.#getCoder(c)), param.name);\n        }\n\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            assertArgument(size !== 0 && size <= 256 && (size % 8) === 0,\n                \"invalid \" + match[1] + \" bit length\", \"param\", param);\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            assertArgument(size !== 0 && size <= 32, \"invalid bytes length\", \"param\", param);\n            return new FixedBytesCoder(size, param.name);\n        }\n\n        assertArgument(false, \"invalid type\", \"type\", param.type);\n    }\n\n    /**\n     *  Get the default values for the given %%types%%.\n     *\n     *  For example, a ``uint`` is by default ``0`` and ``bool``\n     *  is by default ``false``.\n     */\n    getDefaultValue(types: ReadonlyArray<string | ParamType>): Result {\n        const coders: Array<Coder> = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n\n    /**\n     *  Encode the %%values%% as the %%types%% into ABI data.\n     *\n     *  @returns DataHexstring\n     */\n    encode(types: ReadonlyArray<string | ParamType>, values: ReadonlyArray<any>): string {\n        assertArgumentCount(values.length, types.length, \"types/values length mismatch\");\n\n        const coders = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n\n        const writer = new Writer();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n\n    /**\n     *  Decode the ABI %%data%% as the %%types%% into values.\n     *\n     *  If %%loose%% decoding is enabled, then strict padding is\n     *  not enforced. Some older versions of Solidity incorrectly\n     *  padded event data emitted from ``external`` functions.\n     */\n    decode(types: ReadonlyArray<string | ParamType>, data: BytesLike, loose?: boolean): Result {\n        const coders: Array<Coder> = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(new Reader(data, loose, defaultMaxInflation));\n    }\n\n    static _setDefaultMaxInflation(value: number): void {\n        assertArgument(typeof(value) === \"number\" && Number.isInteger(value), \"invalid defaultMaxInflation factor\", \"value\", value);\n        defaultMaxInflation = value;\n    }\n\n    /**\n     *  Returns the shared singleton instance of a default [[AbiCoder]].\n     *\n     *  On the first call, the instance is created internally.\n     */\n    static defaultAbiCoder(): AbiCoder {\n        if (defaultCoder == null) {\n            defaultCoder = new AbiCoder();\n        }\n        return defaultCoder;\n    }\n\n    /**\n     *  Returns an ethers-compatible [[CallExceptionError]] Error for the given\n     *  result %%data%% for the [[CallExceptionAction]] %%action%% against\n     *  the Transaction %%tx%%.\n     */\n    static getBuiltinCallException(action: CallExceptionAction, tx: { to?: null | string, from?: null | string, data?: string }, data: null | BytesLike): CallExceptionError {\n        return getBuiltinCallException(action, tx, data, AbiCoder.defaultAbiCoder());\n    }\n}\n", "/**\n *  About bytes32 strings...\n *\n *  @_docloc: api/utils:Bytes32 Strings\n */\n\nimport {\n    getBytes, toUtf8Bytes, toUtf8String, zeroPadBytes\n} from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n/**\n *  Encodes %%text%% as a Bytes32 string.\n */\nexport function encodeBytes32String(text: string): string {\n\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n\n    // Check we have room for null-termination\n    if (bytes.length > 31) { throw new Error(\"bytes32 string must be less than 32 bytes\"); }\n\n    // Zero-pad (implicitly null-terminates)\n    return zeroPadBytes(bytes, 32);\n}\n\n/**\n *  Encodes the Bytes32-encoded %%bytes%% into a string.\n */\nexport function decodeBytes32String(_bytes: BytesLike): string {\n    const data = getBytes(_bytes, \"bytes\");\n\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) { throw new Error(\"invalid bytes32 - not 32 bytes long\"); }\n    if (data[31] !== 0) { throw new Error(\"invalid bytes32 string - no null terminator\"); }\n\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) { length--; }\n\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n\n", "/**\n *  The Interface class is a low-level class that accepts an\n *  ABI and provides all the necessary functionality to encode\n *  and decode paramaters to and results from methods, events\n *  and errors.\n *\n *  It also provides several convenience methods to automatically\n *  search and find matching transactions and events to parse them.\n *\n *  @_subsection api/abi:Interfaces  [interfaces]\n */\n\nimport { keccak256 } from \"../crypto/index.js\"\nimport { id } from \"../hash/index.js\"\nimport {\n    concat, dataSlice, getBigInt, getBytes, getBytesCopy,\n    hexlify, zeroPadBytes, zeroPadValue, isHexString, defineProperties,\n    assertArgument, toBeHex, assert\n} from \"../utils/index.js\";\n\nimport { AbiCoder } from \"./abi-coder.js\";\nimport { checkResultErrors, Result } from \"./coders/abstract-coder.js\";\nimport {\n    ConstructorFragment, ErrorFragment, EventFragment, FallbackFragment,\n    Fragment, FunctionFragment, ParamType\n} from \"./fragments.js\";\nimport { Typed } from \"./typed.js\";\n\nimport type { BigNumberish, BytesLike, CallExceptionError, CallExceptionTransaction } from \"../utils/index.js\";\n\nimport type { JsonFragment } from \"./fragments.js\";\n\n\nexport { checkResultErrors, Result };\n\n/**\n *  When using the [[Interface-parseLog]] to automatically match a Log to its event\n *  for parsing, a **LogDescription** is returned.\n */\nexport class LogDescription {\n    /**\n     *  The matching fragment for the ``topic0``.\n     */\n    readonly fragment!: EventFragment;\n\n    /**\n     *  The name of the Event.\n     */\n    readonly name!: string;\n\n    /**\n     *  The full Event signature.\n     */\n    readonly signature!: string;\n\n    /**\n     *  The topic hash for the Event.\n     */\n    readonly topic!: string;\n\n    /**\n     *  The arguments passed into the Event with ``emit``.\n     */\n    readonly args!: Result\n\n    /**\n     *  @_ignore:\n     */\n    constructor(fragment: EventFragment, topic: string, args: Result) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties<LogDescription>(this, {\n            fragment, name, signature, topic, args\n        });\n    }\n}\n\n/**\n *  When using the [[Interface-parseTransaction]] to automatically match\n *  a transaction data to its function for parsing,\n *  a **TransactionDescription** is returned.\n */\nexport class TransactionDescription {\n    /**\n     *  The matching fragment from the transaction ``data``.\n     */\n    readonly fragment!: FunctionFragment;\n\n    /**\n     *  The name of the Function from the transaction ``data``.\n     */\n    readonly name!: string;\n\n    /**\n     *  The arguments passed to the Function from the transaction ``data``.\n     */\n    readonly args!: Result;\n\n    /**\n     *  The full Function signature from the transaction ``data``.\n     */\n    readonly signature!: string;\n\n    /**\n     *  The selector for the Function from the transaction ``data``.\n     */\n    readonly selector!: string;\n\n    /**\n     *  The ``value`` (in wei) from the transaction.\n     */\n    readonly value!: bigint;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(fragment: FunctionFragment, selector: string, args: Result, value: bigint) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties<TransactionDescription>(this, {\n            fragment, name, args, signature, selector, value\n        });\n    }\n}\n\n/**\n *  When using the [[Interface-parseError]] to automatically match an\n *  error for a call result for parsing, an **ErrorDescription** is returned.\n */\nexport class ErrorDescription {\n    /**\n     *  The matching fragment.\n     */\n    readonly fragment!: ErrorFragment;\n\n    /**\n     *  The name of the Error.\n     */\n    readonly name!: string;\n\n    /**\n     *  The arguments passed to the Error with ``revert``.\n     */\n    readonly args!: Result;\n\n    /**\n     *  The full Error signature.\n     */\n    readonly signature!: string;\n\n    /**\n     *  The selector for the Error.\n     */\n    readonly selector!: string;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(fragment: ErrorFragment, selector: string, args: Result) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties<ErrorDescription>(this, {\n            fragment, name, args, signature, selector\n        });\n    }\n}\n\n/**\n *  An **Indexed** is used as a value when a value that does not\n *  fit within a topic (i.e. not a fixed-length, 32-byte type). It\n *  is the ``keccak256`` of the value, and used for types such as\n *  arrays, tuples, bytes and strings.\n */\nexport class Indexed {\n    /**\n     *  The ``keccak256`` of the value logged.\n     */\n    readonly hash!: null | string;\n\n    /**\n     *  @_ignore:\n     */\n    readonly _isIndexed!: boolean;\n\n    /**\n     *  Returns ``true`` if %%value%% is an **Indexed**.\n     *\n     *  This provides a Type Guard for property access.\n     */\n    static isIndexed(value: any): value is Indexed {\n        return !!(value && value._isIndexed);\n    }\n\n    /**\n     *  @_ignore:\n     */\n    constructor(hash: null | string) {\n        defineProperties<Indexed>(this, { hash, _isIndexed: true })\n    }\n}\n\ntype ErrorInfo = {\n    signature: string,\n    inputs: Array<string>,\n    name: string,\n    reason: (...args: Array<any>) => string;\n};\n\n// https://docs.soliditylang.org/en/v0.8.13/control-structures.html?highlight=panic#panic-via-assert-and-error-via-require\nconst PanicReasons: Record<string, string> = {\n    \"0\": \"generic panic\",\n    \"1\": \"assert(false)\",\n    \"17\": \"arithmetic overflow\",\n    \"18\": \"division or modulo by zero\",\n    \"33\": \"enum overflow\",\n    \"34\": \"invalid encoded storage byte array accessed\",\n    \"49\": \"out-of-bounds array access; popping on an empty array\",\n    \"50\": \"out-of-bounds access of an array or bytesN\",\n    \"65\": \"out of memory\",\n    \"81\": \"uninitialized function\",\n}\n\nconst BuiltinErrors: Record<string, ErrorInfo> = {\n    \"0x08c379a0\": {\n        signature: \"Error(string)\",\n        name: \"Error\",\n        inputs: [ \"string\" ],\n        reason: (message: string) => {\n            return `reverted with reason string ${ JSON.stringify(message) }`;\n        }\n    },\n    \"0x4e487b71\": {\n        signature: \"Panic(uint256)\",\n        name: \"Panic\",\n        inputs: [ \"uint256\" ],\n        reason: (code: bigint) => {\n            let reason = \"unknown panic code\";\n            if (code >= 0 && code <= 0xff && PanicReasons[code.toString()]) {\n                reason = PanicReasons[code.toString()];\n            }\n            return `reverted with panic code 0x${ code.toString(16) } (${ reason })`;\n        }\n    }\n}\n\n/*\nfunction wrapAccessError(property: string, error: Error): Error {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${ property }`);\n    (<any>wrap).error = error;\n    return wrap;\n}\n*/\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\n\n/**\n *  An **InterfaceAbi** may be any supported ABI format.\n *\n *  A string is expected to be a JSON string, which will be parsed\n *  using ``JSON.parse``. This means that the value **must** be a valid\n *  JSON string, with no stray commas, etc.\n *\n *  An array may contain any combination of:\n *  - Human-Readable fragments\n *  - Parsed JSON fragment\n *  - [[Fragment]] instances\n *\n *  A **Human-Readable Fragment** is a string which resembles a Solidity\n *  signature and is introduced in [this blog entry](link-ricmoo-humanreadableabi).\n *  For example, ``function balanceOf(address) view returns (uint)``.\n *\n *  A **Parsed JSON Fragment** is a JavaScript Object desribed in the\n *  [Solidity documentation](link-solc-jsonabi).\n */\nexport type InterfaceAbi = string | ReadonlyArray<Fragment | JsonFragment | string>;\n\n/**\n *  An Interface abstracts many of the low-level details for\n *  encoding and decoding the data on the blockchain.\n *\n *  An ABI provides information on how to encode data to send to\n *  a Contract, how to decode the results and events and how to\n *  interpret revert errors.\n *\n *  The ABI can be specified by [any supported format](InterfaceAbi).\n */\nexport class Interface {\n\n    /**\n     *  All the Contract ABI members (i.e. methods, events, errors, etc).\n     */\n    readonly fragments!: ReadonlyArray<Fragment>;\n\n    /**\n     *  The Contract constructor.\n     */\n    readonly deploy!: ConstructorFragment;\n\n    /**\n     *  The Fallback method, if any.\n     */\n    readonly fallback!: null | FallbackFragment;\n\n    /**\n     *  If receiving ether is supported.\n     */\n    readonly receive!: boolean;\n\n    #errors: Map<string, ErrorFragment>;\n    #events: Map<string, EventFragment>;\n    #functions: Map<string, FunctionFragment>;\n//    #structs: Map<string, StructFragment>;\n\n    #abiCoder: AbiCoder;\n\n    /**\n     *  Create a new Interface for the %%fragments%%.\n     */\n    constructor(fragments: InterfaceAbi) {\n        let abi: ReadonlyArray<Fragment | JsonFragment | string> = [ ];\n        if (typeof(fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        } else {\n            abi = fragments;\n        }\n\n        this.#functions = new Map();\n        this.#errors = new Map();\n        this.#events = new Map();\n//        this.#structs = new Map();\n\n\n        const frags: Array<Fragment> = [ ];\n        for (const a of abi) {\n            try {\n                frags.push(Fragment.from(a));\n            } catch (error: any) {\n                console.log(`[Warning] Invalid Fragment ${ JSON.stringify(a) }:`, error.message);\n            }\n        }\n\n        defineProperties<Interface>(this, {\n            fragments: Object.freeze(frags)\n        });\n\n        let fallback: null | FallbackFragment = null;\n        let receive = false;\n\n        this.#abiCoder = this.getAbiCoder();\n\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment, index) => {\n            let bucket: Map<string, Fragment>;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        console.log(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineProperties<Interface>(this, { deploy: <ConstructorFragment>fragment });\n                    return;\n\n                case \"fallback\":\n                    if (fragment.inputs.length === 0) {\n                        receive = true;\n                    } else {\n                        assertArgument(!fallback || (<FallbackFragment>fragment).payable !== fallback.payable,\n                            \"conflicting fallback fragments\", `fragments[${ index }]`, fragment);\n                        fallback = <FallbackFragment>fragment;\n                        receive = fallback.payable;\n                    }\n                    return;\n\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.#functions;\n                    break;\n\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.#events;\n                    break;\n\n                case \"error\":\n                    bucket = this.#errors;\n                    break;\n\n                default:\n                    return;\n            }\n\n            // Two identical entries; ignore it\n            const signature = fragment.format();\n            if (bucket.has(signature)) { return; }\n\n            bucket.set(signature, fragment);\n        });\n\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineProperties<Interface>(this, {\n                deploy: ConstructorFragment.from(\"constructor()\")\n            });\n        }\n\n        defineProperties<Interface>(this, { fallback, receive });\n    }\n\n    /**\n     *  Returns the entire Human-Readable ABI, as an array of\n     *  signatures, optionally as %%minimal%% strings, which\n     *  removes parameter names and unneceesary spaces.\n     */\n    format(minimal?: boolean): Array<string> {\n        const format = (minimal ? \"minimal\": \"full\");\n        const abi = this.fragments.map((f) => f.format(format));\n        return abi;\n    }\n\n    /**\n     *  Return the JSON-encoded ABI. This is the format Solidiy\n     *  returns.\n     */\n    formatJson(): string {\n        const abi = this.fragments.map((f) => f.format(\"json\"));\n\n        // We need to re-bundle the JSON fragments a bit\n        return JSON.stringify(abi.map((j) => JSON.parse(j)));\n    }\n\n    /**\n     *  The ABI coder that will be used to encode and decode binary\n     *  data.\n     */\n    getAbiCoder(): AbiCoder {\n        return AbiCoder.defaultAbiCoder();\n    }\n\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    #getFunction(key: string, values: null | Array<any | Typed>, forceUnique: boolean): null | FunctionFragment {\n\n        // Selector\n        if (isHexString(key)) {\n            const selector = key.toLowerCase();\n            for (const fragment of this.#functions.values()) {\n                if (selector === fragment.selector) { return fragment; }\n            }\n            return null;\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching: Array<FunctionFragment> = [ ];\n            for (const [ name, fragment ] of this.#functions) {\n                if (name.split(\"(\"/* fix:) */)[0] === key) { matching.push(fragment); }\n            }\n\n            if (values) {\n                const lastValue = (values.length > 0) ? values[values.length - 1]: null;\n\n                let valueLength = values.length;\n                let allowOptions = true;\n                if (Typed.isTyped(lastValue) && lastValue.type === \"overrides\") {\n                    allowOptions = false;\n                    valueLength--;\n                }\n\n                // Remove all matches that don't have a compatible length. The args\n                // may contain an overrides, so the match may have n or n - 1 parameters\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs.length;\n                    if (inputs !== valueLength && (!allowOptions || inputs !== valueLength - 1)) {\n                        matching.splice(i, 1);\n                    }\n                }\n\n                // Remove all matches that don't match the Typed signature\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs;\n                    for (let j = 0; j < values.length; j++) {\n                        // Not a typed value\n                        if (!Typed.isTyped(values[j])) { continue; }\n\n                        // We are past the inputs\n                        if (j >= inputs.length) {\n                            if (values[j].type === \"overrides\") { continue; }\n                            matching.splice(i, 1);\n                            break;\n                        }\n\n                        // Make sure the value type matches the input type\n                        if (values[j].type !== inputs[j].baseType) {\n                            matching.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n\n            // We found a single matching signature with an overrides, but the\n            // last value is something that cannot possibly be an options\n            if (matching.length === 1 && values && values.length !== matching[0].inputs.length) {\n                const lastArg = values[values.length - 1];\n                if (lastArg == null || Array.isArray(lastArg) || typeof(lastArg) !== \"object\") {\n                    matching.splice(0, 1);\n                }\n            }\n\n            if (matching.length === 0) { return null; }\n\n            if (matching.length > 1 && forceUnique) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n                assertArgument(false, `ambiguous function description (i.e. matches ${ matchStr })`, \"key\", key);\n            }\n\n            return matching[0];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.#functions.get(FunctionFragment.from(key).format());\n        if (result) { return result; }\n\n        return null;\n    }\n\n    /**\n     *  Get the function name for %%key%%, which may be a function selector,\n     *  function name or function signature that belongs to the ABI.\n     */\n    getFunctionName(key: string): string {\n        const fragment = this.#getFunction(key, null, false);\n        assertArgument(fragment, \"no matching function\", \"key\", key);\n        return fragment.name;\n    }\n\n    /**\n     *  Returns true if %%key%% (a function selector, function name or\n     *  function signature) is present in the ABI.\n     *\n     *  In the case of a function name, the name may be ambiguous, so\n     *  accessing the [[FunctionFragment]] may require refinement.\n     */\n    hasFunction(key: string): boolean {\n        return !!this.#getFunction(key, null, false);\n    }\n\n    /**\n     *  Get the [[FunctionFragment]] for %%key%%, which may be a function\n     *  selector, function name or function signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple functions match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single function in\n     *  the ABI, this will throw.\n     */\n    getFunction(key: string, values?: Array<any | Typed>): null | FunctionFragment {\n        return this.#getFunction(key, values || null, true);\n    }\n\n    /**\n     *  Iterate over all functions, calling %%callback%%, sorted by their name.\n     */\n    forEachFunction(callback: (func: FunctionFragment, index: number) => void): void {\n        const names = Array.from(this.#functions.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback(<FunctionFragment>(this.#functions.get(name)), i);\n        }\n    }\n\n\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    #getEvent(key: string, values: null | Array<null | any | Typed>, forceUnique: boolean): null | EventFragment {\n\n        // EventTopic\n        if (isHexString(key)) {\n            const eventTopic = key.toLowerCase();\n            for (const fragment of this.#events.values()) {\n                if (eventTopic === fragment.topicHash) { return fragment; }\n            }\n            return null;\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching: Array<EventFragment> = [ ];\n            for (const [ name, fragment ] of this.#events) {\n                if (name.split(\"(\"/* fix:) */)[0] === key) { matching.push(fragment); }\n            }\n\n            if (values) {\n                // Remove all matches that don't have a compatible length.\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    if (matching[i].inputs.length < values.length) {\n                        matching.splice(i, 1);\n                    }\n                }\n\n                // Remove all matches that don't match the Typed signature\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs;\n                    for (let j = 0; j < values.length; j++) {\n                        // Not a typed value\n                        if (!Typed.isTyped(values[j])) { continue; }\n\n                        // Make sure the value type matches the input type\n                        if (values[j].type !== inputs[j].baseType) {\n                            matching.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n\n            if (matching.length === 0) { return null; }\n\n            if (matching.length > 1 && forceUnique) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n                assertArgument(false, `ambiguous event description (i.e. matches ${ matchStr })`, \"key\", key);\n            }\n\n            return matching[0];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.#events.get(EventFragment.from(key).format());\n        if (result) { return result; }\n\n        return null;\n    }\n\n    /**\n     *  Get the event name for %%key%%, which may be a topic hash,\n     *  event name or event signature that belongs to the ABI.\n     */\n    getEventName(key: string): string {\n        const fragment = this.#getEvent(key, null, false);\n        assertArgument(fragment, \"no matching event\", \"key\", key);\n\n        return fragment.name;\n    }\n\n    /**\n     *  Returns true if %%key%% (an event topic hash, event name or\n     *  event signature) is present in the ABI.\n     *\n     *  In the case of an event name, the name may be ambiguous, so\n     *  accessing the [[EventFragment]] may require refinement.\n     */\n    hasEvent(key: string): boolean {\n        return !!this.#getEvent(key, null, false);\n    }\n\n    /**\n     *  Get the [[EventFragment]] for %%key%%, which may be a topic hash,\n     *  event name or event signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple events match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single event in\n     *  the ABI, this will throw.\n     */\n    getEvent(key: string, values?: Array<any | Typed>): null | EventFragment {\n        return this.#getEvent(key, values || null, true)\n    }\n\n    /**\n     *  Iterate over all events, calling %%callback%%, sorted by their name.\n     */\n    forEachEvent(callback: (func: EventFragment, index: number) => void): void {\n        const names = Array.from(this.#events.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback(<EventFragment>(this.#events.get(name)), i);\n        }\n    }\n\n    /**\n     *  Get the [[ErrorFragment]] for %%key%%, which may be an error\n     *  selector, error name or error signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple errors match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single error in\n     *  the ABI, this will throw.\n     */\n    getError(key: string, values?: Array<any | Typed>): null | ErrorFragment {\n        if (isHexString(key)) {\n            const selector = key.toLowerCase();\n\n            if (BuiltinErrors[selector]) {\n                return ErrorFragment.from(BuiltinErrors[selector].signature);\n            }\n\n            for (const fragment of this.#errors.values()) {\n                if (selector === fragment.selector) { return fragment; }\n            }\n\n            return null;\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching: Array<ErrorFragment> = [ ];\n            for (const [ name, fragment ] of this.#errors) {\n                if (name.split(\"(\"/* fix:) */)[0] === key) { matching.push(fragment); }\n            }\n\n            if (matching.length === 0) {\n                if (key === \"Error\") { return ErrorFragment.from(\"error Error(string)\"); }\n                if (key === \"Panic\") { return ErrorFragment.from(\"error Panic(uint256)\"); }\n                return null;\n            } else if (matching.length > 1) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n                assertArgument(false, `ambiguous error description (i.e. ${ matchStr })`, \"name\", key);\n            }\n\n            return matching[0];\n        }\n\n        // Normalize the signature and lookup the function\n        key = ErrorFragment.from(key).format()\n        if (key === \"Error(string)\") { return ErrorFragment.from(\"error Error(string)\"); }\n        if (key === \"Panic(uint256)\") { return ErrorFragment.from(\"error Panic(uint256)\"); }\n\n        const result = this.#errors.get(key);\n        if (result) { return result; }\n\n        return null;\n    }\n\n    /**\n     *  Iterate over all errors, calling %%callback%%, sorted by their name.\n     */\n    forEachError(callback: (func: ErrorFragment, index: number) => void): void {\n        const names = Array.from(this.#errors.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback(<ErrorFragment>(this.#errors.get(name)), i);\n        }\n    }\n\n    // Get the 4-byte selector used by Solidity to identify a function\n        /*\n    getSelector(fragment: ErrorFragment | FunctionFragment): string {\n        if (typeof(fragment) === \"string\") {\n            const matches: Array<Fragment> = [ ];\n\n            try { matches.push(this.getFunction(fragment)); } catch (error) { }\n            try { matches.push(this.getError(<string>fragment)); } catch (_) { }\n\n            if (matches.length === 0) {\n                logger.throwArgumentError(\"unknown fragment\", \"key\", fragment);\n            } else if (matches.length > 1) {\n                logger.throwArgumentError(\"ambiguous fragment matches function and error\", \"key\", fragment);\n            }\n\n            fragment = matches[0];\n        }\n\n        return dataSlice(id(fragment.format()), 0, 4);\n    }\n        */\n\n    // Get the 32-byte topic hash used by Solidity to identify an event\n    /*\n    getEventTopic(fragment: EventFragment): string {\n        //if (typeof(fragment) === \"string\") { fragment = this.getEvent(eventFragment); }\n        return id(fragment.format());\n    }\n    */\n\n\n    _decodeParams(params: ReadonlyArray<ParamType>, data: BytesLike): Result {\n        return this.#abiCoder.decode(params, data)\n    }\n\n    _encodeParams(params: ReadonlyArray<ParamType>, values: ReadonlyArray<any>): string {\n        return this.#abiCoder.encode(params, values)\n    }\n\n    /**\n     *  Encodes a ``tx.data`` object for deploying the Contract with\n     *  the %%values%% as the constructor arguments.\n     */\n    encodeDeploy(values?: ReadonlyArray<any>): string {\n        return this._encodeParams(this.deploy.inputs, values || [ ]);\n    }\n\n    /**\n     *  Decodes the result %%data%% (e.g. from an ``eth_call``) for the\n     *  specified error (see [[getError]] for valid values for\n     *  %%key%%).\n     *\n     *  Most developers should prefer the [[parseCallResult]] method instead,\n     *  which will automatically detect a ``CALL_EXCEPTION`` and throw the\n     *  corresponding error.\n     */\n    decodeErrorResult(fragment: ErrorFragment | string, data: BytesLike): Result {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getError(fragment);\n            assertArgument(f, \"unknown error\", \"fragment\", fragment);\n            fragment = f;\n        }\n\n        assertArgument(dataSlice(data, 0, 4) === fragment.selector,\n            `data signature does not match error ${ fragment.name }.`, \"data\", data);\n\n        return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n    }\n\n    /**\n     *  Encodes the transaction revert data for a call result that\n     *  reverted from the the Contract with the sepcified %%error%%\n     *  (see [[getError]] for valid values for %%fragment%%) with the %%values%%.\n     *\n     *  This is generally not used by most developers, unless trying to mock\n     *  a result from a Contract.\n     */\n    encodeErrorResult(fragment: ErrorFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getError(fragment);\n            assertArgument(f, \"unknown error\", \"fragment\", fragment);\n            fragment = f;\n        }\n\n        return concat([\n            fragment.selector,\n            this._encodeParams(fragment.inputs, values || [ ])\n        ]);\n    }\n\n    /**\n     *  Decodes the %%data%% from a transaction ``tx.data`` for\n     *  the function specified (see [[getFunction]] for valid values\n     *  for %%fragment%%).\n     *\n     *  Most developers should prefer the [[parseTransaction]] method\n     *  instead, which will automatically detect the fragment.\n     */\n    decodeFunctionData(fragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n\n        assertArgument(dataSlice(data, 0, 4) === fragment.selector,\n            `data signature does not match function ${ fragment.name }.`, \"data\", data);\n\n        return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n    }\n\n    /**\n     *  Encodes the ``tx.data`` for a transaction that calls the function\n     *  specified (see [[getFunction]] for valid values for %%fragment%%) with\n     *  the %%values%%.\n     */\n    encodeFunctionData(fragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n\n        return concat([\n            fragment.selector,\n            this._encodeParams(fragment.inputs, values || [ ])\n        ]);\n    }\n\n    /**\n     *  Decodes the result %%data%% (e.g. from an ``eth_call``) for the\n     *  specified function (see [[getFunction]] for valid values for\n     *  %%key%%).\n     *\n     *  Most developers should prefer the [[parseCallResult]] method instead,\n     *  which will automatically detect a ``CALL_EXCEPTION`` and throw the\n     *  corresponding error.\n     */\n    decodeFunctionResult(fragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n\n        let message = \"invalid length for result data\";\n\n        const bytes = getBytesCopy(data);\n        if ((bytes.length % 32) === 0) {\n            try {\n                return this.#abiCoder.decode(fragment.outputs, bytes);\n            } catch (error) {\n                message = \"could not decode result data\";\n            }\n        }\n\n        // Call returned data with no error, but the data is junk\n        assert(false, message, \"BAD_DATA\", {\n            value: hexlify(bytes),\n            info: { method: fragment.name, signature: fragment.format() }\n        });\n    }\n\n    makeError(_data: BytesLike, tx: CallExceptionTransaction): CallExceptionError {\n        const data = getBytes(_data, \"data\");\n\n        const error = AbiCoder.getBuiltinCallException(\"call\", tx, data);\n\n        // Not a built-in error; try finding a custom error\n        const customPrefix = \"execution reverted (unknown custom error)\";\n        if (error.message.startsWith(customPrefix)) {\n            const selector = hexlify(data.slice(0, 4));\n\n            const ef = this.getError(selector);\n            if (ef) {\n                try {\n                    const args = this.#abiCoder.decode(ef.inputs, data.slice(4));\n                    error.revert = {\n                        name: ef.name, signature: ef.format(), args\n                    };\n                    error.reason = error.revert.signature;\n                    error.message = `execution reverted: ${ error.reason }`\n                 } catch (e) {\n                    error.message = `execution reverted (coult not decode custom error)`\n                }\n            }\n        }\n\n        // Add the invocation, if available\n        const parsed = this.parseTransaction(tx);\n        if (parsed) {\n            error.invocation = {\n                method: parsed.name,\n                signature: parsed.signature,\n                args: parsed.args\n            };\n        }\n\n        return error;\n    }\n\n    /**\n     *  Encodes the result data (e.g. from an ``eth_call``) for the\n     *  specified function (see [[getFunction]] for valid values\n     *  for %%fragment%%) with %%values%%.\n     *\n     *  This is generally not used by most developers, unless trying to mock\n     *  a result from a Contract.\n     */\n    encodeFunctionResult(fragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n        return hexlify(this.#abiCoder.encode(fragment.outputs, values || [ ]));\n    }\n/*\n    spelunk(inputs: Array<ParamType>, values: ReadonlyArray<any>, processfunc: (type: string, value: any) => Promise<any>): Promise<Array<any>> {\n        const promises: Array<Promise<>> = [ ];\n        const process = function(type: ParamType, value: any): any {\n            if (type.baseType === \"array\") {\n                return descend(type.child\n            }\n            if (type. === \"address\") {\n            }\n        };\n\n        const descend = function (inputs: Array<ParamType>, values: ReadonlyArray<any>) {\n            if (inputs.length !== values.length) { throw new Error(\"length mismatch\"); }\n            \n        };\n\n        const result: Array<any> = [ ];\n        values.forEach((value, index) => {\n            if (value == null) {\n                topics.push(null);\n            } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            } else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            } else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n    }\n*/\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(fragment: EventFragment | string, values: ReadonlyArray<any>): Array<null | string | Array<string>> {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n        }\n\n        assert(values.length <= fragment.inputs.length, `too many arguments for ${ fragment.format() }`,\n            \"UNEXPECTED_ARGUMENT\", { count: values.length, expectedCount: fragment.inputs.length })\n\n        const topics: Array<null | string | Array<string>> = [];\n        if (!fragment.anonymous) { topics.push(fragment.topicHash); }\n\n        // @TODO: Use the coders for this; to properly support tuples, etc.\n        const encodeTopic = (param: ParamType, value: any): string => {\n            if (param.type === \"string\") {\n                 return id(value);\n            } else if (param.type === \"bytes\") {\n                 return keccak256(hexlify(value));\n            }\n\n            if (param.type === \"bool\" && typeof(value) === \"boolean\") {\n                value = (value ? \"0x01\": \"0x00\");\n            } else if (param.type.match(/^u?int/)) {\n                value = toBeHex(value);  // @TODO: Should this toTwos??\n            } else if (param.type.match(/^bytes/)) {\n                value = zeroPadBytes(value, 32);\n            } else if (param.type === \"address\") {\n                // Check addresses are valid\n                this.#abiCoder.encode( [ \"address\" ], [ value ]);\n            }\n\n            return zeroPadValue(hexlify(value), 32);\n        };\n\n        values.forEach((value, index) => {\n\n            const param = (<EventFragment>fragment).inputs[index];\n\n            if (!param.indexed) {\n                assertArgument(value == null,\n                    \"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                return;\n            }\n\n            if (value == null) {\n                topics.push(null);\n            } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                assertArgument(false, \"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            } else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            } else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n\n        return topics;\n    }\n\n    encodeEventLog(fragment: EventFragment | string, values: ReadonlyArray<any>): { data: string, topics: Array<string> } {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n        }\n\n        const topics: Array<string> = [ ];\n\n        const dataTypes: Array<ParamType> = [ ];\n        const dataValues: Array<string> = [ ];\n\n        if (!fragment.anonymous) {\n            topics.push(fragment.topicHash);\n        }\n\n        assertArgument(values.length === fragment.inputs.length,\n            \"event arguments/values mismatch\", \"values\", values);\n\n        fragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value))\n                } else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value))\n                } else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                } else {\n                    topics.push(this.#abiCoder.encode([ param.type] , [ value ]));\n                }\n            } else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n\n        return {\n            data: this.#abiCoder.encode(dataTypes , dataValues),\n            topics: topics\n        };\n    }\n\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(fragment: EventFragment | string, data: BytesLike, topics?: ReadonlyArray<string>): Result {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n        }\n\n        if (topics != null && !fragment.anonymous) {\n            const eventTopic = fragment.topicHash;\n            assertArgument(isHexString(topics[0], 32) && topics[0].toLowerCase() === eventTopic,\n                \"fragment/topic mismatch\", \"topics[0]\", topics[0]);\n            topics = topics.slice(1);\n        }\n\n        const indexed: Array<ParamType> = [];\n        const nonIndexed: Array<ParamType> = [];\n        const dynamic: Array<boolean> = [];\n\n        fragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.from({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                } else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            } else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n\n        const resultIndexed = (topics != null) ? this.#abiCoder.decode(indexed, concat(topics)): null;\n        const resultNonIndexed = this.#abiCoder.decode(nonIndexed, data, true);\n\n        //const result: (Array<any> & { [ key: string ]: any }) = [ ];\n        const values: Array<any> = [ ];\n        const keys: Array<null | string> = [ ];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        fragment.inputs.forEach((param, index) => {\n            let value: null | Indexed | Error = null;\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    value = new Indexed(null);\n\n                } else if (dynamic[index]) {\n                    value = new Indexed(resultIndexed[indexedIndex++]);\n\n                } else {\n                    try {\n                        value = resultIndexed[indexedIndex++];\n                    } catch (error: any) {\n                        value = error;\n                    }\n                }\n            } else {\n                try {\n                    value = resultNonIndexed[nonIndexedIndex++];\n                } catch (error: any) {\n                    value = error;\n                }\n            }\n\n            values.push(value);\n            keys.push(param.name || null);\n        });\n\n        return Result.fromItems(values, keys);\n    }\n\n    /**\n     *  Parses a transaction, finding the matching function and extracts\n     *  the parameter values along with other useful function details.\n     *\n     *  If the matching function cannot be found, return null.\n     */\n    parseTransaction(tx: { data: string, value?: BigNumberish }): null | TransactionDescription {\n        const data = getBytes(tx.data, \"tx.data\");\n        const value = getBigInt((tx.value != null) ? tx.value: 0, \"tx.value\");\n\n        const fragment = this.getFunction(hexlify(data.slice(0, 4)));\n\n        if (!fragment) { return null; }\n\n        const args = this.#abiCoder.decode(fragment.inputs, data.slice(4));\n        return new TransactionDescription(fragment, fragment.selector, args, value);\n    }\n\n    parseCallResult(data: BytesLike): Result {\n        throw new Error(\"@TODO\");\n    }\n\n    /**\n     *  Parses a receipt log, finding the matching event and extracts\n     *  the parameter values along with other useful event details.\n     *\n     *  If the matching event cannot be found, returns null.\n     */\n    parseLog(log: { topics: ReadonlyArray<string>, data: string}): null | LogDescription {\n        const fragment = this.getEvent(log.topics[0]);\n\n        if (!fragment || fragment.anonymous) { return null; }\n\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n\n\n       return new LogDescription(fragment, fragment.topicHash, this.decodeEventLog(fragment, log.data, log.topics));\n    }\n\n    /**\n     *  Parses a revert data, finding the matching error and extracts\n     *  the parameter values along with other useful error details.\n     *\n     *  If the matching error cannot be found, returns null.\n     */\n    parseError(data: BytesLike): null | ErrorDescription {\n        const hexData = hexlify(data);\n\n        const fragment = this.getError(dataSlice(hexData, 0, 4));\n\n        if (!fragment) { return null; }\n\n        const args = this.#abiCoder.decode(fragment.inputs, dataSlice(hexData, 4));\n        return new ErrorDescription(fragment, fragment.selector, args);\n    }\n\n    /**\n     *  Creates a new [[Interface]] from the ABI %%value%%.\n     *\n     *  The %%value%% may be provided as an existing [[Interface]] object,\n     *  a JSON-encoded ABI or any Human-Readable ABI format.\n     */\n    static from(value: InterfaceAbi | Interface): Interface {\n        // Already an Interface, which is immutable\n        if (value instanceof Interface) { return value; }\n\n        // JSON\n        if (typeof(value) === \"string\") { return new Interface(JSON.parse(value)); }\n\n        // Maybe an interface from an older version, or from a symlinked copy\n        if (typeof((<any>value).format) === \"function\") {\n            return new Interface((<any>value).format(\"json\"));\n        }\n\n        // Array of fragments\n        return new Interface(value);\n    }\n}\n", "//import { resolveAddress } from \"@ethersproject/address\";\nimport {\n    defineProperties, getBigInt, getNumber, hexlify, resolveProperties,\n    assert, assertArgument, isError, makeError\n} from \"../utils/index.js\";\nimport { accessListify } from \"../transaction/index.js\";\n\nimport type { AddressLike, NameResolver } from \"../address/index.js\";\nimport type { BigNumberish, EventEmitterable } from \"../utils/index.js\";\nimport type { Signature } from \"../crypto/index.js\";\nimport type { AccessList, AccessListish, TransactionLike } from \"../transaction/index.js\";\n\nimport type { ContractRunner } from \"./contracts.js\";\nimport type { Network } from \"./network.js\";\n\n\nconst BN_0 = BigInt(0);\n\n/**\n *  A **BlockTag** specifies a specific block.\n *\n *  **numeric value** - specifies the block height, where\n *  the genesis block is block 0; many operations accept a negative\n *  value which indicates the block number should be deducted from\n *  the most recent block. A numeric value may be a ``number``, ``bigint``,\n *  or a decimal of hex string.\n *\n *  **blockhash** - specifies a specific block by its blockhash; this allows\n *  potentially orphaned blocks to be specifed, without ambiguity, but many\n *  backends do not support this for some operations.\n */\nexport type BlockTag = BigNumberish | string;\n\nimport {\n    BlockParams, LogParams, TransactionReceiptParams,\n    TransactionResponseParams\n} from \"./formatting.js\";\n\n// -----------------------\n\nfunction getValue<T>(value: undefined | null | T): null | T {\n    if (value == null) { return null; }\n    return value;\n}\n\nfunction toJson(value: null | bigint): null | string {\n    if (value == null) { return null; }\n    return value.toString();\n}\n\n// @TODO? <T extends FeeData = { }> implements Required<T>\n\n/**\n *  A **FeeData** wraps all the fee-related values associated with\n *  the network.\n */\nexport class FeeData {\n    /**\n     *  The gas price for legacy networks.\n     */\n    readonly gasPrice!: null | bigint;\n\n    /**\n     *  The maximum fee to pay per gas.\n     *\n     *  The base fee per gas is defined by the network and based on\n     *  congestion, increasing the cost during times of heavy load\n     *  and lowering when less busy.\n     *\n     *  The actual fee per gas will be the base fee for the block\n     *  and the priority fee, up to the max fee per gas.\n     *\n     *  This will be ``null`` on legacy networks (i.e. [pre-EIP-1559](link-eip-1559))\n     */\n    readonly maxFeePerGas!: null | bigint;\n\n    /**\n     *  The additional amout to pay per gas to encourage a validator\n     *  to include the transaction.\n     *\n     *  The purpose of this is to compensate the validator for the\n     *  adjusted risk for including a given transaction.\n     *\n     *  This will be ``null`` on legacy networks (i.e. [pre-EIP-1559](link-eip-1559))\n     */\n    readonly maxPriorityFeePerGas!: null | bigint;\n\n    /**\n     *  Creates a new FeeData for %%gasPrice%%, %%maxFeePerGas%% and\n     *  %%maxPriorityFeePerGas%%.\n     */\n    constructor(gasPrice?: null | bigint, maxFeePerGas?: null | bigint, maxPriorityFeePerGas?: null | bigint) {\n        defineProperties<FeeData>(this, {\n            gasPrice: getValue(gasPrice),\n            maxFeePerGas: getValue(maxFeePerGas),\n            maxPriorityFeePerGas: getValue(maxPriorityFeePerGas)\n        });\n    }\n\n    /**\n     *  Returns a JSON-friendly value.\n     */\n    toJSON(): any {\n        const {\n            gasPrice, maxFeePerGas, maxPriorityFeePerGas\n        } = this;\n        return {\n            _type: \"FeeData\",\n            gasPrice: toJson(gasPrice),\n            maxFeePerGas: toJson(maxFeePerGas),\n            maxPriorityFeePerGas: toJson(maxPriorityFeePerGas),\n        };\n    }\n}\n\n\n/**\n *  A **TransactionRequest** is a transactions with potentially various\n *  properties not defined, or with less strict types for its values.\n *\n *  This is used to pass to various operations, which will internally\n *  coerce any types and populate any necessary values.\n */\nexport interface TransactionRequest {\n    /**\n     *  The transaction type.\n     */\n    type?: null | number;\n\n    /**\n     *  The target of the transaction.\n     */\n    to?: null | AddressLike;\n\n    /**\n     *  The sender of the transaction.\n     */\n    from?: null | AddressLike;\n\n    /**\n     *  The nonce of the transaction, used to prevent replay attacks.\n     */\n    nonce?: null | number;\n\n    /**\n     *  The maximum amount of gas to allow this transaction to consume.\n     */\n    gasLimit?: null | BigNumberish;\n\n    /**\n     *  The gas price to use for legacy transactions or transactions on\n     *  legacy networks.\n     *\n     *  Most of the time the ``max*FeePerGas`` is preferred.\n     */\n    gasPrice?: null | BigNumberish;\n\n    /**\n     *  The [[link-eip-1559]] maximum priority fee to pay per gas.\n     */\n    maxPriorityFeePerGas?: null | BigNumberish;\n\n    /**\n     *  The [[link-eip-1559]] maximum total fee to pay per gas. The actual\n     *  value used is protocol enforced to be the block's base fee.\n     */\n    maxFeePerGas?: null | BigNumberish;\n\n    /**\n     *  The transaction data.\n     */\n    data?: null | string;\n\n    /**\n     *  The transaction value (in wei).\n     */\n    value?: null | BigNumberish;\n\n    /**\n     *  The chain ID for the network this transaction is valid on.\n     */\n    chainId?: null | BigNumberish;\n\n    /**\n     *  The [[link-eip-2930]] access list. Storage slots included in the access\n     *  list are //warmed// by pre-loading them, so their initial cost to\n     *  fetch is guaranteed, but then each additional access is cheaper.\n     */\n    accessList?: null | AccessListish;\n\n    /**\n     *  A custom object, which can be passed along for network-specific\n     *  values.\n     */\n    customData?: any;\n\n    // Only meaningful when used for call\n\n    /**\n     *  When using ``call`` or ``estimateGas``, this allows a specific\n     *  block to be queried. Many backends do not support this and when\n     *  unsupported errors are silently squelched and ``\"latest\"`` is used. \n     */\n    blockTag?: BlockTag;\n\n    /**\n     *  When using ``call``, this enables CCIP-read, which permits the\n     *  provider to be redirected to web-based content during execution,\n     *  which is then further validated by the contract.\n     *\n     *  There are potential security implications allowing CCIP-read, as\n     *  it could be used to expose the IP address or user activity during\n     *  the fetch to unexpected parties.\n     */\n    enableCcipRead?: boolean;\n\n    // Todo?\n    //gasMultiplier?: number;\n};\n\n/**\n *  A **PreparedTransactionRequest** is identical to a [[TransactionRequest]]\n *  except all the property types are strictly enforced.\n */\nexport interface PreparedTransactionRequest {\n    /**\n     *  The transaction type.\n     */\n    type?: number;\n\n\n    /**\n     *  The target of the transaction.\n     */\n    to?: AddressLike;\n\n    /**\n     *  The sender of the transaction.\n     */\n    from?: AddressLike;\n\n    /**\n     *  The nonce of the transaction, used to prevent replay attacks.\n     */\n\n    nonce?: number;\n\n    /**\n     *  The maximum amount of gas to allow this transaction to consime.\n     */\n    gasLimit?: bigint;\n\n    /**\n     *  The gas price to use for legacy transactions or transactions on\n     *  legacy networks.\n     *\n     *  Most of the time the ``max*FeePerGas`` is preferred.\n     */\n    gasPrice?: bigint;\n\n    /**\n     *  The [[link-eip-1559]] maximum priority fee to pay per gas.\n     */\n    maxPriorityFeePerGas?: bigint;\n\n    /**\n     *  The [[link-eip-1559]] maximum total fee to pay per gas. The actual\n     *  value used is protocol enforced to be the block's base fee.\n     */\n    maxFeePerGas?: bigint;\n\n    /**\n     *  The transaction data.\n     */\n    data?: string;\n\n\n    /**\n     *  The transaction value (in wei).\n     */\n    value?: bigint;\n\n    /**\n     *  The chain ID for the network this transaction is valid on.\n     */\n    chainId?: bigint;\n\n    /**\n     *  The [[link-eip-2930]] access list. Storage slots included in the access\n     *  list are //warmed// by pre-loading them, so their initial cost to\n     *  fetch is guaranteed, but then each additional access is cheaper.\n     */\n    accessList?: AccessList;\n\n    /**\n     *  A custom object, which can be passed along for network-specific\n     *  values.\n     */\n    customData?: any;\n\n\n\n    /**\n     *  When using ``call`` or ``estimateGas``, this allows a specific\n     *  block to be queried. Many backends do not support this and when\n     *  unsupported errors are silently squelched and ``\"latest\"`` is used. \n     */\n    blockTag?: BlockTag;\n\n    /**\n     *  When using ``call``, this enables CCIP-read, which permits the\n     *  provider to be redirected to web-based content during execution,\n     *  which is then further validated by the contract.\n     *\n     *  There are potential security implications allowing CCIP-read, as\n     *  it could be used to expose the IP address or user activity during\n     *  the fetch to unexpected parties.\n     */\n    enableCcipRead?: boolean;\n}\n\n/**\n *  Returns a copy of %%req%% with all properties coerced to their strict\n *  types.\n */\nexport function copyRequest(req: TransactionRequest): PreparedTransactionRequest {\n    const result: any = { };\n\n    // These could be addresses, ENS names or Addressables\n    if (req.to) { result.to = req.to; }\n    if (req.from) { result.from = req.from; }\n\n    if (req.data) { result.data = hexlify(req.data); }\n\n    const bigIntKeys = \"chainId,gasLimit,gasPrice,maxFeePerGas,maxPriorityFeePerGas,value\".split(/,/);\n    for (const key of bigIntKeys) {\n        if (!(key in req) || (<any>req)[key] == null) { continue; }\n        result[key] = getBigInt((<any>req)[key], `request.${ key }`);\n    }\n\n    const numberKeys = \"type,nonce\".split(/,/);\n    for (const key of numberKeys) {\n        if (!(key in req) || (<any>req)[key] == null) { continue; }\n        result[key] = getNumber((<any>req)[key], `request.${ key }`);\n    }\n\n    if (req.accessList) {\n        result.accessList = accessListify(req.accessList);\n    }\n\n    if (\"blockTag\" in req) { result.blockTag = req.blockTag; }\n\n    if (\"enableCcipRead\" in req) {\n        result.enableCcipRead = !!req.enableCcipRead\n    }\n\n    if (\"customData\" in req) {\n        result.customData = req.customData;\n    }\n\n    return result;\n}\n\n//////////////////////\n// Block\n\n/**\n *  An Interface to indicate a [[Block]] has been included in the\n *  blockchain. This asserts a Type Guard that necessary properties\n *  are non-null.\n *\n *  Before a block is included, it is a //pending// block.\n */\nexport interface MinedBlock extends Block {\n    /**\n     *  The block number also known as the block height.\n     */\n    readonly number: number;\n\n    /**\n     *  The block hash.\n     */\n    readonly hash: string;\n\n    /**\n     *  The block timestamp, in seconds from epoch.\n     */\n    readonly timestamp: number;\n\n    /**\n     *  The block date, created from the [[timestamp]].\n     */\n    readonly date: Date;\n\n    /**\n     *  The miner of the block, also known as the ``author`` or\n     *  block ``producer``.\n     */\n    readonly miner: string;\n}\n\n/**\n *  A **Block** represents the data associated with a full block on\n *  Ethereum.\n */\nexport class Block implements BlockParams, Iterable<string> {\n\n    /**\n     *  The provider connected to the block used to fetch additional details\n     *  if necessary.\n     */\n    readonly provider!: Provider;\n\n    /**\n     *  The block number, sometimes called the block height. This is a\n     *  sequential number that is one higher than the parent block.\n     */\n    readonly number!: number;\n\n    /**\n     *  The block hash.\n     *\n     *  This hash includes all properties, so can be safely used to identify\n     *  an exact set of block properties.\n     */\n    readonly hash!: null | string;\n\n    /**\n     *  The timestamp for this block, which is the number of seconds since\n     *  epoch that this block was included.\n     */\n    readonly timestamp!: number;\n\n    /**\n     *  The block hash of the parent block.\n     */\n    readonly parentHash!: string;\n\n    /**\n     *  The hash tree root of the parent beacon block for the given\n     *  execution block. See [[link-eip-4788]].\n     */\n    parentBeaconBlockRoot!: null | string;\n\n    /**\n     *  The nonce.\n     *\n     *  On legacy networks, this is the random number inserted which\n     *  permitted the difficulty target to be reached.\n     */\n    readonly nonce!: string;\n\n    /**\n     *  The difficulty target.\n     *\n     *  On legacy networks, this is the proof-of-work target required\n     *  for a block to meet the protocol rules to be included.\n     *\n     *  On modern networks, this is a random number arrived at using\n     *  randao.  @TODO: Find links?\n     */\n    readonly difficulty!: bigint;\n\n\n    /**\n     *  The total gas limit for this block.\n     */\n    readonly gasLimit!: bigint;\n\n    /**\n     *  The total gas used in this block.\n     */\n    readonly gasUsed!: bigint;\n\n\n    /**\n     *  The root hash for the global state after applying changes\n     *  in this block.\n     */\n    readonly stateRoot!: null | string;\n\n    /**\n     *  The hash of the transaction receipts trie.\n     */\n    readonly receiptsRoot!: null | string;\n\n    /**\n     *  The total amount of blob gas consumed by the transactions\n     *  within the block. See [[link-eip-4844]].\n     */\n    readonly blobGasUsed!: null | bigint;\n\n    /**\n     *  The running total of blob gas consumed in excess of the\n     *  target, prior to the block. See [[link-eip-4844]].\n     */\n    readonly excessBlobGas!: null | bigint;\n\n    /**\n     *  The miner coinbase address, wihch receives any subsidies for\n     *  including this block.\n     */\n    readonly miner!: string;\n\n    /**\n     *  Any extra data the validator wished to include.\n     */\n    readonly extraData!: string;\n\n    /**\n     *  The base fee per gas that all transactions in this block were\n     *  charged.\n     *\n     *  This adjusts after each block, depending on how congested the network\n     *  is.\n     */\n    readonly baseFeePerGas!: null | bigint;\n\n    readonly #transactions: Array<string | TransactionResponse>;\n\n    /**\n     *  Create a new **Block** object.\n     *\n     *  This should generally not be necessary as the unless implementing a\n     *  low-level library.\n     */\n    constructor(block: BlockParams, provider: Provider) {\n\n        this.#transactions = block.transactions.map((tx) => {\n            if (typeof(tx) !== \"string\") {\n                return new TransactionResponse(tx, provider);\n            }\n            return tx;\n        });\n\n        defineProperties<Block>(this, {\n            provider,\n\n            hash: getValue(block.hash),\n\n            number: block.number,\n            timestamp: block.timestamp,\n\n            parentHash: block.parentHash,\n            parentBeaconBlockRoot: block.parentBeaconBlockRoot,\n\n            nonce: block.nonce,\n            difficulty: block.difficulty,\n\n            gasLimit: block.gasLimit,\n            gasUsed: block.gasUsed,\n            blobGasUsed: block.blobGasUsed,\n            excessBlobGas: block.excessBlobGas,\n            miner: block.miner,\n            extraData: block.extraData,\n\n            baseFeePerGas: getValue(block.baseFeePerGas),\n\n            stateRoot: block.stateRoot,\n            receiptsRoot: block.receiptsRoot,\n        });\n    }\n\n    /**\n     *  Returns the list of transaction hashes, in the order\n     *  they were executed within the block.\n     */\n    get transactions(): ReadonlyArray<string> {\n        return this.#transactions.map((tx) => {\n            if (typeof(tx) === \"string\") { return tx; }\n            return tx.hash;\n        });\n    }\n\n    /**\n     *  Returns the complete transactions, in the order they\n     *  were executed within the block.\n     *\n     *  This is only available for blocks which prefetched\n     *  transactions, by passing ``true`` to %%prefetchTxs%%\n     *  into [[Provider-getBlock]].\n     */\n    get prefetchedTransactions(): Array<TransactionResponse> {\n        const txs = this.#transactions.slice();\n\n        // Doesn't matter...\n        if (txs.length === 0) { return [ ]; }\n\n        // Make sure we prefetched the transactions\n        assert(typeof(txs[0]) === \"object\", \"transactions were not prefetched with block request\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"transactionResponses()\"\n        });\n\n        return <Array<TransactionResponse>>txs;\n    }\n\n    /**\n     *  Returns a JSON-friendly value.\n     */\n    toJSON(): any {\n        const {\n            baseFeePerGas, difficulty, extraData, gasLimit, gasUsed, hash,\n            miner, nonce, number, parentHash, parentBeaconBlockRoot,\n            stateRoot, receiptsRoot, timestamp, transactions\n        } = this;\n\n        return {\n            _type: \"Block\",\n            baseFeePerGas: toJson(baseFeePerGas),\n            difficulty: toJson(difficulty),\n            extraData,\n            gasLimit: toJson(gasLimit),\n            gasUsed: toJson(gasUsed),\n            blobGasUsed: toJson(this.blobGasUsed),\n            excessBlobGas: toJson(this.excessBlobGas),\n            hash, miner, nonce, number, parentHash, timestamp,\n            parentBeaconBlockRoot, stateRoot, receiptsRoot,\n            transactions,\n        };\n    }\n\n    [Symbol.iterator](): Iterator<string> {\n        let index = 0;\n        const txs = this.transactions;\n        return {\n            next: () => {\n                if (index < this.length) {\n                    return {\n                        value: txs[index++], done: false\n                    }\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n\n    /**\n     *  The number of transactions in this block.\n     */\n    get length(): number { return this.#transactions.length; }\n\n    /**\n     *  The [[link-js-date]] this block was included at.\n     */\n    get date(): null | Date {\n        if (this.timestamp == null) { return null; }\n        return new Date(this.timestamp * 1000);\n    }\n\n    /**\n     *  Get the transaction at %%indexe%% within this block.\n     */\n    async getTransaction(indexOrHash: number | string): Promise<TransactionResponse> {\n        // Find the internal value by its index or hash\n        let tx: string | TransactionResponse | undefined = undefined;\n        if (typeof(indexOrHash) === \"number\") {\n            tx = this.#transactions[indexOrHash];\n\n        } else {\n            const hash = indexOrHash.toLowerCase();\n            for (const v of this.#transactions) {\n                if (typeof(v) === \"string\") {\n                    if (v !== hash) { continue; }\n                    tx = v;\n                    break;\n                } else {\n                    if (v.hash === hash) { continue; }\n                    tx = v;\n                    break;\n                }\n            }\n        }\n        if (tx == null) { throw new Error(\"no such tx\"); }\n\n        if (typeof(tx) === \"string\") {\n            return <TransactionResponse>(await this.provider.getTransaction(tx));\n        } else {\n            return tx;\n        }\n    }\n\n    /**\n     *  If a **Block** was fetched with a request to include the transactions\n     *  this will allow synchronous access to those transactions.\n     *\n     *  If the transactions were not prefetched, this will throw.\n     */\n    getPrefetchedTransaction(indexOrHash: number | string): TransactionResponse {\n        const txs = this.prefetchedTransactions;\n        if (typeof(indexOrHash) === \"number\") {\n            return txs[indexOrHash];\n        }\n\n        indexOrHash = indexOrHash.toLowerCase();\n        for (const tx of txs) {\n            if (tx.hash === indexOrHash) { return tx; }\n        }\n\n        assertArgument(false, \"no matching transaction\", \"indexOrHash\", indexOrHash);\n    }\n\n    /**\n     *  Returns true if this block been mined. This provides a type guard\n     *  for all properties on a [[MinedBlock]].\n     */\n    isMined(): this is MinedBlock { return !!this.hash; }\n\n    /**\n     *  Returns true if this block is an [[link-eip-2930]] block.\n     */\n    isLondon(): this is (Block & { baseFeePerGas: bigint }) {\n        return !!this.baseFeePerGas;\n    }\n\n    /**\n     *  @_ignore:\n     */\n    orphanedEvent(): OrphanFilter {\n        if (!this.isMined()) { throw new Error(\"\"); }\n        return createOrphanedBlockFilter(this);\n    }\n}\n\n//////////////////////\n// Log\n\n/**\n *  A **Log** in Ethereum represents an event that has been included in a\n *  transaction using the ``LOG*`` opcodes, which are most commonly used by\n *  Solidity's emit for announcing events.\n */\nexport class Log implements LogParams {\n\n    /**\n     *  The provider connected to the log used to fetch additional details\n     *  if necessary.\n     */\n    readonly provider: Provider;\n\n    /**\n     *  The transaction hash of the transaction this log occurred in. Use the\n     *  [[Log-getTransaction]] to get the [[TransactionResponse]].\n     */\n    readonly transactionHash!: string;\n\n    /**\n     *  The block hash of the block this log occurred in. Use the\n     *  [[Log-getBlock]] to get the [[Block]].\n     */\n    readonly blockHash!: string;\n\n    /**\n     *  The block number of the block this log occurred in. It is preferred\n     *  to use the [[Block-hash]] when fetching the related [[Block]],\n     *  since in the case of an orphaned block, the block at that height may\n     *  have changed.\n     */\n    readonly blockNumber!: number;\n\n    /**\n     *  If the **Log** represents a block that was removed due to an orphaned\n     *  block, this will be true.\n     *\n     *  This can only happen within an orphan event listener.\n     */\n    readonly removed!: boolean;\n\n    /**\n     *  The address of the contract that emitted this log.\n     */\n    readonly address!: string;\n\n    /**\n     *  The data included in this log when it was emitted.\n     */\n    readonly data!: string;\n\n    /**\n     *  The indexed topics included in this log when it was emitted.\n     *\n     *  All topics are included in the bloom filters, so they can be\n     *  efficiently filtered using the [[Provider-getLogs]] method.\n     */\n    readonly topics!: ReadonlyArray<string>;\n\n    /**\n     *  The index within the block this log occurred at. This is generally\n     *  not useful to developers, but can be used with the various roots\n     *  to proof inclusion within a block.\n     */\n    readonly index!: number;\n\n    /**\n     *  The index within the transaction of this log.\n     */\n    readonly transactionIndex!: number;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(log: LogParams, provider: Provider) {\n        this.provider = provider;\n\n        const topics = Object.freeze(log.topics.slice());\n        defineProperties<Log>(this, {\n            transactionHash: log.transactionHash,\n            blockHash: log.blockHash,\n            blockNumber: log.blockNumber,\n\n            removed: log.removed,\n\n            address: log.address,\n            data: log.data,\n\n            topics,\n\n            index: log.index,\n            transactionIndex: log.transactionIndex,\n        });\n    }\n\n    /**\n     *  Returns a JSON-compatible object.\n     */\n    toJSON(): any {\n        const {\n            address, blockHash, blockNumber, data, index,\n            removed, topics, transactionHash, transactionIndex\n        } = this;\n\n        return {\n            _type: \"log\",\n            address, blockHash, blockNumber, data, index,\n            removed, topics, transactionHash, transactionIndex\n        };\n    }\n\n    /**\n     *  Returns the block that this log occurred in.\n     */\n    async getBlock(): Promise<Block> {\n        const block = await this.provider.getBlock(this.blockHash);\n        assert(!!block, \"failed to find transaction\", \"UNKNOWN_ERROR\", { });\n        return block;\n    }\n\n    /**\n     *  Returns the transaction that this log occurred in.\n     */\n    async getTransaction(): Promise<TransactionResponse> {\n        const tx = await this.provider.getTransaction(this.transactionHash);\n        assert(!!tx, \"failed to find transaction\", \"UNKNOWN_ERROR\", { });\n        return tx;\n    }\n\n    /**\n     *  Returns the transaction receipt fot the transaction that this\n     *  log occurred in.\n     */\n    async getTransactionReceipt(): Promise<TransactionReceipt> {\n        const receipt = await this.provider.getTransactionReceipt(this.transactionHash);\n        assert(!!receipt, \"failed to find transaction receipt\", \"UNKNOWN_ERROR\", { });\n        return receipt;\n    }\n\n    /**\n     *  @_ignore:\n     */\n    removedEvent(): OrphanFilter {\n        return createRemovedLogFilter(this);\n    }\n}\n\n//////////////////////\n// Transaction Receipt\n\n/*\nexport interface LegacyTransactionReceipt {\n    byzantium: false;\n    status: null;\n    root: string;\n}\n\nexport interface ByzantiumTransactionReceipt {\n    byzantium: true;\n    status: number;\n    root: null;\n}\n*/\n\n/**\n *  A **TransactionReceipt** includes additional information about a\n *  transaction that is only available after it has been mined.\n */\nexport class TransactionReceipt implements TransactionReceiptParams, Iterable<Log> {\n    /**\n     *  The provider connected to the log used to fetch additional details\n     *  if necessary.\n     */\n    readonly provider!: Provider;\n\n    /**\n     *  The address the transaction was sent to.\n     */\n    readonly to!: null | string;\n\n    /**\n     *  The sender of the transaction.\n     */\n    readonly from!: string;\n\n    /**\n     *  The address of the contract if the transaction was directly\n     *  responsible for deploying one.\n     *\n     *  This is non-null **only** if the ``to`` is empty and the ``data``\n     *  was successfully executed as initcode.\n     */\n    readonly contractAddress!: null | string;\n\n    /**\n     *  The transaction hash.\n     */\n    readonly hash!: string;\n\n    /**\n     *  The index of this transaction within the block transactions.\n     */\n    readonly index!: number;\n\n    /**\n     *  The block hash of the [[Block]] this transaction was included in.\n     */\n    readonly blockHash!: string;\n\n    /**\n     *  The block number of the [[Block]] this transaction was included in.\n     */\n    readonly blockNumber!: number;\n\n    /**\n     *  The bloom filter bytes that represent all logs that occurred within\n     *  this transaction. This is generally not useful for most developers,\n     *  but can be used to validate the included logs.\n     */\n    readonly logsBloom!: string;\n\n    /**\n     *  The actual amount of gas used by this transaction.\n     *\n     *  When creating a transaction, the amount of gas that will be used can\n     *  only be approximated, but the sender must pay the gas fee for the\n     *  entire gas limit. After the transaction, the difference is refunded.\n     */\n    readonly gasUsed!: bigint;\n\n    /**\n     *  The gas used for BLObs. See [[link-eip-4844]].\n     */\n    readonly blobGasUsed!: null | bigint;\n\n    /**\n     *  The amount of gas used by all transactions within the block for this\n     *  and all transactions with a lower ``index``.\n     *\n     *  This is generally not useful for developers but can be used to\n     *  validate certain aspects of execution.\n     */\n    readonly cumulativeGasUsed!: bigint;\n\n    /**\n     *  The actual gas price used during execution.\n     *\n     *  Due to the complexity of [[link-eip-1559]] this value can only\n     *  be caluclated after the transaction has been mined, snce the base\n     *  fee is protocol-enforced.\n     */\n    readonly gasPrice!: bigint;\n\n    /**\n     *  The price paid per BLOB in gas. See [[link-eip-4844]].\n     */\n    readonly blobGasPrice!: null | bigint;\n\n    /**\n     *  The [[link-eip-2718]] transaction type.\n     */\n    readonly type!: number;\n    //readonly byzantium!: boolean;\n\n    /**\n     *  The status of this transaction, indicating success (i.e. ``1``) or\n     *  a revert (i.e. ``0``).\n     *\n     *  This is available in post-byzantium blocks, but some backends may\n     *  backfill this value.\n     */\n    readonly status!: null | number;\n\n    /**\n     *  The root hash of this transaction.\n     *\n     *  This is no present and was only included in pre-byzantium blocks, but\n     *  could be used to validate certain parts of the receipt.\n     */\n    readonly root!: null | string;\n\n    readonly #logs: ReadonlyArray<Log>;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(tx: TransactionReceiptParams, provider: Provider) {\n        this.#logs = Object.freeze(tx.logs.map((log) => {\n            return new Log(log, provider);\n        }));\n\n        let gasPrice = BN_0;\n        if (tx.effectiveGasPrice != null) {\n            gasPrice = tx.effectiveGasPrice;\n        } else if (tx.gasPrice != null) {\n            gasPrice = tx.gasPrice;\n        }\n\n        defineProperties<TransactionReceipt>(this, {\n            provider,\n\n            to: tx.to,\n            from: tx.from,\n            contractAddress: tx.contractAddress,\n\n            hash: tx.hash,\n            index: tx.index,\n\n            blockHash: tx.blockHash,\n            blockNumber: tx.blockNumber,\n\n            logsBloom: tx.logsBloom,\n\n            gasUsed: tx.gasUsed,\n            cumulativeGasUsed: tx.cumulativeGasUsed,\n            blobGasUsed: tx.blobGasUsed,\n            gasPrice,\n            blobGasPrice: tx.blobGasPrice,\n\n            type: tx.type,\n            //byzantium: tx.byzantium,\n            status: tx.status,\n            root: tx.root\n        });\n    }\n\n    /**\n     *  The logs for this transaction.\n     */\n    get logs(): ReadonlyArray<Log> { return this.#logs; }\n\n    /**\n     *  Returns a JSON-compatible representation.\n     */\n    toJSON(): any {\n        const {\n            to, from, contractAddress, hash, index,\n            blockHash, blockNumber, logsBloom,\n            logs, //byzantium, \n            status, root\n        } = this;\n\n        return {\n            _type: \"TransactionReceipt\",\n            blockHash, blockNumber,\n            //byzantium, \n            contractAddress,\n            cumulativeGasUsed: toJson(this.cumulativeGasUsed),\n            from,\n            gasPrice: toJson(this.gasPrice),\n            blobGasUsed: toJson(this.blobGasUsed),\n            blobGasPrice: toJson(this.blobGasPrice),\n            gasUsed: toJson(this.gasUsed),\n            hash, index, logs, logsBloom, root, status, to\n        };\n    }\n\n    /**\n     *  @_ignore:\n     */\n    get length(): number { return this.logs.length; }\n\n    [Symbol.iterator](): Iterator<Log> {\n        let index = 0;\n        return {\n            next: () => {\n                if (index < this.length) {\n                    return { value: this.logs[index++], done: false }\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n\n    /**\n     *  The total fee for this transaction, in wei.\n     */\n    get fee(): bigint {\n        return this.gasUsed * this.gasPrice;\n    }\n\n    /**\n     *  Resolves to the block this transaction occurred in.\n     */\n    async getBlock(): Promise<Block> {\n        const block = await this.provider.getBlock(this.blockHash);\n        if (block == null) { throw new Error(\"TODO\"); }\n        return block;\n    }\n\n    /**\n     *  Resolves to the transaction this transaction occurred in.\n     */\n    async getTransaction(): Promise<TransactionResponse> {\n        const tx = await this.provider.getTransaction(this.hash);\n        if (tx == null) { throw new Error(\"TODO\"); }\n        return tx;\n    }\n\n    /**\n     *  Resolves to the return value of the execution of this transaction.\n     *\n     *  Support for this feature is limited, as it requires an archive node\n     *  with the ``debug_`` or ``trace_`` API enabled.\n     */\n    async getResult(): Promise<string> {\n        return <string>(await this.provider.getTransactionResult(this.hash));\n    }\n\n    /**\n     *  Resolves to the number of confirmations this transaction has.\n     */\n    async confirmations(): Promise<number> {\n        return (await this.provider.getBlockNumber()) - this.blockNumber + 1;\n    }\n\n    /**\n     *  @_ignore:\n     */\n    removedEvent(): OrphanFilter {\n        return createRemovedTransactionFilter(this);\n    }\n\n    /**\n     *  @_ignore:\n     */\n    reorderedEvent(other?: TransactionResponse): OrphanFilter {\n        assert(!other || other.isMined(), \"unmined 'other' transction cannot be orphaned\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"reorderedEvent(other)\" });\n        return createReorderedTransactionFilter(this, other);\n    }\n}\n\n\n//////////////////////\n// Transaction Response\n\n/**\n *  A **MinedTransactionResponse** is an interface representing a\n *  transaction which has been mined and allows for a type guard for its\n *  property values being defined.\n */\nexport interface MinedTransactionResponse extends TransactionResponse {\n    /**\n     *  The block number this transaction occurred in.\n     */\n    blockNumber: number;\n\n    /**\n     *  The block hash this transaction occurred in.\n     */\n    blockHash: string;\n\n    /**\n     *  The date this transaction occurred on.\n     */\n    date: Date;\n}\n\n\n/**\n *  A **TransactionResponse** includes all properties about a transaction\n *  that was sent to the network, which may or may not be included in a\n *  block.\n *\n *  The [[TransactionResponse-isMined]] can be used to check if the\n *  transaction has been mined as well as type guard that the otherwise\n *  possibly ``null`` properties are defined.\n */\nexport class TransactionResponse implements TransactionLike<string>, TransactionResponseParams {\n    /**\n     *  The provider this is connected to, which will influence how its\n     *  methods will resolve its async inspection methods.\n     */\n    readonly provider: Provider;\n\n    /**\n     *  The block number of the block that this transaction was included in.\n     *\n     *  This is ``null`` for pending transactions.\n     */\n    readonly blockNumber: null | number;\n\n    /**\n     *  The blockHash of the block that this transaction was included in.\n     *\n     *  This is ``null`` for pending transactions.\n     */\n    readonly blockHash: null | string;\n\n    /**\n     *  The index within the block that this transaction resides at.\n     */\n    readonly index!: number;\n\n    /**\n     *  The transaction hash.\n     */\n    readonly hash!: string;\n\n    /**\n     *  The [[link-eip-2718]] transaction envelope type. This is\n     *  ``0`` for legacy transactions types.\n     */\n    readonly type!: number;\n\n    /**\n     *  The receiver of this transaction.\n     *\n     *  If ``null``, then the transaction is an initcode transaction.\n     *  This means the result of executing the [[data]] will be deployed\n     *  as a new contract on chain (assuming it does not revert) and the\n     *  address may be computed using [[getCreateAddress]].\n     */\n    readonly to!: null | string;\n\n    /**\n     *  The sender of this transaction. It is implicitly computed\n     *  from the transaction pre-image hash (as the digest) and the\n     *  [[signature]] using ecrecover.\n     */\n    readonly from!: string;\n\n    /**\n     *  The nonce, which is used to prevent replay attacks and offer\n     *  a method to ensure transactions from a given sender are explicitly\n     *  ordered.\n     *\n     *  When sending a transaction, this must be equal to the number of\n     *  transactions ever sent by [[from]].\n     */\n    readonly nonce!: number;\n\n    /**\n     *  The maximum units of gas this transaction can consume. If execution\n     *  exceeds this, the entries transaction is reverted and the sender\n     *  is charged for the full amount, despite not state changes being made.\n     */\n    readonly gasLimit!: bigint;\n\n    /**\n     *  The gas price can have various values, depending on the network.\n     *\n     *  In modern networks, for transactions that are included this is\n     *  the //effective gas price// (the fee per gas that was actually\n     *  charged), while for transactions that have not been included yet\n     *  is the [[maxFeePerGas]].\n     *\n     *  For legacy transactions, or transactions on legacy networks, this\n     *  is the fee that will be charged per unit of gas the transaction\n     *  consumes.\n     */\n    readonly gasPrice!: bigint;\n\n    /**\n     *  The maximum priority fee (per unit of gas) to allow a\n     *  validator to charge the sender. This is inclusive of the\n     *  [[maxFeeFeePerGas]].\n     */\n    readonly maxPriorityFeePerGas!: null | bigint;\n\n    /**\n     *  The maximum fee (per unit of gas) to allow this transaction\n     *  to charge the sender.\n     */\n    readonly maxFeePerGas!: null | bigint;\n\n    /**\n     *  The [[link-eip-4844]] max fee per BLOb gas.\n     */\n    readonly maxFeePerBlobGas!: null | bigint;\n\n    /**\n     *  The data.\n     */\n    readonly data!: string;\n\n    /**\n     *  The value, in wei. Use [[formatEther]] to format this value\n     *  as ether.\n     */\n    readonly value!: bigint;\n\n    /**\n     *  The chain ID.\n     */\n    readonly chainId!: bigint;\n\n    /**\n     *  The signature.\n     */\n    readonly signature!: Signature;\n\n    /**\n     *  The [[link-eip-2930]] access list for transaction types that\n     *  support it, otherwise ``null``.\n     */\n    readonly accessList!: null | AccessList;\n\n    /**\n     *  The [[link-eip-4844]] BLOb versioned hashes.\n     */\n    readonly blobVersionedHashes!: null | Array<string>;\n\n    #startBlock: number;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(tx: TransactionResponseParams, provider: Provider) {\n        this.provider = provider;\n\n        this.blockNumber = (tx.blockNumber != null) ? tx.blockNumber: null;\n        this.blockHash = (tx.blockHash != null) ? tx.blockHash: null;\n\n        this.hash = tx.hash;\n        this.index = tx.index;\n\n        this.type = tx.type;\n\n        this.from = tx.from;\n        this.to = tx.to || null;\n\n        this.gasLimit = tx.gasLimit;\n        this.nonce = tx.nonce;\n        this.data = tx.data;\n        this.value = tx.value;\n\n        this.gasPrice = tx.gasPrice;\n        this.maxPriorityFeePerGas = (tx.maxPriorityFeePerGas != null) ? tx.maxPriorityFeePerGas: null;\n        this.maxFeePerGas = (tx.maxFeePerGas != null) ? tx.maxFeePerGas: null;\n        this.maxFeePerBlobGas = (tx.maxFeePerBlobGas != null) ? tx.maxFeePerBlobGas: null;\n\n        this.chainId = tx.chainId;\n        this.signature = tx.signature;\n\n        this.accessList = (tx.accessList != null) ? tx.accessList: null;\n        this.blobVersionedHashes = (tx.blobVersionedHashes != null) ? tx.blobVersionedHashes: null;\n\n        this.#startBlock = -1;\n    }\n\n    /**\n     *  Returns a JSON-compatible representation of this transaction.\n     */\n    toJSON(): any {\n        const {\n            blockNumber, blockHash, index, hash, type, to, from, nonce,\n            data, signature, accessList, blobVersionedHashes\n        } = this;\n\n        return {\n            _type: \"TransactionResponse\",\n            accessList, blockNumber, blockHash,\n            blobVersionedHashes,\n            chainId: toJson(this.chainId),\n            data, from,\n            gasLimit: toJson(this.gasLimit),\n            gasPrice: toJson(this.gasPrice),\n            hash,\n            maxFeePerGas: toJson(this.maxFeePerGas),\n            maxPriorityFeePerGas: toJson(this.maxPriorityFeePerGas),\n            maxFeePerBlobGas: toJson(this.maxFeePerBlobGas),\n            nonce, signature, to, index, type,\n            value: toJson(this.value),\n        };\n    }\n\n    /**\n     *  Resolves to the Block that this transaction was included in.\n     *\n     *  This will return null if the transaction has not been included yet.\n     */\n    async getBlock(): Promise<null | Block> {\n        let blockNumber = this.blockNumber;\n        if (blockNumber == null) {\n            const tx = await this.getTransaction();\n            if (tx) { blockNumber = tx.blockNumber; }\n        }\n        if (blockNumber == null) { return null; }\n        const block = this.provider.getBlock(blockNumber);\n        if (block == null) { throw new Error(\"TODO\"); }\n        return block;\n    }\n\n    /**\n     *  Resolves to this transaction being re-requested from the\n     *  provider. This can be used if you have an unmined transaction\n     *  and wish to get an up-to-date populated instance.\n     */\n    async getTransaction(): Promise<null | TransactionResponse> {\n        return this.provider.getTransaction(this.hash);\n    }\n\n    /**\n     *  Resolve to the number of confirmations this transaction has.\n     */\n    async confirmations(): Promise<number> {\n        if (this.blockNumber == null) {\n            const { tx, blockNumber } = await resolveProperties({\n                tx: this.getTransaction(),\n                blockNumber: this.provider.getBlockNumber()\n            });\n\n            // Not mined yet...\n            if (tx == null || tx.blockNumber == null) { return 0; }\n\n            return blockNumber - tx.blockNumber + 1;\n        }\n\n        const blockNumber = await this.provider.getBlockNumber();\n        return blockNumber - this.blockNumber + 1;\n    }\n\n    /**\n     *  Resolves once this transaction has been mined and has\n     *  %%confirms%% blocks including it (default: ``1``) with an\n     *  optional %%timeout%%.\n     *\n     *  This can resolve to ``null`` only if %%confirms%% is ``0``\n     *  and the transaction has not been mined, otherwise this will\n     *  wait until enough confirmations have completed.\n     */\n    async wait(_confirms?: number, _timeout?: number): Promise<null | TransactionReceipt> {\n        const confirms = (_confirms == null) ? 1: _confirms;\n        const timeout = (_timeout == null) ? 0: _timeout;\n\n        let startBlock = this.#startBlock\n        let nextScan = -1;\n        let stopScanning = (startBlock === -1) ? true: false;\n        const checkReplacement = async () => {\n            // Get the current transaction count for this sender\n            if (stopScanning) { return null; }\n            const { blockNumber, nonce } = await resolveProperties({\n                blockNumber: this.provider.getBlockNumber(),\n                nonce: this.provider.getTransactionCount(this.from)\n            });\n\n            // No transaction or our nonce has not been mined yet; but we\n            // can start scanning later when we do start\n            if (nonce < this.nonce) {\n                startBlock = blockNumber;\n                return;\n            }\n\n            // We were mined; no replacement\n            if (stopScanning) { return null; }\n            const mined = await this.getTransaction();\n            if (mined && mined.blockNumber != null) { return; }\n\n            // We were replaced; start scanning for that transaction\n\n            // Starting to scan; look back a few extra blocks for safety\n            if (nextScan === -1) {\n                nextScan = startBlock - 3;\n                if (nextScan < this.#startBlock) { nextScan = this.#startBlock; }\n            }\n\n            while (nextScan <= blockNumber) {\n                // Get the next block to scan\n                if (stopScanning) { return null; }\n                const block = await this.provider.getBlock(nextScan, true);\n\n                // This should not happen; but we'll try again shortly\n                if (block == null) { return; }\n\n                // We were mined; no replacement\n                for (const hash of block) {\n                    if (hash === this.hash) { return; }\n                }\n\n                // Search for the transaction that replaced us\n                for (let i = 0; i < block.length; i++) {\n                    const tx: TransactionResponse = await block.getTransaction(i);\n\n                    if (tx.from === this.from && tx.nonce === this.nonce) {\n                        // Get the receipt\n                        if (stopScanning) { return null; }\n                        const receipt = await this.provider.getTransactionReceipt(tx.hash);\n\n                        // This should not happen; but we'll try again shortly\n                        if (receipt == null) { return; }\n\n                        // We will retry this on the next block (this case could be optimized)\n                        if ((blockNumber - receipt.blockNumber + 1) < confirms) { return; }\n\n                        // The reason we were replaced\n                        let reason: \"replaced\" | \"repriced\" | \"cancelled\" = \"replaced\";\n                        if (tx.data === this.data && tx.to === this.to && tx.value === this.value) {\n                            reason = \"repriced\";\n                        } else  if (tx.data === \"0x\" && tx.from === tx.to && tx.value === BN_0) {\n                            reason = \"cancelled\"\n                        }\n\n                        assert(false, \"transaction was replaced\", \"TRANSACTION_REPLACED\", {\n                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                            reason,\n                            replacement: tx.replaceableTransaction(startBlock),\n                            hash: tx.hash,\n                            receipt\n                        });\n                    }\n                }\n\n                nextScan++;\n            }\n            return;\n        };\n\n        const checkReceipt = (receipt: null | TransactionReceipt) => {\n            if (receipt == null || receipt.status !== 0) { return receipt; }\n            assert(false, \"transaction execution reverted\", \"CALL_EXCEPTION\", {\n                action: \"sendTransaction\",\n                data: null, reason: null, invocation: null, revert: null,\n                transaction: {\n                    to: receipt.to,\n                    from: receipt.from,\n                    data: \"\" // @TODO: in v7, split out sendTransaction properties\n                }, receipt\n            });\n        };\n\n        const receipt = await this.provider.getTransactionReceipt(this.hash);\n\n        if (confirms === 0) { return checkReceipt(receipt); }\n\n        if (receipt) {\n            if ((await receipt.confirmations()) >= confirms) {\n                return checkReceipt(receipt);\n            }\n\n        } else {\n            // Check for a replacement; throws if a replacement was found\n            await checkReplacement();\n\n            // Allow null only when the confirms is 0\n            if (confirms === 0) { return null; }\n        }\n\n        const waiter = new Promise((resolve, reject) => {\n            // List of things to cancel when we have a result (one way or the other)\n            const cancellers: Array<() => void> = [ ];\n            const cancel = () => { cancellers.forEach((c) => c()); };\n\n            // On cancel, stop scanning for replacements\n            cancellers.push(() => { stopScanning = true; });\n\n            // Set up any timeout requested\n            if (timeout > 0) {\n                const timer = setTimeout(() => {\n                    cancel();\n                    reject(makeError(\"wait for transaction timeout\", \"TIMEOUT\"));\n                }, timeout);\n                cancellers.push(() => { clearTimeout(timer); });\n            }\n\n            const txListener = async (receipt: TransactionReceipt) => {\n                // Done; return it!\n                if ((await receipt.confirmations()) >= confirms) {\n                    cancel();\n                    try {\n                        resolve(checkReceipt(receipt));\n                    } catch (error) { reject(error); }\n                }\n            };\n            cancellers.push(() => { this.provider.off(this.hash, txListener); });\n            this.provider.on(this.hash, txListener);\n            // We support replacement detection; start checking\n            if (startBlock >= 0) {\n                const replaceListener = async () => {\n                    try {\n                        // Check for a replacement; this throws only if one is found\n                        await checkReplacement();\n\n                    } catch (error) {\n                        // We were replaced (with enough confirms); re-throw the error\n                        if (isError(error, \"TRANSACTION_REPLACED\")) {\n                            cancel();\n                            reject(error);\n                            return;\n                        }\n                    }\n\n                    // Rescheudle a check on the next block\n                    if (!stopScanning) {\n                        this.provider.once(\"block\", replaceListener);\n                    }\n                };\n                cancellers.push(() => { this.provider.off(\"block\", replaceListener); });\n                this.provider.once(\"block\", replaceListener);\n            }\n        });\n\n        return await <Promise<TransactionReceipt>>waiter;\n    }\n\n    /**\n     *  Returns ``true`` if this transaction has been included.\n     *\n     *  This is effective only as of the time the TransactionResponse\n     *  was instantiated. To get up-to-date information, use\n     *  [[getTransaction]].\n     *\n     *  This provides a Type Guard that this transaction will have\n     *  non-null property values for properties that are null for\n     *  unmined transactions.\n     */\n    isMined(): this is MinedTransactionResponse {\n        return (this.blockHash != null);\n    }\n\n    /**\n     *  Returns true if the transaction is a legacy (i.e. ``type == 0``)\n     *  transaction.\n     *\n     *  This provides a Type Guard that this transaction will have\n     *  the ``null``-ness for hardfork-specific properties set correctly.\n     */\n    isLegacy(): this is (TransactionResponse & { accessList: null, maxFeePerGas: null, maxPriorityFeePerGas: null }) {\n        return (this.type === 0)\n    }\n\n    /**\n     *  Returns true if the transaction is a Berlin (i.e. ``type == 1``)\n     *  transaction. See [[link-eip-2070]].\n     *\n     *  This provides a Type Guard that this transaction will have\n     *  the ``null``-ness for hardfork-specific properties set correctly.\n     */\n    isBerlin(): this is (TransactionResponse & { accessList: AccessList, maxFeePerGas: null, maxPriorityFeePerGas: null }) {\n        return (this.type === 1);\n    }\n\n    /**\n     *  Returns true if the transaction is a London (i.e. ``type == 2``)\n     *  transaction. See [[link-eip-1559]].\n     *\n     *  This provides a Type Guard that this transaction will have\n     *  the ``null``-ness for hardfork-specific properties set correctly.\n     */\n    isLondon(): this is (TransactionResponse & { accessList: AccessList, maxFeePerGas: bigint, maxPriorityFeePerGas: bigint }){\n        return (this.type === 2);\n    }\n\n    /**\n     *  Returns true if hte transaction is a Cancun (i.e. ``type == 3``)\n     *  transaction. See [[link-eip-4844]].\n     */\n    isCancun(): this is (TransactionResponse & { accessList: AccessList, maxFeePerGas: bigint, maxPriorityFeePerGas: bigint, maxFeePerBlobGas: bigint, blobVersionedHashes: Array<string> }){\n        return (this.type === 3);\n    }\n\n    /**\n     *  Returns a filter which can be used to listen for orphan events\n     *  that evict this transaction.\n     */\n    removedEvent(): OrphanFilter {\n        assert(this.isMined(), \"unmined transaction canot be orphaned\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"removeEvent()\" });\n        return createRemovedTransactionFilter(this);\n    }\n\n    /**\n     *  Returns a filter which can be used to listen for orphan events\n     *  that re-order this event against %%other%%.\n     */\n    reorderedEvent(other?: TransactionResponse): OrphanFilter {\n        assert(this.isMined(), \"unmined transaction canot be orphaned\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"removeEvent()\" });\n\n        assert(!other || other.isMined(), \"unmined 'other' transaction canot be orphaned\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"removeEvent()\" });\n\n        return createReorderedTransactionFilter(this, other);\n    }\n\n    /**\n     *  Returns a new TransactionResponse instance which has the ability to\n     *  detect (and throw an error) if the transaction is replaced, which\n     *  will begin scanning at %%startBlock%%.\n     *\n     *  This should generally not be used by developers and is intended\n     *  primarily for internal use. Setting an incorrect %%startBlock%% can\n     *  have devastating performance consequences if used incorrectly.\n     */\n    replaceableTransaction(startBlock: number): TransactionResponse {\n        assertArgument(Number.isInteger(startBlock) && startBlock >= 0, \"invalid startBlock\", \"startBlock\", startBlock);\n        const tx = new TransactionResponse(this, this.provider);\n        tx.#startBlock = startBlock;\n        return tx;\n    }\n}\n\n\n//////////////////////\n// OrphanFilter\n\n/**\n *  An Orphan Filter allows detecting when an orphan block has\n *  resulted in dropping a block or transaction or has resulted\n *  in transactions changing order.\n *\n *  Not currently fully supported.\n */\nexport type OrphanFilter = {\n    orphan: \"drop-block\",\n    hash: string,\n    number: number\n} | {\n    orphan: \"drop-transaction\",\n    tx: { hash: string, blockHash: string, blockNumber: number },\n    other?: { hash: string, blockHash: string, blockNumber: number }\n} | {\n    orphan: \"reorder-transaction\",\n    tx: { hash: string, blockHash: string, blockNumber: number },\n    other?: { hash: string, blockHash: string, blockNumber: number }\n} | {\n    orphan: \"drop-log\",\n    log: {\n        transactionHash: string,\n        blockHash: string,\n        blockNumber: number,\n        address: string,\n        data: string,\n        topics: ReadonlyArray<string>,\n        index: number\n    }\n};\n\nfunction createOrphanedBlockFilter(block: { hash: string, number: number }): OrphanFilter {\n    return { orphan: \"drop-block\", hash: block.hash, number: block.number };\n}\n\nfunction createReorderedTransactionFilter(tx: { hash: string, blockHash: string, blockNumber: number }, other?: { hash: string, blockHash: string, blockNumber: number }): OrphanFilter {\n    return { orphan: \"reorder-transaction\", tx, other };\n}\n\nfunction createRemovedTransactionFilter(tx: { hash: string, blockHash: string, blockNumber: number }): OrphanFilter {\n    return { orphan: \"drop-transaction\", tx };\n}\n\nfunction createRemovedLogFilter(log: { blockHash: string, transactionHash: string, blockNumber: number, address: string, data: string, topics: ReadonlyArray<string>, index: number }): OrphanFilter {\n    return { orphan: \"drop-log\", log: {\n        transactionHash: log.transactionHash,\n        blockHash: log.blockHash,\n        blockNumber: log.blockNumber,\n        address: log.address,\n        data: log.data,\n        topics: Object.freeze(log.topics.slice()),\n        index: log.index\n    } };\n}\n\n//////////////////////\n// EventFilter\n\n/**\n *  A **TopicFilter** provides a struture to define bloom-filter\n *  queries.\n *\n *  Each field that is ``null`` matches **any** value, a field that is\n *  a ``string`` must match exactly that value and and ``array`` is\n *  effectively an ``OR``-ed set, where any one of those values must\n *  match.\n */\nexport type TopicFilter = Array<null | string | Array<string>>;\n\n// @TODO:\n//export type DeferableTopicFilter = Array<null | string | Promise<string> | Array<string | Promise<string>>>;\n\n/**\n *  An **EventFilter** allows efficiently filtering logs (also known as\n *  events) using bloom filters included within blocks.\n */\nexport interface EventFilter {\n    address?: AddressLike | Array<AddressLike>;\n    topics?: TopicFilter;\n}\n\n/**\n *  A **Filter** allows searching a specific range of blocks for mathcing\n *  logs.\n */\nexport interface Filter extends EventFilter {\n\n    /**\n     *  The start block for the filter (inclusive).\n     */\n    fromBlock?: BlockTag;\n\n    /**\n     *  The end block for the filter (inclusive).\n     */\n    toBlock?: BlockTag;\n}\n\n/**\n *  A **FilterByBlockHash** allows searching a specific block for mathcing\n *  logs.\n */\nexport interface FilterByBlockHash extends EventFilter {\n    /**\n     *  The blockhash of the specific block for the filter.\n     */\n    blockHash?: string;\n}\n\n\n//////////////////////\n// ProviderEvent\n\n/**\n *  A **ProviderEvent** provides the types of events that can be subscribed\n *  to on a [[Provider]].\n *\n *  Each provider may include additional possible events it supports, but\n *  the most commonly supported are:\n *\n *  **``\"block\"``** - calls the listener with the current block number on each\n *  new block.\n *\n *  **``\"error\"``** - calls the listener on each async error that occurs during\n *  the event loop, with the error.\n *\n *  **``\"debug\"``** - calls the listener on debug events, which can be used to\n *  troubleshoot network errors, provider problems, etc.\n *\n *  **``transaction hash``** - calls the listener on each block after the\n *  transaction has been mined; generally ``.once`` is more appropriate for\n *  this event.\n *\n *  **``Array``** - calls the listener on each log that matches the filter.\n *\n *  [[EventFilter]] - calls the listener with each matching log\n */\nexport type ProviderEvent = string | Array<string | Array<string>> | EventFilter | OrphanFilter;\n\n\n//////////////////////\n// Provider\n\n/**\n *  A **Provider** is the primary method to interact with the read-only\n *  content on Ethereum.\n *\n *  It allows access to details about accounts, blocks and transactions\n *  and the ability to query event logs and simulate contract execution.\n *\n *  Account data includes the [balance](getBalance),\n *  [transaction count](getTransactionCount), [code](getCode) and\n *  [state trie storage](getStorage).\n *\n *  Simulating execution can be used to [call](call),\n *  [estimate gas](estimateGas) and\n *  [get transaction results](getTransactionResult).\n *\n *  The [[broadcastTransaction]] is the only method which allows updating\n *  the blockchain, but it is usually accessed by a [[Signer]], since a\n *  private key must be used to sign the transaction before it can be\n *  broadcast.\n */\nexport interface Provider extends ContractRunner, EventEmitterable<ProviderEvent>, NameResolver {\n\n    /**\n     *  The provider iteself.\n     *\n     *  This is part of the necessary API for executing a contract, as\n     *  it provides a common property on any [[ContractRunner]] that\n     *  can be used to access the read-only portion of the runner.\n     */\n    provider: this;\n\n    /**\n     *  Shutdown any resources this provider is using. No additional\n     *  calls should be made to this provider after calling this.\n     */\n    destroy(): void;\n\n    ////////////////////\n    // State\n\n    /**\n     *  Get the current block number.\n     */\n    getBlockNumber(): Promise<number>;\n\n    /**\n     *  Get the connected [[Network]].\n     */\n    getNetwork(): Promise<Network>;\n\n    /**\n     *  Get the best guess at the recommended [[FeeData]].\n     */\n    getFeeData(): Promise<FeeData>;\n\n\n    ////////////////////\n    // Account\n\n    /**\n     *  Get the account balance (in wei) of %%address%%. If %%blockTag%%\n     *  is specified and the node supports archive access for that\n     *  %%blockTag%%, the balance is as of that [[BlockTag]].\n     *\n     *  @note On nodes without archive access enabled, the %%blockTag%% may be\n     *        **silently ignored** by the node, which may cause issues if relied on.\n     */\n    getBalance(address: AddressLike, blockTag?: BlockTag): Promise<bigint>;\n\n    /**\n     *  Get the number of transactions ever sent for %%address%%, which\n     *  is used as the ``nonce`` when sending a transaction. If\n     *  %%blockTag%% is specified and the node supports archive access\n     *  for that %%blockTag%%, the transaction count is as of that\n     *  [[BlockTag]].\n     *\n     *  @note On nodes without archive access enabled, the %%blockTag%% may be\n     *        **silently ignored** by the node, which may cause issues if relied on.\n     */\n    getTransactionCount(address: AddressLike, blockTag?: BlockTag): Promise<number>;\n\n    /**\n     *  Get the bytecode for %%address%%.\n     *\n     *  @note On nodes without archive access enabled, the %%blockTag%% may be\n     *        **silently ignored** by the node, which may cause issues if relied on.\n     */\n    getCode(address: AddressLike, blockTag?: BlockTag): Promise<string>\n\n    /**\n     *  Get the storage slot value for %%address%% at slot %%position%%.\n     *\n     *  @note On nodes without archive access enabled, the %%blockTag%% may be\n     *        **silently ignored** by the node, which may cause issues if relied on.\n     */\n    getStorage(address: AddressLike, position: BigNumberish, blockTag?: BlockTag): Promise<string>\n\n\n    ////////////////////\n    // Execution\n\n    /**\n     *  Estimates the amount of gas required to executre %%tx%%.\n     */\n    estimateGas(tx: TransactionRequest): Promise<bigint>;\n\n    /**\n     *  Simulate the execution of %%tx%%. If the call reverts, it will\n     *  throw a [[CallExceptionError]] which includes the revert data.\n     */\n    call(tx: TransactionRequest): Promise<string>\n\n    /**\n     *  Broadcasts the %%signedTx%% to the network, adding it to the\n     *  memory pool of any node for which the transaction meets the\n     *  rebroadcast requirements.\n     */\n    broadcastTransaction(signedTx: string): Promise<TransactionResponse>;\n\n\n    ////////////////////\n    // Queries\n\n    /**\n     *  Resolves to the block for %%blockHashOrBlockTag%%.\n     *\n     *  If %%prefetchTxs%%, and the backend supports including transactions\n     *  with block requests, all transactions will be included and the\n     *  [[Block]] object will not need to make remote calls for getting\n     *  transactions.\n     */\n    getBlock(blockHashOrBlockTag: BlockTag | string, prefetchTxs?: boolean): Promise<null | Block>;\n\n    /**\n     *  Resolves to the transaction for %%hash%%.\n     *\n     *  If the transaction is unknown or on pruning nodes which\n     *  discard old transactions this resolves to ``null``.\n     */\n    getTransaction(hash: string): Promise<null | TransactionResponse>;\n\n    /**\n     *  Resolves to the transaction receipt for %%hash%%, if mined.\n     *\n     *  If the transaction has not been mined, is unknown or on\n     *  pruning nodes which discard old transactions this resolves to\n     *  ``null``.\n     */\n    getTransactionReceipt(hash: string): Promise<null | TransactionReceipt>;\n\n    /**\n     *  Resolves to the result returned by the executions of %%hash%%.\n     *\n     *  This is only supported on nodes with archive access and with\n     *  the necessary debug APIs enabled.\n     */\n    getTransactionResult(hash: string): Promise<null | string>;\n\n\n    ////////////////////\n    // Bloom-filter Queries\n\n    /**\n     *  Resolves to the list of Logs that match %%filter%%\n     */\n    getLogs(filter: Filter | FilterByBlockHash): Promise<Array<Log>>;\n\n\n    ////////////////////\n    // ENS\n\n    /**\n     *  Resolves to the address configured for the %%ensName%% or\n     *  ``null`` if unconfigured.\n     */\n    resolveName(ensName: string): Promise<null | string>;\n\n    /**\n     *  Resolves to the ENS name associated for the %%address%% or\n     *  ``null`` if the //primary name// is not configured.\n     *\n     *  Users must perform additional steps to configure a //primary name//,\n     *  which is not currently common.\n     */\n    lookupAddress(address: string): Promise<null | string>;\n\n    /**\n     *  Waits until the transaction %%hash%% is mined and has %%confirms%%\n     *  confirmations.\n     */\n    waitForTransaction(hash: string, confirms?: number, timeout?: number): Promise<null | TransactionReceipt>;\n\n    /**\n     *  Resolves to the block at %%blockTag%% once it has been mined.\n     *\n     *  This can be useful for waiting some number of blocks by using\n     *  the ``currentBlockNumber + N``.\n     */\n    waitForBlock(blockTag?: BlockTag): Promise<Block>;\n}\n", "// import from provider.ts instead of index.ts to prevent circular dep\n// from EtherscanProvider\nimport {\n    Block, Log, TransactionReceipt, TransactionResponse\n} from \"../providers/provider.js\";\nimport { defineProperties, EventPayload } from \"../utils/index.js\";\n\nimport type { EventFragment, Interface, Result } from \"../abi/index.js\";\nimport type { Listener } from \"../utils/index.js\";\nimport type {\n    Provider\n} from \"../providers/index.js\";\n\nimport type { BaseContract } from \"./contract.js\";\nimport type { ContractEventName } from \"./types.js\";\n\n/**\n *  An **EventLog** contains additional properties parsed from the [[Log]].\n */\nexport class EventLog extends Log {\n    /**\n     *  The Contract Interface.\n     */\n    readonly interface!: Interface;\n\n    /**\n     *  The matching event.\n     */\n    readonly fragment!: EventFragment;\n\n    /**\n     *  The parsed arguments passed to the event by ``emit``.\n     */\n    readonly args!: Result;\n\n    /**\n     * @_ignore:\n     */\n    constructor(log: Log, iface: Interface, fragment: EventFragment) {\n        super(log, log.provider);\n        const args = iface.decodeEventLog(fragment, log.data, log.topics);\n        defineProperties<EventLog>(this, { args, fragment, interface: iface });\n    }\n\n    /**\n     *  The name of the event.\n     */\n    get eventName(): string { return this.fragment.name; }\n\n    /**\n     *  The signature of the event.\n     */\n    get eventSignature(): string { return this.fragment.format(); }\n}\n\n/**\n *  An **EventLog** contains additional properties parsed from the [[Log]].\n */\nexport class UndecodedEventLog extends Log {\n\n    /**\n     *  The error encounted when trying to decode the log.\n     */\n    readonly error!: Error;\n\n    /**\n     * @_ignore:\n     */\n    constructor(log: Log, error: Error) {\n        super(log, log.provider);\n        defineProperties<UndecodedEventLog>(this, { error });\n    }\n}\n\n/**\n *  A **ContractTransactionReceipt** includes the parsed logs from a\n *  [[TransactionReceipt]].\n */\nexport class ContractTransactionReceipt extends TransactionReceipt {\n    readonly #iface: Interface;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(iface: Interface, provider: Provider, tx: TransactionReceipt) {\n        super(tx, provider);\n        this.#iface = iface;\n    }\n\n    /**\n     *  The parsed logs for any [[Log]] which has a matching event in the\n     *  Contract ABI.\n     */\n    get logs(): Array<EventLog | Log> {\n        return super.logs.map((log) => {\n            const fragment = log.topics.length ? this.#iface.getEvent(log.topics[0]): null;\n            if (fragment) {\n                try {\n                    return new EventLog(log, this.#iface, fragment)\n                } catch (error: any) {\n                    return new UndecodedEventLog(log, error);\n                }\n            }\n\n            return log;\n        });\n    }\n\n}\n\n/**\n *  A **ContractTransactionResponse** will return a\n *  [[ContractTransactionReceipt]] when waited on.\n */\nexport class ContractTransactionResponse extends TransactionResponse {\n    readonly #iface: Interface;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(iface: Interface, provider: Provider, tx: TransactionResponse) {\n        super(tx, provider);\n        this.#iface = iface;\n    }\n\n    /**\n     *  Resolves once this transaction has been mined and has\n     *  %%confirms%% blocks including it (default: ``1``) with an\n     *  optional %%timeout%%.\n     *\n     *  This can resolve to ``null`` only if %%confirms%% is ``0``\n     *  and the transaction has not been mined, otherwise this will\n     *  wait until enough confirmations have completed.\n     */\n    async wait(confirms?: number, timeout?: number): Promise<null | ContractTransactionReceipt> {\n        const receipt = await super.wait(confirms, timeout);\n        if (receipt == null) { return null; }\n        return new ContractTransactionReceipt(this.#iface, this.provider, receipt);\n    }\n}\n\n/**\n *  A **ContractUnknownEventPayload** is included as the last parameter to\n *  Contract Events when the event does not match any events in the ABI.\n */\nexport  class ContractUnknownEventPayload extends EventPayload<ContractEventName> {\n    /**\n     *  The log with no matching events.\n     */\n    readonly log!: Log;\n\n    /**\n     *  @_event:\n     */\n    constructor(contract: BaseContract, listener: null | Listener, filter: ContractEventName, log: Log) {\n        super(contract, listener, filter);\n        defineProperties<ContractUnknownEventPayload>(this, { log });\n    }\n\n    /**\n     *  Resolves to the block the event occured in.\n     */\n    async getBlock(): Promise<Block> {\n        return await this.log.getBlock();\n    }\n\n    /**\n     *  Resolves to the transaction the event occured in.\n     */\n    async getTransaction(): Promise<TransactionResponse> {\n        return await this.log.getTransaction();\n    }\n\n    /**\n     *  Resolves to the transaction receipt the event occured in.\n     */\n    async getTransactionReceipt(): Promise<TransactionReceipt> {\n        return await this.log.getTransactionReceipt();\n    }\n}\n\n/**\n *  A **ContractEventPayload** is included as the last parameter to\n *  Contract Events when the event is known.\n */\nexport class ContractEventPayload extends ContractUnknownEventPayload {\n\n    /**\n     *  The matching event.\n     */\n    declare readonly fragment: EventFragment;\n\n    /**\n     *  The log, with parsed properties.\n     */\n    declare readonly log: EventLog;\n\n    /**\n     *  The parsed arguments passed to the event by ``emit``.\n     */\n    declare readonly args: Result;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(contract: BaseContract, listener: null | Listener, filter: ContractEventName, fragment: EventFragment, _log: Log) {\n        super(contract, listener, filter, new EventLog(_log, contract.interface, fragment));\n        const args = contract.interface.decodeEventLog(fragment, this.log.data, this.log.topics);\n        defineProperties<ContractEventPayload>(this, { args, fragment });\n    }\n\n    /**\n     *  The event name.\n     */\n    get eventName(): string {\n        return this.fragment.name;\n    }\n\n    /**\n     *  The event signature.\n     */\n    get eventSignature(): string {\n        return this.fragment.format();\n    }\n}\n", "import { Interface, Typed } from \"../abi/index.js\";\nimport { isAddressable, resolveAddress } from \"../address/index.js\";\n// import from provider.ts instead of index.ts to prevent circular dep\n// from EtherscanProvider\nimport { copyRequest, Log, TransactionResponse } from \"../providers/provider.js\";\nimport {\n    defineProperties, getBigInt, isCallException, isHexString, resolveProperties,\n    isError, makeError, assert, assertArgument\n} from \"../utils/index.js\";\n\nimport {\n    ContractEventPayload, ContractUnknownEventPayload,\n    ContractTransactionResponse,\n    EventLog, UndecodedEventLog\n} from \"./wrappers.js\";\n\nimport type { EventFragment, FunctionFragment, InterfaceAbi, ParamType, Result } from \"../abi/index.js\";\nimport type { Addressable, NameResolver } from \"../address/index.js\";\nimport type { EventEmitterable, Listener } from \"../utils/index.js\";\nimport type {\n    BlockTag, ContractRunner, Provider, TransactionRequest, TopicFilter\n} from \"../providers/index.js\";\n\nimport type {\n    BaseContractMethod,\n    ContractEventName,\n    ContractInterface,\n    ContractMethodArgs,\n    ContractMethod,\n    ContractEventArgs,\n    ContractEvent,\n    ContractTransaction,\n    DeferredTopicFilter,\n    WrappedFallback\n} from \"./types.js\";\n\nconst BN_0 = BigInt(0);\n\ninterface ContractRunnerCaller extends ContractRunner {\n    call: (tx: TransactionRequest) => Promise<string>;\n}\n\ninterface ContractRunnerEstimater extends ContractRunner {\n    estimateGas: (tx: TransactionRequest) => Promise<bigint>;\n}\n\ninterface ContractRunnerSender extends ContractRunner {\n    sendTransaction: (tx: TransactionRequest) => Promise<TransactionResponse>;\n}\n\ninterface ContractRunnerResolver extends ContractRunner {\n    resolveName: (name: string | Addressable) => Promise<null | string>;\n}\n\nfunction canCall(value: any): value is ContractRunnerCaller {\n    return (value && typeof(value.call) === \"function\");\n}\n\nfunction canEstimate(value: any): value is ContractRunnerEstimater {\n    return (value && typeof(value.estimateGas) === \"function\");\n}\n\nfunction canResolve(value: any): value is ContractRunnerResolver {\n    return (value && typeof(value.resolveName) === \"function\");\n}\n\nfunction canSend(value: any): value is ContractRunnerSender {\n    return (value && typeof(value.sendTransaction) === \"function\");\n}\n\nfunction getResolver(value: any): undefined | NameResolver {\n    if (value != null) {\n        if (canResolve(value)) { return value; }\n        if (value.provider) { return value.provider; }\n    }\n    return undefined;\n}\n\nclass PreparedTopicFilter implements DeferredTopicFilter {\n    #filter: Promise<TopicFilter>;\n    readonly fragment!: EventFragment;\n\n    constructor(contract: BaseContract, fragment: EventFragment, args: Array<any>) {\n        defineProperties<PreparedTopicFilter>(this, { fragment });\n        if (fragment.inputs.length < args.length) {\n            throw new Error(\"too many arguments\");\n        }\n\n        // Recursively descend into args and resolve any addresses\n        const runner = getRunner(contract.runner, \"resolveName\");\n        const resolver = canResolve(runner) ? runner: null;\n        this.#filter = (async function() {\n            const resolvedArgs = await Promise.all(fragment.inputs.map((param, index) => {\n                const arg = args[index];\n                if (arg == null) { return null; }\n\n                return param.walkAsync(args[index], (type, value) => {\n                    if (type === \"address\") {\n                        if (Array.isArray(value)) {\n                            return Promise.all(value.map((v) => resolveAddress(v, resolver)));\n                        }\n                        return resolveAddress(value, resolver);\n                    }\n                    return value;\n                });\n            }));\n\n            return contract.interface.encodeFilterTopics(fragment, resolvedArgs);\n        })();\n    }\n\n    getTopicFilter(): Promise<TopicFilter> {\n        return this.#filter;\n    }\n}\n\n\n// A = Arguments passed in as a tuple\n// R = The result type of the call (i.e. if only one return type,\n//     the qualified type, otherwise Result)\n// D = The type the default call will return (i.e. R for view/pure,\n//     TransactionResponse otherwise)\n//export interface ContractMethod<A extends Array<any> = Array<any>, R = any, D extends R | ContractTransactionResponse = ContractTransactionResponse> {\n\nfunction getRunner<T extends ContractRunner>(value: any, feature: keyof ContractRunner): null | T {\n    if (value == null) { return null; }\n    if (typeof(value[feature]) === \"function\") { return value; }\n    if (value.provider && typeof(value.provider[feature]) === \"function\") {\n        return value.provider;\n    }\n    return null;\n}\n\nfunction getProvider(value: null | ContractRunner): null | Provider {\n    if (value == null) { return null; }\n    return value.provider || null;\n}\n\n/**\n *  @_ignore:\n */\nexport async function copyOverrides<O extends string = \"data\" | \"to\">(arg: any, allowed?: Array<string>): Promise<Omit<ContractTransaction, O>> {\n\n    // Make sure the overrides passed in are a valid overrides object\n    const _overrides = Typed.dereference(arg, \"overrides\");\n    assertArgument(typeof(_overrides) === \"object\", \"invalid overrides parameter\", \"overrides\", arg);\n\n    // Create a shallow copy (we'll deep-ify anything needed during normalizing)\n    const overrides = copyRequest(_overrides);\n\n    assertArgument(overrides.to == null || (allowed || [ ]).indexOf(\"to\") >= 0,\n      \"cannot override to\", \"overrides.to\", overrides.to);\n    assertArgument(overrides.data == null || (allowed || [ ]).indexOf(\"data\") >= 0,\n      \"cannot override data\", \"overrides.data\", overrides.data);\n\n    // Resolve any from\n    if (overrides.from) { overrides.from = overrides.from; }\n\n    return <Omit<ContractTransaction, O>>overrides;\n}\n\n/**\n *  @_ignore:\n */\nexport async function resolveArgs(_runner: null | ContractRunner, inputs: ReadonlyArray<ParamType>, args: Array<any>): Promise<Array<any>> {\n    // Recursively descend into args and resolve any addresses\n    const runner = getRunner(_runner, \"resolveName\");\n    const resolver = canResolve(runner) ? runner: null;\n    return await Promise.all(inputs.map((param, index) => {\n        return param.walkAsync(args[index], (type, value) => {\n            value = Typed.dereference(value, type);\n            if (type === \"address\") { return resolveAddress(value, resolver); }\n            return value;\n        });\n    }));\n}\n\nfunction buildWrappedFallback(contract: BaseContract): WrappedFallback {\n\n    const populateTransaction = async function(overrides?: Omit<TransactionRequest, \"to\">): Promise<ContractTransaction> {\n        // If an overrides was passed in, copy it and normalize the values\n\n        const tx: ContractTransaction = <any>(await copyOverrides<\"data\">(overrides, [ \"data\" ]));\n        tx.to = await contract.getAddress();\n\n        if (tx.from) {\n            tx.from = await resolveAddress(tx.from, getResolver(contract.runner));\n        }\n\n        const iface = contract.interface;\n\n        const noValue = (getBigInt((tx.value || BN_0), \"overrides.value\") === BN_0);\n        const noData = ((tx.data || \"0x\") === \"0x\");\n\n        if (iface.fallback && !iface.fallback.payable && iface.receive && !noData && !noValue) {\n            assertArgument(false, \"cannot send data to receive or send value to non-payable fallback\", \"overrides\", overrides);\n        }\n\n        assertArgument(iface.fallback || noData,\n          \"cannot send data to receive-only contract\", \"overrides.data\", tx.data);\n\n        // Only allow payable contracts to set non-zero value\n        const payable = iface.receive || (iface.fallback && iface.fallback.payable);\n        assertArgument(payable || noValue,\n          \"cannot send value to non-payable fallback\", \"overrides.value\", tx.value);\n\n        // Only allow fallback contracts to set non-empty data\n        assertArgument(iface.fallback || noData,\n          \"cannot send data to receive-only contract\", \"overrides.data\", tx.data);\n\n        return tx;\n    }\n\n    const staticCall = async function(overrides?: Omit<TransactionRequest, \"to\">): Promise<string> {\n        const runner = getRunner(contract.runner, \"call\");\n        assert(canCall(runner), \"contract runner does not support calling\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"call\" });\n\n        const tx = await populateTransaction(overrides);\n\n        try {\n            return await runner.call(tx);\n        } catch (error: any) {\n            if (isCallException(error) && error.data) {\n                throw contract.interface.makeError(error.data, tx);\n            }\n            throw error;\n        }\n    }\n\n    const send = async function(overrides?: Omit<TransactionRequest, \"to\">): Promise<ContractTransactionResponse> {\n        const runner = contract.runner;\n        assert(canSend(runner), \"contract runner does not support sending transactions\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"sendTransaction\" });\n\n        const tx = await runner.sendTransaction(await populateTransaction(overrides));\n        const provider = getProvider(contract.runner);\n        // @TODO: the provider can be null; make a custom dummy provider that will throw a\n        // meaningful error\n        return new ContractTransactionResponse(contract.interface, <Provider>provider, tx);\n    }\n\n    const estimateGas = async function(overrides?: Omit<TransactionRequest, \"to\">): Promise<bigint> {\n        const runner = getRunner(contract.runner, \"estimateGas\");\n        assert(canEstimate(runner), \"contract runner does not support gas estimation\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"estimateGas\" });\n\n        return await runner.estimateGas(await populateTransaction(overrides));\n    }\n\n    const method = async (overrides?: Omit<TransactionRequest, \"to\">) => {\n        return await send(overrides);\n    };\n\n    defineProperties<any>(method, {\n        _contract: contract,\n\n        estimateGas,\n        populateTransaction,\n        send, staticCall\n    });\n\n    return <WrappedFallback>method;\n}\n\nfunction buildWrappedMethod<A extends Array<any> = Array<any>, R = any, D extends R | ContractTransactionResponse = ContractTransactionResponse>(contract: BaseContract, key: string): BaseContractMethod<A, R, D> {\n\n    const getFragment = function(...args: ContractMethodArgs<A>): FunctionFragment {\n        const fragment = contract.interface.getFunction(key, args);\n        assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"fragment\",\n            info: { key, args }\n        });\n        return fragment;\n    }\n\n    const populateTransaction = async function(...args: ContractMethodArgs<A>): Promise<ContractTransaction> {\n        const fragment = getFragment(...args);\n\n        // If an overrides was passed in, copy it and normalize the values\n        let overrides: Omit<ContractTransaction, \"data\" | \"to\"> = { };\n        if (fragment.inputs.length + 1 === args.length) {\n            overrides = await copyOverrides(args.pop());\n\n            if (overrides.from) {\n                overrides.from = await resolveAddress(overrides.from, getResolver(contract.runner));\n            }\n        }\n\n        if (fragment.inputs.length !== args.length) {\n            throw new Error(\"internal error: fragment inputs doesn't match arguments; should not happen\");\n        }\n\n        const resolvedArgs = await resolveArgs(contract.runner, fragment.inputs, args);\n\n        return Object.assign({ }, overrides, await resolveProperties({\n            to: contract.getAddress(),\n            data: contract.interface.encodeFunctionData(fragment, resolvedArgs)\n        }));\n    }\n\n    const staticCall = async function(...args: ContractMethodArgs<A>): Promise<R> {\n        const result = await staticCallResult(...args);\n        if (result.length === 1) { return result[0]; }\n        return <R><unknown>result;\n    }\n\n    const send = async function(...args: ContractMethodArgs<A>): Promise<ContractTransactionResponse> {\n        const runner = contract.runner;\n        assert(canSend(runner), \"contract runner does not support sending transactions\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"sendTransaction\" });\n\n        const tx = await runner.sendTransaction(await populateTransaction(...args));\n        const provider = getProvider(contract.runner);\n        // @TODO: the provider can be null; make a custom dummy provider that will throw a\n        // meaningful error\n        return new ContractTransactionResponse(contract.interface, <Provider>provider, tx);\n    }\n\n    const estimateGas = async function(...args: ContractMethodArgs<A>): Promise<bigint> {\n        const runner = getRunner(contract.runner, \"estimateGas\");\n        assert(canEstimate(runner), \"contract runner does not support gas estimation\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"estimateGas\" });\n\n        return await runner.estimateGas(await populateTransaction(...args));\n    }\n\n    const staticCallResult = async function(...args: ContractMethodArgs<A>): Promise<Result> {\n        const runner = getRunner(contract.runner, \"call\");\n        assert(canCall(runner), \"contract runner does not support calling\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"call\" });\n\n        const tx = await populateTransaction(...args);\n\n        let result = \"0x\";\n        try {\n            result = await runner.call(tx);\n        } catch (error: any) {\n            if (isCallException(error) && error.data) {\n                throw contract.interface.makeError(error.data, tx);\n            }\n            throw error;\n        }\n\n        const fragment = getFragment(...args);\n        return contract.interface.decodeFunctionResult(fragment, result);\n    };\n\n    const method = async (...args: ContractMethodArgs<A>) => {\n        const fragment = getFragment(...args);\n        if (fragment.constant) { return await staticCall(...args); }\n        return await send(...args);\n    };\n\n    defineProperties<any>(method, {\n        name: contract.interface.getFunctionName(key),\n        _contract: contract, _key: key,\n\n        getFragment,\n\n        estimateGas,\n        populateTransaction,\n        send, staticCall, staticCallResult,\n    });\n\n    // Only works on non-ambiguous keys (refined fragment is always non-ambiguous)\n    Object.defineProperty(method, \"fragment\", {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n            const fragment = contract.interface.getFunction(key);\n            assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"fragment\",\n                info: { key }\n            });\n            return fragment;\n        }\n    });\n\n    return <BaseContractMethod<A, R, D>>method;\n}\n\nfunction buildWrappedEvent<A extends Array<any> = Array<any>>(contract: BaseContract, key: string): ContractEvent<A> {\n\n    const getFragment = function(...args: ContractEventArgs<A>): EventFragment {\n        const fragment = contract.interface.getEvent(key, args);\n\n        assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"fragment\",\n            info: { key, args }\n        });\n\n        return fragment;\n    }\n\n    const method = function(...args: ContractMethodArgs<A>): PreparedTopicFilter {\n        return new PreparedTopicFilter(contract, getFragment(...args), args);\n    };\n\n    defineProperties<any>(method, {\n        name: contract.interface.getEventName(key),\n        _contract: contract, _key: key,\n\n        getFragment\n    });\n\n    // Only works on non-ambiguous keys (refined fragment is always non-ambiguous)\n    Object.defineProperty(method, \"fragment\", {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n            const fragment = contract.interface.getEvent(key);\n\n            assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"fragment\",\n                info: { key }\n            });\n\n            return fragment;\n        }\n    });\n\n    return <ContractEvent<A>><unknown>method;\n}\n\ntype Sub = {\n    tag: string;\n    listeners: Array<{ listener: Listener, once: boolean }>,\n    start: () => void;\n    stop: () => void;\n};\n\n\n// The combination of TypeScrype, Private Fields and Proxies makes\n// the world go boom; so we hide variables with some trickery keeping\n// a symbol attached to each BaseContract which its sub-class (even\n// via a Proxy) can reach and use to look up its internal values.\n\nconst internal = Symbol.for(\"_ethersInternal_contract\");\ntype Internal = {\n    addrPromise: Promise<string>;\n    addr: null | string;\n\n    deployTx: null | ContractTransactionResponse;\n\n    subs: Map<string, Sub>;\n};\n\nconst internalValues: WeakMap<BaseContract, Internal> = new WeakMap();\n\nfunction setInternal(contract: BaseContract, values: Internal): void {\n    internalValues.set(contract[internal], values);\n}\n\nfunction getInternal(contract: BaseContract): Internal {\n    return internalValues.get(contract[internal]) as Internal;\n}\n\nfunction isDeferred(value: any): value is DeferredTopicFilter {\n    return (value && typeof(value) === \"object\" && (\"getTopicFilter\" in value) &&\n      (typeof(value.getTopicFilter) === \"function\") && value.fragment);\n}\n\nasync function getSubInfo(contract: BaseContract, event: ContractEventName): Promise<{ fragment: null | EventFragment, tag: string, topics: TopicFilter }> {\n    let topics: Array<null | string | Array<string>>;\n    let fragment: null | EventFragment = null;\n\n    // Convert named events to topicHash and get the fragment for\n    // events which need deconstructing.\n\n    if (Array.isArray(event)) {\n        const topicHashify = function(name: string): string {\n            if (isHexString(name, 32)) { return name; }\n            const fragment = contract.interface.getEvent(name);\n            assertArgument(fragment, \"unknown fragment\", \"name\", name);\n            return fragment.topicHash;\n        }\n\n        // Array of Topics and Names; e.g. `[ \"0x1234...89ab\", \"Transfer(address)\" ]`\n        topics = event.map((e) => {\n            if (e == null) { return null; }\n            if (Array.isArray(e)) { return e.map(topicHashify); }\n            return topicHashify(e);\n        });\n\n    } else if (event === \"*\") {\n        topics = [ null ];\n\n    } else if (typeof(event) === \"string\") {\n        if (isHexString(event, 32)) {\n            // Topic Hash\n            topics = [ event ];\n        } else {\n           // Name or Signature; e.g. `\"Transfer\", `\"Transfer(address)\"`\n            fragment = contract.interface.getEvent(event);\n            assertArgument(fragment, \"unknown fragment\", \"event\", event);\n            topics = [ fragment.topicHash ];\n        }\n\n    } else if (isDeferred(event)) {\n        // Deferred Topic Filter; e.g. `contract.filter.Transfer(from)`\n        topics = await event.getTopicFilter();\n\n    } else if (\"fragment\" in event) {\n        // ContractEvent; e.g. `contract.filter.Transfer`\n        fragment = event.fragment;\n        topics = [ fragment.topicHash ];\n\n    } else {\n        assertArgument(false, \"unknown event name\", \"event\", event);\n    }\n\n    // Normalize topics and sort TopicSets\n    topics = topics.map((t) => {\n        if (t == null) { return null; }\n        if (Array.isArray(t)) {\n            const items = Array.from(new Set(t.map((t) => t.toLowerCase())).values());\n            if (items.length === 1) { return items[0]; }\n            items.sort();\n            return items;\n        }\n        return t.toLowerCase();\n    });\n\n    const tag = topics.map((t) => {\n        if (t == null) { return \"null\"; }\n        if (Array.isArray(t)) { return t.join(\"|\"); }\n        return t;\n    }).join(\"&\");\n\n    return { fragment, tag, topics }\n}\n\nasync function hasSub(contract: BaseContract, event: ContractEventName): Promise<null | Sub> {\n    const { subs } = getInternal(contract);\n    return subs.get((await getSubInfo(contract, event)).tag) || null;\n}\n\nasync function getSub(contract: BaseContract, operation: string, event: ContractEventName): Promise<Sub> {\n    // Make sure our runner can actually subscribe to events\n    const provider = getProvider(contract.runner);\n    assert(provider, \"contract runner does not support subscribing\",\n        \"UNSUPPORTED_OPERATION\", { operation });\n\n    const { fragment, tag, topics } = await getSubInfo(contract, event);\n\n    const { addr, subs } = getInternal(contract);\n\n    let sub = subs.get(tag);\n    if (!sub) {\n        const address: string | Addressable = (addr ? addr: contract);\n        const filter = { address, topics };\n        const listener = (log: Log) => {\n            let foundFragment = fragment;\n            if (foundFragment == null) {\n                try {\n                    foundFragment = contract.interface.getEvent(log.topics[0]);\n                } catch (error) { }\n            }\n\n            // If fragment is null, we do not deconstruct the args to emit\n\n            if (foundFragment) {\n                const _foundFragment = foundFragment;\n                const args = fragment ? contract.interface.decodeEventLog(fragment, log.data, log.topics): [ ];\n                emit(contract, event, args, (listener: null | Listener) => {\n                    return new ContractEventPayload(contract, listener, event, _foundFragment, log);\n                });\n            } else {\n                emit(contract, event, [ ], (listener: null | Listener) => {\n                    return new ContractUnknownEventPayload(contract, listener, event, log);\n                });\n            }\n        };\n\n        let starting: Array<Promise<any>> = [ ];\n        const start = () => {\n            if (starting.length) { return; }\n            starting.push(provider.on(filter, listener));\n        };\n\n        const stop = async () => {\n            if (starting.length == 0) { return; }\n\n            let started = starting;\n            starting = [ ];\n            await Promise.all(started);\n            provider.off(filter, listener);\n        };\n\n        sub = { tag, listeners: [ ], start, stop };\n        subs.set(tag, sub);\n    }\n    return sub;\n}\n\n// We use this to ensure one emit resolves before firing the next to\n// ensure correct ordering (note this cannot throw and just adds the\n// notice to the event queu using setTimeout).\nlet lastEmit: Promise<any> = Promise.resolve();\n\ntype PayloadFunc = (listener: null | Listener) => ContractUnknownEventPayload;\n\nasync function _emit(contract: BaseContract, event: ContractEventName, args: Array<any>, payloadFunc: null | PayloadFunc): Promise<boolean> {\n    await lastEmit;\n\n    const sub = await hasSub(contract, event);\n    if (!sub) { return false; }\n\n    const count = sub.listeners.length;\n    sub.listeners = sub.listeners.filter(({ listener, once }) => {\n        const passArgs = Array.from(args);\n        if (payloadFunc) {\n            passArgs.push(payloadFunc(once ? null: listener));\n        }\n        try {\n            listener.call(contract, ...passArgs);\n        } catch (error) { }\n        return !once;\n    });\n\n    if (sub.listeners.length === 0) {\n        sub.stop();\n        getInternal(contract).subs.delete(sub.tag);\n    }\n\n    return (count > 0);\n}\n\nasync function emit(contract: BaseContract, event: ContractEventName, args: Array<any>, payloadFunc: null | PayloadFunc): Promise<boolean> {\n    try {\n        await lastEmit;\n    } catch (error) { }\n\n    const resultPromise = _emit(contract, event, args, payloadFunc);\n    lastEmit = resultPromise;\n    return await resultPromise;\n}\n\nconst passProperties = [ \"then\" ];\nexport class BaseContract implements Addressable, EventEmitterable<ContractEventName> {\n    /**\n     *  The target to connect to.\n     *\n     *  This can be an address, ENS name or any [[Addressable]], such as\n     *  another contract. To get the resovled address, use the ``getAddress``\n     *  method.\n     */\n    readonly target!: string | Addressable;\n\n    /**\n     *  The contract Interface.\n     */\n    readonly interface!: Interface;\n\n    /**\n     *  The connected runner. This is generally a [[Provider]] or a\n     *  [[Signer]], which dictates what operations are supported.\n     *\n     *  For example, a **Contract** connected to a [[Provider]] may\n     *  only execute read-only operations.\n     */\n    readonly runner!: null | ContractRunner;\n\n    /**\n     *  All the Events available on this contract.\n     */\n    readonly filters!: Record<string, ContractEvent>;\n\n    /**\n     *  @_ignore:\n     */\n    readonly [internal]: any;\n\n    /**\n     *  The fallback or receive function if any.\n     */\n    readonly fallback!: null | WrappedFallback;\n\n    /**\n     *  Creates a new contract connected to %%target%% with the %%abi%% and\n     *  optionally connected to a %%runner%% to perform operations on behalf\n     *  of.\n     */\n    constructor(target: string | Addressable, abi: Interface | InterfaceAbi, runner?: null | ContractRunner, _deployTx?: null | TransactionResponse) {\n        assertArgument(typeof(target) === \"string\" || isAddressable(target),\n            \"invalid value for Contract target\", \"target\", target);\n\n        if (runner == null) { runner = null; }\n        const iface = Interface.from(abi);\n        defineProperties<BaseContract>(this, { target, runner, interface: iface });\n\n        Object.defineProperty(this, internal, { value: { } });\n\n        let addrPromise;\n        let addr: null | string = null;\n\n        let deployTx: null | ContractTransactionResponse = null;\n        if (_deployTx) {\n            const provider = getProvider(runner);\n            // @TODO: the provider can be null; make a custom dummy provider that will throw a\n            // meaningful error\n            deployTx = new ContractTransactionResponse(this.interface, <Provider>provider, _deployTx);\n        }\n\n        let subs = new Map();\n\n        // Resolve the target as the address\n        if (typeof(target) === \"string\") {\n            if (isHexString(target)) {\n                addr = target;\n                addrPromise = Promise.resolve(target);\n\n            } else {\n                const resolver = getRunner(runner, \"resolveName\");\n                if (!canResolve(resolver)) {\n                    throw makeError(\"contract runner does not support name resolution\", \"UNSUPPORTED_OPERATION\", {\n                        operation: \"resolveName\"\n                    });\n                }\n\n                addrPromise = resolver.resolveName(target).then((addr) => {\n                    if (addr == null) {\n                        throw makeError(\"an ENS name used for a contract target must be correctly configured\", \"UNCONFIGURED_NAME\", {\n                            value: target\n                        });\n                    }\n                    getInternal(this).addr = addr;\n                    return addr;\n                });\n            }\n        } else {\n            addrPromise = target.getAddress().then((addr) => {\n                if (addr == null) { throw new Error(\"TODO\"); }\n                getInternal(this).addr = addr;\n                return addr;\n            });\n        }\n\n        // Set our private values\n        setInternal(this, { addrPromise, addr, deployTx, subs });\n\n        // Add the event filters\n        const filters = new Proxy({ }, {\n            get: (target, prop, receiver) => {\n                // Pass important checks (like `then` for Promise) through\n                if (typeof(prop) === \"symbol\" || passProperties.indexOf(prop) >= 0) {\n                    return Reflect.get(target, prop, receiver);\n                }\n\n                try {\n                    return this.getEvent(prop);\n                } catch (error) {\n                    if (!isError(error, \"INVALID_ARGUMENT\") || error.argument !== \"key\") {\n                        throw error;\n                    }\n                }\n\n                return undefined;\n            },\n            has: (target, prop) => {\n                // Pass important checks (like `then` for Promise) through\n                if (passProperties.indexOf(<string>prop) >= 0) {\n                    return Reflect.has(target, prop);\n                }\n\n                return Reflect.has(target, prop) || this.interface.hasEvent(String(prop));\n            }\n        });\n        defineProperties<BaseContract>(this, { filters });\n\n        defineProperties<BaseContract>(this, {\n            fallback: ((iface.receive || iface.fallback) ? (buildWrappedFallback(this)): null)\n        });\n\n        // Return a Proxy that will respond to functions\n        return new Proxy(this, {\n            get: (target, prop, receiver) => {\n                if (typeof(prop) === \"symbol\" || prop in target || passProperties.indexOf(prop) >= 0) {\n                    return Reflect.get(target, prop, receiver);\n                }\n\n                // Undefined properties should return undefined\n                try {\n                    return target.getFunction(prop);\n                } catch (error) {\n                    if (!isError(error, \"INVALID_ARGUMENT\") || error.argument !== \"key\") {\n                        throw error;\n                    }\n                }\n\n                return undefined;\n            },\n            has: (target, prop) => {\n                if (typeof(prop) === \"symbol\" || prop in target || passProperties.indexOf(prop) >= 0) {\n                    return Reflect.has(target, prop);\n                }\n\n                return target.interface.hasFunction(prop);\n            }\n        });\n\n    }\n\n    /**\n     *  Return a new Contract instance with the same target and ABI, but\n     *  a different %%runner%%.\n     */\n    connect(runner: null | ContractRunner): BaseContract {\n        return new BaseContract(this.target, this.interface, runner);\n    }\n\n    /**\n     *  Return a new Contract instance with the same ABI and runner, but\n     *  a different %%target%%.\n     */\n    attach(target: string | Addressable): BaseContract {\n        return new BaseContract(target, this.interface, this.runner);\n    }\n\n    /**\n     *  Return the resolved address of this Contract.\n     */\n    async getAddress(): Promise<string> { return await getInternal(this).addrPromise; }\n\n    /**\n     *  Return the deployed bytecode or null if no bytecode is found.\n     */\n    async getDeployedCode(): Promise<null | string> {\n        const provider = getProvider(this.runner);\n        assert(provider, \"runner does not support .provider\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"getDeployedCode\" });\n\n        const code = await provider.getCode(await this.getAddress());\n        if (code === \"0x\") { return null; }\n        return code;\n    }\n\n    /**\n     *  Resolve to this Contract once the bytecode has been deployed, or\n     *  resolve immediately if already deployed.\n     */\n    async waitForDeployment(): Promise<this> {\n        // We have the deployement transaction; just use that (throws if deployement fails)\n        const deployTx = this.deploymentTransaction();\n        if (deployTx) {\n            await deployTx.wait();\n            return this;\n        }\n\n        // Check for code\n        const code = await this.getDeployedCode();\n        if (code != null) { return this; }\n\n        // Make sure we can subscribe to a provider event\n        const provider = getProvider(this.runner);\n        assert(provider != null, \"contract runner does not support .provider\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"waitForDeployment\" });\n\n        return new Promise((resolve, reject) => {\n            const checkCode = async () => {\n                try {\n                    const code = await this.getDeployedCode();\n                    if (code != null) { return resolve(this); }\n                    provider.once(\"block\", checkCode);\n                } catch (error) {\n                    reject(error);\n                }\n            };\n            checkCode();\n        });\n    }\n\n    /**\n     *  Return the transaction used to deploy this contract.\n     *\n     *  This is only available if this instance was returned from a\n     *  [[ContractFactory]].\n     */\n    deploymentTransaction(): null | ContractTransactionResponse {\n        return getInternal(this).deployTx;\n    }\n\n    /**\n     *  Return the function for a given name. This is useful when a contract\n     *  method name conflicts with a JavaScript name such as ``prototype`` or\n     *  when using a Contract programatically.\n     */\n    getFunction<T extends ContractMethod = ContractMethod>(key: string | FunctionFragment): T {\n        if (typeof(key) !== \"string\") { key = key.format(); }\n        const func = buildWrappedMethod(this, key);\n        return <T>func;\n    }\n\n    /**\n     *  Return the event for a given name. This is useful when a contract\n     *  event name conflicts with a JavaScript name such as ``prototype`` or\n     *  when using a Contract programatically.\n     */\n    getEvent(key: string | EventFragment): ContractEvent {\n        if (typeof(key) !== \"string\") { key = key.format(); }\n        return buildWrappedEvent(this, key);\n    }\n\n    /**\n     *  @_ignore:\n     */\n    async queryTransaction(hash: string): Promise<Array<EventLog>> {\n        throw new Error(\"@TODO\");\n    }\n\n    /*\n    // @TODO: this is a non-backwards compatible change, but will be added\n    //        in v7 and in a potential SmartContract class in an upcoming\n    //        v6 release\n    async getTransactionReceipt(hash: string): Promise<null | ContractTransactionReceipt> {\n        const provider = getProvider(this.runner);\n        assert(provider, \"contract runner does not have a provider\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"queryTransaction\" });\n\n        const receipt = await provider.getTransactionReceipt(hash);\n        if (receipt == null) { return null; }\n\n        return new ContractTransactionReceipt(this.interface, provider, receipt);\n    }\n    */\n\n    /**\n     *  Provide historic access to event data for %%event%% in the range\n     *  %%fromBlock%% (default: ``0``) to %%toBlock%% (default: ``\"latest\"``)\n     *  inclusive.\n     */\n    async queryFilter(event: ContractEventName, fromBlock?: BlockTag, toBlock?: BlockTag): Promise<Array<EventLog | Log>> {\n        if (fromBlock == null) { fromBlock = 0; }\n        if (toBlock == null) { toBlock = \"latest\"; }\n        const { addr, addrPromise } = getInternal(this);\n        const address = (addr ? addr: (await addrPromise));\n        const { fragment, topics } = await getSubInfo(this, event);\n        const filter = { address, topics, fromBlock, toBlock };\n\n        const provider = getProvider(this.runner);\n        assert(provider, \"contract runner does not have a provider\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"queryFilter\" });\n\n        return (await provider.getLogs(filter)).map((log) => {\n            let foundFragment = fragment;\n            if (foundFragment == null) {\n                try {\n                    foundFragment = this.interface.getEvent(log.topics[0]);\n                } catch (error) { }\n            }\n\n            if (foundFragment) {\n                try {\n                    return new EventLog(log, this.interface, foundFragment);\n                } catch (error: any) {\n                    return new UndecodedEventLog(log, error);\n                }\n            }\n\n            return new Log(log, provider);\n        });\n    }\n\n    /**\n     *  Add an event %%listener%% for the %%event%%.\n     */\n    async on(event: ContractEventName, listener: Listener): Promise<this> {\n        const sub = await getSub(this, \"on\", event);\n        sub.listeners.push({ listener, once: false });\n        sub.start();\n        return this;\n    }\n\n    /**\n     *  Add an event %%listener%% for the %%event%%, but remove the listener\n     *  after it is fired once.\n     */\n    async once(event: ContractEventName, listener: Listener): Promise<this> {\n        const sub = await getSub(this, \"once\", event);\n        sub.listeners.push({ listener, once: true });\n        sub.start();\n        return this;\n    }\n\n    /**\n     *  Emit an %%event%% calling all listeners with %%args%%.\n     *\n     *  Resolves to ``true`` if any listeners were called.\n     */\n    async emit(event: ContractEventName, ...args: Array<any>): Promise<boolean> {\n        return await emit(this, event, args, null);\n    }\n\n    /**\n     *  Resolves to the number of listeners of %%event%% or the total number\n     *  of listeners if unspecified.\n     */\n    async listenerCount(event?: ContractEventName): Promise<number> {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) { return 0; }\n            return sub.listeners.length;\n        }\n\n        const { subs } = getInternal(this);\n\n        let total = 0;\n        for (const { listeners } of subs.values()) {\n            total += listeners.length;\n        }\n        return total;\n    }\n\n    /**\n     *  Resolves to the listeners subscribed to %%event%% or all listeners\n     *  if unspecified.\n     */\n    async listeners(event?: ContractEventName): Promise<Array<Listener>> {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) { return [ ]; }\n            return sub.listeners.map(({ listener }) => listener);\n        }\n\n        const { subs } = getInternal(this);\n\n        let result: Array<Listener> = [ ];\n        for (const { listeners } of subs.values()) {\n            result = result.concat(listeners.map(({ listener }) => listener));\n        }\n        return result;\n    }\n\n    /**\n     *  Remove the %%listener%% from the listeners for %%event%% or remove\n     *  all listeners if unspecified.\n     */\n    async off(event: ContractEventName, listener?: Listener): Promise<this> {\n        const sub = await hasSub(this, event);\n        if (!sub) { return this; }\n\n        if (listener) {\n            const index = sub.listeners.map(({ listener }) => listener).indexOf(listener);\n            if (index >= 0) { sub.listeners.splice(index, 1); }\n        }\n\n        if (listener == null || sub.listeners.length === 0) {\n            sub.stop();\n            getInternal(this).subs.delete(sub.tag);\n        }\n\n        return this;\n    }\n\n    /**\n     *  Remove all the listeners for %%event%% or remove all listeners if\n     *  unspecified.\n     */\n    async removeAllListeners(event?: ContractEventName): Promise<this> {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) { return this; }\n            sub.stop();\n            getInternal(this).subs.delete(sub.tag);\n        } else {\n            const { subs } = getInternal(this);\n            for (const { tag, stop } of subs.values()) {\n                stop();\n                subs.delete(tag);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     *  Alias for [on].\n     */\n    async addListener(event: ContractEventName, listener: Listener): Promise<this> {\n        return await this.on(event, listener);\n    }\n\n    /**\n     *  Alias for [off].\n     */\n    async removeListener(event: ContractEventName, listener: Listener): Promise<this> {\n        return await this.off(event, listener);\n    }\n\n    /**\n     *  Create a new Class for the %%abi%%.\n     */\n    static buildClass<T = ContractInterface>(abi: Interface | InterfaceAbi): new (target: string, runner?: null | ContractRunner) => BaseContract & Omit<T, keyof BaseContract> {\n        class CustomContract extends BaseContract {\n            constructor(address: string, runner: null | ContractRunner = null) {\n                super(address, abi, runner);\n            }\n        }\n        return CustomContract as any;\n    };\n\n    /**\n     *  Create a new BaseContract with a specified Interface.\n     */\n    static from<T = ContractInterface>(target: string, abi: Interface | InterfaceAbi, runner?: null | ContractRunner): BaseContract & Omit<T, keyof BaseContract> {\n        if (runner == null) { runner = null; }\n        const contract = new this(target, abi, runner );\n        return contract as any;\n    }\n}\n\nfunction _ContractBase(): new (target: string | Addressable, abi: Interface | InterfaceAbi, runner?: null | ContractRunner) => BaseContract & Omit<ContractInterface, keyof BaseContract> {\n    return BaseContract as any;\n}\n\n/**\n *  A [[BaseContract]] with no type guards on its methods or events.\n */\nexport class Contract extends _ContractBase() { }\n", "\nimport { Interface } from \"../abi/index.js\";\nimport { getCreateAddress } from \"../address/index.js\";\nimport {\n    concat, defineProperties, getBytes, hexlify,\n    assert, assertArgument\n} from \"../utils/index.js\";\n\nimport { BaseContract, copyOverrides, resolveArgs } from \"./contract.js\";\n\nimport type { InterfaceAbi } from \"../abi/index.js\";\nimport type { Addressable } from \"../address/index.js\";\nimport type { ContractRunner } from \"../providers/index.js\";\nimport type { BytesLike } from \"../utils/index.js\";\n\nimport type {\n    ContractInterface, ContractMethodArgs, ContractDeployTransaction,\n} from \"./types.js\";\nimport type { ContractTransactionResponse } from \"./wrappers.js\";\n\n\n// A = Arguments to the constructor\n// I = Interface of deployed contracts\n\n/**\n *  A **ContractFactory** is used to deploy a Contract to the blockchain.\n */\nexport class ContractFactory<A extends Array<any> = Array<any>, I = BaseContract> {\n\n    /**\n     *  The Contract Interface.\n     */\n    readonly interface!: Interface;\n\n    /**\n     *  The Contract deployment bytecode. Often called the initcode.\n     */\n    readonly bytecode!: string;\n\n    /**\n     *  The ContractRunner to deploy the Contract as.\n     */\n    readonly runner!: null | ContractRunner;\n\n    /**\n     *  Create a new **ContractFactory** with %%abi%% and %%bytecode%%,\n     *  optionally connected to %%runner%%.\n     *\n     *  The %%bytecode%% may be the ``bytecode`` property within the\n     *  standard Solidity JSON output.\n     */\n    constructor(abi: Interface | InterfaceAbi, bytecode: BytesLike | { object: string }, runner?: null | ContractRunner) {\n        const iface = Interface.from(abi);\n\n        // Dereference Solidity bytecode objects and allow a missing `0x`-prefix\n        if (bytecode instanceof Uint8Array) {\n            bytecode = hexlify(getBytes(bytecode));\n        } else {\n            if (typeof(bytecode) === \"object\") { bytecode = bytecode.object; }\n            if (!bytecode.startsWith(\"0x\")) { bytecode = \"0x\" + bytecode; }\n            bytecode = hexlify(getBytes(bytecode));\n        }\n\n        defineProperties<ContractFactory>(this, {\n            bytecode, interface: iface, runner: (runner || null)\n        });\n    }\n\n    attach(target: string | Addressable): BaseContract & Omit<I, keyof BaseContract> {\n        return new (<any>BaseContract)(target, this.interface, this.runner);\n    }\n\n    /**\n     *  Resolves to the transaction to deploy the contract, passing %%args%%\n     *  into the constructor.\n     */\n    async getDeployTransaction(...args: ContractMethodArgs<A>): Promise<ContractDeployTransaction> {\n        let overrides: Omit<ContractDeployTransaction, \"data\"> = { };\n\n        const fragment = this.interface.deploy;\n\n        if (fragment.inputs.length + 1 === args.length) {\n            overrides = await copyOverrides(args.pop());\n        }\n\n        if (fragment.inputs.length !== args.length) {\n            throw new Error(\"incorrect number of arguments to constructor\");\n        }\n\n        const resolvedArgs = await resolveArgs(this.runner, fragment.inputs, args);\n\n        const data = concat([ this.bytecode, this.interface.encodeDeploy(resolvedArgs) ]);\n        return Object.assign({ }, overrides, { data });\n    }\n\n    /**\n     *  Resolves to the Contract deployed by passing %%args%% into the\n     *  constructor.\n     *\n     *  This will resolve to the Contract before it has been deployed to the\n     *  network, so the [[BaseContract-waitForDeployment]] should be used before\n     *  sending any transactions to it.\n     */\n    async deploy(...args: ContractMethodArgs<A>): Promise<BaseContract & { deploymentTransaction(): ContractTransactionResponse } & Omit<I, keyof BaseContract>> {\n        const tx = await this.getDeployTransaction(...args);\n\n        assert(this.runner && typeof(this.runner.sendTransaction) === \"function\",\n            \"factory runner does not support sending transactions\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"sendTransaction\" });\n\n        const sentTx = await this.runner.sendTransaction(tx);\n        const address = getCreateAddress(sentTx);\n        return new (<any>BaseContract)(address, this.interface, this.runner, sentTx);\n    }\n\n    /**\n     *  Return a new **ContractFactory** with the same ABI and bytecode,\n     *  but connected to %%runner%%.\n     */\n    connect(runner: null | ContractRunner): ContractFactory<A, I> {\n        return new ContractFactory(this.interface, this.bytecode, runner);\n    }\n\n    /**\n     *  Create a new **ContractFactory** from the standard Solidity JSON output.\n     */\n    static fromSolidity<A extends Array<any> = Array<any>, I = ContractInterface>(output: any, runner?: ContractRunner): ContractFactory<A, I> {\n        assertArgument(output != null, \"bad compiler output\", \"output\", output);\n\n        if (typeof(output) === \"string\") { output = JSON.parse(output); }\n\n        const abi = output.abi;\n\n        let bytecode = \"\";\n        if (output.bytecode) {\n            bytecode = output.bytecode;\n        } else if (output.evm && output.evm.bytecode) {\n            bytecode = output.evm.bytecode;\n        }\n\n        return new this(abi, bytecode, runner);\n    }\n}\n", "/**\n *  ENS is a service which allows easy-to-remember names to map to\n *  network addresses.\n *\n *  @_section: api/providers/ens-resolver:ENS Resolver  [about-ens-rsolver]\n */\n\nimport { getAddress } from \"../address/index.js\";\nimport { ZeroAddress } from \"../constants/index.js\";\nimport { Contract } from \"../contract/index.js\";\nimport { dnsEncode, namehash } from \"../hash/index.js\";\nimport {\n    hexlify, isHexString, toBeHex,\n    defineProperties, encodeBase58,\n    assert, assertArgument, isError,\n    FetchRequest\n} from \"../utils/index.js\";\n\nimport type { FunctionFragment } from \"../abi/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\nimport type { AbstractProvider, AbstractProviderPlugin } from \"./abstract-provider.js\";\nimport type { EnsPlugin } from \"./plugins-network.js\";\nimport type { Provider } from \"./provider.js\";\n\n// @TODO: This should use the fetch-data:ipfs gateway\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link: string): string {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    } else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    } else {\n        assertArgument(false, \"unsupported IPFS format\", \"link\", link);\n    }\n\n    return `https:/\\/gateway.ipfs.io/ipfs/${ link }`;\n}\n\n/**\n *  The type of data found during a steip during avatar resolution.\n */\nexport type AvatarLinkageType = \"name\" | \"avatar\" | \"!avatar\" | \"url\" | \"data\" | \"ipfs\" |\n    \"erc721\" | \"erc1155\" | \"!erc721-caip\" | \"!erc1155-caip\" |\n    \"!owner\" | \"owner\" | \"!balance\" | \"balance\" |\n    \"metadata-url-base\" | \"metadata-url-expanded\" | \"metadata-url\" | \"!metadata-url\" |\n    \"!metadata\" | \"metadata\" |\n    \"!imageUrl\" | \"imageUrl-ipfs\" | \"imageUrl\" | \"!imageUrl-ipfs\";\n\n/**\n *  An individual record for each step during avatar resolution.\n */\nexport interface AvatarLinkage {\n    /**\n     *  The type of linkage.\n     */\n    type: AvatarLinkageType;\n\n    /**\n     *  The linkage value.\n     */\n    value: string;\n};\n\n/**\n *  When resolving an avatar for an ENS name, there are many\n *  steps involved, fetching metadata, validating results, et cetera.\n *\n *  Some applications may wish to analyse this data, or use this data\n *  to diagnose promblems, so an **AvatarResult** provides details of\n *  each completed step during avatar resolution.\n */\nexport interface AvatarResult {\n    /**\n     *  How the [[url]] was arrived at, resolving the many steps required\n     *  for an avatar URL.\n     */\n    linkage: Array<AvatarLinkage>;\n\n    /**\n     *  The avatar URL or null if the avatar was not set, or there was\n     *  an issue during validation (such as the address not owning the\n     *  avatar or a metadata error).\n     */\n    url: null | string;\n};\n\n/**\n *  A provider plugin super-class for processing multicoin address types.\n */\nexport abstract class MulticoinProviderPlugin implements AbstractProviderPlugin {\n    /**\n     *  The name.\n     */\n    readonly name!: string;\n\n    /**\n     *  Creates a new **MulticoinProviderPluing** for %%name%%.\n     */\n    constructor(name: string) {\n        defineProperties<MulticoinProviderPlugin>(this, { name });\n    }\n\n    connect(proivder: Provider): MulticoinProviderPlugin {\n        return this;\n    }\n\n    /**\n     *  Returns ``true`` if %%coinType%% is supported by this plugin.\n     */\n    supportsCoinType(coinType: number): boolean {\n        return false;\n    }\n\n    /**\n     *  Resovles to the encoded %%address%% for %%coinType%%.\n     */\n    async encodeAddress(coinType: number, address: string): Promise<string> {\n        throw new Error(\"unsupported coin\");\n    }\n\n    /**\n     *  Resovles to the decoded %%data%% for %%coinType%%.\n     */\n    async decodeAddress(coinType: number, data: BytesLike): Promise<string> {\n        throw new Error(\"unsupported coin\");\n    }\n}\n\nconst BasicMulticoinPluginId = \"org.ethers.plugins.provider.BasicMulticoin\";\n\n/**\n *  A **BasicMulticoinProviderPlugin** provides service for common\n *  coin types, which do not require additional libraries to encode or\n *  decode.\n */\nexport class BasicMulticoinProviderPlugin extends MulticoinProviderPlugin {\n    /**\n     *  Creates a new **BasicMulticoinProviderPlugin**.\n     */\n    constructor() {\n        super(BasicMulticoinPluginId);\n    }\n}\n\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\n\n/**\n *  A connected object to a resolved ENS name resolver, which can be\n *  used to query additional details.\n */\nexport class EnsResolver {\n    /**\n     *  The connected provider.\n     */\n    provider!: AbstractProvider;\n\n    /**\n     *  The address of the resolver.\n     */\n    address!: string;\n\n    /**\n     *  The name this resolver was resolved against.\n     */\n    name!: string;\n\n    // For EIP-2544 names, the ancestor that provided the resolver\n    #supports2544: null | Promise<boolean>;\n\n    #resolver: Contract;\n\n    constructor(provider: AbstractProvider, address: string, name: string) {\n        defineProperties<EnsResolver>(this, { provider, address, name });\n        this.#supports2544 = null;\n\n        this.#resolver = new Contract(address, [\n            \"function supportsInterface(bytes4) view returns (bool)\",\n            \"function resolve(bytes, bytes) view returns (bytes)\",\n            \"function addr(bytes32) view returns (address)\",\n            \"function addr(bytes32, uint) view returns (bytes)\",\n            \"function text(bytes32, string) view returns (string)\",\n            \"function contenthash(bytes32) view returns (bytes)\",\n        ], provider);\n\n    }\n\n    /**\n     *  Resolves to true if the resolver supports wildcard resolution.\n     */\n    async supportsWildcard(): Promise<boolean> {\n        if (this.#supports2544 == null) {\n            this.#supports2544 = (async () => {\n                try {\n                    return await this.#resolver.supportsInterface(\"0x9061b923\");\n                } catch (error) {\n                    // Wildcard resolvers must understand supportsInterface\n                    // and return true.\n                    if (isError(error, \"CALL_EXCEPTION\")) { return false; }\n\n                    // Let future attempts try again...\n                    this.#supports2544 = null;\n\n                    throw error;\n                }\n            })();\n        }\n\n        return await this.#supports2544;\n    }\n\n    async #fetch(funcName: string, params?: Array<any>): Promise<null | any> {\n        params = (params || []).slice();\n        const iface = this.#resolver.interface;\n\n        // The first parameters is always the nodehash\n        params.unshift(namehash(this.name))\n\n        let fragment: null | FunctionFragment = null;\n        if (await this.supportsWildcard()) {\n            fragment = iface.getFunction(funcName);\n            assert(fragment, \"missing fragment\", \"UNKNOWN_ERROR\", {\n                info: { funcName }\n            });\n\n            params = [\n                dnsEncode(this.name, 255),\n                iface.encodeFunctionData(fragment, params)\n            ];\n\n            funcName = \"resolve(bytes,bytes)\";\n        }\n\n        params.push({\n            enableCcipRead: true\n        });\n\n        try {\n            const result = await this.#resolver[funcName](...params);\n\n            if (fragment) {\n                return iface.decodeFunctionResult(fragment, result)[0];\n            }\n\n            return result;\n        } catch (error: any) {\n            if (!isError(error, \"CALL_EXCEPTION\")) { throw error; }\n        }\n\n        return null;\n    }\n\n    /**\n     *  Resolves to the address for %%coinType%% or null if the\n     *  provided %%coinType%% has not been configured.\n     */\n    async getAddress(coinType?: number): Promise<null | string> {\n        if (coinType == null) { coinType = 60; }\n        if (coinType === 60) {\n            try {\n                const result = await this.#fetch(\"addr(bytes32)\");\n\n                // No address\n                if (result == null || result === ZeroAddress) { return null; }\n\n                return result;\n            } catch (error: any) {\n                if (isError(error, \"CALL_EXCEPTION\")) { return null; }\n                throw error;\n            }\n        }\n\n        // Try decoding its EVM canonical chain as an EVM chain address first\n        if (coinType >= 0 && coinType < 0x80000000) {\n            let ethCoinType = coinType + 0x80000000;\n\n            const data = await this.#fetch(\"addr(bytes32,uint)\", [ ethCoinType ]);\n            if (isHexString(data, 20)) { return getAddress(data); }\n        }\n\n        let coinPlugin: null | MulticoinProviderPlugin = null;\n        for (const plugin of this.provider.plugins) {\n            if (!(plugin instanceof MulticoinProviderPlugin)) { continue; }\n            if (plugin.supportsCoinType(coinType)) {\n                coinPlugin = plugin;\n                break;\n            }\n        }\n\n        if (coinPlugin == null) { return null; }\n\n        // keccak256(\"addr(bytes32,uint256\")\n        const data = await this.#fetch(\"addr(bytes32,uint)\", [ coinType ]);\n\n        // No address\n        if (data == null || data === \"0x\") { return null; }\n\n        // Compute the address\n        const address = await coinPlugin.decodeAddress(coinType, data);\n\n        if (address != null) { return address; }\n\n        assert(false, `invalid coin data`, \"UNSUPPORTED_OPERATION\", {\n            operation: `getAddress(${ coinType })`,\n            info: { coinType, data }\n        });\n    }\n\n    /**\n     *  Resolves to the EIP-634 text record for %%key%%, or ``null``\n     *  if unconfigured.\n     */\n    async getText(key: string): Promise<null | string> {\n        const data = await this.#fetch(\"text(bytes32,string)\", [ key ]);\n        if (data == null || data === \"0x\") { return null; }\n        return data;\n    }\n\n    /**\n     *  Rsolves to the content-hash or ``null`` if unconfigured.\n     */\n    async getContentHash(): Promise<null | string> {\n        // keccak256(\"contenthash()\")\n        const data = await this.#fetch(\"contenthash(bytes32)\");\n\n        // No contenthash\n        if (data == null || data === \"0x\") { return null; }\n\n        // IPFS (CID: 1, Type: 70=DAG-PB, 72=libp2p-key)\n        const ipfs = data.match(/^0x(e3010170|e5010172)(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const scheme = (ipfs[1] === \"e3010170\") ? \"ipfs\": \"ipns\";\n            const length = parseInt(ipfs[4], 16);\n            if (ipfs[5].length === length * 2) {\n                return `${ scheme }:/\\/${ encodeBase58(\"0x\" + ipfs[2])}`;\n            }\n        }\n\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = data.match(/^0xe40101fa011b20([0-9a-f]*)$/)\n        if (swarm && swarm[1].length === 64) {\n            return `bzz:/\\/${ swarm[1] }`;\n        }\n\n        assert(false, `invalid or unsupported content hash data`, \"UNSUPPORTED_OPERATION\", {\n            operation: \"getContentHash()\",\n            info: { data }\n        });\n    }\n\n    /**\n     *  Resolves to the avatar url or ``null`` if the avatar is either\n     *  unconfigured or incorrectly configured (e.g. references an NFT\n     *  not owned by the address).\n     *\n     *  If diagnosing issues with configurations, the [[_getAvatar]]\n     *  method may be useful.\n     */\n    async getAvatar(): Promise<null | string> {\n        const avatar = await this._getAvatar();\n        return avatar.url;\n    }\n\n    /**\n     *  When resolving an avatar, there are many steps involved, such\n     *  fetching metadata and possibly validating ownership of an\n     *  NFT.\n     *\n     *  This method can be used to examine each step and the value it\n     *  was working from.\n     */\n    async _getAvatar(): Promise<AvatarResult> {\n        const linkage: Array<AvatarLinkage> = [ { type: \"name\", value: this.name } ];\n        try {\n            // test data for ricmoo.eth\n            //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) {\n                linkage.push({ type: \"!avatar\", value: \"\" });\n                return { url: null, linkage };\n            }\n            linkage.push({ type: \"avatar\", value: avatar });\n\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n                if (match == null) { continue; }\n\n                const scheme = match[1].toLowerCase();\n\n                switch (scheme) {\n                    case \"https\":\n                    case \"data\":\n                        linkage.push({ type: \"url\", value: avatar });\n                        return { linkage, url: avatar };\n                    case \"ipfs\": {\n                        const url = getIpfsLink(avatar);\n                        linkage.push({ type: \"ipfs\", value: avatar });\n                        linkage.push({ type: \"url\", value: url });\n                        return { linkage, url };\n                    }\n\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (scheme === \"erc721\") ? \"tokenURI(uint256)\": \"uri(uint256)\";\n                        linkage.push({ type: scheme, value: avatar });\n\n                        // The owner of this name\n                        const owner = await this.getAddress();\n                        if (owner == null) {\n                            linkage.push({ type: \"!owner\", value: \"\" });\n                            return { url: null, linkage };\n                        }\n\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) {\n                            linkage.push({ type: <any>`!${ scheme }caip`, value: (match[2] || \"\") });\n                            return { url: null, linkage };\n                        }\n\n                        const tokenId = comps[1];\n\n                        const contract = new Contract(comps[0], [\n                            // ERC-721\n                            \"function tokenURI(uint) view returns (string)\",\n                            \"function ownerOf(uint) view returns (address)\",\n\n                            // ERC-1155\n                            \"function uri(uint) view returns (string)\",\n                            \"function balanceOf(address, uint256) view returns (uint)\"\n                        ], this.provider);\n\n                        // Check that this account owns the token\n                        if (scheme === \"erc721\") {\n                            const tokenOwner = await contract.ownerOf(tokenId);\n\n                            if (owner !== tokenOwner) {\n                                linkage.push({ type: \"!owner\", value: tokenOwner });\n                                return { url: null, linkage };\n                            }\n                            linkage.push({ type: \"owner\", value: tokenOwner });\n\n                        } else if (scheme === \"erc1155\") {\n                            const balance = await contract.balanceOf(owner, tokenId);\n                            if (!balance) {\n                                linkage.push({ type: \"!balance\", value: \"0\" });\n                                return { url: null, linkage };\n                            }\n                            linkage.push({ type: \"balance\", value: balance.toString() });\n                        }\n\n                        // Call the token contract for the metadata URL\n                        let metadataUrl = await contract[selector](tokenId);\n                        if (metadataUrl == null || metadataUrl === \"0x\") {\n                            linkage.push({ type: \"!metadata-url\", value: \"\" });\n                            return { url: null, linkage };\n                        }\n\n                        linkage.push({ type: \"metadata-url-base\", value: metadataUrl });\n\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", toBeHex(tokenId, 32).substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", value: metadataUrl });\n                        }\n\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n                        linkage.push({ type: \"metadata-url\", value: metadataUrl });\n\n                        // Get the token metadata\n                        let metadata: any = { };\n                        const response = await (new FetchRequest(metadataUrl)).send();\n                        response.assertOk();\n\n                        try {\n                            metadata = response.bodyJson;\n                        } catch (error) {\n                            try {\n                                linkage.push({ type: \"!metadata\", value: response.bodyText });\n                            } catch (error) {\n                                const bytes = response.body;\n                                if (bytes) {\n                                    linkage.push({ type: \"!metadata\", value: hexlify(bytes) });\n                                }\n                                return { url: null, linkage };\n                            }\n                            return { url: null, linkage };\n                        }\n\n                        if (!metadata) {\n                            linkage.push({ type: \"!metadata\", value: \"\" });\n                            return { url: null, linkage };\n                        }\n\n                        linkage.push({ type: \"metadata\", value: JSON.stringify(metadata) });\n\n                        // Pull the image URL out\n                        let imageUrl = metadata.image;\n                        if (typeof(imageUrl) !== \"string\") {\n                            linkage.push({ type: \"!imageUrl\", value: \"\" });\n                            return { url: null, linkage };\n                        }\n\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        } else {\n                            // Transform IPFS link to gateway\n                            const ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) {\n                                linkage.push({ type: \"!imageUrl-ipfs\", value: imageUrl });\n                                return { url: null, linkage };\n                            }\n\n                            linkage.push({ type: \"imageUrl-ipfs\", value: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n\n                        linkage.push({ type: \"url\", value: imageUrl });\n\n                        return { linkage, url: imageUrl };\n                    }\n                }\n            }\n        } catch (error) { }\n\n        return { linkage, url: null };\n    }\n\n    static async getEnsAddress(provider: Provider): Promise<string> {\n        const network = await provider.getNetwork();\n\n        const ensPlugin = network.getPlugin<EnsPlugin>(\"org.ethers.plugins.network.Ens\");\n\n        // No ENS...\n        assert(ensPlugin, \"network does not support ENS\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"getEnsAddress\", info: { network } });\n\n        return ensPlugin.address;\n    }\n\n    static async #getResolver(provider: Provider, name: string): Promise<null | string> {\n        const ensAddr = await EnsResolver.getEnsAddress(provider);\n\n        try {\n            const contract = new Contract(ensAddr, [\n                \"function resolver(bytes32) view returns (address)\"\n            ], provider);\n\n            const addr = await contract.resolver(namehash(name), {\n                enableCcipRead: true\n            });\n\n            if (addr === ZeroAddress) { return null; }\n            return addr;\n\n        } catch (error) {\n            // ENS registry cannot throw errors on resolver(bytes32),\n            // so probably a link error\n            throw error;\n        }\n\n        return null;\n    }\n\n    /**\n     *  Resolve to the ENS resolver for %%name%% using %%provider%% or\n     *  ``null`` if unconfigured.\n     */\n    static async fromName(provider: AbstractProvider, name: string): Promise<null | EnsResolver> {\n\n        let currentName = name;\n        while (true) {\n            if (currentName === \"\" || currentName === \".\") { return null; }\n\n            // Optimization since the eth node cannot change and does\n            // not have a wildcard resolver\n            if (name !== \"eth\" && currentName === \"eth\") { return null; }\n\n            // Check the current node for a resolver\n            const addr = await EnsResolver.#getResolver(provider, currentName);\n\n            // Found a resolver!\n            if (addr != null) {\n                const resolver = new EnsResolver(provider, addr, name);\n\n                // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                if (currentName !== name && !(await resolver.supportsWildcard())) { return null; }\n\n                return resolver;\n            }\n\n            // Get the parent node\n            currentName = currentName.split(\".\").slice(1).join(\".\");\n        }\n    }\n}\n", "/**\n *  @_ignore\n */\nimport { getAddress, getCreateAddress } from \"../address/index.js\";\nimport { Signature } from \"../crypto/index.js\"\nimport { accessListify } from \"../transaction/index.js\";\nimport {\n    getBigInt, getNumber, hexlify, isHexString, zeroPadValue,\n    assert, assertArgument\n} from \"../utils/index.js\";\n\nimport type {\n    BlockParams, LogParams,\n    TransactionReceiptParams, TransactionResponseParams,\n} from \"./formatting.js\";\n\n\nconst BN_0 = BigInt(0);\n\nexport type FormatFunc = (value: any) => any;\n\nexport function allowNull(format: FormatFunc, nullValue?: any): FormatFunc {\n    return (function(value: any) {\n        if (value == null) { return nullValue; }\n        return format(value);\n    });\n}\n\nexport function arrayOf(format: FormatFunc, allowNull?: boolean): FormatFunc {\n    return ((array: any) => {\n        if (allowNull && array == null) { return null; }\n        if (!Array.isArray(array)) { throw new Error(\"not an array\"); }\n        return array.map((i) => format(i));\n    });\n}\n\n// Requires an object which matches a fleet of other formatters\n// Any FormatFunc may return `undefined` to have the value omitted\n// from the result object. Calls preserve `this`.\nexport function object(format: Record<string, FormatFunc>, altNames?: Record<string, Array<string>>): FormatFunc {\n    return ((value: any) => {\n        const result: any = { };\n        for (const key in format) {\n            let srcKey = key;\n            if (altNames && key in altNames && !(srcKey in value)) {\n                for (const altKey of altNames[key]) {\n                    if (altKey in value) {\n                        srcKey = altKey;\n                        break;\n                    }\n                }\n            }\n\n            try {\n                const nv = format[key](value[srcKey]);\n                if (nv !== undefined) { result[key] = nv; }\n            } catch (error) {\n                const message = (error instanceof Error) ? error.message: \"not-an-error\";\n                assert(false, `invalid value for value.${ key } (${ message })`, \"BAD_DATA\", { value })\n            }\n        }\n        return result;\n    });\n}\n\nexport function formatBoolean(value: any): boolean {\n    switch (value) {\n        case true: case \"true\":\n            return true;\n        case false: case \"false\":\n            return false;\n    }\n    assertArgument(false, `invalid boolean; ${ JSON.stringify(value) }`, \"value\", value);\n}\n\nexport function formatData(value: string): string {\n    assertArgument(isHexString(value, true), \"invalid data\", \"value\", value);\n    return value;\n}\n\nexport function formatHash(value: any): string {\n    assertArgument(isHexString(value, 32), \"invalid hash\", \"value\", value);\n    return value;\n}\n\nexport function formatUint256(value: any): string {\n    if (!isHexString(value)) {\n        throw new Error(\"invalid uint256\");\n    }\n    return zeroPadValue(value, 32);\n}\n\nconst _formatLog = object({\n    address: getAddress,\n    blockHash: formatHash,\n    blockNumber: getNumber,\n    data: formatData,\n    index: getNumber,\n    removed: allowNull(formatBoolean, false),\n    topics: arrayOf(formatHash),\n    transactionHash: formatHash,\n    transactionIndex: getNumber,\n}, {\n    index: [ \"logIndex\" ]\n});\n\nexport function formatLog(value: any): LogParams {\n    return _formatLog(value);\n}\n\nconst _formatBlock = object({\n    hash: allowNull(formatHash),\n    parentHash: formatHash,\n    parentBeaconBlockRoot: allowNull(formatHash, null),\n\n    number: getNumber,\n\n    timestamp: getNumber,\n    nonce: allowNull(formatData),\n    difficulty: getBigInt,\n\n    gasLimit: getBigInt,\n    gasUsed: getBigInt,\n\n    stateRoot: allowNull(formatHash, null),\n    receiptsRoot: allowNull(formatHash, null),\n\n    blobGasUsed: allowNull(getBigInt, null),\n    excessBlobGas: allowNull(getBigInt, null),\n\n    miner: allowNull(getAddress),\n    extraData: formatData,\n\n    baseFeePerGas: allowNull(getBigInt)\n});\n\nexport function formatBlock(value: any): BlockParams {\n    const result = _formatBlock(value);\n    result.transactions = value.transactions.map((tx: string | TransactionResponseParams) => {\n        if (typeof(tx) === \"string\") { return tx; }\n        return formatTransactionResponse(tx);\n    });\n    return result;\n}\n\nconst _formatReceiptLog = object({\n    transactionIndex: getNumber,\n    blockNumber: getNumber,\n    transactionHash: formatHash,\n    address: getAddress,\n    topics: arrayOf(formatHash),\n    data: formatData,\n    index: getNumber,\n    blockHash: formatHash,\n}, {\n    index: [ \"logIndex\" ]\n});\n\nexport function formatReceiptLog(value: any): LogParams {\n    return _formatReceiptLog(value);\n}\n\nconst _formatTransactionReceipt = object({\n    to: allowNull(getAddress, null),\n    from: allowNull(getAddress, null),\n    contractAddress: allowNull(getAddress, null),\n    // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n    index: getNumber,\n    root: allowNull(hexlify),\n    gasUsed: getBigInt,\n    blobGasUsed: allowNull(getBigInt, null),\n    logsBloom: allowNull(formatData),\n    blockHash: formatHash,\n    hash: formatHash,\n    logs: arrayOf(formatReceiptLog),\n    blockNumber: getNumber,\n    //confirmations: allowNull(getNumber, null),\n    cumulativeGasUsed: getBigInt,\n    effectiveGasPrice: allowNull(getBigInt),\n    blobGasPrice: allowNull(getBigInt, null),\n    status: allowNull(getNumber),\n    type: allowNull(getNumber, 0)\n}, {\n    effectiveGasPrice: [ \"gasPrice\" ],\n    hash: [ \"transactionHash\" ],\n    index: [ \"transactionIndex\" ],\n});\n\nexport function formatTransactionReceipt(value: any): TransactionReceiptParams {\n    return _formatTransactionReceipt(value);\n}\n\nexport function formatTransactionResponse(value: any): TransactionResponseParams {\n\n    // Some clients (TestRPC) do strange things like return 0x0 for the\n    // 0 address; correct this to be a real address\n    if (value.to && getBigInt(value.to) === BN_0) {\n        value.to = \"0x0000000000000000000000000000000000000000\";\n    }\n\n    const result = object({\n        hash: formatHash,\n\n        // Some nodes do not return this, usually test nodes (like Ganache)\n        index: allowNull(getNumber, undefined),\n\n        type: (value: any) => {\n            if (value === \"0x\" || value == null) { return 0; }\n            return getNumber(value);\n        },\n        accessList: allowNull(accessListify, null),\n        blobVersionedHashes: allowNull(arrayOf(formatHash, true), null),\n\n        blockHash: allowNull(formatHash, null),\n        blockNumber: allowNull(getNumber, null),\n        transactionIndex: allowNull(getNumber, null),\n\n        from: getAddress,\n\n        // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas) must be set\n        gasPrice: allowNull(getBigInt),\n        maxPriorityFeePerGas: allowNull(getBigInt),\n        maxFeePerGas: allowNull(getBigInt),\n        maxFeePerBlobGas: allowNull(getBigInt, null),\n\n        gasLimit: getBigInt,\n        to: allowNull(getAddress, null),\n        value: getBigInt,\n        nonce: getNumber,\n        data: formatData,\n\n        creates: allowNull(getAddress, null),\n\n        chainId: allowNull(getBigInt, null)\n    }, {\n        data: [ \"input\" ],\n        gasLimit: [ \"gas\" ],\n        index: [ \"transactionIndex\" ]\n    })(value);\n\n    // If to and creates are empty, populate the creates from the value\n    if (result.to == null && result.creates == null) {\n        result.creates = getCreateAddress(result);\n    }\n\n    // @TODO: Check fee data\n\n    // Add an access list to supported transaction types\n    if ((value.type === 1 || value.type === 2) && value.accessList == null) {\n        result.accessList = [ ];\n    }\n\n    // Compute the signature\n    if (value.signature) {\n        result.signature = Signature.from(value.signature);\n    } else {\n        result.signature = Signature.from(value);\n    }\n\n    // Some backends omit ChainId on legacy transactions, but we can compute it\n    if (result.chainId == null) {\n        const chainId = result.signature.legacyChainId;\n        if (chainId != null) { result.chainId = chainId; }\n    }\n\n\n    // @TODO: check chainID\n    /*\n    if (value.chainId != null) {\n        let chainId = value.chainId;\n\n        if (isHexString(chainId)) {\n            chainId = BigNumber.from(chainId).toNumber();\n        }\n\n        result.chainId = chainId;\n\n    } else {\n        let chainId = value.networkId;\n\n        // geth-etc returns chainId\n        if (chainId == null && result.v == null) {\n            chainId = value.chainId;\n        }\n\n        if (isHexString(chainId)) {\n            chainId = BigNumber.from(chainId).toNumber();\n        }\n\n        if (typeof(chainId) !== \"number\" && result.v != null) {\n            chainId = (result.v - 35) / 2;\n            if (chainId < 0) { chainId = 0; }\n            chainId = parseInt(chainId);\n        }\n\n        if (typeof(chainId) !== \"number\") { chainId = 0; }\n\n        result.chainId = chainId;\n    }\n    */\n\n    // 0x0000... should actually be null\n    if (result.blockHash && getBigInt(result.blockHash) === BN_0) {\n        result.blockHash = null;\n    }\n\n    return result;\n}\n", "import { defineProperties } from \"../utils/properties.js\";\n\nimport { assertArgument } from \"../utils/index.js\";\n\nimport type { FeeData, Provider } from \"./provider.js\";\nimport type { FetchRequest } from \"../utils/fetch.js\";\n\n\nconst EnsAddress = \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\";\n\n/**\n *  A **NetworkPlugin** provides additional functionality on a [[Network]].\n */\nexport class NetworkPlugin {\n    /**\n     *  The name of the plugin.\n     *\n     *  It is recommended to use reverse-domain-notation, which permits\n     *  unique names with a known authority as well as hierarchal entries.\n     */\n    readonly name!: string;\n\n    /**\n     *  Creates a new **NetworkPlugin**.\n     */\n    constructor(name: string) {\n        defineProperties<NetworkPlugin>(this, { name });\n    }\n\n    /**\n     *  Creates a copy of this plugin.\n     */\n    clone(): NetworkPlugin {\n        return new NetworkPlugin(this.name);\n    }\n\n//    validate(network: Network): NetworkPlugin {\n//        return this;\n//    }\n}\n\n\n/**\n *  The gas cost parameters for a [[GasCostPlugin]].\n */\nexport type GasCostParameters = {\n    /**\n     *  The transactions base fee.\n     */\n    txBase?: number;\n\n    /**\n     *  The fee for creating a new account.\n     */\n    txCreate?: number;\n\n    /**\n     *  The fee per zero-byte in the data.\n     */\n    txDataZero?: number;\n\n    /**\n     *  The fee per non-zero-byte in the data.\n     */\n    txDataNonzero?: number;\n\n    /**\n     *  The fee per storage key in the [[link-eip-2930]] access list.\n     */\n    txAccessListStorageKey?: number;\n\n    /**\n     *  The fee per address in the [[link-eip-2930]] access list.\n     */\n    txAccessListAddress?: number;\n};\n\n/**\n *  A **GasCostPlugin** allows a network to provide alternative values when\n *  computing the intrinsic gas required for a transaction.\n */\nexport class GasCostPlugin extends NetworkPlugin implements GasCostParameters {\n    /**\n     *  The block number to treat these values as valid from.\n     *\n     *  This allows a hardfork to have updated values included as well as\n     *  mulutiple hardforks to be supported.\n     */\n    readonly effectiveBlock!: number;\n\n    /**\n     *  The transactions base fee.\n     */\n    readonly txBase!: number;\n\n    /**\n     *  The fee for creating a new account.\n     */\n    readonly txCreate!: number;\n\n    /**\n     *  The fee per zero-byte in the data.\n     */\n    readonly txDataZero!: number;\n\n    /**\n     *  The fee per non-zero-byte in the data.\n     */\n    readonly txDataNonzero!: number;\n\n    /**\n     *  The fee per storage key in the [[link-eip-2930]] access list.\n     */\n    readonly txAccessListStorageKey!: number;\n\n    /**\n     *  The fee per address in the [[link-eip-2930]] access list.\n     */\n    readonly txAccessListAddress!: number;\n\n\n    /**\n     *  Creates a new GasCostPlugin from %%effectiveBlock%% until the\n     *  latest block or another GasCostPlugin supercedes that block number,\n     *  with the associated %%costs%%.\n     */\n    constructor(effectiveBlock?: number, costs?: GasCostParameters) {\n        if (effectiveBlock == null) { effectiveBlock = 0; }\n        super(`org.ethers.network.plugins.GasCost#${ (effectiveBlock || 0) }`);\n\n        const props: Record<string, number> = { effectiveBlock };\n        function set(name: keyof GasCostParameters, nullish: number): void {\n            let value = (costs || { })[name];\n            if (value == null) { value = nullish; }\n            assertArgument(typeof(value) === \"number\", `invalud value for ${ name }`, \"costs\", costs);\n            props[name] = value;\n        }\n\n        set(\"txBase\", 21000);\n        set(\"txCreate\", 32000);\n        set(\"txDataZero\", 4);\n        set(\"txDataNonzero\", 16);\n        set(\"txAccessListStorageKey\", 1900);\n        set(\"txAccessListAddress\", 2400);\n\n        defineProperties<GasCostPlugin>(this, props);\n    }\n\n    clone(): GasCostPlugin {\n        return new GasCostPlugin(this.effectiveBlock, this);\n    }\n}\n\n/**\n *  An **EnsPlugin** allows a [[Network]] to specify the ENS Registry\n *  Contract address and the target network to use when using that\n *  contract.\n *\n *  Various testnets have their own instance of the contract to use, but\n *  in general, the mainnet instance supports multi-chain addresses and\n *  should be used.\n */\nexport class EnsPlugin extends NetworkPlugin {\n\n    /**\n     *  The ENS Registrty Contract address.\n     */\n    readonly address!: string;\n\n    /**\n     *  The chain ID that the ENS contract lives on.\n     */\n    readonly targetNetwork!: number;\n\n    /**\n     *  Creates a new **EnsPlugin** connected to %%address%% on the\n     *  %%targetNetwork%%. The default ENS address and mainnet is used\n     *  if unspecified.\n     */\n    constructor(address?: null | string, targetNetwork?: null | number) {\n        super(\"org.ethers.plugins.network.Ens\");\n        defineProperties<EnsPlugin>(this, {\n            address: (address || EnsAddress),\n            targetNetwork: ((targetNetwork == null) ? 1: targetNetwork)\n        });\n    }\n\n    clone(): EnsPlugin {\n        return new EnsPlugin(this.address, this.targetNetwork);\n    }\n}\n\n/**\n *  A **FeeDataNetworkPlugin** allows a network to provide and alternate\n *  means to specify its fee data.\n *\n *  For example, a network which does not support [[link-eip-1559]] may\n *  choose to use a Gas Station site to approximate the gas price.\n */\nexport class FeeDataNetworkPlugin extends NetworkPlugin {\n    readonly #feeDataFunc: (provider: Provider) => Promise<FeeData>;\n\n    /**\n     *  The fee data function provided to the constructor.\n     */\n    get feeDataFunc(): (provider: Provider) => Promise<FeeData> {\n        return this.#feeDataFunc;\n    }\n\n    /**\n     *  Creates a new **FeeDataNetworkPlugin**.\n     */\n    constructor(feeDataFunc: (provider: Provider) => Promise<FeeData>) {\n        super(\"org.ethers.plugins.network.FeeData\");\n        this.#feeDataFunc = feeDataFunc;\n    }\n\n    /**\n     *  Resolves to the fee data.\n     */\n    async getFeeData(provider: Provider): Promise<FeeData> {\n        return await this.#feeDataFunc(provider);\n    }\n\n    clone(): FeeDataNetworkPlugin {\n        return new FeeDataNetworkPlugin(this.#feeDataFunc);\n    }\n}\n\nexport class FetchUrlFeeDataNetworkPlugin extends NetworkPlugin {\n    readonly #url: string;\n    readonly #processFunc: (f: () => Promise<FeeData>, p: Provider, r: FetchRequest) => Promise<{ gasPrice?: null | bigint, maxFeePerGas?: null | bigint, maxPriorityFeePerGas?: null | bigint }>;\n\n    /**\n     *  The URL to initialize the FetchRequest with in %%processFunc%%.\n     */\n    get url(): string { return this.#url; }\n\n    /**\n     *  The callback to use when computing the FeeData.\n     */\n    get processFunc(): (f: () => Promise<FeeData>, p: Provider, r: FetchRequest) => Promise<{ gasPrice?: null | bigint, maxFeePerGas?: null | bigint, maxPriorityFeePerGas?: null | bigint }> { return this.#processFunc; }\n\n    /**\n     *  Creates a new **FetchUrlFeeDataNetworkPlugin** which will\n     *  be used when computing the fee data for the network.\n     */\n    constructor(url: string, processFunc: (f: () => Promise<FeeData>, p: Provider, r: FetchRequest) => Promise<{ gasPrice?: null | bigint, maxFeePerGas?: null | bigint, maxPriorityFeePerGas?: null | bigint }>) {\n        super(\"org.ethers.plugins.network.FetchUrlFeeDataPlugin\");\n        this.#url = url;\n        this.#processFunc = processFunc;\n    }\n\n    // We are immutable, so we can serve as our own clone\n    clone(): FetchUrlFeeDataNetworkPlugin { return this; }\n}\n\n/*\nexport class CustomBlockNetworkPlugin extends NetworkPlugin {\n    readonly #blockFunc: (provider: Provider, block: BlockParams<string>) => Block<string>;\n    readonly #blockWithTxsFunc: (provider: Provider, block: BlockParams<TransactionResponseParams>) => Block<TransactionResponse>;\n\n    constructor(blockFunc: (provider: Provider, block: BlockParams<string>) => Block<string>, blockWithTxsFunc: (provider: Provider, block: BlockParams<TransactionResponseParams>) => Block<TransactionResponse>) {\n        super(\"org.ethers.network-plugins.custom-block\");\n        this.#blockFunc = blockFunc;\n        this.#blockWithTxsFunc = blockWithTxsFunc;\n    }\n\n    async getBlock(provider: Provider, block: BlockParams<string>): Promise<Block<string>> {\n        return await this.#blockFunc(provider, block);\n    }\n\n    async getBlockions(provider: Provider, block: BlockParams<TransactionResponseParams>): Promise<Block<TransactionResponse>> {\n        return await this.#blockWithTxsFunc(provider, block);\n    }\n\n    clone(): CustomBlockNetworkPlugin {\n        return new CustomBlockNetworkPlugin(this.#blockFunc, this.#blockWithTxsFunc);\n    }\n}\n*/\n", "/**\n *  A **Network** encapsulates the various properties required to\n *  interact with a specific chain.\n *\n *  @_subsection: api/providers:Networks  [networks]\n */\n\nimport { accessListify } from \"../transaction/index.js\";\nimport { getBigInt, assert, assertArgument } from \"../utils/index.js\";\n\nimport {\n    EnsPlugin, FetchUrlFeeDataNetworkPlugin, GasCostPlugin\n} from \"./plugins-network.js\";\n\nimport type { BigNumberish } from \"../utils/index.js\";\nimport type { TransactionLike } from \"../transaction/index.js\";\n\nimport type { NetworkPlugin } from \"./plugins-network.js\";\n\n\n/**\n *  A Networkish can be used to allude to a Network, by specifing:\n *  - a [[Network]] object\n *  - a well-known (or registered) network name\n *  - a well-known (or registered) chain ID\n *  - an object with sufficient details to describe a network\n */\nexport type Networkish = Network | number | bigint | string | {\n    name?: string,\n    chainId?: number,\n    //layerOneConnection?: Provider,\n    ensAddress?: string,\n    ensNetwork?: number\n};\n\n\n\n\n/* * * *\n// Networks which operation against an L2 can use this plugin to\n// specify how to access L1, for the purpose of resolving ENS,\n// for example.\nexport class LayerOneConnectionPlugin extends NetworkPlugin {\n    readonly provider!: Provider;\n// @TODO: Rename to ChainAccess and allow for connecting to any chain\n    constructor(provider: Provider) {\n        super(\"org.ethers.plugins.layer-one-connection\");\n        defineProperties<LayerOneConnectionPlugin>(this, { provider });\n    }\n\n    clone(): LayerOneConnectionPlugin {\n        return new LayerOneConnectionPlugin(this.provider);\n    }\n}\n*/\n\n\nconst Networks: Map<string | bigint, () => Network> = new Map();\n\n\n/**\n *  A **Network** provides access to a chain's properties and allows\n *  for plug-ins to extend functionality.\n */\nexport class Network {\n    #name: string;\n    #chainId: bigint;\n\n    #plugins: Map<string, NetworkPlugin>;\n\n    /**\n     *  Creates a new **Network** for %%name%% and %%chainId%%.\n     */\n    constructor(name: string, chainId: BigNumberish) {\n        this.#name = name;\n        this.#chainId = getBigInt(chainId);\n        this.#plugins = new Map();\n    }\n\n    /**\n     *  Returns a JSON-compatible representation of a Network.\n     */\n    toJSON(): any {\n        return { name: this.name, chainId: String(this.chainId) };\n    }\n\n    /**\n     *  The network common name.\n     *\n     *  This is the canonical name, as networks migh have multiple\n     *  names.\n     */\n    get name(): string { return this.#name; }\n    set name(value: string) { this.#name =  value; }\n\n    /**\n     *  The network chain ID.\n     */\n    get chainId(): bigint { return this.#chainId; }\n    set chainId(value: BigNumberish) { this.#chainId = getBigInt(value, \"chainId\"); }\n\n    /**\n     *  Returns true if %%other%% matches this network. Any chain ID\n     *  must match, and if no chain ID is present, the name must match.\n     *\n     *  This method does not currently check for additional properties,\n     *  such as ENS address or plug-in compatibility.\n     */\n    matches(other: Networkish): boolean {\n        if (other == null) { return false; }\n\n        if (typeof(other) === \"string\") {\n            try {\n                return (this.chainId === getBigInt(other));\n            } catch (error) { }\n            return (this.name === other);\n        }\n\n        if (typeof(other) === \"number\" || typeof(other) === \"bigint\") {\n            try {\n                return (this.chainId === getBigInt(other));\n            } catch (error) { }\n            return false;\n        }\n\n        if (typeof(other) === \"object\") {\n            if (other.chainId != null) {\n                try {\n                    return (this.chainId === getBigInt(other.chainId));\n                } catch (error) { }\n                return false;\n            }\n            if (other.name != null) {\n                return (this.name === other.name);\n            }\n            return false;\n        }\n\n        return false;\n    }\n\n    /**\n     *  Returns the list of plugins currently attached to this Network.\n     */\n    get plugins(): Array<NetworkPlugin> {\n        return Array.from(this.#plugins.values());\n    }\n\n    /**\n     *  Attach a new %%plugin%% to this Network. The network name\n     *  must be unique, excluding any fragment.\n     */\n    attachPlugin(plugin: NetworkPlugin): this {\n        if (this.#plugins.get(plugin.name)) {\n            throw new Error(`cannot replace existing plugin: ${ plugin.name } `);\n        }\n        this.#plugins.set(plugin.name, plugin.clone());\n        return this;\n    }\n\n    /**\n     *  Return the plugin, if any, matching %%name%% exactly. Plugins\n     *  with fragments will not be returned unless %%name%% includes\n     *  a fragment.\n     */\n    getPlugin<T extends NetworkPlugin = NetworkPlugin>(name: string): null | T {\n        return <T>(this.#plugins.get(name)) || null;\n    }\n\n    /**\n     *  Gets a list of all plugins that match %%name%%, with otr without\n     *  a fragment.\n     */\n    getPlugins<T extends NetworkPlugin = NetworkPlugin>(basename: string): Array<T> {\n        return <Array<T>>(this.plugins.filter((p) => (p.name.split(\"#\")[0] === basename)));\n    }\n\n    /**\n     *  Create a copy of this Network.\n     */\n    clone(): Network {\n        const clone = new Network(this.name, this.chainId);\n        this.plugins.forEach((plugin) => {\n            clone.attachPlugin(plugin.clone());\n        });\n        return clone;\n    }\n\n    /**\n     *  Compute the intrinsic gas required for a transaction.\n     *\n     *  A GasCostPlugin can be attached to override the default\n     *  values.\n     */\n    computeIntrinsicGas(tx: TransactionLike): number {\n        const costs = this.getPlugin<GasCostPlugin>(\"org.ethers.plugins.network.GasCost\") || (new GasCostPlugin());\n\n        let gas = costs.txBase;\n        if (tx.to == null) { gas += costs.txCreate; }\n        if (tx.data) {\n            for (let i = 2; i < tx.data.length; i += 2) {\n                if (tx.data.substring(i, i + 2) === \"00\") {\n                    gas += costs.txDataZero;\n                } else {\n                    gas += costs.txDataNonzero;\n                }\n            }\n        }\n\n        if (tx.accessList) {\n            const accessList = accessListify(tx.accessList);\n            for (const addr in accessList) {\n                gas += costs.txAccessListAddress + costs.txAccessListStorageKey * accessList[addr].storageKeys.length;\n            }\n        }\n\n        return gas;\n    }\n\n    /**\n     *  Returns a new Network for the %%network%% name or chainId.\n     */\n    static from(network?: Networkish): Network {\n        injectCommonNetworks();\n\n        // Default network\n        if (network == null) { return Network.from(\"mainnet\"); }\n\n        // Canonical name or chain ID\n        if (typeof(network) === \"number\") { network = BigInt(network); }\n        if (typeof(network) === \"string\" || typeof(network) === \"bigint\") {\n            const networkFunc = Networks.get(network);\n            if (networkFunc) { return networkFunc(); }\n            if (typeof(network) === \"bigint\") {\n                return new Network(\"unknown\", network);\n            }\n\n            assertArgument(false, \"unknown network\", \"network\", network);\n        }\n\n        // Clonable with network-like abilities\n        if (typeof((<Network>network).clone) === \"function\") {\n            const clone = (<Network>network).clone();\n            //if (typeof(network.name) !== \"string\" || typeof(network.chainId) !== \"number\") {\n            //}\n            return clone;\n        }\n\n        // Networkish\n        if (typeof(network) === \"object\") {\n            assertArgument(typeof(network.name) === \"string\" && typeof(network.chainId) === \"number\",\n                \"invalid network object name or chainId\", \"network\", network);\n\n            const custom = new Network(<string>(network.name), <number>(network.chainId));\n\n            if ((<any>network).ensAddress || (<any>network).ensNetwork != null) {\n                custom.attachPlugin(new EnsPlugin((<any>network).ensAddress, (<any>network).ensNetwork));\n            }\n\n            //if ((<any>network).layerOneConnection) {\n            //    custom.attachPlugin(new LayerOneConnectionPlugin((<any>network).layerOneConnection));\n            //}\n\n            return custom;\n        }\n\n        assertArgument(false, \"invalid network\", \"network\", network);\n    }\n\n    /**\n     *  Register %%nameOrChainId%% with a function which returns\n     *  an instance of a Network representing that chain.\n     */\n    static register(nameOrChainId: string | number | bigint, networkFunc: () => Network): void {\n        if (typeof(nameOrChainId) === \"number\") { nameOrChainId = BigInt(nameOrChainId); }\n        const existing = Networks.get(nameOrChainId);\n        if (existing) {\n            assertArgument(false, `conflicting network for ${ JSON.stringify(existing.name) }`, \"nameOrChainId\", nameOrChainId);\n        }\n        Networks.set(nameOrChainId, networkFunc);\n    }\n}\n\n\ntype Options = {\n    ensNetwork?: number;\n    altNames?: Array<string>;\n    plugins?: Array<NetworkPlugin>;\n};\n\n// We don't want to bring in formatUnits because it is backed by\n// FixedNumber and we want to keep Networks tiny. The values\n// included by the Gas Stations are also IEEE 754 with lots of\n// rounding issues and exceed the strict checks formatUnits has.\nfunction parseUnits(_value: number | string, decimals: number): bigint {\n    const value = String(_value);\n    if (!value.match(/^[0-9.]+$/)) {\n        throw new Error(`invalid gwei value: ${ _value }`);\n    }\n\n    // Break into [ whole, fraction ]\n    const comps = value.split(\".\");\n    if (comps.length === 1) { comps.push(\"\"); }\n\n    // More than 1 decimal point or too many fractional positions\n    if (comps.length !== 2) {\n        throw new Error(`invalid gwei value: ${ _value }`);\n    }\n\n    // Pad the fraction to 9 decimalplaces\n    while (comps[1].length < decimals) { comps[1] += \"0\"; }\n\n    // Too many decimals and some non-zero ending, take the ceiling\n    if (comps[1].length > 9) {\n        let frac = BigInt(comps[1].substring(0, 9));\n        if (!comps[1].substring(9).match(/^0+$/)) { frac++; }\n        comps[1] = frac.toString();\n    }\n\n    return BigInt(comps[0] + comps[1]);\n}\n\n// Used by Polygon to use a gas station for fee data\nfunction getGasStationPlugin(url: string) {\n    return new FetchUrlFeeDataNetworkPlugin(url, async (fetchFeeData, provider, request) => {\n\n        // Prevent Cloudflare from blocking our request in node.js\n        request.setHeader(\"User-Agent\", \"ethers\");\n\n        let response;\n        try {\n            const [ _response, _feeData ] = await Promise.all([\n                request.send(), fetchFeeData()\n            ]);\n            response = _response;\n            const payload = response.bodyJson.standard;\n            const feeData = {\n                gasPrice: _feeData.gasPrice,\n                maxFeePerGas: parseUnits(payload.maxFee, 9),\n                maxPriorityFeePerGas: parseUnits(payload.maxPriorityFee, 9),\n            };\n            return feeData;\n        } catch (error: any) {\n            assert(false, `error encountered with polygon gas station (${ JSON.stringify(request.url) })`, \"SERVER_ERROR\", { request, response, error });\n        }\n    });\n}\n\n// See: https://chainlist.org\nlet injected = false;\nfunction injectCommonNetworks(): void {\n    if (injected) { return; }\n    injected = true;\n\n    /// Register popular Ethereum networks\n    function registerEth(name: string, chainId: number, options: Options): void {\n        const func = function() {\n            const network = new Network(name, chainId);\n\n            // We use 0 to disable ENS\n            if (options.ensNetwork != null) {\n                network.attachPlugin(new EnsPlugin(null, options.ensNetwork));\n            }\n\n            network.attachPlugin(new GasCostPlugin());\n\n            (options.plugins || []).forEach((plugin) => {\n                network.attachPlugin(plugin);\n            });\n\n            return network;\n        };\n\n        // Register the network by name and chain ID\n        Network.register(name, func);\n        Network.register(chainId, func);\n\n        if (options.altNames) {\n            options.altNames.forEach((name) => {\n                Network.register(name, func);\n            });\n        }\n    }\n\n    registerEth(\"mainnet\", 1, { ensNetwork: 1, altNames: [ \"homestead\" ] });\n    registerEth(\"ropsten\", 3, { ensNetwork: 3 });\n    registerEth(\"rinkeby\", 4, { ensNetwork: 4 });\n    registerEth(\"goerli\", 5, { ensNetwork: 5 });\n    registerEth(\"kovan\", 42, { ensNetwork: 42 });\n    registerEth(\"sepolia\", 11155111, { ensNetwork: 11155111 });\n    registerEth(\"holesky\", 17000, { ensNetwork: 17000 });\n\n    registerEth(\"classic\", 61, { });\n    registerEth(\"classicKotti\", 6, { });\n\n    registerEth(\"arbitrum\", 42161, {\n        ensNetwork: 1,\n    });\n    registerEth(\"arbitrum-goerli\", 421613, { });\n    registerEth(\"arbitrum-sepolia\", 421614, { });\n\n    registerEth(\"base\", 8453, { ensNetwork: 1 });\n    registerEth(\"base-goerli\", 84531, { });\n    registerEth(\"base-sepolia\", 84532, { });\n\n    registerEth(\"bnb\", 56, { ensNetwork: 1 });\n    registerEth(\"bnbt\", 97, { });\n\n    registerEth(\"linea\", 59144, { ensNetwork: 1 });\n    registerEth(\"linea-goerli\", 59140, { });\n\n    registerEth(\"matic\", 137, {\n        ensNetwork: 1,\n        plugins: [\n            getGasStationPlugin(\"https:/\\/gasstation.polygon.technology/v2\")\n        ]\n    });\n    registerEth(\"matic-mumbai\", 80001, {\n        altNames: [ \"maticMumbai\", \"maticmum\" ],  // @TODO: Future remove these alts\n        plugins: [\n            getGasStationPlugin(\"https:/\\/gasstation-testnet.polygon.technology/v2\")\n        ]\n    });\n\n    registerEth(\"optimism\", 10, {\n        ensNetwork: 1,\n        plugins: [ ]\n    });\n    registerEth(\"optimism-goerli\", 420, { });\n    registerEth(\"optimism-sepolia\", 11155420, { });\n\n    registerEth(\"xdai\", 100, { ensNetwork: 1 });\n}\n", "import { assert, isHexString } from \"../utils/index.js\";\n\nimport type { AbstractProvider, Subscriber } from \"./abstract-provider.js\";\nimport type { EventFilter, OrphanFilter, ProviderEvent } from \"./provider.js\";\n\nfunction copy(obj: any): any {\n    return JSON.parse(JSON.stringify(obj));\n}\n\n/**\n *  Return the polling subscriber for common events.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport function getPollingSubscriber(provider: AbstractProvider, event: ProviderEvent): Subscriber {\n    if (event === \"block\") { return new PollingBlockSubscriber(provider); }\n    if (isHexString(event, 32)) { return new PollingTransactionSubscriber(provider, event); }\n\n    assert(false, \"unsupported polling event\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"getPollingSubscriber\", info: { event }\n    });\n}\n\n// @TODO: refactor this\n\n/**\n *  A **PollingBlockSubscriber** polls at a regular interval for a change\n *  in the block number.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class PollingBlockSubscriber implements Subscriber {\n    #provider: AbstractProvider;\n    #poller: null | number;\n\n    #interval: number;\n\n    // The most recent block we have scanned for events. The value -2\n    // indicates we still need to fetch an initial block number\n    #blockNumber: number;\n\n    /**\n     *  Create a new **PollingBlockSubscriber** attached to %%provider%%.\n     */\n    constructor(provider: AbstractProvider) {\n        this.#provider = provider;\n        this.#poller = null;\n        this.#interval = 4000;\n\n        this.#blockNumber = -2;\n    }\n\n    /**\n     *  The polling interval.\n     */\n    get pollingInterval(): number { return this.#interval; }\n    set pollingInterval(value: number) { this.#interval = value; }\n\n    async #poll(): Promise<void> {\n        try {\n            const blockNumber = await this.#provider.getBlockNumber();\n\n            // Bootstrap poll to setup our initial block number\n            if (this.#blockNumber === -2) {\n                this.#blockNumber = blockNumber;\n                return;\n            }\n\n            // @TODO: Put a cap on the maximum number of events per loop?\n\n            if (blockNumber !== this.#blockNumber) {\n                for (let b = this.#blockNumber + 1; b <= blockNumber; b++) {\n                    // We have been stopped\n                    if (this.#poller == null) { return; }\n\n                    await this.#provider.emit(\"block\", b);\n                }\n\n                this.#blockNumber = blockNumber;\n            }\n\n        } catch (error) {\n            // @TODO: Minor bump, add an \"error\" event to let subscribers\n            //        know things went awry.\n            //console.log(error);\n        }\n\n        // We have been stopped\n        if (this.#poller == null) { return; }\n\n        this.#poller = this.#provider._setTimeout(this.#poll.bind(this), this.#interval);\n    }\n\n    start(): void {\n        if (this.#poller) { return; }\n        this.#poller = this.#provider._setTimeout(this.#poll.bind(this), this.#interval);\n        this.#poll();\n    }\n\n    stop(): void {\n        if (!this.#poller) { return; }\n        this.#provider._clearTimeout(this.#poller);\n        this.#poller = null;\n    }\n\n    pause(dropWhilePaused?: boolean): void {\n        this.stop();\n        if (dropWhilePaused) { this.#blockNumber = -2; }\n    }\n\n    resume(): void {\n        this.start();\n    }\n}\n\n\n/**\n *  An **OnBlockSubscriber** can be sub-classed, with a [[_poll]]\n *  implmentation which will be called on every new block.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class OnBlockSubscriber implements Subscriber {\n    #provider: AbstractProvider;\n    #poll: (b: number) => void;\n    #running: boolean;\n\n    /**\n     *  Create a new **OnBlockSubscriber** attached to %%provider%%.\n     */\n    constructor(provider: AbstractProvider) {\n        this.#provider = provider;\n        this.#running = false;\n        this.#poll = (blockNumber: number) => {\n            this._poll(blockNumber, this.#provider);\n        }\n    }\n\n    /**\n     *  Called on every new block.\n     */\n    async _poll(blockNumber: number, provider: AbstractProvider): Promise<void> {\n        throw new Error(\"sub-classes must override this\");\n    }\n\n    start(): void {\n        if (this.#running) { return; }\n        this.#running = true;\n\n        this.#poll(-2);\n        this.#provider.on(\"block\", this.#poll);\n    }\n\n    stop(): void {\n        if (!this.#running) { return; }\n        this.#running = false;\n\n        this.#provider.off(\"block\", this.#poll);\n    }\n\n    pause(dropWhilePaused?: boolean): void { this.stop(); }\n    resume(): void { this.start(); }\n}\n\nexport class PollingBlockTagSubscriber extends OnBlockSubscriber {\n    readonly #tag: string;\n    #lastBlock: number;\n\n    constructor(provider: AbstractProvider, tag: string) {\n        super(provider);\n        this.#tag = tag;\n        this.#lastBlock = -2;\n    }\n\n    pause(dropWhilePaused?: boolean): void {\n        if (dropWhilePaused) { this.#lastBlock = -2; }\n        super.pause(dropWhilePaused);\n    }\n\n    async _poll(blockNumber: number, provider: AbstractProvider): Promise<void> {\n        const block = await provider.getBlock(this.#tag);\n        if (block == null) { return; }\n\n        if (this.#lastBlock === -2) {\n            this.#lastBlock = block.number;\n        } else if (block.number > this.#lastBlock) {\n            provider.emit(this.#tag, block.number);\n            this.#lastBlock = block.number;\n        }\n    }\n}\n\n\n/**\n *  @_ignore:\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class PollingOrphanSubscriber extends OnBlockSubscriber {\n    #filter: OrphanFilter;\n\n    constructor(provider: AbstractProvider, filter: OrphanFilter) {\n        super(provider);\n        this.#filter = copy(filter);\n    }\n\n    async _poll(blockNumber: number, provider: AbstractProvider): Promise<void> {\n        throw new Error(\"@TODO\");\n        console.log(this.#filter);\n    }\n}\n\n/**\n *  A **PollingTransactionSubscriber** will poll for a given transaction\n *  hash for its receipt.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class PollingTransactionSubscriber extends OnBlockSubscriber {\n    #hash: string;\n\n    /**\n     *  Create a new **PollingTransactionSubscriber** attached to\n     *  %%provider%%, listening for %%hash%%.\n     */\n    constructor(provider: AbstractProvider, hash: string) {\n        super(provider);\n        this.#hash = hash;\n    }\n\n    async _poll(blockNumber: number, provider: AbstractProvider): Promise<void> {\n        const tx = await provider.getTransactionReceipt(this.#hash);\n        if (tx) { provider.emit(this.#hash, tx); }\n    }\n}\n\n/**\n *  A **PollingEventSubscriber** will poll for a given filter for its logs.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class PollingEventSubscriber implements Subscriber {\n    #provider: AbstractProvider;\n    #filter: EventFilter;\n    #poller: (b: number) => void;\n\n    #running: boolean;\n\n    // The most recent block we have scanned for events. The value -2\n    // indicates we still need to fetch an initial block number\n    #blockNumber: number;\n\n    /**\n     *  Create a new **PollingTransactionSubscriber** attached to\n     *  %%provider%%, listening for %%filter%%.\n     */\n    constructor(provider: AbstractProvider, filter: EventFilter) {\n        this.#provider = provider;\n        this.#filter = copy(filter);\n        this.#poller = this.#poll.bind(this);\n        this.#running = false;\n        this.#blockNumber = -2;\n    }\n\n    async #poll(blockNumber: number): Promise<void> {\n        // The initial block hasn't been determined yet\n        if (this.#blockNumber === -2) { return; }\n\n        const filter = copy(this.#filter);\n        filter.fromBlock = this.#blockNumber + 1;\n        filter.toBlock = blockNumber;\n\n        const logs = await this.#provider.getLogs(filter);\n\n        // No logs could just mean the node has not indexed them yet,\n        // so we keep a sliding window of 60 blocks to keep scanning\n        if (logs.length === 0) {\n            if (this.#blockNumber < blockNumber - 60) {\n                this.#blockNumber = blockNumber - 60;\n            }\n            return;\n        }\n\n        for (const log of logs) {\n            this.#provider.emit(this.#filter, log);\n\n            // Only advance the block number when logs were found to\n            // account for networks (like BNB and Polygon) which may\n            // sacrifice event consistency for block event speed\n            this.#blockNumber = log.blockNumber;\n        }\n    }\n\n    start(): void {\n        if (this.#running) { return; }\n        this.#running = true;\n\n        if (this.#blockNumber === -2) {\n            this.#provider.getBlockNumber().then((blockNumber) => {\n                this.#blockNumber = blockNumber;\n            });\n        }\n        this.#provider.on(\"block\", this.#poller);\n    }\n\n    stop(): void {\n        if (!this.#running) { return; }\n        this.#running = false;\n\n        this.#provider.off(\"block\", this.#poller);\n    }\n\n    pause(dropWhilePaused?: boolean): void {\n        this.stop();\n        if (dropWhilePaused) { this.#blockNumber = -2; }\n    }\n\n    resume(): void {\n        this.start();\n    }\n}\n", "/**\n *  The available providers should suffice for most developers purposes,\n *  but the [[AbstractProvider]] class has many features which enable\n *  sub-classing it for specific purposes.\n *\n *  @_section: api/providers/abstract-provider: Subclassing Provider  [abstract-provider]\n */\n\n// @TODO\n// Event coalescence\n//   When we register an event with an async value (e.g. address is a Signer\n//   or ENS name), we need to add it immeidately for the Event API, but also\n//   need time to resolve the address. Upon resolving the address, we need to\n//   migrate the listener to the static event. We also need to maintain a map\n//   of Signer/ENS name to address so we can sync respond to listenerCount.\n\nimport { getAddress, resolveAddress } from \"../address/index.js\";\nimport { ZeroAddress } from \"../constants/index.js\";\nimport { Contract } from \"../contract/index.js\";\nimport { namehash } from \"../hash/index.js\";\nimport { Transaction } from \"../transaction/index.js\";\nimport {\n    concat, dataLength, dataSlice, hexlify, isHexString,\n    getBigInt, getBytes, getNumber,\n    isCallException, isError, makeError, assert, assertArgument,\n    FetchRequest,\n    toBeArray, toQuantity,\n    defineProperties, EventPayload, resolveProperties,\n    toUtf8String\n} from \"../utils/index.js\";\n\nimport { EnsResolver } from \"./ens-resolver.js\";\nimport {\n    formatBlock, formatLog, formatTransactionReceipt, formatTransactionResponse\n} from \"./format.js\";\nimport { Network } from \"./network.js\";\nimport { copyRequest, Block, FeeData, Log, TransactionReceipt, TransactionResponse } from \"./provider.js\";\nimport {\n    PollingBlockSubscriber, PollingBlockTagSubscriber, PollingEventSubscriber,\n    PollingOrphanSubscriber, PollingTransactionSubscriber\n} from \"./subscriber-polling.js\";\n\nimport type { Addressable, AddressLike } from \"../address/index.js\";\nimport type { BigNumberish, BytesLike } from \"../utils/index.js\";\nimport type { Listener } from \"../utils/index.js\";\n\nimport type { Networkish } from \"./network.js\";\nimport type { FetchUrlFeeDataNetworkPlugin } from \"./plugins-network.js\";\n//import type { MaxPriorityFeePlugin } from \"./plugins-network.js\";\nimport type {\n    BlockParams, LogParams, TransactionReceiptParams,\n    TransactionResponseParams\n} from \"./formatting.js\";\n\nimport type {\n    BlockTag, EventFilter, Filter, FilterByBlockHash, OrphanFilter,\n    PreparedTransactionRequest, Provider, ProviderEvent,\n    TransactionRequest\n} from \"./provider.js\";\n\ntype Timer = ReturnType<typeof setTimeout>;\n\n\n// Constants\nconst BN_2 = BigInt(2);\n\nconst MAX_CCIP_REDIRECTS = 10;\n\nfunction isPromise<T = any>(value: any): value is Promise<T> {\n    return (value && typeof(value.then) === \"function\");\n}\n\nfunction getTag(prefix: string, value: any): string {\n    return prefix + \":\" + JSON.stringify(value, (k, v) => {\n        if (v == null) { return \"null\"; }\n        if (typeof(v) === \"bigint\") { return `bigint:${ v.toString() }`}\n        if (typeof(v) === \"string\") { return v.toLowerCase(); }\n\n        // Sort object keys\n        if (typeof(v) === \"object\" && !Array.isArray(v)) {\n            const keys = Object.keys(v);\n            keys.sort();\n            return keys.reduce((accum, key) => {\n                accum[key] = v[key];\n                return accum;\n            }, <any>{ });\n        }\n\n        return v;\n    });\n}\n\n/**\n *  The types of additional event values that can be emitted for the\n *  ``\"debug\"`` event.\n */\nexport type DebugEventAbstractProvider = {\n    action: \"sendCcipReadFetchRequest\",\n    request: FetchRequest\n    index: number\n    urls: Array<string>\n} | {\n    action: \"receiveCcipReadFetchResult\",\n    request: FetchRequest,\n    result: any\n} | {\n    action: \"receiveCcipReadFetchError\",\n    request: FetchRequest,\n    result: any\n} | {\n    action: \"sendCcipReadCall\",\n    transaction: { to: string, data: string }\n} | {\n    action: \"receiveCcipReadCallResult\",\n    transaction: { to: string, data: string }\n    result: string\n} | {\n    action: \"receiveCcipReadCallError\",\n    transaction: { to: string, data: string }\n    error: Error\n};\n\n\n/**\n *  The value passed to the [[AbstractProvider-_getSubscriber]] method.\n *\n *  Only developers sub-classing [[AbstractProvider[[ will care about this,\n *  if they are modifying a low-level feature of how subscriptions operate.\n */\nexport type Subscription = {\n    type: \"block\" | \"close\" | \"debug\" | \"error\" | \"finalized\" | \"network\" | \"pending\" | \"safe\",\n    tag: string\n} | {\n    type: \"transaction\",\n    tag: string,\n    hash: string\n} | {\n    type: \"event\",\n    tag: string,\n    filter: EventFilter\n} | {\n    type: \"orphan\",\n    tag: string,\n    filter: OrphanFilter\n};\n\n/**\n *  A **Subscriber** manages a subscription.\n *\n *  Only developers sub-classing [[AbstractProvider[[ will care about this,\n *  if they are modifying a low-level feature of how subscriptions operate.\n */\nexport interface Subscriber {\n    /**\n     *  Called initially when a subscriber is added the first time.\n     */\n    start(): void;\n\n    /**\n     *  Called when there are no more subscribers to the event.\n     */\n    stop(): void;\n\n    /**\n     *  Called when the subscription should pause.\n     *\n     *  If %%dropWhilePaused%%, events that occur while paused should not\n     *  be emitted [[resume]].\n     */\n    pause(dropWhilePaused?: boolean): void;\n\n    /**\n     *  Resume a paused subscriber.\n     */\n    resume(): void;\n\n    /**\n     *  The frequency (in ms) to poll for events, if polling is used by\n     *  the subscriber.\n     *\n     *  For non-polling subscribers, this must return ``undefined``.\n     */\n    pollingInterval?: number;\n}\n\n/**\n *  An **UnmanagedSubscriber** is useful for events which do not require\n *  any additional management, such as ``\"debug\"`` which only requires\n *  emit in synchronous event loop triggered calls.\n */\nexport class UnmanagedSubscriber implements Subscriber {\n    /**\n     *  The name fof the event.\n     */\n    name!: string;\n\n    /**\n     *  Create a new UnmanagedSubscriber with %%name%%.\n     */\n    constructor(name: string) { defineProperties<UnmanagedSubscriber>(this, { name }); }\n\n    start(): void { }\n    stop(): void { }\n\n    pause(dropWhilePaused?: boolean): void { }\n    resume(): void { }\n}\n\ntype Sub = {\n    tag: string;\n    nameMap: Map<string, string>\n    addressableMap: WeakMap<Addressable, string>;\n    listeners: Array<{ listener: Listener, once: boolean }>;\n    // @TODO: get rid of this, as it is (and has to be)\n    // tracked in subscriber\n    started: boolean;\n    subscriber: Subscriber;\n};\n\nfunction copy<T = any>(value: T): T {\n    return JSON.parse(JSON.stringify(value));\n}\n\nfunction concisify(items: Array<string>): Array<string> {\n    items = Array.from((new Set(items)).values())\n    items.sort();\n    return items;\n}\n\n\nasync function getSubscription(_event: ProviderEvent, provider: AbstractProvider): Promise<Subscription> {\n    if (_event == null) { throw new Error(\"invalid event\"); }\n\n    // Normalize topic array info an EventFilter\n    if (Array.isArray(_event)) { _event = { topics: _event }; }\n\n    if (typeof(_event) === \"string\") {\n        switch (_event) {\n            case \"block\":\n            case \"debug\":\n            case \"error\":\n            case \"finalized\":\n            case \"network\":\n            case \"pending\":\n            case \"safe\": {\n                return { type: _event, tag: _event };\n            }\n        }\n    }\n\n    if (isHexString(_event, 32)) {\n        const hash = _event.toLowerCase();\n        return { type: \"transaction\", tag: getTag(\"tx\", { hash }), hash };\n    }\n\n    if ((<any>_event).orphan) {\n        const event = <OrphanFilter>_event;\n        // @TODO: Should lowercase and whatnot things here instead of copy...\n        return { type: \"orphan\", tag: getTag(\"orphan\", event), filter: copy(event) };\n    }\n\n    if (((<any>_event).address || (<any>_event).topics)) {\n        const event = <EventFilter>_event;\n\n        const filter: any = {\n            topics: ((event.topics || []).map((t) => {\n                if (t == null) { return null; }\n                if (Array.isArray(t)) {\n                    return concisify(t.map((t) => t.toLowerCase()));\n                }\n                return t.toLowerCase();\n            }))\n        };\n\n        if (event.address) {\n            const addresses: Array<string> = [ ];\n            const promises: Array<Promise<void>> = [ ];\n\n            const addAddress = (addr: AddressLike) => {\n                if (isHexString(addr)) {\n                    addresses.push(addr);\n                } else {\n                    promises.push((async () => {\n                        addresses.push(await resolveAddress(addr, provider));\n                    })());\n                }\n            }\n\n            if (Array.isArray(event.address)) {\n                event.address.forEach(addAddress);\n            } else {\n                addAddress(event.address);\n            }\n            if (promises.length) { await Promise.all(promises); }\n            filter.address = concisify(addresses.map((a) => a.toLowerCase()));\n        }\n\n        return { filter, tag: getTag(\"event\", filter), type: \"event\" };\n    }\n\n    assertArgument(false, \"unknown ProviderEvent\", \"event\", _event);\n}\n\nfunction getTime(): number { return (new Date()).getTime(); }\n\n/**\n *  An **AbstractPlugin** is used to provide additional internal services\n *  to an [[AbstractProvider]] without adding backwards-incompatible changes\n *  to method signatures or other internal and complex logic.\n */\nexport interface AbstractProviderPlugin {\n    /**\n     *  The reverse domain notation of the plugin.\n     */\n    readonly name: string;\n\n    /**\n     *  Creates a new instance of the plugin, connected to %%provider%%.\n     */\n    connect(provider: AbstractProvider): AbstractProviderPlugin;\n}\n\n/**\n *  A normalized filter used for [[PerformActionRequest]] objects.\n */\nexport type PerformActionFilter = {\n    address?: string | Array<string>;\n    topics?: Array<null | string | Array<string>>;\n    fromBlock?: BlockTag;\n    toBlock?: BlockTag;\n} | {\n    address?: string | Array<string>;\n    topics?: Array<null | string | Array<string>>;\n    blockHash?: string;\n};\n\n/**\n *  A normalized transactions used for [[PerformActionRequest]] objects.\n */\nexport interface PerformActionTransaction extends PreparedTransactionRequest {\n    /**\n     *  The ``to`` address of the transaction.\n     */\n    to?: string;\n\n    /**\n     *  The sender of the transaction.\n     */\n    from?: string;\n}\n\n/**\n *  The [[AbstractProvider]] methods will normalize all values and pass this\n *  type to [[AbstractProvider-_perform]].\n */\nexport type PerformActionRequest = {\n    method: \"broadcastTransaction\",\n    signedTransaction: string\n} | {\n    method: \"call\",\n    transaction: PerformActionTransaction, blockTag: BlockTag\n} | {\n    method: \"chainId\"\n} | {\n    method: \"estimateGas\",\n    transaction: PerformActionTransaction\n} | {\n    method: \"getBalance\",\n    address: string, blockTag: BlockTag\n} | {\n    method: \"getBlock\",\n    blockTag: BlockTag, includeTransactions: boolean\n} | {\n    method: \"getBlock\",\n    blockHash: string, includeTransactions: boolean\n} | {\n    method: \"getBlockNumber\"\n} | {\n    method: \"getCode\",\n    address: string, blockTag: BlockTag\n} | {\n    method: \"getGasPrice\"\n} | {\n    method: \"getLogs\",\n    filter: PerformActionFilter\n} | {\n    method: \"getPriorityFee\"\n} | {\n    method: \"getStorage\",\n    address: string, position: bigint, blockTag: BlockTag\n} | {\n    method: \"getTransaction\",\n    hash: string\n} | {\n    method: \"getTransactionCount\",\n    address: string, blockTag: BlockTag\n} | {\n    method: \"getTransactionReceipt\",\n    hash: string\n} | {\n    method: \"getTransactionResult\",\n    hash: string\n};\n\ntype _PerformAccountRequest = {\n    method: \"getBalance\" | \"getTransactionCount\" | \"getCode\"\n} | {\n    method: \"getStorage\", position: bigint\n}\n\n/**\n *  Options for configuring some internal aspects of an [[AbstractProvider]].\n *\n *  **``cacheTimeout``** - how long to cache a low-level ``_perform``\n *  for, based on input parameters. This reduces the number of calls\n *  to getChainId and getBlockNumber, but may break test chains which\n *  can perform operations (internally) synchronously. Use ``-1`` to\n *  disable, ``0`` will only buffer within the same event loop and\n *  any other value is in ms. (default: ``250``)\n */\nexport type AbstractProviderOptions = {\n    cacheTimeout?: number;\n    pollingInterval?: number;\n};\n\nconst defaultOptions = {\n    cacheTimeout: 250,\n    pollingInterval: 4000\n};\n\ntype CcipArgs = {\n    sender: string;\n    urls: Array<string>;\n    calldata: string;\n    selector: string;\n    extraData: string;\n    errorArgs: Array<any>\n};\n\n/**\n *  An **AbstractProvider** provides a base class for other sub-classes to\n *  implement the [[Provider]] API by normalizing input arguments and\n *  formatting output results as well as tracking events for consistent\n *  behaviour on an eventually-consistent network.\n */\nexport class AbstractProvider implements Provider {\n\n    #subs: Map<string, Sub>;\n    #plugins: Map<string, AbstractProviderPlugin>;\n\n    // null=unpaused, true=paused+dropWhilePaused, false=paused\n    #pausedState: null | boolean;\n\n    #destroyed: boolean;\n\n    #networkPromise: null | Promise<Network>;\n    readonly #anyNetwork: boolean;\n\n    #performCache: Map<string, Promise<any>>;\n\n    // The most recent block number if running an event or -1 if no \"block\" event\n    #lastBlockNumber: number;\n\n    #nextTimer: number;\n    #timers: Map<number, { timer: null | Timer, func: () => void, time: number }>;\n\n    #disableCcipRead: boolean;\n\n    #options: Required<AbstractProviderOptions>;\n\n    /**\n     *  Create a new **AbstractProvider** connected to %%network%%, or\n     *  use the various network detection capabilities to discover the\n     *  [[Network]] if necessary.\n     */\n    constructor(_network?: \"any\" | Networkish, options?: AbstractProviderOptions) {\n        this.#options = Object.assign({ }, defaultOptions, options || { });\n\n        if (_network === \"any\") {\n            this.#anyNetwork = true;\n            this.#networkPromise = null;\n        } else if (_network) {\n            const network = Network.from(_network);\n            this.#anyNetwork = false;\n            this.#networkPromise = Promise.resolve(network);\n            setTimeout(() => { this.emit(\"network\", network, null); }, 0);\n        } else {\n            this.#anyNetwork = false;\n            this.#networkPromise = null;\n        }\n\n        this.#lastBlockNumber = -1;\n\n        this.#performCache = new Map();\n\n        this.#subs = new Map();\n        this.#plugins = new Map();\n        this.#pausedState = null;\n\n        this.#destroyed = false;\n\n        this.#nextTimer = 1;\n        this.#timers = new Map();\n\n        this.#disableCcipRead = false;\n    }\n\n    get pollingInterval(): number { return this.#options.pollingInterval; }\n\n    /**\n     *  Returns ``this``, to allow an **AbstractProvider** to implement\n     *  the [[ContractRunner]] interface.\n     */\n    get provider(): this { return this; }\n\n    /**\n     *  Returns all the registered plug-ins.\n     */\n    get plugins(): Array<AbstractProviderPlugin> {\n        return Array.from(this.#plugins.values());\n    }\n\n    /**\n     *  Attach a new plug-in.\n     */\n    attachPlugin(plugin: AbstractProviderPlugin): this {\n        if (this.#plugins.get(plugin.name)) {\n            throw new Error(`cannot replace existing plugin: ${ plugin.name } `);\n        }\n        this.#plugins.set(plugin.name,  plugin.connect(this));\n        return this;\n    }\n\n    /**\n     *  Get a plugin by name.\n     */\n    getPlugin<T extends AbstractProviderPlugin = AbstractProviderPlugin>(name: string): null | T {\n        return <T>(this.#plugins.get(name)) || null;\n    }\n\n    /**\n     *  Prevent any CCIP-read operation, regardless of whether requested\n     *  in a [[call]] using ``enableCcipRead``.\n     */\n    get disableCcipRead(): boolean { return this.#disableCcipRead; }\n    set disableCcipRead(value: boolean) { this.#disableCcipRead = !!value; }\n\n    // Shares multiple identical requests made during the same 250ms\n    async #perform<T = any>(req: PerformActionRequest): Promise<T> {\n        const timeout = this.#options.cacheTimeout;\n\n        // Caching disabled\n        if (timeout < 0) { return await this._perform(req); }\n\n        // Create a tag\n        const tag = getTag(req.method, req);\n\n        let perform = this.#performCache.get(tag);\n        if (!perform) {\n            perform = this._perform(req);\n\n            this.#performCache.set(tag, perform);\n\n            setTimeout(() => {\n                if (this.#performCache.get(tag) === perform) {\n                    this.#performCache.delete(tag);\n                }\n            }, timeout);\n        }\n\n        return await perform;\n    }\n\n    /**\n     *  Resolves to the data for executing the CCIP-read operations.\n     */\n    async ccipReadFetch(tx: PerformActionTransaction, calldata: string, urls: Array<string>): Promise<null | string> {\n        if (this.disableCcipRead || urls.length === 0 || tx.to == null) { return null; }\n\n        const sender = tx.to.toLowerCase();\n        const data = calldata.toLowerCase();\n\n        const errorMessages: Array<string> = [ ];\n\n        for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n\n            // URL expansion\n            const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n\n            // If no {data} is present, use POST; otherwise GET\n            //const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n\n            //const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n            //    value.status = response.statusCode;\n            //    return value;\n            //});\n            const request = new FetchRequest(href);\n            if (url.indexOf(\"{data}\") === -1) {\n                request.body = { data, sender };\n            }\n\n            this.emit(\"debug\", { action: \"sendCcipReadFetchRequest\", request, index: i, urls });\n\n            let errorMessage = \"unknown error\";\n\n            const resp = await request.send();\n            try {\n                 const result = resp.bodyJson;\n                 if (result.data) {\n                     this.emit(\"debug\", { action: \"receiveCcipReadFetchResult\", request, result });\n                     return result.data;\n                 }\n                 if (result.message) { errorMessage = result.message; }\n                 this.emit(\"debug\", { action: \"receiveCcipReadFetchError\", request, result });\n            } catch (error) { }\n\n            // 4xx indicates the result is not present; stop\n            assert(resp.statusCode < 400 || resp.statusCode >= 500, `response not found during CCIP fetch: ${ errorMessage }`,\n                \"OFFCHAIN_FAULT\", { reason: \"404_MISSING_RESOURCE\", transaction: tx, info: { url, errorMessage } });\n\n            // 5xx indicates server issue; try the next url\n            errorMessages.push(errorMessage);\n        }\n\n        assert(false, `error encountered during CCIP fetch: ${ errorMessages.map((m) => JSON.stringify(m)).join(\", \") }`, \"OFFCHAIN_FAULT\", {\n            reason: \"500_SERVER_ERROR\",\n            transaction: tx, info: { urls, errorMessages }\n        });\n    }\n\n    /**\n     *  Provides the opportunity for a sub-class to wrap a block before\n     *  returning it, to add additional properties or an alternate\n     *  sub-class of [[Block]].\n     */\n    _wrapBlock(value: BlockParams, network: Network): Block {\n        return new Block(formatBlock(value), this);\n    }\n\n    /**\n     *  Provides the opportunity for a sub-class to wrap a log before\n     *  returning it, to add additional properties or an alternate\n     *  sub-class of [[Log]].\n     */\n    _wrapLog(value: LogParams, network: Network): Log {\n        return new Log(formatLog(value), this);\n    }\n\n    /**\n     *  Provides the opportunity for a sub-class to wrap a transaction\n     *  receipt before returning it, to add additional properties or an\n     *  alternate sub-class of [[TransactionReceipt]].\n     */\n    _wrapTransactionReceipt(value: TransactionReceiptParams, network: Network): TransactionReceipt {\n        return new TransactionReceipt(formatTransactionReceipt(value), this);\n    }\n\n    /**\n     *  Provides the opportunity for a sub-class to wrap a transaction\n     *  response before returning it, to add additional properties or an\n     *  alternate sub-class of [[TransactionResponse]].\n     */\n    _wrapTransactionResponse(tx: TransactionResponseParams, network: Network): TransactionResponse {\n        return new TransactionResponse(formatTransactionResponse(tx), this);\n    }\n\n    /**\n     *  Resolves to the Network, forcing a network detection using whatever\n     *  technique the sub-class requires.\n     *\n     *  Sub-classes **must** override this.\n     */\n    _detectNetwork(): Promise<Network> {\n        assert(false, \"sub-classes must implement this\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"_detectNetwork\"\n        });\n    }\n\n    /**\n     *  Sub-classes should use this to perform all built-in operations. All\n     *  methods sanitizes and normalizes the values passed into this.\n     *\n     *  Sub-classes **must** override this.\n     */\n    async _perform<T = any>(req: PerformActionRequest): Promise<T> {\n        assert(false, `unsupported method: ${ req.method }`, \"UNSUPPORTED_OPERATION\", {\n            operation: req.method,\n            info: req\n        });\n    }\n\n    // State\n\n    async getBlockNumber(): Promise<number> {\n        const blockNumber = getNumber(await this.#perform({ method: \"getBlockNumber\" }), \"%response\");\n        if (this.#lastBlockNumber >= 0) { this.#lastBlockNumber = blockNumber; }\n        return blockNumber;\n    }\n\n    /**\n     *  Returns or resolves to the address for %%address%%, resolving ENS\n     *  names and [[Addressable]] objects and returning if already an\n     *  address.\n     */\n    _getAddress(address: AddressLike): string | Promise<string> {\n        return resolveAddress(address, this);\n    }\n\n    /**\n     *  Returns or resolves to a valid block tag for %%blockTag%%, resolving\n     *  negative values and returning if already a valid block tag.\n     */\n    _getBlockTag(blockTag?: BlockTag): string | Promise<string> {\n        if (blockTag == null) { return \"latest\"; }\n\n        switch (blockTag) {\n            case \"earliest\":\n                return \"0x0\";\n            case \"finalized\":\n            case \"latest\":\n            case \"pending\":\n            case \"safe\":\n                return blockTag;\n        }\n\n\n        if (isHexString(blockTag)) {\n            if (isHexString(blockTag, 32)) { return blockTag; }\n            return toQuantity(blockTag);\n        }\n\n        if (typeof(blockTag) === \"bigint\") {\n            blockTag = getNumber(blockTag, \"blockTag\");\n        }\n\n        if (typeof(blockTag) === \"number\") {\n            if (blockTag >= 0) { return toQuantity(blockTag); }\n            if (this.#lastBlockNumber >= 0) { return toQuantity(this.#lastBlockNumber + blockTag); }\n            return this.getBlockNumber().then((b) => toQuantity(b + <number>blockTag));\n        }\n\n        assertArgument(false, \"invalid blockTag\", \"blockTag\", blockTag);\n    }\n\n    /**\n     *  Returns or resolves to a filter for %%filter%%, resolving any ENS\n     *  names or [[Addressable]] object and returning if already a valid\n     *  filter.\n     */\n    _getFilter(filter: Filter | FilterByBlockHash): PerformActionFilter | Promise<PerformActionFilter> {\n\n        // Create a canonical representation of the topics\n        const topics = (filter.topics || [ ]).map((t) => {\n            if (t == null) { return null; }\n            if (Array.isArray(t)) {\n                return concisify(t.map((t) => t.toLowerCase()));\n            }\n            return t.toLowerCase();\n        });\n\n        const blockHash = (\"blockHash\" in filter) ? filter.blockHash: undefined;\n\n        const resolve = (_address: Array<string>, fromBlock?: string, toBlock?: string) => {\n            let address: undefined | string | Array<string> = undefined;\n            switch (_address.length) {\n                case 0: break;\n                case 1:\n                    address = _address[0];\n                    break;\n                default:\n                    _address.sort();\n                    address = _address;\n            }\n\n            if (blockHash) {\n                if (fromBlock != null || toBlock != null) {\n                    throw new Error(\"invalid filter\");\n                }\n            }\n\n            const filter = <any>{ };\n            if (address) { filter.address = address; }\n            if (topics.length) { filter.topics = topics; }\n            if (fromBlock) { filter.fromBlock = fromBlock; }\n            if (toBlock) { filter.toBlock = toBlock; }\n            if (blockHash) { filter.blockHash = blockHash; }\n\n            return filter;\n        };\n\n        // Addresses could be async (ENS names or Addressables)\n        let address: Array<string | Promise<string>> = [ ];\n        if (filter.address) {\n            if (Array.isArray(filter.address)) {\n                for (const addr of filter.address) { address.push(this._getAddress(addr)); }\n            } else {\n                address.push(this._getAddress(filter.address));\n            }\n        }\n\n        let fromBlock: undefined | string | Promise<string> = undefined;\n        if (\"fromBlock\" in filter) { fromBlock = this._getBlockTag(filter.fromBlock); }\n\n        let toBlock: undefined | string | Promise<string> = undefined;\n        if (\"toBlock\" in filter) { toBlock = this._getBlockTag(filter.toBlock); }\n\n        if (address.filter((a) => (typeof(a) !== \"string\")).length ||\n            (fromBlock != null && typeof(fromBlock) !== \"string\") ||\n            (toBlock != null && typeof(toBlock) !== \"string\")) {\n\n            return Promise.all([ Promise.all(address), fromBlock, toBlock ]).then((result) => {\n                return resolve(result[0], result[1], result[2]);\n            });\n        }\n\n        return resolve(<Array<string>>address, fromBlock, toBlock);\n    }\n\n    /**\n     *  Returns or resovles to a transaction for %%request%%, resolving\n     *  any ENS names or [[Addressable]] and returning if already a valid\n     *  transaction.\n     */\n    _getTransactionRequest(_request: TransactionRequest): PerformActionTransaction | Promise<PerformActionTransaction> {\n        const request = <PerformActionTransaction>copyRequest(_request);\n\n        const promises: Array<Promise<void>> = [ ];\n        [ \"to\", \"from\" ].forEach((key) => {\n            if ((<any>request)[key] == null) { return; }\n\n            const addr = resolveAddress((<any>request)[key], this);\n            if (isPromise(addr)) {\n                promises.push((async function() { (<any>request)[key] = await addr; })());\n            } else {\n                (<any>request)[key] = addr;\n            }\n        });\n\n        if (request.blockTag != null) {\n            const blockTag = this._getBlockTag(request.blockTag);\n            if (isPromise(blockTag)) {\n                promises.push((async function() { request.blockTag = await blockTag; })());\n            } else {\n                request.blockTag = blockTag;\n            }\n        }\n\n        if (promises.length) {\n            return (async function() {\n                await Promise.all(promises);\n                return request;\n            })();\n        }\n\n        return request;\n    }\n\n    async getNetwork(): Promise<Network> {\n\n        // No explicit network was set and this is our first time\n        if (this.#networkPromise == null) {\n\n            // Detect the current network (shared with all calls)\n            const detectNetwork = (async () => {\n                try {\n                    const network = await this._detectNetwork();\n                    this.emit(\"network\", network, null);\n                    return network;\n                } catch (error) {\n                    if (this.#networkPromise === detectNetwork!) {\n                        this.#networkPromise = null;\n                    }\n                    throw error;\n                }\n            })();\n\n            this.#networkPromise = detectNetwork;\n            return (await detectNetwork).clone();\n        }\n\n        const networkPromise = this.#networkPromise;\n\n        const [ expected, actual ] = await Promise.all([\n            networkPromise,          // Possibly an explicit Network\n            this._detectNetwork()    // The actual connected network\n        ]);\n\n        if (expected.chainId !== actual.chainId) {\n            if (this.#anyNetwork) {\n                // The \"any\" network can change, so notify listeners\n                this.emit(\"network\", actual, expected);\n\n                // Update the network if something else hasn't already changed it\n                if (this.#networkPromise === networkPromise) {\n                    this.#networkPromise = Promise.resolve(actual);\n                }\n            } else {\n                // Otherwise, we do not allow changes to the underlying network\n                assert(false, `network changed: ${ expected.chainId } => ${ actual.chainId } `, \"NETWORK_ERROR\", {\n                    event: \"changed\"\n                });\n            }\n        }\n\n        return expected.clone();\n    }\n\n    async getFeeData(): Promise<FeeData> {\n        const network = await this.getNetwork();\n\n        const getFeeDataFunc = async () => {\n            const { _block, gasPrice, priorityFee } = await resolveProperties({\n                _block: this.#getBlock(\"latest\", false),\n                gasPrice: ((async () => {\n                    try {\n                        const value = await this.#perform({ method: \"getGasPrice\" });\n                        return getBigInt(value, \"%response\");\n                    } catch (error) { }\n                    return null\n                })()),\n                priorityFee: ((async () => {\n                    try {\n                        const value = await this.#perform({ method: \"getPriorityFee\" });\n                        return getBigInt(value, \"%response\");\n                    } catch (error) { }\n                    return null;\n                })())\n            });\n\n            let maxFeePerGas: null | bigint = null;\n            let maxPriorityFeePerGas: null | bigint = null;\n\n            // These are the recommended EIP-1559 heuristics for fee data\n            const block = this._wrapBlock(_block, network);\n            if (block && block.baseFeePerGas) {\n                maxPriorityFeePerGas = (priorityFee != null) ? priorityFee: BigInt(\"1000000000\");\n                maxFeePerGas = (block.baseFeePerGas * BN_2) + maxPriorityFeePerGas;\n            }\n\n            return new FeeData(gasPrice, maxFeePerGas, maxPriorityFeePerGas);\n        };\n\n        // Check for a FeeDataNetWorkPlugin\n        const plugin = <FetchUrlFeeDataNetworkPlugin>network.getPlugin(\"org.ethers.plugins.network.FetchUrlFeeDataPlugin\");\n        if (plugin) {\n            const req = new FetchRequest(plugin.url);\n            const feeData = await plugin.processFunc(getFeeDataFunc, this, req);\n            return new FeeData(feeData.gasPrice, feeData.maxFeePerGas, feeData.maxPriorityFeePerGas);\n        }\n\n        return await getFeeDataFunc();\n    }\n\n\n    async estimateGas(_tx: TransactionRequest): Promise<bigint> {\n        let tx = this._getTransactionRequest(_tx);\n        if (isPromise(tx)) { tx = await tx; }\n        return getBigInt(await this.#perform({\n            method: \"estimateGas\", transaction: tx\n        }), \"%response\");\n    }\n\n    async #call(tx: PerformActionTransaction, blockTag: string, attempt: number): Promise<string> {\n        assert (attempt < MAX_CCIP_REDIRECTS, \"CCIP read exceeded maximum redirections\", \"OFFCHAIN_FAULT\", {\n             reason: \"TOO_MANY_REDIRECTS\",\n             transaction: Object.assign({ }, tx, { blockTag, enableCcipRead: true })\n         });\n\n         // This came in as a PerformActionTransaction, so to/from are safe; we can cast\n         const transaction = <PerformActionTransaction>copyRequest(tx);\n\n         try {\n             return hexlify(await this._perform({ method: \"call\", transaction, blockTag }));\n\n         } catch (error: any) {\n             // CCIP Read OffchainLookup\n             if (!this.disableCcipRead && isCallException(error) && error.data && attempt >= 0 && blockTag === \"latest\" && transaction.to != null && dataSlice(error.data, 0, 4) === \"0x556f1830\") {\n                 const data = error.data;\n\n                 const txSender = await resolveAddress(transaction.to, this);\n\n                 // Parse the CCIP Read Arguments\n                 let ccipArgs: CcipArgs;\n                 try {\n                     ccipArgs = parseOffchainLookup(dataSlice(error.data, 4));\n                 } catch (error: any) {\n                     assert(false, error.message, \"OFFCHAIN_FAULT\", {\n                         reason: \"BAD_DATA\", transaction, info: { data } });\n                 }\n\n                 // Check the sender of the OffchainLookup matches the transaction\n                 assert(ccipArgs.sender.toLowerCase() === txSender.toLowerCase(),\n                     \"CCIP Read sender mismatch\", \"CALL_EXCEPTION\", {\n                         action: \"call\",\n                         data,\n                         reason: \"OffchainLookup\",\n                         transaction: <any>transaction, // @TODO: populate data?\n                         invocation: null,\n                         revert: {\n                             signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                             name: \"OffchainLookup\",\n                             args: ccipArgs.errorArgs\n                         }\n                     });\n\n                 const ccipResult = await this.ccipReadFetch(transaction, ccipArgs.calldata, ccipArgs.urls);\n                 assert(ccipResult != null, \"CCIP Read failed to fetch data\", \"OFFCHAIN_FAULT\", {\n                     reason: \"FETCH_FAILED\", transaction, info: { data: error.data, errorArgs: ccipArgs.errorArgs } });\n\n                 const tx = {\n                     to: txSender,\n                     data: concat([ ccipArgs.selector, encodeBytes([ ccipResult, ccipArgs.extraData ]) ])\n                 };\n\n                 this.emit(\"debug\", { action: \"sendCcipReadCall\", transaction: tx });\n                 try {\n                     const result = await this.#call(tx, blockTag, attempt + 1);\n                     this.emit(\"debug\", { action: \"receiveCcipReadCallResult\", transaction: Object.assign({ }, tx), result });\n                     return result;\n                 } catch (error) {\n                     this.emit(\"debug\", { action: \"receiveCcipReadCallError\", transaction: Object.assign({ }, tx), error });\n                     throw error;\n                 }\n             }\n\n             throw error;\n         }\n    }\n\n    async #checkNetwork<T>(promise: Promise<T>): Promise<T> {\n        const { value } = await resolveProperties({\n            network: this.getNetwork(),\n            value: promise\n        });\n        return value;\n    }\n\n    async call(_tx: TransactionRequest): Promise<string> {\n        const { tx, blockTag } = await resolveProperties({\n            tx: this._getTransactionRequest(_tx),\n            blockTag: this._getBlockTag(_tx.blockTag)\n        });\n\n        return await this.#checkNetwork(this.#call(tx, blockTag, _tx.enableCcipRead ? 0: -1));\n    }\n\n    // Account\n    async #getAccountValue(request: _PerformAccountRequest, _address: AddressLike, _blockTag?: BlockTag): Promise<any> {\n        let address: string | Promise<string> = this._getAddress(_address);\n        let blockTag: string | Promise<string> = this._getBlockTag(_blockTag);\n\n        if (typeof(address) !== \"string\" || typeof(blockTag) !== \"string\") {\n            [ address, blockTag ] = await Promise.all([ address, blockTag ]);\n        }\n\n        return await this.#checkNetwork(this.#perform(Object.assign(request, { address, blockTag })));\n    }\n\n    async getBalance(address: AddressLike, blockTag?: BlockTag): Promise<bigint> {\n        return getBigInt(await this.#getAccountValue({ method: \"getBalance\" }, address, blockTag), \"%response\");\n    }\n\n    async getTransactionCount(address: AddressLike, blockTag?: BlockTag): Promise<number> {\n        return getNumber(await this.#getAccountValue({ method: \"getTransactionCount\" }, address, blockTag), \"%response\");\n    }\n\n    async getCode(address: AddressLike, blockTag?: BlockTag): Promise<string> {\n        return hexlify(await this.#getAccountValue({ method: \"getCode\" }, address, blockTag));\n    }\n\n    async getStorage(address: AddressLike, _position: BigNumberish, blockTag?: BlockTag): Promise<string> {\n        const position = getBigInt(_position, \"position\");\n        return hexlify(await this.#getAccountValue({ method: \"getStorage\", position }, address, blockTag));\n    }\n\n    // Write\n    async broadcastTransaction(signedTx: string): Promise<TransactionResponse> {\n        const { blockNumber, hash, network } = await resolveProperties({\n             blockNumber: this.getBlockNumber(),\n             hash: this._perform({\n                 method: \"broadcastTransaction\",\n                 signedTransaction: signedTx\n             }),\n             network: this.getNetwork()\n        });\n\n        const tx = Transaction.from(signedTx);\n        if (tx.hash !== hash) {\n            throw new Error(\"@TODO: the returned hash did not match\");\n        }\n\n        return this._wrapTransactionResponse(<any>tx, network).replaceableTransaction(blockNumber);\n    }\n\n    async #getBlock(block: BlockTag | string, includeTransactions: boolean): Promise<any> {\n        // @TODO: Add CustomBlockPlugin check\n\n        if (isHexString(block, 32)) {\n            return await this.#perform({\n                method: \"getBlock\", blockHash: block, includeTransactions\n            });\n        }\n\n        let blockTag = this._getBlockTag(block);\n        if (typeof(blockTag) !== \"string\") { blockTag = await blockTag; }\n\n        return await this.#perform({\n            method: \"getBlock\", blockTag, includeTransactions\n        });\n    }\n\n    // Queries\n    async getBlock(block: BlockTag | string, prefetchTxs?: boolean): Promise<null | Block> {\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#getBlock(block, !!prefetchTxs)\n        });\n        if (params == null) { return null; }\n\n        return this._wrapBlock(params, network);\n    }\n\n    async getTransaction(hash: string): Promise<null | TransactionResponse> {\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform({ method: \"getTransaction\", hash })\n        });\n        if (params == null) { return null; }\n\n        return this._wrapTransactionResponse(params, network);\n    }\n\n    async getTransactionReceipt(hash: string): Promise<null | TransactionReceipt> {\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform({ method: \"getTransactionReceipt\", hash })\n        });\n        if (params == null) { return null; }\n\n        // Some backends did not backfill the effectiveGasPrice into old transactions\n        // in the receipt, so we look it up manually and inject it.\n        if (params.gasPrice == null && params.effectiveGasPrice == null) {\n            const tx = await this.#perform({ method: \"getTransaction\", hash });\n            if (tx == null) { throw new Error(\"report this; could not find tx or effectiveGasPrice\"); }\n            params.effectiveGasPrice = tx.gasPrice;\n        }\n\n        return this._wrapTransactionReceipt(params, network);\n    }\n\n    async getTransactionResult(hash: string): Promise<null | string> {\n        const { result } = await resolveProperties({\n            network: this.getNetwork(),\n            result: this.#perform({ method: \"getTransactionResult\", hash })\n        });\n        if (result == null) { return null; }\n        return hexlify(result);\n    }\n\n    // Bloom-filter Queries\n    async getLogs(_filter: Filter | FilterByBlockHash): Promise<Array<Log>> {\n        let filter = this._getFilter(_filter);\n        if (isPromise(filter)) { filter = await filter; }\n\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform<Array<LogParams>>({ method: \"getLogs\", filter })\n        });\n\n        return params.map((p) => this._wrapLog(p, network));\n    }\n\n    // ENS\n    _getProvider(chainId: number): AbstractProvider {\n        assert(false, \"provider cannot connect to target network\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"_getProvider()\"\n        });\n    }\n\n    async getResolver(name: string): Promise<null | EnsResolver> {\n        return await EnsResolver.fromName(this, name);\n    }\n\n    async getAvatar(name: string): Promise<null | string> {\n        const resolver = await this.getResolver(name);\n        if (resolver) { return await resolver.getAvatar(); }\n        return null;\n    }\n\n    async resolveName(name: string): Promise<null | string>{\n        const resolver = await this.getResolver(name);\n        if (resolver) { return await resolver.getAddress(); }\n        return null;\n    }\n\n    async lookupAddress(address: string): Promise<null | string> {\n        address = getAddress(address);\n        const node = namehash(address.substring(2).toLowerCase() + \".addr.reverse\");\n\n        try {\n\n            const ensAddr = await EnsResolver.getEnsAddress(this);\n            const ensContract = new Contract(ensAddr, [\n                \"function resolver(bytes32) view returns (address)\"\n            ], this);\n\n            const resolver = await ensContract.resolver(node);\n            if (resolver == null || resolver === ZeroAddress) { return null; }\n\n            const resolverContract = new Contract(resolver, [\n                \"function name(bytes32) view returns (string)\"\n            ], this);\n            const name = await resolverContract.name(node);\n\n            // Failed forward resolution\n            const check = await this.resolveName(name);\n            if (check !== address) { return null; }\n\n            return name;\n\n        } catch (error) {\n            // No data was returned from the resolver\n            if (isError(error, \"BAD_DATA\") && error.value === \"0x\") {\n                return null;\n            }\n\n            // Something reerted\n            if (isError(error, \"CALL_EXCEPTION\")) { return null; }\n\n            throw error;\n        }\n\n        return null;\n    }\n\n    async waitForTransaction(hash: string, _confirms?: null | number, timeout?: null | number): Promise<null | TransactionReceipt> {\n        const confirms = (_confirms != null) ? _confirms: 1;\n        if (confirms === 0) { return this.getTransactionReceipt(hash); }\n\n        return new Promise(async (resolve, reject) => {\n            let timer: null | Timer = null;\n\n            const listener = (async (blockNumber: number) => {\n                try {\n                    const receipt = await this.getTransactionReceipt(hash);\n                    if (receipt != null) {\n                        if (blockNumber - receipt.blockNumber + 1 >= confirms) {\n                            resolve(receipt);\n                            //this.off(\"block\", listener);\n                            if (timer) {\n                                clearTimeout(timer);\n                                timer = null;\n                            }\n                            return;\n                        }\n                    }\n                } catch (error) {\n                    console.log(\"EEE\", error);\n                }\n                this.once(\"block\", listener);\n            });\n\n            if (timeout != null) {\n                timer = setTimeout(() => {\n                    if (timer == null) { return; }\n                    timer = null;\n                    this.off(\"block\", listener);\n                    reject(makeError(\"timeout\", \"TIMEOUT\", { reason: \"timeout\" }));\n                }, timeout);\n            }\n\n            listener(await this.getBlockNumber());\n        });\n    }\n\n    async waitForBlock(blockTag?: BlockTag): Promise<Block> {\n        assert(false, \"not implemented yet\", \"NOT_IMPLEMENTED\", {\n            operation: \"waitForBlock\"\n        });\n    }\n\n    /**\n     *  Clear a timer created using the [[_setTimeout]] method.\n     */\n    _clearTimeout(timerId: number): void {\n        const timer = this.#timers.get(timerId);\n        if (!timer) { return; }\n        if (timer.timer) { clearTimeout(timer.timer); }\n        this.#timers.delete(timerId);\n    }\n\n    /**\n     *  Create a timer that will execute %%func%% after at least %%timeout%%\n     *  (in ms). If %%timeout%% is unspecified, then %%func%% will execute\n     *  in the next event loop.\n     *\n     *  [Pausing](AbstractProvider-paused) the provider will pause any\n     *  associated timers.\n     */\n    _setTimeout(_func: () => void, timeout?: number): number {\n        if (timeout == null) { timeout = 0; }\n        const timerId = this.#nextTimer++;\n        const func = () => {\n            this.#timers.delete(timerId);\n            _func();\n        };\n\n        if (this.paused) {\n            this.#timers.set(timerId, { timer: null, func, time: timeout });\n        } else {\n            const timer = setTimeout(func, timeout);\n            this.#timers.set(timerId, { timer, func, time: getTime() });\n        }\n\n        return timerId;\n    }\n\n    /**\n     *  Perform %%func%% on each subscriber.\n     */\n    _forEachSubscriber(func: (s: Subscriber) => void): void {\n        for (const sub of this.#subs.values()) {\n            func(sub.subscriber);\n        }\n    }\n\n    /**\n     *  Sub-classes may override this to customize subscription\n     *  implementations.\n     */\n    _getSubscriber(sub: Subscription): Subscriber {\n        switch (sub.type) {\n            case \"debug\":\n            case \"error\":\n            case \"network\":\n                return new UnmanagedSubscriber(sub.type);\n            case \"block\": {\n                const subscriber = new PollingBlockSubscriber(this);\n                subscriber.pollingInterval = this.pollingInterval;\n                return subscriber;\n            }\n            case \"safe\": case \"finalized\":\n                return new PollingBlockTagSubscriber(this, sub.type);\n            case \"event\":\n                return new PollingEventSubscriber(this, sub.filter);\n            case \"transaction\":\n                return new PollingTransactionSubscriber(this, sub.hash);\n            case \"orphan\":\n                return new PollingOrphanSubscriber(this, sub.filter);\n        }\n\n        throw new Error(`unsupported event: ${ sub.type }`);\n    }\n\n    /**\n     *  If a [[Subscriber]] fails and needs to replace itself, this\n     *  method may be used.\n     *\n     *  For example, this is used for providers when using the\n     *  ``eth_getFilterChanges`` method, which can return null if state\n     *  filters are not supported by the backend, allowing the Subscriber\n     *  to swap in a [[PollingEventSubscriber]].\n     */\n    _recoverSubscriber(oldSub: Subscriber, newSub: Subscriber): void {\n        for (const sub of this.#subs.values()) {\n            if (sub.subscriber === oldSub) {\n                if (sub.started) { sub.subscriber.stop(); }\n                sub.subscriber = newSub;\n                if (sub.started) { newSub.start(); }\n                if (this.#pausedState != null) { newSub.pause(this.#pausedState); }\n                break;\n            }\n        }\n    }\n\n    async #hasSub(event: ProviderEvent, emitArgs?: Array<any>): Promise<null | Sub> {\n        let sub = await getSubscription(event, this);\n        // This is a log that is removing an existing log; we actually want\n        // to emit an orphan event for the removed log\n        if (sub.type === \"event\" && emitArgs && emitArgs.length > 0 && emitArgs[0].removed === true) {\n            sub = await getSubscription({ orphan: \"drop-log\", log: emitArgs[0] }, this);\n        }\n        return this.#subs.get(sub.tag) || null;\n    }\n\n    async #getSub(event: ProviderEvent): Promise<Sub> {\n        const subscription = await getSubscription(event, this);\n\n        // Prevent tampering with our tag in any subclass' _getSubscriber\n        const tag = subscription.tag;\n\n        let sub = this.#subs.get(tag);\n        if (!sub) {\n            const subscriber = this._getSubscriber(subscription);\n\n            const addressableMap = new WeakMap();\n            const nameMap = new Map();\n            sub = { subscriber, tag, addressableMap, nameMap, started: false, listeners: [ ] };\n            this.#subs.set(tag, sub);\n        }\n\n        return sub;\n    }\n\n    async on(event: ProviderEvent, listener: Listener): Promise<this> {\n        const sub = await this.#getSub(event);\n        sub.listeners.push({ listener, once: false });\n        if (!sub.started) {\n            sub.subscriber.start();\n            sub.started = true;\n            if (this.#pausedState != null) { sub.subscriber.pause(this.#pausedState); }\n        }\n        return this;\n    }\n\n    async once(event: ProviderEvent, listener: Listener): Promise<this> {\n        const sub = await this.#getSub(event);\n        sub.listeners.push({ listener, once: true });\n        if (!sub.started) {\n            sub.subscriber.start();\n            sub.started = true;\n            if (this.#pausedState != null) { sub.subscriber.pause(this.#pausedState); }\n        }\n        return this;\n    }\n\n    async emit(event: ProviderEvent, ...args: Array<any>): Promise<boolean> {\n        const sub = await this.#hasSub(event, args);\n        // If there is not subscription or if a recent emit removed\n        // the last of them (which also deleted the sub) do nothing\n        if (!sub || sub.listeners.length === 0) { return false; };\n\n        const count = sub.listeners.length;\n        sub.listeners = sub.listeners.filter(({ listener, once }) => {\n            const payload = new EventPayload(this, (once ? null: listener), event);\n            try {\n                listener.call(this, ...args, payload);\n            } catch(error) { }\n            return !once;\n        });\n\n        if (sub.listeners.length === 0) {\n            if (sub.started) { sub.subscriber.stop(); }\n            this.#subs.delete(sub.tag);\n        }\n\n        return (count > 0);\n    }\n\n    async listenerCount(event?: ProviderEvent): Promise<number> {\n        if (event) {\n            const sub = await this.#hasSub(event);\n            if (!sub) { return 0; }\n            return sub.listeners.length;\n        }\n\n        let total = 0;\n        for (const { listeners } of this.#subs.values()) {\n            total += listeners.length;\n        }\n        return total;\n    }\n\n    async listeners(event?: ProviderEvent): Promise<Array<Listener>> {\n        if (event) {\n            const sub = await this.#hasSub(event);\n            if (!sub) { return  [ ]; }\n            return sub.listeners.map(({ listener }) => listener);\n        }\n        let result: Array<Listener> = [ ];\n        for (const { listeners } of this.#subs.values()) {\n            result = result.concat(listeners.map(({ listener }) => listener));\n        }\n        return result;\n    }\n\n    async off(event: ProviderEvent, listener?: Listener): Promise<this> {\n        const sub = await this.#hasSub(event);\n        if (!sub) { return this; }\n\n        if (listener) {\n            const index = sub.listeners.map(({ listener }) => listener).indexOf(listener);\n            if (index >= 0) { sub.listeners.splice(index, 1); }\n        }\n\n        if (!listener || sub.listeners.length === 0) {\n            if (sub.started) { sub.subscriber.stop(); }\n            this.#subs.delete(sub.tag);\n        }\n\n        return this;\n    }\n\n    async removeAllListeners(event?: ProviderEvent): Promise<this> {\n        if (event) {\n            const { tag, started, subscriber } = await this.#getSub(event);\n            if (started) { subscriber.stop(); }\n            this.#subs.delete(tag);\n        } else {\n            for (const [ tag, { started, subscriber } ] of this.#subs) {\n                if (started) { subscriber.stop(); }\n                this.#subs.delete(tag);\n            }\n        }\n        return this;\n    }\n\n    // Alias for \"on\"\n    async addListener(event: ProviderEvent, listener: Listener): Promise<this> {\n       return await this.on(event, listener);\n    }\n\n    // Alias for \"off\"\n    async removeListener(event: ProviderEvent, listener: Listener): Promise<this> {\n       return this.off(event, listener);\n    }\n\n    /**\n     *  If this provider has been destroyed using the [[destroy]] method.\n     *\n     *  Once destroyed, all resources are reclaimed, internal event loops\n     *  and timers are cleaned up and no further requests may be sent to\n     *  the provider.\n     */\n    get destroyed(): boolean {\n        return this.#destroyed;\n    }\n\n    /**\n     *  Sub-classes may use this to shutdown any sockets or release their\n     *  resources and reject any pending requests.\n     *\n     *  Sub-classes **must** call ``super.destroy()``.\n     */\n    destroy(): void {\n        // Stop all listeners\n        this.removeAllListeners();\n\n        // Shut down all tiemrs\n        for (const timerId of this.#timers.keys()) {\n            this._clearTimeout(timerId);\n        }\n\n        this.#destroyed = true;\n    }\n\n    /**\n     *  Whether the provider is currently paused.\n     *\n     *  A paused provider will not emit any events, and generally should\n     *  not make any requests to the network, but that is up to sub-classes\n     *  to manage.\n     *\n     *  Setting ``paused = true`` is identical to calling ``.pause(false)``,\n     *  which will buffer any events that occur while paused until the\n     *  provider is unpaused.\n     */\n    get paused(): boolean { return (this.#pausedState != null); }\n    set paused(pause: boolean) {\n        if (!!pause === this.paused) { return; }\n\n        if (this.paused) {\n            this.resume();\n        } else {\n            this.pause(false);\n        }\n    }\n\n    /**\n     *  Pause the provider. If %%dropWhilePaused%%, any events that occur\n     *  while paused are dropped, otherwise all events will be emitted once\n     *  the provider is unpaused.\n     */\n    pause(dropWhilePaused?: boolean): void {\n        this.#lastBlockNumber = -1;\n\n        if (this.#pausedState != null) {\n            if (this.#pausedState == !!dropWhilePaused) { return; }\n            assert(false, \"cannot change pause type; resume first\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"pause\"\n            });\n        }\n\n        this._forEachSubscriber((s) => s.pause(dropWhilePaused));\n        this.#pausedState = !!dropWhilePaused;\n\n        for (const timer of this.#timers.values()) {\n            // Clear the timer\n            if (timer.timer) { clearTimeout(timer.timer); }\n\n            // Remaining time needed for when we become unpaused\n            timer.time = getTime() - timer.time;\n        }\n    }\n\n    /**\n     *  Resume the provider.\n     */\n    resume(): void {\n        if (this.#pausedState == null) { return; }\n\n        this._forEachSubscriber((s) => s.resume());\n        this.#pausedState = null;\n        for (const timer of this.#timers.values()) {\n            // Remaining time when we were paused\n            let timeout = timer.time;\n            if (timeout < 0) { timeout = 0; }\n\n            // Start time (in cause paused, so we con compute remaininf time)\n            timer.time = getTime();\n\n            // Start the timer\n            setTimeout(timer.func, timeout);\n        }\n    }\n}\n\n\nfunction _parseString(result: string, start: number): null | string {\n    try {\n        const bytes = _parseBytes(result, start);\n        if (bytes) { return toUtf8String(bytes); }\n    } catch(error) { }\n    return null;\n}\n\nfunction _parseBytes(result: string, start: number): null | string {\n    if (result === \"0x\") { return null; }\n    try {\n        const offset = getNumber(dataSlice(result, start, start + 32));\n        const length = getNumber(dataSlice(result, offset, offset + 32));\n\n        return dataSlice(result, offset + 32, offset + 32 + length);\n    } catch (error) { }\n    return null;\n}\n\nfunction numPad(value: number): Uint8Array {\n    const result = toBeArray(value);\n    if (result.length > 32) { throw new Error(\"internal; should not happen\"); }\n\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\n\nfunction bytesPad(value: Uint8Array): Uint8Array {\n    if ((value.length % 32) === 0) { return value; }\n\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n\nconst empty: Uint8Array = new Uint8Array([ ]);\n\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas: Array<BytesLike>): string {\n    const result: Array<Uint8Array> = [ ];\n\n    let byteCount = 0;\n\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(empty);\n        byteCount += 32;\n    }\n\n    for (let i = 0; i < datas.length; i++) {\n        const data = getBytes(datas[i]);\n\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n\n    return concat(result);\n}\n\nconst zeros = \"0x0000000000000000000000000000000000000000000000000000000000000000\"\nfunction parseOffchainLookup(data: string): CcipArgs {\n    const result: CcipArgs = {\n        sender: \"\", urls: [ ], calldata: \"\", selector: \"\", extraData: \"\", errorArgs: [ ]\n    };\n\n    assert(dataLength(data) >= 5 * 32, \"insufficient OffchainLookup data\", \"OFFCHAIN_FAULT\", {\n        reason: \"insufficient OffchainLookup data\"\n    });\n\n    const sender = dataSlice(data, 0, 32);\n    assert(dataSlice(sender, 0, 12) === dataSlice(zeros, 0, 12), \"corrupt OffchainLookup sender\", \"OFFCHAIN_FAULT\", {\n        reason: \"corrupt OffchainLookup sender\"\n    });\n    result.sender = dataSlice(sender, 12);\n\n    // Read the URLs from the response\n    try {\n        const urls: Array<string> = [];\n        const urlsOffset = getNumber(dataSlice(data, 32, 64));\n        const urlsLength = getNumber(dataSlice(data, urlsOffset, urlsOffset + 32));\n        const urlsData = dataSlice(data, urlsOffset + 32);\n        for (let u = 0; u < urlsLength; u++) {\n            const url = _parseString(urlsData, u * 32);\n            if (url == null) { throw new Error(\"abort\"); }\n            urls.push(url);\n        }\n        result.urls = urls;\n    } catch (error) {\n        assert(false, \"corrupt OffchainLookup urls\", \"OFFCHAIN_FAULT\", {\n            reason: \"corrupt OffchainLookup urls\"\n        });\n    }\n\n    // Get the CCIP calldata to forward\n    try {\n        const calldata = _parseBytes(data, 64);\n        if (calldata == null) { throw new Error(\"abort\"); }\n        result.calldata = calldata;\n    } catch (error) {\n        assert(false, \"corrupt OffchainLookup calldata\", \"OFFCHAIN_FAULT\", {\n            reason: \"corrupt OffchainLookup calldata\"\n        });\n    }\n\n    // Get the callbackSelector (bytes4)\n    assert(dataSlice(data, 100, 128) === dataSlice(zeros, 0, 28), \"corrupt OffchainLookup callbaackSelector\", \"OFFCHAIN_FAULT\", {\n        reason: \"corrupt OffchainLookup callbaackSelector\"\n    });\n    result.selector = dataSlice(data, 96, 100);\n\n    // Get the extra data to send back to the contract as context\n    try {\n        const extraData = _parseBytes(data, 128);\n        if (extraData == null) { throw new Error(\"abort\"); }\n        result.extraData = extraData;\n    } catch (error) {\n        assert(false, \"corrupt OffchainLookup extraData\", \"OFFCHAIN_FAULT\", {\n            reason: \"corrupt OffchainLookup extraData\"\n        });\n    }\n\n    result.errorArgs = \"sender,urls,calldata,selector,extraData\".split(/,/).map((k) => (<any>result)[k])\n\n    return result;\n}\n", "/**\n *  Generally the [[Wallet]] and [[JsonRpcSigner]] and their sub-classes\n *  are sufficent for most developers, but this is provided to\n *  fascilitate more complex Signers.\n *\n *  @_section: api/providers/abstract-signer: Subclassing Signer [abstract-signer]\n */\nimport { resolveAddress } from \"../address/index.js\";\nimport { Transaction } from \"../transaction/index.js\";\nimport {\n    defineProperties, getBigInt, resolveProperties,\n    assert, assertArgument\n} from \"../utils/index.js\";\n\nimport { copyRequest } from \"./provider.js\";\n\nimport type { TypedDataDomain, TypedDataField } from \"../hash/index.js\";\nimport type { TransactionLike } from \"../transaction/index.js\";\n\nimport type {\n    BlockTag, Provider, TransactionRequest, TransactionResponse\n} from \"./provider.js\";\nimport type { Signer } from \"./signer.js\";\n\n\nfunction checkProvider(signer: AbstractSigner, operation: string): Provider {\n    if (signer.provider) { return signer.provider; }\n    assert(false, \"missing provider\", \"UNSUPPORTED_OPERATION\", { operation });\n}\n\nasync function populate(signer: AbstractSigner, tx: TransactionRequest): Promise<TransactionLike<string>> {\n    let pop: any = copyRequest(tx);\n\n    if (pop.to != null) { pop.to = resolveAddress(pop.to, signer); }\n\n    if (pop.from != null) {\n        const from = pop.from;\n        pop.from = Promise.all([\n            signer.getAddress(),\n            resolveAddress(from, signer)\n        ]).then(([ address, from ]) => {\n            assertArgument(address.toLowerCase() === from.toLowerCase(),\n                \"transaction from mismatch\", \"tx.from\", from);\n            return address;\n        });\n    } else {\n        pop.from = signer.getAddress();\n    }\n\n    return await resolveProperties(pop);\n}\n\n\n/**\n *  An **AbstractSigner** includes most of teh functionality required\n *  to get a [[Signer]] working as expected, but requires a few\n *  Signer-specific methods be overridden.\n *\n */\nexport abstract class AbstractSigner<P extends null | Provider = null | Provider> implements Signer {\n    /**\n     *  The provider this signer is connected to.\n     */\n    readonly provider!: P;\n\n    /**\n     *  Creates a new Signer connected to %%provider%%.\n     */\n    constructor(provider?: P) {\n        defineProperties<AbstractSigner>(this, { provider: (provider || null) });\n    }\n\n    /**\n     *  Resolves to the Signer address.\n     */\n    abstract getAddress(): Promise<string>;\n\n    /**\n     *  Returns the signer connected to %%provider%%.\n     *\n     *  This may throw, for example, a Signer connected over a Socket or\n     *  to a specific instance of a node may not be transferrable.\n     */\n    abstract connect(provider: null | Provider): Signer;\n\n    async getNonce(blockTag?: BlockTag): Promise<number> {\n        return checkProvider(this, \"getTransactionCount\").getTransactionCount(await this.getAddress(), blockTag);\n    }\n\n    async populateCall(tx: TransactionRequest): Promise<TransactionLike<string>> {\n        const pop = await populate(this, tx);\n        return pop;\n    }\n\n    async populateTransaction(tx: TransactionRequest): Promise<TransactionLike<string>> {\n        const provider = checkProvider(this, \"populateTransaction\");\n\n        const pop = await populate(this, tx);\n\n        if (pop.nonce == null) {\n            pop.nonce = await this.getNonce(\"pending\");\n        }\n\n        if (pop.gasLimit == null) {\n            pop.gasLimit = await this.estimateGas(pop);\n        }\n\n        // Populate the chain ID\n        const network = await (<Provider>(this.provider)).getNetwork();\n        if (pop.chainId != null) {\n            const chainId = getBigInt(pop.chainId);\n            assertArgument(chainId === network.chainId, \"transaction chainId mismatch\", \"tx.chainId\", tx.chainId);\n        } else {\n            pop.chainId = network.chainId;\n        }\n\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (pop.maxFeePerGas != null || pop.maxPriorityFeePerGas != null);\n        if (pop.gasPrice != null && (pop.type === 2 || hasEip1559)) {\n            assertArgument(false, \"eip-1559 transaction do not support gasPrice\", \"tx\", tx);\n        } else if ((pop.type === 0 || pop.type === 1) && hasEip1559) {\n            assertArgument(false, \"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"tx\", tx);\n        }\n\n        if ((pop.type === 2 || pop.type == null) && (pop.maxFeePerGas != null && pop.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            pop.type = 2;\n\n        } else if (pop.type === 0 || pop.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n\n            // We need to get fee data to determine things\n            const feeData = await provider.getFeeData();\n\n            assert(feeData.gasPrice != null, \"network does not support gasPrice\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"getGasPrice\" });\n\n            // Populate missing gasPrice\n            if (pop.gasPrice == null) { pop.gasPrice = feeData.gasPrice; }\n\n        } else {\n\n            // We need to get fee data to determine things\n            const feeData = await provider.getFeeData();\n\n            if (pop.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n\n                    // Upgrade transaction from null to eip-1559\n                    pop.type = 2;\n\n                    if (pop.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = pop.gasPrice;\n                        delete pop.gasPrice;\n                        pop.maxFeePerGas = gasPrice;\n                        pop.maxPriorityFeePerGas = gasPrice;\n\n                    } else {\n                        // Populate missing fee data\n\n                        if (pop.maxFeePerGas == null) {\n                            pop.maxFeePerGas = feeData.maxFeePerGas;\n                        }\n\n                        if (pop.maxPriorityFeePerGas == null) {\n                            pop.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                        }\n                    }\n\n                } else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n\n                    // ...but they are trying to use EIP-1559 properties\n                    assert(!hasEip1559, \"network does not support EIP-1559\", \"UNSUPPORTED_OPERATION\", {\n                            operation: \"populateTransaction\" });\n\n                    // Populate missing fee data\n                    if (pop.gasPrice == null) {\n                        pop.gasPrice = feeData.gasPrice;\n                    }\n\n                    // Explicitly set untyped transaction to legacy\n                    // @TODO: Maybe this shold allow type 1?\n                    pop.type = 0;\n\n               } else {\n                    // getFeeData has failed us.\n                    assert(false, \"failed to get consistent fee data\", \"UNSUPPORTED_OPERATION\", {\n                        operation: \"signer.getFeeData\" });\n                }\n\n            } else if (pop.type === 2) {\n                // Explicitly using EIP-1559\n\n                // Populate missing fee data\n                if (pop.maxFeePerGas == null) {\n                    pop.maxFeePerGas = feeData.maxFeePerGas;\n                }\n\n                if (pop.maxPriorityFeePerGas == null) {\n                    pop.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                }\n            }\n        }\n\n//@TOOD: Don't await all over the place; save them up for\n// the end for better batching\n        return await resolveProperties(pop);\n    }\n\n    async estimateGas(tx: TransactionRequest): Promise<bigint> {\n        return checkProvider(this, \"estimateGas\").estimateGas(await this.populateCall(tx));\n    }\n\n    async call(tx: TransactionRequest): Promise<string> {\n        return checkProvider(this, \"call\").call(await this.populateCall(tx));\n    }\n\n    async resolveName(name: string): Promise<null | string> {\n        const provider = checkProvider(this, \"resolveName\");\n        return await provider.resolveName(name);\n    }\n\n    async sendTransaction(tx: TransactionRequest): Promise<TransactionResponse> {\n        const provider = checkProvider(this, \"sendTransaction\");\n\n        const pop = await this.populateTransaction(tx);\n        delete pop.from;\n        const txObj = Transaction.from(pop);\n        return await provider.broadcastTransaction(await this.signTransaction(txObj));\n    }\n\n    abstract signTransaction(tx: TransactionRequest): Promise<string>;\n    abstract signMessage(message: string | Uint8Array): Promise<string>;\n    abstract signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string>;\n}\n\n/**\n *  A **VoidSigner** is a class deisgned to allow an address to be used\n *  in any API which accepts a Signer, but for which there are no\n *  credentials available to perform any actual signing.\n *\n *  This for example allow impersonating an account for the purpose of\n *  static calls or estimating gas, but does not allow sending transactions.\n */\nexport class VoidSigner extends AbstractSigner {\n    /**\n     *  The signer address.\n     */\n    readonly address!: string;\n\n    /**\n     *  Creates a new **VoidSigner** with %%address%% attached to\n     *  %%provider%%.\n     */\n    constructor(address: string, provider?: null | Provider) {\n        super(provider);\n        defineProperties<VoidSigner>(this, { address });\n    }\n\n    async getAddress(): Promise<string> { return this.address; }\n\n    connect(provider: null | Provider): VoidSigner {\n        return new VoidSigner(this.address, provider);\n    }\n\n    #throwUnsupported(suffix: string, operation: string): never {\n        assert(false, `VoidSigner cannot sign ${ suffix }`, \"UNSUPPORTED_OPERATION\", { operation });\n    }\n\n    async signTransaction(tx: TransactionRequest): Promise<string> {\n        this.#throwUnsupported(\"transactions\", \"signTransaction\");\n    }\n\n    async signMessage(message: string | Uint8Array): Promise<string> {\n        this.#throwUnsupported(\"messages\", \"signMessage\");\n    }\n\n    async signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        this.#throwUnsupported(\"typed-data\", \"signTypedData\");\n    }\n}\n\n", "/**\n *  There are many awesome community services that provide Ethereum\n *  nodes both for developers just starting out and for large-scale\n *  communities.\n *\n *  @_section: api/providers/thirdparty: Community Providers  [thirdparty]\n */\n\n/**\n *  Providers which offer community credentials should extend this\n *  to notify any interested consumers whether community credentials\n *  are in-use.\n */\nexport interface CommunityResourcable {\n    /**\n     *  Returns true of the instance is connected using the community\n     *  credentials.\n     */\n    isCommunityResource(): boolean;\n}\n\n// Show the throttle message only once per service\nconst shown: Set<string> = new Set();\n\n/**\n *  Displays a warning in tht console when the community resource is\n *  being used too heavily by the app, recommending the developer\n *  acquire their own credentials instead of using the community\n *  credentials.\n *\n *  The notification will only occur once per service.\n */\nexport function showThrottleMessage(service: string): void {\n    if (shown.has(service)) { return; }\n    shown.add(service);\n\n    console.log(\"========= NOTICE =========\")\n    console.log(`Request-Rate Exceeded for ${ service } (this message will not be repeated)`);\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.org/api-keys/\");\n    console.log(\"==========================\");\n}\n", "import { isError } from \"../utils/index.js\";\n\nimport { PollingEventSubscriber } from \"./subscriber-polling.js\";\n\nimport type { AbstractProvider, Subscriber } from \"./abstract-provider.js\";\nimport type { Network } from \"./network.js\";\nimport type { EventFilter } from \"./provider.js\";\nimport type { JsonRpcApiProvider } from \"./provider-jsonrpc.js\";\n\nfunction copy(obj: any): any {\n    return JSON.parse(JSON.stringify(obj));\n}\n\n/**\n *  Some backends support subscribing to events using a Filter ID.\n *\n *  When subscribing with this technique, the node issues a unique\n *  //Filter ID//. At this point the node dedicates resources to\n *  the filter, so that periodic calls to follow up on the //Filter ID//\n *  will receive any events since the last call.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class FilterIdSubscriber implements Subscriber {\n    #provider: JsonRpcApiProvider;\n\n    #filterIdPromise: null | Promise<string>;\n    #poller: (b: number) => Promise<void>;\n\n    #running: boolean;\n\n    #network: null | Network;\n\n    #hault: boolean;\n\n    /**\n     *  Creates a new **FilterIdSubscriber** which will used [[_subscribe]]\n     *  and [[_emitResults]] to setup the subscription and provide the event\n     *  to the %%provider%%.\n     */\n    constructor(provider: JsonRpcApiProvider) {\n        this.#provider = provider;\n\n        this.#filterIdPromise = null;\n        this.#poller = this.#poll.bind(this);\n\n        this.#running = false;\n\n        this.#network = null;\n\n        this.#hault = false;\n    }\n\n    /**\n     *  Sub-classes **must** override this to begin the subscription.\n     */\n    _subscribe(provider: JsonRpcApiProvider): Promise<string> {\n        throw new Error(\"subclasses must override this\");\n    }\n\n    /**\n     *  Sub-classes **must** override this handle the events.\n     */\n    _emitResults(provider: AbstractProvider, result: Array<any>): Promise<void> {\n        throw new Error(\"subclasses must override this\");\n    }\n\n    /**\n     *  Sub-classes **must** override this handle recovery on errors.\n     */\n    _recover(provider: AbstractProvider): Subscriber {\n        throw new Error(\"subclasses must override this\");\n    }\n\n    async #poll(blockNumber: number): Promise<void> {\n        try {\n            // Subscribe if necessary\n            if (this.#filterIdPromise == null) {\n                this.#filterIdPromise = this._subscribe(this.#provider);\n            }\n\n            // Get the Filter ID\n            let filterId: null | string = null;\n            try {\n                filterId = await this.#filterIdPromise;\n            } catch (error) {\n                if (!isError(error, \"UNSUPPORTED_OPERATION\") || error.operation !== \"eth_newFilter\") {\n                    throw error;\n                }\n            }\n\n            // The backend does not support Filter ID; downgrade to\n            // polling\n            if (filterId == null) {\n                this.#filterIdPromise = null;\n                this.#provider._recoverSubscriber(this, this._recover(this.#provider));\n                return;\n            }\n\n            const network = await this.#provider.getNetwork();\n            if (!this.#network) { this.#network = network; }\n\n            if ((this.#network as Network).chainId !== network.chainId) {\n                throw new Error(\"chaid changed\");\n            }\n\n            if (this.#hault) { return; }\n\n            const result = await this.#provider.send(\"eth_getFilterChanges\", [ filterId ]);\n            await this._emitResults(this.#provider, result);\n        } catch (error) { console.log(\"@TODO\", error); }\n\n        this.#provider.once(\"block\", this.#poller);\n    }\n\n    #teardown(): void {\n        const filterIdPromise = this.#filterIdPromise;\n        if (filterIdPromise) {\n            this.#filterIdPromise = null;\n            filterIdPromise.then((filterId) => {\n                this.#provider.send(\"eth_uninstallFilter\", [ filterId ]);\n            });\n        }\n    }\n\n    start(): void {\n        if (this.#running) { return; }\n        this.#running = true;\n\n        this.#poll(-2);\n    }\n\n    stop(): void {\n        if (!this.#running) { return; }\n        this.#running = false;\n\n        this.#hault = true;\n        this.#teardown();\n        this.#provider.off(\"block\", this.#poller);\n    }\n\n    pause(dropWhilePaused?: boolean): void {\n        if (dropWhilePaused){ this.#teardown(); }\n        this.#provider.off(\"block\", this.#poller);\n    }\n\n    resume(): void { this.start(); }\n}\n\n/**\n *  A **FilterIdSubscriber** for receiving contract events.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class FilterIdEventSubscriber extends FilterIdSubscriber {\n    #event: EventFilter;\n\n    /**\n     *  Creates a new **FilterIdEventSubscriber** attached to %%provider%%\n     *  listening for %%filter%%.\n     */\n    constructor(provider: JsonRpcApiProvider, filter: EventFilter) {\n        super(provider);\n        this.#event = copy(filter);\n    }\n\n    _recover(provider: AbstractProvider): Subscriber {\n        return new PollingEventSubscriber(provider, this.#event);\n    }\n\n    async _subscribe(provider: JsonRpcApiProvider): Promise<string> {\n        const filterId = await provider.send(\"eth_newFilter\", [ this.#event ]);\n        return filterId;\n    }\n\n    async _emitResults(provider: JsonRpcApiProvider, results: Array<any>): Promise<void> {\n        for (const result of results) {\n            provider.emit(this.#event, provider._wrapLog(result, provider._network));\n        }\n    }\n}\n\n/**\n *  A **FilterIdSubscriber** for receiving pending transactions events.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class FilterIdPendingSubscriber extends FilterIdSubscriber {\n    async _subscribe(provider: JsonRpcApiProvider): Promise<string> {\n        return await provider.send(\"eth_newPendingTransactionFilter\", [ ]);\n    }\n\n    async _emitResults(provider: JsonRpcApiProvider, results: Array<any>): Promise<void> {\n        for (const result of results) {\n            provider.emit(\"pending\", result);\n        }\n    }\n}\n", "/**\n *  One of the most common ways to interact with the blockchain is\n *  by a node running a JSON-RPC interface which can be connected to,\n *  based on the transport, using:\n *\n *  - HTTP or HTTPS - [[JsonRpcProvider]]\n *  - WebSocket - [[WebSocketProvider]]\n *  - IPC - [[IpcSocketProvider]]\n *\n * @_section: api/providers/jsonrpc:JSON-RPC Provider  [about-jsonrpcProvider]\n */\n\n// @TODO:\n// - Add the batching API\n\n// https://playground.open-rpc.org/?schemaUrl=https://raw.githubusercontent.com/ethereum/eth1.0-apis/assembled-spec/openrpc.json&uiSchema%5BappBar%5D%5Bui:splitView%5D=true&uiSchema%5BappBar%5D%5Bui:input%5D=false&uiSchema%5BappBar%5D%5Bui:examplesDropdown%5D=false\n\nimport { AbiCoder } from \"../abi/index.js\";\nimport { getAddress, resolveAddress } from \"../address/index.js\";\nimport { TypedDataEncoder } from \"../hash/index.js\";\nimport { accessListify } from \"../transaction/index.js\";\nimport {\n    defineProperties, getBigInt, hexlify, isHexString, toQuantity, toUtf8Bytes,\n    isError, makeError, assert, assertArgument,\n    FetchRequest, resolveProperties\n} from \"../utils/index.js\";\n\nimport { AbstractProvider, UnmanagedSubscriber } from \"./abstract-provider.js\";\nimport { AbstractSigner } from \"./abstract-signer.js\";\nimport { Network } from \"./network.js\";\nimport { FilterIdEventSubscriber, FilterIdPendingSubscriber } from \"./subscriber-filterid.js\";\nimport { PollingEventSubscriber } from \"./subscriber-polling.js\";\n\nimport type { TypedDataDomain, TypedDataField } from \"../hash/index.js\";\nimport type { TransactionLike } from \"../transaction/index.js\";\n\nimport type { PerformActionRequest, Subscriber, Subscription } from \"./abstract-provider.js\";\nimport type { Networkish } from \"./network.js\";\nimport type { Provider, TransactionRequest, TransactionResponse } from \"./provider.js\";\nimport type { Signer } from \"./signer.js\";\n\ntype Timer = ReturnType<typeof setTimeout>;\n\nconst Primitive = \"bigint,boolean,function,number,string,symbol\".split(/,/g);\n//const Methods = \"getAddress,then\".split(/,/g);\nfunction deepCopy<T = any>(value: T): T {\n    if (value == null || Primitive.indexOf(typeof(value)) >= 0) {\n        return value;\n    }\n\n    // Keep any Addressable\n    if (typeof((<any>value).getAddress) === \"function\") {\n        return value;\n    }\n\n    if (Array.isArray(value)) { return <any>(value.map(deepCopy)); }\n\n    if (typeof(value) === \"object\") {\n        return Object.keys(value).reduce((accum, key) => {\n            accum[key] = (<any>value)[key];\n            return accum;\n        }, <any>{ });\n    }\n\n    throw new Error(`should not happen: ${ value } (${ typeof(value) })`);\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => { setTimeout(resolve, duration); });\n}\n\nfunction getLowerCase(value: string): string {\n    if (value) { return value.toLowerCase(); }\n    return value;\n}\n\ninterface Pollable {\n    pollingInterval: number;\n}\n\nfunction isPollable(value: any): value is Pollable {\n    return (value && typeof(value.pollingInterval) === \"number\");\n}\n\n/**\n *  A JSON-RPC payload, which are sent to a JSON-RPC server.\n */\nexport type JsonRpcPayload = {\n    /**\n     *  The JSON-RPC request ID.\n     */\n    id: number;\n\n    /**\n     *  The JSON-RPC request method.\n     */\n    method: string;\n\n    /**\n     *  The JSON-RPC request parameters.\n     */\n    params: Array<any> | Record<string, any>;\n\n    /**\n     *  A required constant in the JSON-RPC specification.\n     */\n    jsonrpc: \"2.0\";\n};\n\n/**\n *  A JSON-RPC result, which are returned on success from a JSON-RPC server.\n */\nexport type JsonRpcResult = {\n    /**\n     *  The response ID to match it to the relevant request.\n     */\n    id: number;\n\n    /**\n     *  The response result.\n     */\n    result: any;\n};\n\n/**\n *  A JSON-RPC error, which are returned on failure from a JSON-RPC server.\n */\nexport type JsonRpcError = {\n    /**\n     *  The response ID to match it to the relevant request.\n     */\n    id: number;\n\n    /**\n     *  The response error.\n     */\n    error: {\n        code: number;\n        message?: string;\n        data?: any;\n    }\n};\n\n/**\n *  When subscribing to the ``\"debug\"`` event, the [[Listener]] will\n *  receive this object as the first parameter.\n */\nexport type DebugEventJsonRpcApiProvider = {\n    action: \"sendRpcPayload\",\n    payload: JsonRpcPayload | Array<JsonRpcPayload>\n} | {\n    action: \"receiveRpcResult\",\n    result: Array<JsonRpcResult | JsonRpcError>\n} | {\n    action: \"receiveRpcError\",\n    error: Error\n};\n\n/**\n *  Options for configuring a [[JsonRpcApiProvider]]. Much of this\n *  is targetted towards sub-classes, which often will not expose\n *  any of these options to their consumers.\n *\n *  **``polling``** - use the polling strategy is used immediately\n *  for events; otherwise, attempt to use filters and fall back onto\n *  polling (default: ``false``)\n *\n *  **``staticNetwork``** - do not request chain ID on requests to\n *  validate the underlying chain has not changed (default: ``null``)\n *\n *  This should **ONLY** be used if it is **certain** that the network\n *  cannot change, such as when using INFURA (since the URL dictates the\n *  network). If the network is assumed static and it does change, this\n *  can have tragic consequences. For example, this **CANNOT** be used\n *  with MetaMask, since the user can select a new network from the\n *  drop-down at any time.\n *\n *  **``batchStallTime``** - how long (ms) to aggregate requests into a\n *  single batch. ``0`` indicates batching will only encompass the current\n *  event loop. If ``batchMaxCount = 1``, this is ignored. (default: ``10``)\n *\n *  **``batchMaxSize``** - target maximum size (bytes) to allow per batch\n *  request (default: 1Mb)\n *\n *  **``batchMaxCount``** - maximum number of requests to allow in a batch.\n *  If ``batchMaxCount = 1``, then batching is disabled. (default: ``100``)\n *\n *  **``cacheTimeout``** - passed as [[AbstractProviderOptions]].\n */\nexport type JsonRpcApiProviderOptions = {\n    polling?: boolean;\n    staticNetwork?: null | boolean | Network;\n    batchStallTime?: number;\n    batchMaxSize?: number;\n    batchMaxCount?: number;\n\n    cacheTimeout?: number;\n    pollingInterval?: number;\n};\n\nconst defaultOptions = {\n    polling: false,\n    staticNetwork: null,\n\n    batchStallTime: 10,      // 10ms\n    batchMaxSize: (1 << 20), // 1Mb\n    batchMaxCount: 100,      // 100 requests\n\n    cacheTimeout: 250,\n    pollingInterval: 4000\n}\n\n/**\n *  A **JsonRpcTransactionRequest** is formatted as needed by the JSON-RPC\n *  Ethereum API specification.\n */\nexport interface JsonRpcTransactionRequest {\n     /**\n      *  The sender address to use when signing.\n      */\n     from?: string;\n\n     /**\n      *  The target address.\n      */\n     to?: string;\n\n     /**\n      *  The transaction data.\n      */\n     data?: string;\n\n     /**\n      *  The chain ID the transaction is valid on.\n      */\n     chainId?: string;\n\n     /**\n      *  The [[link-eip-2718]] transaction type.\n      */\n     type?: string;\n\n     /**\n      *  The maximum amount of gas to allow a transaction to consume.\n      *\n      *  In most other places in ethers, this is called ``gasLimit`` which\n      *  differs from the JSON-RPC Ethereum API specification.\n      */\n     gas?: string;\n\n     /**\n      *  The gas price per wei for transactions prior to [[link-eip-1559]].\n      */\n     gasPrice?: string;\n\n     /**\n      *  The maximum fee per gas for [[link-eip-1559]] transactions.\n      */\n     maxFeePerGas?: string;\n\n     /**\n      *  The maximum priority fee per gas for [[link-eip-1559]] transactions.\n      */\n     maxPriorityFeePerGas?: string;\n\n     /**\n      *  The nonce for the transaction.\n      */\n     nonce?: string;\n\n     /**\n      *  The transaction value (in wei).\n      */\n     value?: string;\n\n     /**\n      *  The transaction access list.\n      */\n     accessList?: Array<{ address: string, storageKeys: Array<string> }>;\n}\n\n// @TODO: Unchecked Signers\n\nexport class JsonRpcSigner extends AbstractSigner<JsonRpcApiProvider> {\n    address!: string;\n\n    constructor(provider: JsonRpcApiProvider, address: string) {\n        super(provider);\n        address = getAddress(address);\n        defineProperties<JsonRpcSigner>(this, { address });\n    }\n\n    connect(provider: null | Provider): Signer {\n        assert(false, \"cannot reconnect JsonRpcSigner\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"signer.connect\"\n        });\n    }\n\n    async getAddress(): Promise<string> {\n        return this.address;\n    }\n\n    // JSON-RPC will automatially fill in nonce, etc. so we just check from\n    async populateTransaction(tx: TransactionRequest): Promise<TransactionLike<string>> {\n        return await this.populateCall(tx);\n    }\n\n    // Returns just the hash of the transaction after sent, which is what\n    // the bare JSON-RPC API does;\n    async sendUncheckedTransaction(_tx: TransactionRequest): Promise<string> {\n        const tx = deepCopy(_tx);\n\n        const promises: Array<Promise<void>> = [];\n\n        // Make sure the from matches the sender\n        if (tx.from) {\n            const _from = tx.from;\n            promises.push((async () => {\n                const from = await resolveAddress(_from, this.provider);\n                assertArgument(from != null && from.toLowerCase() === this.address.toLowerCase(),\n                    \"from address mismatch\", \"transaction\", _tx);\n                tx.from = from;\n            })());\n        } else {\n            tx.from = this.address;\n        }\n\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (tx.gasLimit == null) {\n            promises.push((async () => {\n                tx.gasLimit = await this.provider.estimateGas({ ...tx, from: this.address});\n            })());\n        }\n\n        // The address may be an ENS name or Addressable\n        if (tx.to != null) {\n            const _to = tx.to;\n            promises.push((async () => {\n                tx.to = await resolveAddress(_to, this.provider);\n            })());\n        }\n\n        // Wait until all of our properties are filled in\n        if (promises.length) { await Promise.all(promises); }\n\n        const hexTx = this.provider.getRpcTransaction(tx);\n\n        return this.provider.send(\"eth_sendTransaction\", [ hexTx ]);\n    }\n\n    async sendTransaction(tx: TransactionRequest): Promise<TransactionResponse> {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider.getBlockNumber();\n\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(tx);\n\n        // Unfortunately, JSON-RPC only provides and opaque transaction hash\n        // for a response, and we need the actual transaction, so we poll\n        // for it; it should show up very quickly\n        return await (new Promise((resolve, reject) => {\n            const timeouts = [ 1000, 100 ];\n            let invalids = 0;\n\n            const checkTx = async () => {\n\n                try {\n                    // Try getting the transaction\n                    const tx = await this.provider.getTransaction(hash);\n\n                    if (tx != null) {\n                        resolve(tx.replaceableTransaction(blockNumber));\n                        return;\n                    }\n\n                } catch (error) {\n\n                    // If we were cancelled: stop polling.\n                    // If the data is bad: the node returns bad transactions\n                    // If the network changed: calling again will also fail\n                    // If unsupported: likely destroyed\n                    if (isError(error, \"CANCELLED\") || isError(error, \"BAD_DATA\") ||\n                        isError(error, \"NETWORK_ERROR\" || isError(error, \"UNSUPPORTED_OPERATION\"))) {\n\n                        if (error.info == null) { error.info = { }; }\n                        error.info.sendTransactionHash = hash;\n\n                        reject(error);\n                        return;\n                    }\n\n                    // Stop-gap for misbehaving backends; see #4513\n                    if (isError(error, \"INVALID_ARGUMENT\")) {\n                        invalids++;\n                        if (error.info == null) { error.info = { }; }\n                        error.info.sendTransactionHash = hash;\n                        if (invalids > 10) {\n                            reject(error);\n                            return;\n                        }\n                    }\n\n                    // Notify anyone that cares; but we will try again, since\n                    // it is likely an intermittent service error\n                    this.provider.emit(\"error\", makeError(\"failed to fetch transation after sending (will try again)\", \"UNKNOWN_ERROR\", { error }));\n                }\n\n                // Wait another 4 seconds\n                this.provider._setTimeout(() => { checkTx(); }, timeouts.pop() || 4000);\n            };\n            checkTx();\n        }));\n    }\n\n    async signTransaction(_tx: TransactionRequest): Promise<string> {\n        const tx = deepCopy(_tx);\n\n        // Make sure the from matches the sender\n        if (tx.from) {\n            const from = await resolveAddress(tx.from, this.provider);\n            assertArgument(from != null && from.toLowerCase() === this.address.toLowerCase(),\n                \"from address mismatch\", \"transaction\", _tx);\n            tx.from = from;\n        } else {\n            tx.from = this.address;\n        }\n\n        const hexTx = this.provider.getRpcTransaction(tx);\n        return await this.provider.send(\"eth_signTransaction\", [ hexTx ]);\n    }\n\n\n    async signMessage(_message: string | Uint8Array): Promise<string> {\n        const message = ((typeof(_message) === \"string\") ? toUtf8Bytes(_message): _message);\n        return await this.provider.send(\"personal_sign\", [\n            hexlify(message), this.address.toLowerCase() ]);\n    }\n\n    async signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, _value: Record<string, any>): Promise<string> {\n        const value = deepCopy(_value);\n\n        // Populate any ENS names (in-place)\n        const populated = await TypedDataEncoder.resolveNames(domain, types, value, async (value: string) => {\n            const address = await resolveAddress(value);\n            assertArgument(address != null, \"TypedData does not support null address\", \"value\", value);\n            return address;\n        });\n\n        return await this.provider.send(\"eth_signTypedData_v4\", [\n            this.address.toLowerCase(),\n            JSON.stringify(TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n        ]);\n    }\n\n    async unlock(password: string): Promise<boolean> {\n        return this.provider.send(\"personal_unlockAccount\", [\n            this.address.toLowerCase(), password, null ]);\n    }\n\n    // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n    async _legacySignMessage(_message: string | Uint8Array): Promise<string> {\n        const message = ((typeof(_message) === \"string\") ? toUtf8Bytes(_message): _message);\n        return await this.provider.send(\"eth_sign\", [\n            this.address.toLowerCase(), hexlify(message) ]);\n    }\n}\n\ntype ResolveFunc = (result: JsonRpcResult) => void;\ntype RejectFunc = (error: Error) => void;\n\ntype Payload = { payload: JsonRpcPayload, resolve: ResolveFunc, reject: RejectFunc };\n\n/**\n *  The JsonRpcApiProvider is an abstract class and **MUST** be\n *  sub-classed.\n *\n *  It provides the base for all JSON-RPC-based Provider interaction.\n *\n *  Sub-classing Notes:\n *  - a sub-class MUST override _send\n *  - a sub-class MUST call the `_start()` method once connected\n */\nexport abstract class JsonRpcApiProvider extends AbstractProvider {\n\n    #options: Required<JsonRpcApiProviderOptions>;\n\n    // The next ID to use for the JSON-RPC ID field\n    #nextId: number;\n\n    // Payloads are queued and triggered in batches using the drainTimer\n    #payloads: Array<Payload>;\n    #drainTimer: null | Timer;\n\n    #notReady: null | {\n        promise: Promise<void>,\n        resolve: null | ((v: void) => void)\n    };\n\n    #network: null | Network;\n    #pendingDetectNetwork: null | Promise<Network>;\n\n    #scheduleDrain(): void {\n        if (this.#drainTimer) { return; }\n\n        // If we aren't using batching, no harm in sending it immediately\n        const stallTime = (this._getOption(\"batchMaxCount\") === 1) ? 0: this._getOption(\"batchStallTime\");\n\n        this.#drainTimer = setTimeout(() => {\n            this.#drainTimer = null;\n\n            const payloads = this.#payloads;\n            this.#payloads = [ ];\n\n            while (payloads.length) {\n\n                // Create payload batches that satisfy our batch constraints\n                const batch = [ <Payload>(payloads.shift()) ];\n                while (payloads.length) {\n                    if (batch.length === this.#options.batchMaxCount) { break; }\n                    batch.push(<Payload>(payloads.shift()));\n                    const bytes = JSON.stringify(batch.map((p) => p.payload));\n                    if (bytes.length > this.#options.batchMaxSize) {\n                        payloads.unshift(<Payload>(batch.pop()));\n                        break;\n                    }\n                }\n\n                // Process the result to each payload\n                (async () => {\n                    const payload = ((batch.length === 1) ? batch[0].payload: batch.map((p) => p.payload));\n\n                    this.emit(\"debug\", { action: \"sendRpcPayload\", payload });\n\n                    try {\n                        const result = await this._send(payload);\n                        this.emit(\"debug\", { action: \"receiveRpcResult\", result });\n\n                        // Process results in batch order\n                        for (const { resolve, reject, payload } of batch) {\n\n                            if (this.destroyed) {\n                                reject(makeError(\"provider destroyed; cancelled request\", \"UNSUPPORTED_OPERATION\", { operation: payload.method }));\n                                continue;\n                            }\n\n                            // Find the matching result\n                            const resp = result.filter((r) => (r.id === payload.id))[0];\n\n                            // No result; the node failed us in unexpected ways\n                            if (resp == null) {\n                                const error = makeError(\"missing response for request\", \"BAD_DATA\", {\n                                    value: result, info: { payload }\n                                });\n                                this.emit(\"error\", error);\n                                reject(error);\n                                continue;\n                            }\n\n                            // The response is an error\n                            if (\"error\" in resp) {\n                                reject(this.getRpcError(payload, resp));\n                                continue;\n                            }\n\n                            // All good; send the result\n                            resolve(resp.result);\n                        }\n\n                    } catch (error: any) {\n                        this.emit(\"debug\", { action: \"receiveRpcError\", error });\n\n                        for (const { reject } of batch) {\n                            // @TODO: augment the error with the payload\n                            reject(error);\n                        }\n                    }\n                })();\n            }\n        }, stallTime);\n    }\n\n    constructor(network?: Networkish, options?: JsonRpcApiProviderOptions) {\n        super(network, options);\n\n        this.#nextId = 1;\n        this.#options = Object.assign({ }, defaultOptions, options || { });\n\n        this.#payloads = [ ];\n        this.#drainTimer = null;\n\n        this.#network = null;\n        this.#pendingDetectNetwork = null;\n\n        {\n            let resolve: null | ((value: void) => void) = null;\n            const promise = new Promise((_resolve: (value: void) => void) => {\n                resolve = _resolve;\n            });\n            this.#notReady = { promise, resolve };\n        }\n\n        const staticNetwork = this._getOption(\"staticNetwork\");\n        if (typeof(staticNetwork) === \"boolean\") {\n            assertArgument(!staticNetwork || network !== \"any\", \"staticNetwork cannot be used on special network 'any'\", \"options\", options);\n            if (staticNetwork && network != null) {\n                this.#network = Network.from(network);\n            }\n\n        } else if (staticNetwork) {\n            // Make sure any static network is compatbile with the provided netwrok\n            assertArgument(network == null || staticNetwork.matches(network),\n                \"staticNetwork MUST match network object\", \"options\", options);\n            this.#network = staticNetwork;\n        }\n    }\n\n    /**\n     *  Returns the value associated with the option %%key%%.\n     *\n     *  Sub-classes can use this to inquire about configuration options.\n     */\n    _getOption<K extends keyof JsonRpcApiProviderOptions>(key: K): JsonRpcApiProviderOptions[K] {\n        return this.#options[key];\n    }\n\n    /**\n     *  Gets the [[Network]] this provider has committed to. On each call, the network\n     *  is detected, and if it has changed, the call will reject.\n     */\n    get _network(): Network {\n        assert (this.#network, \"network is not available yet\", \"NETWORK_ERROR\");\n        return this.#network;\n    }\n\n    /**\n     *  Sends a JSON-RPC %%payload%% (or a batch) to the underlying channel.\n     *\n     *  Sub-classes **MUST** override this.\n     */\n    abstract _send(payload: JsonRpcPayload | Array<JsonRpcPayload>): Promise<Array<JsonRpcResult | JsonRpcError>>;\n\n\n    /**\n     *  Resolves to the non-normalized value by performing %%req%%.\n     *\n     *  Sub-classes may override this to modify behavior of actions,\n     *  and should generally call ``super._perform`` as a fallback.\n     */\n    async _perform(req: PerformActionRequest): Promise<any> {\n\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (req.method === \"call\" || req.method === \"estimateGas\") {\n            let tx = req.transaction;\n            if (tx && tx.type != null && getBigInt(tx.type)) {\n                // If there are no EIP-1559 properties, it might be non-EIP-a559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        req = Object.assign({ }, req, {\n                            transaction: Object.assign({ }, tx, { type: undefined })\n                        });\n                    }\n                }\n            }\n        }\n\n        const request = this.getRpcRequest(req);\n\n        if (request != null) {\n            return await this.send(request.method, request.args);\n        }\n\n        return super._perform(req);\n    }\n\n    /**\n     *  Sub-classes may override this; it detects the *actual* network that\n     *  we are **currently** connected to.\n     *\n     *  Keep in mind that [[send]] may only be used once [[ready]], otherwise the\n     *  _send primitive must be used instead.\n     */\n    async _detectNetwork(): Promise<Network> {\n        const network = this._getOption(\"staticNetwork\");\n        if (network) {\n            if (network === true) {\n                if (this.#network) { return this.#network; }\n            } else {\n                return network;\n            }\n        }\n\n        if (this.#pendingDetectNetwork) {\n            return await this.#pendingDetectNetwork;\n        }\n\n        // If we are ready, use ``send``, which enabled requests to be batched\n        if (this.ready) {\n            this.#pendingDetectNetwork = (async () => {\n                try {\n                    const result = Network.from(getBigInt(await this.send(\"eth_chainId\", [ ])));\n                    this.#pendingDetectNetwork = null;\n                    return result;\n                } catch (error) {\n                    this.#pendingDetectNetwork = null;\n                    throw error;\n                }\n            })();\n            return await this.#pendingDetectNetwork;\n        }\n\n        // We are not ready yet; use the primitive _send\n        this.#pendingDetectNetwork = (async () => {\n            const payload: JsonRpcPayload = {\n                id: this.#nextId++, method: \"eth_chainId\", params: [ ], jsonrpc: \"2.0\"\n            };\n\n            this.emit(\"debug\", { action: \"sendRpcPayload\", payload });\n\n            let result: JsonRpcResult | JsonRpcError;\n            try {\n                result = (await this._send(payload))[0];\n                this.#pendingDetectNetwork = null;\n            } catch (error) {\n                this.#pendingDetectNetwork = null;\n                this.emit(\"debug\", { action: \"receiveRpcError\", error });\n                throw error;\n            }\n\n            this.emit(\"debug\", { action: \"receiveRpcResult\", result });\n\n            if (\"result\" in result) {\n                return Network.from(getBigInt(result.result));\n            }\n\n            throw this.getRpcError(payload, result);\n        })();\n\n        return await this.#pendingDetectNetwork;\n    }\n\n    /**\n     *  Sub-classes **MUST** call this. Until [[_start]] has been called, no calls\n     *  will be passed to [[_send]] from [[send]]. If it is overridden, then\n     *  ``super._start()`` **MUST** be called.\n     *\n     *  Calling it multiple times is safe and has no effect.\n     */\n    _start(): void {\n        if (this.#notReady == null || this.#notReady.resolve == null) { return; }\n\n        this.#notReady.resolve();\n        this.#notReady = null;\n\n        (async () => {\n\n            // Bootstrap the network\n            while (this.#network == null && !this.destroyed) {\n                try {\n                    this.#network = await this._detectNetwork();\n                } catch (error) {\n                    if (this.destroyed) { break; }\n                    console.log(\"JsonRpcProvider failed to detect network and cannot start up; retry in 1s (perhaps the URL is wrong or the node is not started)\");\n                    this.emit(\"error\", makeError(\"failed to bootstrap network detection\", \"NETWORK_ERROR\", { event: \"initial-network-discovery\", info: { error } }));\n                    await stall(1000);\n                }\n            }\n\n            // Start dispatching requests\n            this.#scheduleDrain();\n        })();\n    }\n\n    /**\n     *  Resolves once the [[_start]] has been called. This can be used in\n     *  sub-classes to defer sending data until the connection has been\n     *  established.\n     */\n    async _waitUntilReady(): Promise<void> {\n        if (this.#notReady == null) { return; }\n        return await this.#notReady.promise;\n    }\n\n\n    /**\n     *  Return a Subscriber that will manage the %%sub%%.\n     *\n     *  Sub-classes may override this to modify the behavior of\n     *  subscription management.\n     */\n    _getSubscriber(sub: Subscription): Subscriber {\n\n        // Pending Filters aren't availble via polling\n        if (sub.type === \"pending\") { return new FilterIdPendingSubscriber(this); }\n\n        if (sub.type === \"event\") {\n            if (this._getOption(\"polling\")) {\n                return new PollingEventSubscriber(this, sub.filter);\n            }\n            return new FilterIdEventSubscriber(this, sub.filter);\n        }\n\n        // Orphaned Logs are handled automatically, by the filter, since\n        // logs with removed are emitted by it\n        if (sub.type === \"orphan\" && sub.filter.orphan === \"drop-log\") {\n            return new UnmanagedSubscriber(\"orphan\");\n        }\n\n        return super._getSubscriber(sub);\n    }\n\n    /**\n     *  Returns true only if the [[_start]] has been called.\n     */\n    get ready(): boolean { return this.#notReady == null; }\n\n    /**\n     *  Returns %%tx%% as a normalized JSON-RPC transaction request,\n     *  which has all values hexlified and any numeric values converted\n     *  to Quantity values.\n     */\n    getRpcTransaction(tx: TransactionRequest): JsonRpcTransactionRequest {\n        const result: JsonRpcTransactionRequest = {};\n\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach((key) => {\n            if ((<any>tx)[key] == null) { return; }\n            let dstKey = key;\n            if (key === \"gasLimit\") { dstKey = \"gas\"; }\n            (<any>result)[dstKey] = toQuantity(getBigInt((<any>tx)[key], `tx.${ key }`));\n        });\n\n        // Make sure addresses and data are lowercase\n        [\"from\", \"to\", \"data\"].forEach((key) => {\n            if ((<any>tx)[key] == null) { return; }\n            (<any>result)[key] = hexlify((<any>tx)[key]);\n        });\n\n        // Normalize the access list object\n        if (tx.accessList) {\n            result[\"accessList\"] = accessListify(tx.accessList);\n        }\n\n        return result;\n    }\n\n    /**\n     *  Returns the request method and arguments required to perform\n     *  %%req%%.\n     */\n    getRpcRequest(req: PerformActionRequest): null | { method: string, args: Array<any> } {\n        switch (req.method) {\n            case \"chainId\":\n                return { method: \"eth_chainId\", args: [ ] };\n\n            case \"getBlockNumber\":\n                return { method: \"eth_blockNumber\", args: [ ] };\n\n            case \"getGasPrice\":\n                return { method: \"eth_gasPrice\", args: [] };\n\n            case \"getPriorityFee\":\n                return { method: \"eth_maxPriorityFeePerGas\", args: [ ] };\n\n            case \"getBalance\":\n                return {\n                    method: \"eth_getBalance\",\n                    args: [ getLowerCase(req.address), req.blockTag ]\n                };\n\n            case \"getTransactionCount\":\n                return {\n                    method: \"eth_getTransactionCount\",\n                    args: [ getLowerCase(req.address), req.blockTag ]\n                };\n\n            case \"getCode\":\n                return {\n                    method: \"eth_getCode\",\n                    args: [ getLowerCase(req.address), req.blockTag ]\n                };\n\n            case \"getStorage\":\n                return {\n                    method: \"eth_getStorageAt\",\n                    args: [\n                        getLowerCase(req.address),\n                        (\"0x\" + req.position.toString(16)),\n                        req.blockTag\n                    ]\n                };\n\n            case \"broadcastTransaction\":\n                return {\n                    method: \"eth_sendRawTransaction\",\n                    args: [ req.signedTransaction ]\n                };\n\n            case \"getBlock\":\n                if (\"blockTag\" in req) {\n                    return {\n                        method: \"eth_getBlockByNumber\",\n                        args: [ req.blockTag, !!req.includeTransactions ]\n                    };\n                } else if (\"blockHash\" in req) {\n                    return {\n                        method: \"eth_getBlockByHash\",\n                        args: [ req.blockHash, !!req.includeTransactions ]\n                    };\n                }\n                break;\n\n            case \"getTransaction\":\n                return {\n                    method: \"eth_getTransactionByHash\",\n                    args: [ req.hash ]\n                };\n\n            case \"getTransactionReceipt\":\n                return {\n                    method: \"eth_getTransactionReceipt\",\n                    args: [ req.hash ]\n                };\n\n            case \"call\":\n                return {\n                    method: \"eth_call\",\n                    args: [ this.getRpcTransaction(req.transaction), req.blockTag ]\n                };\n\n            case \"estimateGas\": {\n                return {\n                    method: \"eth_estimateGas\",\n                    args: [ this.getRpcTransaction(req.transaction) ]\n                };\n            }\n\n            case \"getLogs\":\n                if (req.filter && req.filter.address != null) {\n                    if (Array.isArray(req.filter.address)) {\n                        req.filter.address = req.filter.address.map(getLowerCase);\n                    } else {\n                        req.filter.address = getLowerCase(req.filter.address);\n                    }\n                }\n                return { method: \"eth_getLogs\", args: [ req.filter ] };\n        }\n\n        return null;\n    }\n\n    /**\n     *  Returns an ethers-style Error for the given JSON-RPC error\n     *  %%payload%%, coalescing the various strings and error shapes\n     *  that different nodes return, coercing them into a machine-readable\n     *  standardized error.\n     */\n    getRpcError(payload: JsonRpcPayload, _error: JsonRpcError): Error {\n        const { method } = payload;\n        const { error } = _error;\n\n        if (method === \"eth_estimateGas\" && error.message) {\n            const msg = error.message;\n            if (!msg.match(/revert/i) && msg.match(/insufficient funds/i)) {\n                return makeError(\"insufficient funds\", \"INSUFFICIENT_FUNDS\", {\n                    transaction: ((<any>payload).params[0]),\n                    info: { payload, error }\n                });\n            }\n        }\n\n        if (method === \"eth_call\" || method === \"eth_estimateGas\") {\n            const result = spelunkData(error);\n\n            const e = AbiCoder.getBuiltinCallException(\n                (method === \"eth_call\") ? \"call\": \"estimateGas\",\n                ((<any>payload).params[0]),\n                (result ? result.data: null)\n            );\n            e.info = { error, payload };\n            return e;\n        }\n\n        // Only estimateGas and call can return arbitrary contract-defined text, so now we\n        // we can process text safely.\n\n        const message = JSON.stringify(spelunkMessage(error));\n\n        if (typeof(error.message) === \"string\" && error.message.match(/user denied|ethers-user-denied/i)) {\n            const actionMap: Record<string, \"requestAccess\" | \"sendTransaction\" | \"signMessage\" | \"signTransaction\" | \"signTypedData\"> = {\n                eth_sign: \"signMessage\",\n                personal_sign: \"signMessage\",\n                eth_signTypedData_v4: \"signTypedData\",\n                eth_signTransaction: \"signTransaction\",\n                eth_sendTransaction: \"sendTransaction\",\n                eth_requestAccounts: \"requestAccess\",\n                wallet_requestAccounts: \"requestAccess\",\n            };\n\n            return makeError(`user rejected action`, \"ACTION_REJECTED\", {\n                action: (actionMap[method] || \"unknown\") ,\n                reason: \"rejected\",\n                info: { payload, error }\n            });\n        }\n\n        if (method === \"eth_sendRawTransaction\" || method === \"eth_sendTransaction\") {\n            const transaction = <TransactionLike<string>>((<any>payload).params[0]);\n\n            if (message.match(/insufficient funds|base fee exceeds gas limit/i)) {\n                return makeError(\"insufficient funds for intrinsic transaction cost\", \"INSUFFICIENT_FUNDS\", {\n                    transaction, info: { error }\n                });\n            }\n\n            if (message.match(/nonce/i) && message.match(/too low/i)) {\n                return makeError(\"nonce has already been used\", \"NONCE_EXPIRED\", { transaction, info: { error } });\n            }\n\n            // \"replacement transaction underpriced\"\n            if (message.match(/replacement transaction/i) && message.match(/underpriced/i)) {\n                return makeError(\"replacement fee too low\", \"REPLACEMENT_UNDERPRICED\", { transaction, info: { error } });\n            }\n\n            if (message.match(/only replay-protected/i)) {\n                return makeError(\"legacy pre-eip-155 transactions not supported\", \"UNSUPPORTED_OPERATION\", {\n                    operation: method, info: { transaction, info: { error } }\n                });\n            }\n        }\n\n        let unsupported = !!message.match(/the method .* does not exist/i);\n        if (!unsupported) {\n            if (error && (<any>error).details && (<any>error).details.startsWith(\"Unauthorized method:\")) {\n                unsupported = true;\n            }\n        }\n\n        if (unsupported) {\n            return makeError(\"unsupported operation\", \"UNSUPPORTED_OPERATION\", {\n                operation: payload.method, info: { error, payload }\n            });\n        }\n\n        return makeError(\"could not coalesce error\", \"UNKNOWN_ERROR\", { error, payload });\n    }\n\n\n    /**\n     *  Requests the %%method%% with %%params%% via the JSON-RPC protocol\n     *  over the underlying channel. This can be used to call methods\n     *  on the backend that do not have a high-level API within the Provider\n     *  API.\n     *\n     *  This method queues requests according to the batch constraints\n     *  in the options, assigns the request a unique ID.\n     *\n     *  **Do NOT override** this method in sub-classes; instead\n     *  override [[_send]] or force the options values in the\n     *  call to the constructor to modify this method's behavior.\n     */\n    send(method: string, params: Array<any> | Record<string, any>): Promise<any> {\n        // @TODO: cache chainId?? purge on switch_networks\n\n        // We have been destroyed; no operations are supported anymore\n        if (this.destroyed) {\n            return Promise.reject(makeError(\"provider destroyed; cancelled request\", \"UNSUPPORTED_OPERATION\", { operation: method }));\n        }\n\n        const id = this.#nextId++;\n        const promise = new Promise((resolve, reject) => {\n            this.#payloads.push({\n                resolve, reject,\n                payload: { method, params, id, jsonrpc: \"2.0\" }\n            });\n        });\n\n        // If there is not a pending drainTimer, set one\n        this.#scheduleDrain();\n\n        return <Promise<JsonRpcResult>>promise;\n    }\n\n    /**\n     *  Resolves to the [[Signer]] account for  %%address%% managed by\n     *  the client.\n     *\n     *  If the %%address%% is a number, it is used as an index in the\n     *  the accounts from [[listAccounts]].\n     *\n     *  This can only be used on clients which manage accounts (such as\n     *  Geth with imported account or MetaMask).\n     *\n     *  Throws if the account doesn't exist.\n     */\n    async getSigner(address?: number | string): Promise<JsonRpcSigner> {\n        if (address == null) { address = 0; }\n\n        const accountsPromise = this.send(\"eth_accounts\", [ ]);\n\n        // Account index\n        if (typeof(address) === \"number\") {\n            const accounts = <Array<string>>(await accountsPromise);\n            if (address >= accounts.length) { throw new Error(\"no such account\"); }\n            return new JsonRpcSigner(this, accounts[address]);\n        }\n\n        const { accounts } = await resolveProperties({\n            network: this.getNetwork(),\n            accounts: accountsPromise\n        });\n\n        // Account address\n        address = getAddress(address);\n        for (const account of accounts) {\n            if (getAddress(account) === address) {\n                return new JsonRpcSigner(this, address);\n            }\n        }\n\n        throw new Error(\"invalid account\");\n    }\n\n    async listAccounts(): Promise<Array<JsonRpcSigner>> {\n        const accounts: Array<string> = await this.send(\"eth_accounts\", [ ]);\n        return accounts.map((a) => new JsonRpcSigner(this, a));\n    }\n\n    destroy(): void {\n\n        // Stop processing requests\n        if (this.#drainTimer) {\n            clearTimeout(this.#drainTimer);\n            this.#drainTimer = null;\n        }\n\n        // Cancel all pending requests\n        for (const { payload, reject } of this.#payloads) {\n            reject(makeError(\"provider destroyed; cancelled request\", \"UNSUPPORTED_OPERATION\", { operation: payload.method }));\n        }\n\n        this.#payloads = [ ];\n\n        // Parent clean-up\n        super.destroy();\n\n    }\n}\n\n// @TODO: remove this in v7, it is not exported because this functionality\n// is exposed in the JsonRpcApiProvider by setting polling to true. It should\n// be safe to remove regardless, because it isn't reachable, but just in case.\n/**\n *  @_ignore:\n */\nexport abstract class JsonRpcApiPollingProvider extends JsonRpcApiProvider {\n    #pollingInterval: number;\n    constructor(network?: Networkish, options?: JsonRpcApiProviderOptions) {\n        super(network, options);\n\n        this.#pollingInterval = 4000;\n    }\n\n    _getSubscriber(sub: Subscription): Subscriber {\n        const subscriber = super._getSubscriber(sub);\n        if (isPollable(subscriber)) {\n            subscriber.pollingInterval = this.#pollingInterval;\n        }\n        return subscriber;\n    }\n\n    /**\n     *  The polling interval (default: 4000 ms)\n     */\n    get pollingInterval(): number { return this.#pollingInterval; }\n    set pollingInterval(value: number) {\n        if (!Number.isInteger(value) || value < 0) { throw new Error(\"invalid interval\"); }\n        this.#pollingInterval = value;\n        this._forEachSubscriber((sub) => {\n            if (isPollable(sub)) {\n                sub.pollingInterval = this.#pollingInterval;\n            }\n        });\n    }\n}\n\n/**\n *  The JsonRpcProvider is one of the most common Providers,\n *  which performs all operations over HTTP (or HTTPS) requests.\n *\n *  Events are processed by polling the backend for the current block\n *  number; when it advances, all block-base events are then checked\n *  for updates.\n */\nexport class JsonRpcProvider extends JsonRpcApiPollingProvider {\n    #connect: FetchRequest;\n\n    constructor(url?: string | FetchRequest, network?: Networkish, options?: JsonRpcApiProviderOptions) {\n        if (url == null) { url = \"http:/\\/localhost:8545\"; }\n        super(network, options);\n\n        if (typeof(url) === \"string\") {\n            this.#connect = new FetchRequest(url);\n        } else {\n            this.#connect = url.clone();\n        }\n    }\n\n    _getConnection(): FetchRequest {\n        return this.#connect.clone();\n    }\n\n    async send(method: string, params: Array<any> | Record<string, any>): Promise<any> {\n        // All requests are over HTTP, so we can just start handling requests\n        // We do this here rather than the constructor so that we don't send any\n        // requests to the network (i.e. eth_chainId) until we absolutely have to.\n        await this._start();\n\n        return await super.send(method, params);\n    }\n\n    async _send(payload: JsonRpcPayload | Array<JsonRpcPayload>): Promise<Array<JsonRpcResult>> {\n        // Configure a POST connection for the requested method\n        const request = this._getConnection();\n        request.body = JSON.stringify(payload);\n        request.setHeader(\"content-type\", \"application/json\");\n        const response = await request.send();\n        response.assertOk();\n\n        let resp = response.bodyJson;\n        if (!Array.isArray(resp)) { resp = [ resp ]; }\n\n        return resp;\n    }\n}\n\nfunction spelunkData(value: any): null | { message: string, data: string } {\n    if (value == null) { return null; }\n\n    // These *are* the droids we're looking for.\n    if (typeof(value.message) === \"string\" && value.message.match(/revert/i) && isHexString(value.data)) {\n        return { message: value.message, data: value.data };\n    }\n\n    // Spelunk further...\n    if (typeof(value) === \"object\") {\n        for (const key in value) {\n            const result = spelunkData(value[key]);\n            if (result) { return result; }\n        }\n        return null;\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof(value) === \"string\") {\n        try {\n            return spelunkData(JSON.parse(value));\n        } catch (error) { }\n    }\n\n    return null;\n}\n\nfunction _spelunkMessage(value: any, result: Array<string>): void {\n    if (value == null) { return; }\n\n    // These *are* the droids we're looking for.\n    if (typeof(value.message) === \"string\") {\n        result.push(value.message);\n    }\n\n    // Spelunk further...\n    if (typeof(value) === \"object\") {\n        for (const key in value) {\n            _spelunkMessage(value[key], result);\n        }\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof(value) === \"string\") {\n        try {\n            return _spelunkMessage(JSON.parse(value), result);\n        } catch (error) { }\n    }\n}\n\nfunction spelunkMessage(value: any): Array<string> {\n    const result: Array<string> = [ ];\n    _spelunkMessage(value, result);\n    return result;\n}\n", "/**\n *  [[link-ankr]] provides a third-party service for connecting to\n *  various blockchains over JSON-RPC.\n *\n *  **Supported Networks**\n *\n *  - Ethereum Mainnet (``mainnet``)\n *  - Goerli Testnet (``goerli``)\n *  - Sepolia Testnet (``sepolia``)\n *  - Arbitrum (``arbitrum``)\n *  - Base (``base``)\n *  - Base Goerlia Testnet (``base-goerli``)\n *  - Base Sepolia Testnet (``base-sepolia``)\n *  - BNB (``bnb``)\n *  - BNB Testnet (``bnbt``)\n *  - Optimism (``optimism``)\n *  - Optimism Goerli Testnet (``optimism-goerli``)\n *  - Optimism Sepolia Testnet (``optimism-sepolia``)\n *  - Polygon (``matic``)\n *  - Polygon Mumbai Testnet (``matic-mumbai``)\n *\n *  @_subsection: api/providers/thirdparty:Ankr  [providers-ankr]\n */\nimport {\n    defineProperties, FetchRequest, assertArgument\n} from \"../utils/index.js\";\n\nimport { AbstractProvider } from \"./abstract-provider.js\";\nimport { showThrottleMessage } from \"./community.js\";\nimport { Network } from \"./network.js\";\nimport { JsonRpcProvider } from \"./provider-jsonrpc.js\";\n\nimport type { CommunityResourcable } from \"./community.js\";\nimport type { Networkish } from \"./network.js\";\nimport type { JsonRpcError, JsonRpcPayload } from \"./provider-jsonrpc.js\";\n\n\nconst defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\n\nfunction getHost(name: string): string {\n    switch (name) {\n        case \"mainnet\":\n            return \"rpc.ankr.com/eth\";\n        case \"goerli\":\n            return \"rpc.ankr.com/eth_goerli\";\n        case \"sepolia\":\n            return \"rpc.ankr.com/eth_sepolia\";\n\n        case \"arbitrum\":\n            return \"rpc.ankr.com/arbitrum\";\n        case \"base\":\n            return \"rpc.ankr.com/base\";\n        case \"base-goerli\":\n            return \"rpc.ankr.com/base_goerli\";\n        case \"base-sepolia\":\n            return \"rpc.ankr.com/base_sepolia\";\n        case \"bnb\":\n            return \"rpc.ankr.com/bsc\";\n        case \"bnbt\":\n            return \"rpc.ankr.com/bsc_testnet_chapel\";\n        case \"matic\":\n            return \"rpc.ankr.com/polygon\";\n        case \"matic-mumbai\":\n            return \"rpc.ankr.com/polygon_mumbai\";\n        case \"optimism\":\n            return \"rpc.ankr.com/optimism\";\n        case \"optimism-goerli\":\n            return \"rpc.ankr.com/optimism_testnet\";\n        case \"optimism-sepolia\":\n            return \"rpc.ankr.com/optimism_sepolia\";\n    }\n\n    assertArgument(false, \"unsupported network\", \"network\", name);\n}\n\n\n/**\n *  The **AnkrProvider** connects to the [[link-ankr]]\n *  JSON-RPC end-points.\n *\n *  By default, a highly-throttled API key is used, which is\n *  appropriate for quick prototypes and simple scripts. To\n *  gain access to an increased rate-limit, it is highly\n *  recommended to [sign up here](link-ankr-signup).\n */\nexport class AnkrProvider extends JsonRpcProvider implements CommunityResourcable {\n\n    /**\n     *  The API key for the Ankr connection.\n     */\n    readonly apiKey!: string;\n\n    /**\n     *  Create a new **AnkrProvider**.\n     *\n     *  By default connecting to ``mainnet`` with a highly throttled\n     *  API key.\n     */\n    constructor(_network?: Networkish, apiKey?: null | string) {\n        if (_network == null) { _network = \"mainnet\"; }\n        const network = Network.from(_network);\n        if (apiKey == null) { apiKey = defaultApiKey; }\n\n        // Ankr does not support filterId, so we force polling\n        const options = { polling: true, staticNetwork: network };\n\n        const request = AnkrProvider.getRequest(network, apiKey);\n        super(request, network, options);\n\n        defineProperties<AnkrProvider>(this, { apiKey });\n    }\n\n    _getProvider(chainId: number): AbstractProvider {\n        try {\n            return new AnkrProvider(chainId, this.apiKey);\n        } catch (error) { }\n        return super._getProvider(chainId);\n    }\n\n    /**\n     *  Returns a prepared request for connecting to %%network%% with\n     *  %%apiKey%%.\n     */\n    static getRequest(network: Network, apiKey?: null | string): FetchRequest {\n        if (apiKey == null) { apiKey = defaultApiKey; }\n\n        const request = new FetchRequest(`https:/\\/${ getHost(network.name) }/${ apiKey }`);\n        request.allowGzip = true;\n\n        if (apiKey === defaultApiKey) {\n            request.retryFunc = async (request, response, attempt) => {\n                showThrottleMessage(\"AnkrProvider\");\n                return true;\n            };\n        }\n\n        return request;\n    }\n\n    getRpcError(payload: JsonRpcPayload, error: JsonRpcError): Error {\n        if (payload.method === \"eth_sendRawTransaction\") {\n            if (error && error.error && error.error.message === \"INTERNAL_ERROR: could not replace existing tx\") {\n                error.error.message = \"replacement transaction underpriced\";\n            }\n        }\n\n        return super.getRpcError(payload, error);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n", "/**\n *  [[link-alchemy]] provides a third-party service for connecting to\n *  various blockchains over JSON-RPC.\n *\n *  **Supported Networks**\n *\n *  - Ethereum Mainnet (``mainnet``)\n *  - Goerli Testnet (``goerli``)\n *  - Sepolia Testnet (``sepolia``)\n *  - Arbitrum (``arbitrum``)\n *  - Arbitrum Goerli Testnet (``arbitrum-goerli``)\n *  - Arbitrum Sepolia Testnet (``arbitrum-sepolia``)\n *  - Base (``base``)\n *  - Base Goerlia Testnet (``base-goerli``)\n *  - Base Sepolia Testnet (``base-sepolia``)\n *  - Optimism (``optimism``)\n *  - Optimism Goerli Testnet (``optimism-goerli``)\n *  - Optimism Sepolia Testnet (``optimism-sepolia``)\n *  - Polygon (``matic``)\n *  - Polygon Mumbai Testnet (``matic-mumbai``)\n *\n *  @_subsection: api/providers/thirdparty:Alchemy  [providers-alchemy]\n */\n\nimport {\n    defineProperties, resolveProperties, assert, assertArgument,\n    FetchRequest\n} from \"../utils/index.js\";\n\nimport { showThrottleMessage } from \"./community.js\";\nimport { Network } from \"./network.js\";\nimport { JsonRpcProvider } from \"./provider-jsonrpc.js\";\n\nimport type { AbstractProvider, PerformActionRequest } from \"./abstract-provider.js\";\nimport type { CommunityResourcable } from \"./community.js\";\nimport type { Networkish } from \"./network.js\";\n\n\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\"\n\nfunction getHost(name: string): string {\n    switch(name) {\n        case \"mainnet\":\n            return \"eth-mainnet.alchemyapi.io\";\n        case \"goerli\":\n            return \"eth-goerli.g.alchemy.com\";\n        case \"sepolia\":\n            return \"eth-sepolia.g.alchemy.com\";\n\n        case \"arbitrum\":\n            return \"arb-mainnet.g.alchemy.com\";\n        case \"arbitrum-goerli\":\n            return \"arb-goerli.g.alchemy.com\";\n        case \"arbitrum-sepolia\":\n            return \"arb-sepolia.g.alchemy.com\";\n        case \"base\":\n            return \"base-mainnet.g.alchemy.com\";\n        case \"base-goerli\":\n            return \"base-goerli.g.alchemy.com\";\n        case \"base-sepolia\":\n            return \"base-sepolia.g.alchemy.com\";\n        case \"matic\":\n            return \"polygon-mainnet.g.alchemy.com\";\n        case \"matic-mumbai\":\n            return \"polygon-mumbai.g.alchemy.com\";\n        case \"optimism\":\n            return \"opt-mainnet.g.alchemy.com\";\n        case \"optimism-goerli\":\n            return \"opt-goerli.g.alchemy.com\";\n        case \"optimism-sepolia\":\n            return \"opt-sepolia.g.alchemy.com\";\n    }\n\n    assertArgument(false, \"unsupported network\", \"network\", name);\n}\n\n/**\n *  The **AlchemyProvider** connects to the [[link-alchemy]]\n *  JSON-RPC end-points.\n *\n *  By default, a highly-throttled API key is used, which is\n *  appropriate for quick prototypes and simple scripts. To\n *  gain access to an increased rate-limit, it is highly\n *  recommended to [sign up here](link-alchemy-signup).\n *\n *  @_docloc: api/providers/thirdparty\n */\nexport class AlchemyProvider extends JsonRpcProvider implements CommunityResourcable {\n    readonly apiKey!: string;\n\n    constructor(_network?: Networkish, apiKey?: null | string) {\n        if (_network == null) { _network = \"mainnet\"; }\n        const network = Network.from(_network);\n        if (apiKey == null) { apiKey = defaultApiKey; }\n\n        const request = AlchemyProvider.getRequest(network, apiKey);\n        super(request, network, { staticNetwork: network });\n\n        defineProperties<AlchemyProvider>(this, { apiKey });\n    }\n\n    _getProvider(chainId: number): AbstractProvider {\n        try {\n            return new AlchemyProvider(chainId, this.apiKey);\n        } catch (error) { }\n        return super._getProvider(chainId);\n    }\n\n    async _perform(req: PerformActionRequest): Promise<any> {\n\n        // https://docs.alchemy.com/reference/trace-transaction\n        if (req.method === \"getTransactionResult\") {\n            const { trace, tx } = await resolveProperties({\n                trace: this.send(\"trace_transaction\", [ req.hash ]),\n                tx: this.getTransaction(req.hash)\n            });\n            if (trace == null || tx == null) { return null; }\n\n            let data: undefined | string;\n            let error = false;\n            try {\n                data = trace[0].result.output;\n                error = (trace[0].error === \"Reverted\");\n            } catch (error) { }\n\n            if (data) {\n                assert(!error, \"an error occurred during transaction executions\", \"CALL_EXCEPTION\", {\n                    action: \"getTransactionResult\",\n                    data,\n                    reason: null,\n                    transaction: tx,\n                    invocation: null,\n                    revert: null // @TODO\n                });\n                return data;\n            }\n\n            assert(false, \"could not parse trace result\", \"BAD_DATA\", { value: trace });\n        }\n\n        return await super._perform(req);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n\n    static getRequest(network: Network, apiKey?: string): FetchRequest {\n        if (apiKey == null) { apiKey = defaultApiKey; }\n\n        const request = new FetchRequest(`https:/\\/${ getHost(network.name) }/v2/${ apiKey }`);\n        request.allowGzip = true;\n\n        if (apiKey === defaultApiKey) {\n            request.retryFunc = async (request, response, attempt) => {\n                showThrottleMessage(\"alchemy\");\n                return true;\n            }\n        }\n\n        return request;\n    }\n}\n", "/**\n *  About Cloudflare\n *\n *  @_subsection: api/providers/thirdparty:Cloudflare  [providers-cloudflare]\n */\n\nimport { assertArgument } from \"../utils/index.js\";\n\nimport { Network } from \"./network.js\";\nimport { JsonRpcProvider } from \"./provider-jsonrpc.js\";\n\nimport type { Networkish } from \"./network.js\";\n\n/**\n *  About Cloudflare...\n */\nexport class CloudflareProvider extends JsonRpcProvider {\n    constructor(_network?: Networkish) {\n        if (_network == null) { _network = \"mainnet\"; }\n        const network = Network.from(_network);\n        assertArgument(network.name === \"mainnet\", \"unsupported network\", \"network\", _network);\n        super(\"https:/\\/cloudflare-eth.com/\", network, { staticNetwork: network });\n    }\n}\n", "/**\n *  [[link-etherscan]] provides a third-party service for connecting to\n *  various blockchains over a combination of JSON-RPC and custom API\n *  endpoints.\n *\n *  **Supported Networks**\n *\n *  - Ethereum Mainnet (``mainnet``)\n *  - Goerli Testnet (``goerli``)\n *  - Sepolia Testnet (``sepolia``)\n *  - Sepolia Testnet (``holesky``)\n *  - Arbitrum (``arbitrum``)\n *  - Arbitrum Goerli Testnet (``arbitrum-goerli``)\n *  - BNB Smart Chain Mainnet (``bnb``)\n *  - BNB Smart Chain Testnet (``bnbt``)\n *  - Optimism (``optimism``)\n *  - Optimism Goerli Testnet (``optimism-goerli``)\n *  - Polygon (``matic``)\n *  - Polygon Mumbai Testnet (``matic-mumbai``)\n *\n *  @_subsection api/providers/thirdparty:Etherscan  [providers-etherscan]\n */\n\nimport { AbiCoder } from \"../abi/index.js\";\nimport { Contract } from \"../contract/index.js\";\nimport { accessListify, Transaction } from \"../transaction/index.js\";\nimport {\n    defineProperties,\n    hexlify, toQuantity,\n    FetchRequest,\n    assert, assertArgument, isError,\n//    parseUnits,\n    toUtf8String\n } from \"../utils/index.js\";\n\nimport { AbstractProvider } from \"./abstract-provider.js\";\nimport { Network } from \"./network.js\";\nimport { NetworkPlugin } from \"./plugins-network.js\";\nimport { showThrottleMessage } from \"./community.js\";\n\nimport { PerformActionRequest } from \"./abstract-provider.js\";\nimport type { Networkish } from \"./network.js\";\n//import type { } from \"./pagination\";\nimport type { TransactionRequest } from \"./provider.js\";\n\nconst THROTTLE = 2000;\n\nfunction isPromise<T = any>(value: any): value is Promise<T> {\n    return (value && typeof(value.then) === \"function\");\n}\n\n\n/**\n *  When subscribing to the ``\"debug\"`` event on an Etherscan-based\n *  provider, the events receive a **DebugEventEtherscanProvider**\n *  payload.\n *\n *  @_docloc: api/providers/thirdparty:Etherscan\n */\nexport type DebugEventEtherscanProvider = {\n    action: \"sendRequest\",\n    id: number,\n    url: string,\n    payload: Record<string, any>\n} | {\n    action: \"receiveRequest\",\n    id: number,\n    result: any\n} | {\n    action: \"receiveError\",\n    id: number,\n    error: any\n};\n\nconst EtherscanPluginId = \"org.ethers.plugins.provider.Etherscan\";\n\n/**\n *  A Network can include an **EtherscanPlugin** to provide\n *  a custom base URL.\n *\n *  @_docloc: api/providers/thirdparty:Etherscan\n */\nexport class EtherscanPlugin extends NetworkPlugin {\n    /**\n     *  The Etherscan API base URL.\n     */\n    readonly baseUrl!: string;\n\n    /**\n     *  Creates a new **EtherscanProvider** which will use\n     *  %%baseUrl%%.\n     */\n    constructor(baseUrl: string) {\n        super(EtherscanPluginId);\n        defineProperties<EtherscanPlugin>(this, { baseUrl });\n    }\n\n    clone(): EtherscanPlugin {\n        return new EtherscanPlugin(this.baseUrl);\n    }\n}\n\nconst skipKeys = [ \"enableCcipRead\" ];\n\nlet nextId = 1;\n\n/**\n *  The **EtherscanBaseProvider** is the super-class of\n *  [[EtherscanProvider]], which should generally be used instead.\n *\n *  Since the **EtherscanProvider** includes additional code for\n *  [[Contract]] access, in //rare cases// that contracts are not\n *  used, this class can reduce code size.\n *\n *  @_docloc: api/providers/thirdparty:Etherscan\n */\nexport class EtherscanProvider extends AbstractProvider {\n\n    /**\n     *  The connected network.\n     */\n    readonly network!: Network;\n\n    /**\n     *  The API key or null if using the community provided bandwidth.\n     */\n    readonly apiKey!: null | string;\n\n    readonly #plugin: null | EtherscanPlugin;\n\n    /**\n     *  Creates a new **EtherscanBaseProvider**.\n     */\n    constructor(_network?: Networkish, _apiKey?: string) {\n        const apiKey = (_apiKey != null) ? _apiKey: null;\n\n        super();\n\n        const network = Network.from(_network);\n\n        this.#plugin = network.getPlugin<EtherscanPlugin>(EtherscanPluginId);\n\n        defineProperties<EtherscanProvider>(this, { apiKey, network });\n\n        // Test that the network is supported by Etherscan\n        this.getBaseUrl();\n    }\n\n    /**\n     *  Returns the base URL.\n     *\n     *  If an [[EtherscanPlugin]] is configured on the\n     *  [[EtherscanBaseProvider_network]], returns the plugin's\n     *  baseUrl.\n     */\n    getBaseUrl(): string {\n        if (this.#plugin) { return this.#plugin.baseUrl; }\n\n        switch(this.network.name) {\n            case \"mainnet\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            case \"sepolia\":\n                return \"https:/\\/api-sepolia.etherscan.io\";\n            case \"holesky\":\n                return \"https:/\\/api-holesky.etherscan.io\";\n\n            case \"arbitrum\":\n                return \"https:/\\/api.arbiscan.io\";\n            case \"arbitrum-goerli\":\n                return \"https:/\\/api-goerli.arbiscan.io\";\n            case \"bnb\":\n                return \"https:/\\/api.bscscan.com\";\n            case \"bnbt\":\n                return \"https:/\\/api-testnet.bscscan.com\";\n            case \"matic\":\n                return \"https:/\\/api.polygonscan.com\";\n            case \"matic-mumbai\":\n                return \"https:/\\/api-testnet.polygonscan.com\";\n            case \"optimism\":\n                return \"https:/\\/api-optimistic.etherscan.io\";\n            case \"optimism-goerli\":\n                return \"https:/\\/api-goerli-optimistic.etherscan.io\";\n\n            default:\n        }\n\n        assertArgument(false, \"unsupported network\", \"network\", this.network);\n    }\n\n    /**\n     *  Returns the URL for the %%module%% and %%params%%.\n     */\n    getUrl(module: string, params: Record<string, string>): string {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${ key }=${ value }`\n            }\n            return accum\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${ this.apiKey }`: \"\");\n        return `${ this.getBaseUrl() }/api?module=${ module }${ query }${ apiKey }`;\n    }\n\n    /**\n     *  Returns the URL for using POST requests.\n     */\n    getPostUrl(): string {\n        return `${ this.getBaseUrl() }/api`;\n    }\n\n    /**\n     *  Returns the parameters for using POST requests.\n     */\n    getPostData(module: string, params: Record<string, any>): Record<string, any> {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        return this.network;\n    }\n\n    /**\n     *  Resolves to the result of calling %%module%% with %%params%%.\n     *\n     *  If %%post%%, the request is made as a POST request.\n     */\n    async fetch(module: string, params: Record<string, any>, post?: boolean): Promise<any> {\n        const id = nextId++;\n\n        const url = (post ? this.getPostUrl(): this.getUrl(module, params));\n        const payload = (post ? this.getPostData(module, params): null);\n\n        this.emit(\"debug\", { action: \"sendRequest\", id, url, payload: payload });\n\n        const request = new FetchRequest(url);\n        request.setThrottleParams({ slotInterval: 1000 });\n        request.retryFunc = (req, resp, attempt: number) => {\n            if (this.isCommunityResource()) {\n                showThrottleMessage(\"Etherscan\");\n            }\n            return Promise.resolve(true);\n        };\n        request.processFunc = async (request, response) => {\n            const result = response.hasBody() ? JSON.parse(toUtf8String(response.body)): { };\n            const throttle = ((typeof(result.result) === \"string\") ? result.result: \"\").toLowerCase().indexOf(\"rate limit\") >= 0;\n            if (module === \"proxy\") {\n                // This JSON response indicates we are being throttled\n                if (result && result.status == 0 && result.message == \"NOTOK\" && throttle) {\n                    this.emit(\"debug\", { action: \"receiveError\", id, reason: \"proxy-NOTOK\", error: result });\n                    response.throwThrottleError(result.result, THROTTLE);\n                }\n            } else {\n                if (throttle) {\n                    this.emit(\"debug\", { action: \"receiveError\", id, reason: \"null result\", error: result.result });\n                    response.throwThrottleError(result.result, THROTTLE);\n                }\n            }\n            return response;\n        };\n\n        if (payload) {\n            request.setHeader(\"content-type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\n            request.body = Object.keys(payload).map((k) => `${ k }=${ payload[k] }`).join(\"&\");\n        }\n\n        const response = await request.send();\n        try {\n            response.assertOk();\n        } catch (error) {\n            this.emit(\"debug\", { action: \"receiveError\", id, error, reason: \"assertOk\" });\n            assert(false, \"response error\", \"SERVER_ERROR\", { request, response });\n        }\n\n        if (!response.hasBody()) {\n            this.emit(\"debug\", { action: \"receiveError\", id, error: \"missing body\", reason: \"null body\" });\n            assert(false, \"missing response\", \"SERVER_ERROR\", { request, response });\n        }\n\n        const result = JSON.parse(toUtf8String(response.body));\n        if (module === \"proxy\") {\n            if (result.jsonrpc != \"2.0\") {\n                this.emit(\"debug\", { action: \"receiveError\", id, result, reason: \"invalid JSON-RPC\" });\n                assert(false, \"invalid JSON-RPC response (missing jsonrpc='2.0')\", \"SERVER_ERROR\", { request, response, info: { result } });\n            }\n\n            if (result.error) {\n                this.emit(\"debug\", { action: \"receiveError\", id, result, reason: \"JSON-RPC error\" });\n                assert(false, \"error response\", \"SERVER_ERROR\", { request, response, info: { result } });\n            }\n\n            this.emit(\"debug\", { action: \"receiveRequest\", id, result });\n\n            return result.result;\n\n        } else {\n            // getLogs, getHistory have weird success responses\n            if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n                this.emit(\"debug\", { action: \"receiveRequest\", id, result });\n                return result.result;\n            }\n\n            if (result.status != 1 || (typeof(result.message) === \"string\" && !result.message.match(/^OK/))) {\n                this.emit(\"debug\", { action: \"receiveError\", id, result });\n                assert(false, \"error response\", \"SERVER_ERROR\", { request, response, info: { result } });\n            }\n\n            this.emit(\"debug\", { action: \"receiveRequest\", id, result });\n\n            return result.result;\n        }\n    }\n\n    /**\n     *  Returns %%transaction%% normalized for the Etherscan API.\n     */\n    _getTransactionPostData(transaction: TransactionRequest): Record<string, string> {\n        const result: Record<string, string> = { };\n        for (let key in transaction) {\n            if (skipKeys.indexOf(key) >= 0) { continue; }\n\n            if ((<any>transaction)[key] == null) { continue; }\n            let value = (<any>transaction)[key];\n            if (key === \"type\" && value === 0) { continue; }\n            if (key === \"blockTag\" && value === \"latest\") { continue; }\n\n            // Quantity-types require no leading zero, unless 0\n            if ((<any>{ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true })[key]) {\n                value = toQuantity(value);\n            } else if (key === \"accessList\") {\n                value = \"[\" + accessListify(value).map((set) => {\n                    return `{address:\"${ set.address }\",storageKeys:[\"${ set.storageKeys.join('\",\"') }\"]}`;\n                }).join(\",\") + \"]\";\n            } else {\n                value = hexlify(value);\n            }\n            result[key] = value;\n        }\n        return result;\n    }\n\n    /**\n     *  Throws the normalized Etherscan error.\n     */\n    _checkError(req: PerformActionRequest, error: Error, transaction: any): never {\n\n        // Pull any message out if, possible\n        let message = \"\";\n        if (isError(error, \"SERVER_ERROR\")) {\n            // Check for an error emitted by a proxy call\n            try {\n                message = (<any>error).info.result.error.message;\n            } catch (e) { }\n\n            if (!message) {\n                try {\n                    message = (<any>error).info.message;\n                } catch (e) { }\n            }\n        }\n\n        if (req.method === \"estimateGas\") {\n            if (!message.match(/revert/i) && message.match(/insufficient funds/i)) {\n                assert(false, \"insufficient funds\", \"INSUFFICIENT_FUNDS\", {\n                    transaction: req.transaction\n                });\n            }\n        }\n\n        if (req.method === \"call\" || req.method === \"estimateGas\") {\n            if (message.match(/execution reverted/i)) {\n                let data = \"\";\n                try {\n                    data = (<any>error).info.result.error.data;\n                } catch (error) { }\n\n                const e = AbiCoder.getBuiltinCallException(req.method, <any>req.transaction, data);\n                e.info = { request: req, error }\n                throw e;\n            }\n        }\n\n        if (message) {\n            if (req.method === \"broadcastTransaction\") {\n                const transaction = Transaction.from(req.signedTransaction);\n                if (message.match(/replacement/i) && message.match(/underpriced/i)) {\n                    assert(false, \"replacement fee too low\", \"REPLACEMENT_UNDERPRICED\", {\n                        transaction\n                    });\n                }\n\n                if (message.match(/insufficient funds/)) {\n                    assert(false, \"insufficient funds for intrinsic transaction cost\", \"INSUFFICIENT_FUNDS\", {\n                       transaction\n                    });\n                }\n\n                if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n                    assert(false, \"nonce has already been used\", \"NONCE_EXPIRED\", {\n                       transaction\n                    });\n                }\n            }\n        }\n\n        // Something we could not process\n        throw error;\n    }\n\n    async _detectNetwork(): Promise<Network> {\n        return this.network;\n    }\n\n    async _perform(req: PerformActionRequest): Promise<any> {\n        switch (req.method) {\n            case \"chainId\":\n                return this.network.chainId;\n\n            case \"getBlockNumber\":\n                return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n\n            case \"getGasPrice\":\n                return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n\n            case \"getPriorityFee\":\n                // This is temporary until Etherscan completes support\n                if (this.network.name === \"mainnet\") {\n                    return \"1000000000\";\n                } else if (this.network.name === \"optimism\") {\n                    return \"1000000\";\n                } else {\n                    throw new Error(\"fallback onto the AbstractProvider default\");\n                }\n                /* Working with Etherscan to get this added:\n                try {\n                    const test = await this.fetch(\"proxy\", {\n                        action: \"eth_maxPriorityFeePerGas\"\n                    });\n                    console.log(test);\n                    return test;\n                } catch (e) {\n                    console.log(\"DEBUG\", e);\n                    throw e;\n                }\n                */\n                /* This might be safe; but due to rounding neither myself\n                   or Etherscan are necessarily comfortable with this. :)\n                try {\n                    const result = await this.fetch(\"gastracker\", { action: \"gasoracle\" });\n                    console.log(result);\n                    const gasPrice = parseUnits(result.SafeGasPrice, \"gwei\");\n                    const baseFee = parseUnits(result.suggestBaseFee, \"gwei\");\n                    const priorityFee = gasPrice - baseFee;\n                    if (priorityFee < 0) { throw new Error(\"negative priority fee; defer to abstract provider default\"); }\n                    return priorityFee;\n                } catch (error) {\n                    console.log(\"DEBUG\", error);\n                    throw error;\n                }\n                */\n\n            case \"getBalance\":\n                // Returns base-10 result\n                return this.fetch(\"account\", {\n                    action: \"balance\",\n                    address: req.address,\n                    tag: req.blockTag\n                });\n\n           case \"getTransactionCount\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionCount\",\n                    address: req.address,\n                    tag: req.blockTag\n                });\n\n            case \"getCode\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getCode\",\n                    address: req.address,\n                    tag: req.blockTag\n                });\n\n            case \"getStorage\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getStorageAt\",\n                    address: req.address,\n                    position: req.position,\n                    tag: req.blockTag\n                });\n\n            case \"broadcastTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_sendRawTransaction\",\n                    hex: req.signedTransaction\n                }, true).catch((error) => {\n                    return this._checkError(req, <Error>error, req.signedTransaction);\n                });\n\n            case \"getBlock\":\n                if (\"blockTag\" in req) {\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getBlockByNumber\",\n                        tag: req.blockTag,\n                        boolean: (req.includeTransactions ? \"true\": \"false\")\n                    });\n                }\n\n                assert(false, \"getBlock by blockHash not supported by Etherscan\", \"UNSUPPORTED_OPERATION\", {\n                    operation: \"getBlock(blockHash)\"\n                });\n\n            case \"getTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionByHash\",\n                    txhash: req.hash\n                });\n\n            case \"getTransactionReceipt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionReceipt\",\n                    txhash: req.hash\n                });\n\n            case \"call\": {\n                if (req.blockTag !== \"latest\") {\n                    throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                }\n\n                const postData = this._getTransactionPostData(req.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_call\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return this._checkError(req, <Error>error, req.transaction);\n                }\n            }\n\n            case \"estimateGas\": {\n                const postData = this._getTransactionPostData(req.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_estimateGas\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return this._checkError(req, <Error>error, req.transaction);\n                }\n            }\n/*\n            case \"getLogs\": {\n                // Needs to complain if more than one address is passed in\n                const args: Record<string, any> = { action: \"getLogs\" }\n\n                if (params.filter.fromBlock) {\n                    args.fromBlock = checkLogTag(params.filter.fromBlock);\n                }\n\n                if (params.filter.toBlock) {\n                    args.toBlock = checkLogTag(params.filter.toBlock);\n                }\n\n                if (params.filter.address) {\n                    args.address = params.filter.address;\n                }\n\n                // @TODO: We can handle slightly more complicated logs using the logs API\n                if (params.filter.topics && params.filter.topics.length > 0) {\n                    if (params.filter.topics.length > 1) {\n                        logger.throwError(\"unsupported topic count\", Logger.Errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                    }\n                    if (params.filter.topics.length === 1) {\n                        const topic0 = params.filter.topics[0];\n                        if (typeof(topic0) !== \"string\" || topic0.length !== 66) {\n                            logger.throwError(\"unsupported topic format\", Logger.Errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                        }\n                        args.topic0 = topic0;\n                    }\n                }\n\n                const logs: Array<any> = await this.fetch(\"logs\", args);\n\n                // Cache txHash => blockHash\n                let blocks: { [tag: string]: string } = {};\n\n                // Add any missing blockHash to the logs\n                for (let i = 0; i < logs.length; i++) {\n                    const log = logs[i];\n                    if (log.blockHash != null) { continue; }\n                    if (blocks[log.blockNumber] == null) {\n                        const block = await this.getBlock(log.blockNumber);\n                        if (block) {\n                            blocks[log.blockNumber] = block.hash;\n                        }\n                    }\n\n                    log.blockHash = blocks[log.blockNumber];\n                }\n\n                return logs;\n            }\n*/\n            default:\n                break;\n        }\n\n        return super._perform(req);\n    }\n\n    async getNetwork(): Promise<Network> {\n        return this.network;\n    }\n\n    /**\n     *  Resolves to the current price of ether.\n     *\n     *  This returns ``0`` on any network other than ``mainnet``.\n     */\n    async getEtherPrice(): Promise<number> {\n        if (this.network.name !== \"mainnet\") { return 0.0; }\n        return parseFloat((await this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n    }\n\n    /**\n     *  Resolves to a [Contract]] for %%address%%, using the\n     *  Etherscan API to retreive the Contract ABI.\n     */\n    async getContract(_address: string): Promise<null | Contract> {\n        let address = this._getAddress(_address);\n        if (isPromise(address)) { address = await address; }\n\n        try {\n            const resp = await this.fetch(\"contract\", {\n            action: \"getabi\", address });\n            const abi = JSON.parse(resp);\n            return new Contract(address, abi, this);\n        } catch (error) {\n            return null;\n        }\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey == null);\n    }\n}\n", "\nfunction getGlobal(): any {\n  if (typeof self !== 'undefined') { return self; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  throw new Error('unable to locate global object');\n};\n\nconst _WebSocket = getGlobal().WebSocket;\n\nexport { _WebSocket as WebSocket };\n", "/**\n *  Generic long-lived socket provider.\n *\n *  Sub-classing notes\n *  - a sub-class MUST call the `_start()` method once connected\n *  - a sub-class MUST override the `_write(string)` method\n *  - a sub-class MUST call `_processMessage(string)` for each message\n *\n *  @_subsection: api/providers/abstract-provider:Socket Providers  [about-socketProvider]\n */\n\nimport { UnmanagedSubscriber } from \"./abstract-provider.js\";\nimport { assert, assertArgument, makeError } from \"../utils/index.js\";\nimport { JsonRpcApiProvider } from \"./provider-jsonrpc.js\";\n\nimport type { Subscriber, Subscription } from \"./abstract-provider.js\";\nimport type { EventFilter } from \"./provider.js\";\nimport type {\n    JsonRpcApiProviderOptions, JsonRpcError, JsonRpcPayload, JsonRpcResult\n} from \"./provider-jsonrpc.js\";\nimport type { Networkish } from \"./network.js\";\n\n\ntype JsonRpcSubscription = {\n    method: string,\n    params: {\n        result: any,\n        subscription: string\n    }\n};\n\n/**\n *  A **SocketSubscriber** uses a socket transport to handle events and\n *  should use [[_emit]] to manage the events.\n */\nexport class SocketSubscriber implements Subscriber {\n    #provider: SocketProvider;\n\n    #filter: string;\n\n    /**\n     *  The filter.\n     */\n    get filter(): Array<any> { return JSON.parse(this.#filter); }\n\n    #filterId: null | Promise<string |number>;\n    #paused: null | boolean;\n\n    #emitPromise: null | Promise<void>;\n\n    /**\n     *  Creates a new **SocketSubscriber** attached to %%provider%% listening\n     *  to %%filter%%.\n     */\n    constructor(provider: SocketProvider, filter: Array<any>) {\n        this.#provider = provider;\n        this.#filter = JSON.stringify(filter);\n        this.#filterId = null;\n        this.#paused = null;\n        this.#emitPromise = null;\n    }\n\n    start(): void {\n        this.#filterId = this.#provider.send(\"eth_subscribe\", this.filter).then((filterId) => {;\n            this.#provider._register(filterId, this);\n            return filterId;\n        });\n    }\n\n    stop(): void {\n        (<Promise<number>>(this.#filterId)).then((filterId) => {\n            this.#provider.send(\"eth_unsubscribe\", [ filterId ]);\n        });\n        this.#filterId = null;\n    }\n\n    // @TODO: pause should trap the current blockNumber, unsub, and on resume use getLogs\n    //        and resume\n    pause(dropWhilePaused?: boolean): void {\n        assert(dropWhilePaused, \"preserve logs while paused not supported by SocketSubscriber yet\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"pause(false)\" });\n        this.#paused = !!dropWhilePaused;\n    }\n\n    resume(): void {\n        this.#paused = null;\n    }\n\n    /**\n     *  @_ignore:\n     */\n    _handleMessage(message: any): void {\n        if (this.#filterId == null) { return; }\n        if (this.#paused === null) {\n            let emitPromise: null | Promise<void> = this.#emitPromise;\n            if (emitPromise == null) {\n                emitPromise = this._emit(this.#provider, message);\n            } else {\n                emitPromise = emitPromise.then(async () => {\n                    await this._emit(this.#provider, message);\n                });\n            }\n            this.#emitPromise = emitPromise.then(() => {\n                if (this.#emitPromise === emitPromise) {\n                    this.#emitPromise = null;\n                }\n            });\n        }\n    }\n\n    /**\n     *  Sub-classes **must** override this to emit the events on the\n     *  provider.\n     */\n    async _emit(provider: SocketProvider, message: any): Promise<void> {\n        throw new Error(\"sub-classes must implemente this; _emit\");\n    }\n}\n\n/**\n *  A **SocketBlockSubscriber** listens for ``newHeads`` events and emits\n *  ``\"block\"`` events.\n */\nexport class SocketBlockSubscriber extends SocketSubscriber {\n    /**\n     *  @_ignore:\n     */\n    constructor(provider: SocketProvider) {\n        super(provider, [ \"newHeads\" ]);\n    }\n\n    async _emit(provider: SocketProvider, message: any): Promise<void> {\n        provider.emit(\"block\", parseInt(message.number));\n    }\n}\n\n/**\n *  A **SocketPendingSubscriber** listens for pending transacitons and emits\n *  ``\"pending\"`` events.\n */\nexport class SocketPendingSubscriber extends SocketSubscriber {\n\n    /**\n     *  @_ignore:\n     */\n    constructor(provider: SocketProvider) {\n        super(provider, [ \"newPendingTransactions\" ]);\n    }\n\n    async _emit(provider: SocketProvider, message: any): Promise<void> {\n        provider.emit(\"pending\", message);\n    }\n}\n\n/**\n *  A **SocketEventSubscriber** listens for event logs.\n */\nexport class SocketEventSubscriber extends SocketSubscriber {\n    #logFilter: string;\n\n    /**\n     *  The filter.\n     */\n    get logFilter(): EventFilter { return JSON.parse(this.#logFilter); }\n\n    /**\n     *  @_ignore:\n     */\n    constructor(provider: SocketProvider, filter: EventFilter) {\n        super(provider, [ \"logs\", filter ]);\n        this.#logFilter = JSON.stringify(filter);\n    }\n\n    async _emit(provider: SocketProvider, message: any): Promise<void> {\n        provider.emit(this.logFilter, provider._wrapLog(message, provider._network));\n    }\n}\n\n/**\n *  A **SocketProvider** is backed by a long-lived connection over a\n *  socket, which can subscribe and receive real-time messages over\n *  its communication channel.\n */\nexport class SocketProvider extends JsonRpcApiProvider {\n    #callbacks: Map<number, { payload: JsonRpcPayload, resolve: (r: any) => void, reject: (e: Error) => void }>;\n\n    // Maps each filterId to its subscriber\n    #subs: Map<number | string, SocketSubscriber>;\n\n    // If any events come in before a subscriber has finished\n    // registering, queue them\n    #pending: Map<number | string, Array<any>>;\n\n    /**\n     *  Creates a new **SocketProvider** connected to %%network%%.\n     *\n     *  If unspecified, the network will be discovered.\n     */\n    constructor(network?: Networkish, _options?: JsonRpcApiProviderOptions) {\n        // Copy the options\n        const options = Object.assign({ }, (_options != null) ? _options: { });\n\n        // Support for batches is generally not supported for\n        // connection-base providers; if this changes in the future\n        // the _send should be updated to reflect this\n        assertArgument(options.batchMaxCount == null || options.batchMaxCount === 1,\n            \"sockets-based providers do not support batches\", \"options.batchMaxCount\", _options);\n        options.batchMaxCount = 1;\n\n        // Socket-based Providers (generally) cannot change their network,\n        // since they have a long-lived connection; but let people override\n        // this if they have just cause.\n        if (options.staticNetwork == null) { options.staticNetwork = true; }\n\n        super(network, options);\n        this.#callbacks = new Map();\n        this.#subs = new Map();\n        this.#pending = new Map();\n    }\n\n    // This value is only valid after _start has been called\n    /*\n    get _network(): Network {\n        if (this.#network == null) {\n            throw new Error(\"this shouldn't happen\");\n        }\n        return this.#network.clone();\n    }\n    */\n\n    _getSubscriber(sub: Subscription): Subscriber {\n        switch (sub.type) {\n            case \"close\":\n                return new UnmanagedSubscriber(\"close\");\n            case \"block\":\n                return new SocketBlockSubscriber(this);\n            case \"pending\":\n                return new SocketPendingSubscriber(this);\n            case \"event\":\n                return new SocketEventSubscriber(this, sub.filter);\n            case \"orphan\":\n                // Handled auto-matically within AbstractProvider\n                // when the log.removed = true\n                if (sub.filter.orphan === \"drop-log\") {\n                    return new UnmanagedSubscriber(\"drop-log\");\n                }\n        }\n        return super._getSubscriber(sub);\n    }\n\n    /**\n     *  Register a new subscriber. This is used internalled by Subscribers\n     *  and generally is unecessary unless extending capabilities.\n     */\n    _register(filterId: number | string, subscriber: SocketSubscriber): void {\n        this.#subs.set(filterId, subscriber);\n        const pending = this.#pending.get(filterId);\n        if (pending) {\n            for (const message of pending) {\n                subscriber._handleMessage(message);\n            }\n            this.#pending.delete(filterId);\n        }\n    }\n\n    async _send(payload: JsonRpcPayload | Array<JsonRpcPayload>): Promise<Array<JsonRpcResult | JsonRpcError>> {\n        // WebSocket provider doesn't accept batches\n        assertArgument(!Array.isArray(payload), \"WebSocket does not support batch send\", \"payload\", payload);\n\n        // @TODO: stringify payloads here and store to prevent mutations\n\n        // Prepare a promise to respond to\n        const promise = new Promise((resolve, reject) => {\n            this.#callbacks.set(payload.id, { payload, resolve, reject });\n        });\n\n        // Wait until the socket is connected before writing to it\n        await this._waitUntilReady();\n\n        // Write the request to the socket\n        await this._write(JSON.stringify(payload));\n\n        return <Array<JsonRpcResult | JsonRpcError>>[ await promise ];\n    }\n\n    // Sub-classes must call this once they are connected\n    /*\n    async _start(): Promise<void> {\n        if (this.#ready) { return; }\n\n        for (const { payload } of this.#callbacks.values()) {\n            await this._write(JSON.stringify(payload));\n        }\n\n        this.#ready = (async function() {\n            await super._start();\n        })();\n    }\n    */\n\n    /**\n     *  Sub-classes **must** call this with messages received over their\n     *  transport to be processed and dispatched.\n     */\n    async _processMessage(message: string): Promise<void> {\n        const result = <JsonRpcResult | JsonRpcError | JsonRpcSubscription>(JSON.parse(message));\n\n        if (result && typeof(result) === \"object\" && \"id\" in result) {\n            const callback = this.#callbacks.get(result.id);\n            if (callback == null) {\n                this.emit(\"error\", makeError(\"received result for unknown id\", \"UNKNOWN_ERROR\", {\n                    reasonCode: \"UNKNOWN_ID\",\n                    result\n                }));\n                return;\n            }\n            this.#callbacks.delete(result.id);\n\n            callback.resolve(result);\n\n        } else if (result && result.method === \"eth_subscription\") {\n            const filterId = result.params.subscription;\n            const subscriber = this.#subs.get(filterId);\n            if (subscriber) {\n                subscriber._handleMessage(result.params.result);\n            } else {\n                let pending = this.#pending.get(filterId);\n                if (pending == null) {\n                    pending = [ ];\n                    this.#pending.set(filterId, pending);\n                }\n                pending.push(result.params.result);\n            }\n\n        } else {\n            this.emit(\"error\", makeError(\"received unexpected message\", \"UNKNOWN_ERROR\", {\n                reasonCode: \"UNEXPECTED_MESSAGE\",\n                result\n            }));\n            return;\n        }\n    }\n\n    /**\n     *  Sub-classes **must** override this to send %%message%% over their\n     *  transport.\n     */\n    async _write(message: string): Promise<void> {\n        throw new Error(\"sub-classes must override this\");\n    }\n}\n", "\n\nimport { WebSocket as _WebSocket } from \"./ws.js\"; /*-browser*/\n\nimport { SocketProvider } from \"./provider-socket.js\";\n\nimport type { JsonRpcApiProviderOptions} from \"./provider-jsonrpc.js\";\nimport type { Networkish } from \"./network.js\";\n\n/**\n *  A generic interface to a Websocket-like object.\n */\nexport interface WebSocketLike {\n    onopen: null | ((...args: Array<any>) => any);\n    onmessage: null | ((...args: Array<any>) => any);\n    onerror: null | ((...args: Array<any>) => any);\n\n    readyState: number;\n\n    send(payload: any): void;\n    close(code?: number, reason?: string): void;\n}\n\n/**\n *  A function which can be used to re-create a WebSocket connection\n *  on disconnect.\n */\nexport type WebSocketCreator = () => WebSocketLike;\n\n/**\n *  A JSON-RPC provider which is backed by a WebSocket.\n *\n *  WebSockets are often preferred because they retain a live connection\n *  to a server, which permits more instant access to events.\n *\n *  However, this incurs higher server infrasturture costs, so additional\n *  resources may be required to host your own WebSocket nodes and many\n *  third-party services charge additional fees for WebSocket endpoints.\n */\nexport class WebSocketProvider extends SocketProvider {\n    #connect: null | WebSocketCreator;\n\n    #websocket: null | WebSocketLike;\n    get websocket(): WebSocketLike {\n        if (this.#websocket == null) { throw new Error(\"websocket closed\"); }\n        return this.#websocket;\n    }\n\n    constructor(url: string | WebSocketLike | WebSocketCreator, network?: Networkish, options?: JsonRpcApiProviderOptions) {\n        super(network, options);\n        if (typeof(url) === \"string\") {\n            this.#connect = () => { return new _WebSocket(url); };\n            this.#websocket = this.#connect();\n        } else if (typeof(url) === \"function\") {\n            this.#connect = url;\n            this.#websocket = url();\n        } else {\n            this.#connect = null;\n            this.#websocket = url;\n        }\n\n        this.websocket.onopen = async () => {\n            try {\n                await this._start()\n                this.resume();\n            } catch (error) {\n                console.log(\"failed to start WebsocketProvider\", error);\n                // @TODO: now what? Attempt reconnect?\n            }\n        };\n\n        this.websocket.onmessage = (message: { data: string }) => {\n            this._processMessage(message.data);\n        };\n/*\n        this.websocket.onclose = (event) => {\n            // @TODO: What event.code should we reconnect on?\n            const reconnect = false;\n            if (reconnect) {\n                this.pause(true);\n                if (this.#connect) {\n                    this.#websocket = this.#connect();\n                    this.#websocket.onopen = ...\n                    // @TODO: this requires the super class to rebroadcast; move it there\n                }\n                this._reconnect();\n            }\n        };\n*/\n    }\n\n    async _write(message: string): Promise<void> {\n        this.websocket.send(message);\n    }\n\n    async destroy(): Promise<void> {\n        if (this.#websocket != null) {\n            this.#websocket.close();\n            this.#websocket = null;\n        }\n        super.destroy();\n    }\n}\n", "/**\n *  [[link-infura]] provides a third-party service for connecting to\n *  various blockchains over JSON-RPC.\n *\n *  **Supported Networks**\n *\n *  - Ethereum Mainnet (``mainnet``)\n *  - Goerli Testnet (``goerli``)\n *  - Sepolia Testnet (``sepolia``)\n *  - Arbitrum (``arbitrum``)\n *  - Arbitrum Goerli Testnet (``arbitrum-goerli``)\n *  - Arbitrum Sepolia Testnet (``arbitrum-sepolia``)\n *  - Base (``base``)\n *  - Base Goerlia Testnet (``base-goerli``)\n *  - Base Sepolia Testnet (``base-sepolia``)\n *  - BNB Smart Chain Mainnet (``bnb``)\n *  - BNB Smart Chain Testnet (``bnbt``)\n *  - Linea (``linea``)\n *  - Linea Goerlia Testnet (``linea-goerli``)\n *  - Optimism (``optimism``)\n *  - Optimism Goerli Testnet (``optimism-goerli``)\n *  - Optimism Sepolia Testnet (``optimism-sepolia``)\n *  - Polygon (``matic``)\n *  - Polygon Mumbai Testnet (``matic-mumbai``)\n *\n *  @_subsection: api/providers/thirdparty:INFURA  [providers-infura]\n */\nimport {\n    defineProperties, FetchRequest, assert, assertArgument\n} from \"../utils/index.js\";\n\nimport { showThrottleMessage } from \"./community.js\";\nimport { Network } from \"./network.js\";\nimport { JsonRpcProvider } from \"./provider-jsonrpc.js\";\nimport { WebSocketProvider } from \"./provider-websocket.js\";\n\nimport type { AbstractProvider } from \"./abstract-provider.js\";\nimport type { CommunityResourcable } from \"./community.js\";\nimport type { Networkish } from \"./network.js\";\n\n\nconst defaultProjectId = \"84842078b09946638c03157f83405213\";\n\nfunction getHost(name: string): string {\n    switch(name) {\n        case \"mainnet\":\n            return \"mainnet.infura.io\";\n        case \"goerli\":\n            return \"goerli.infura.io\";\n        case \"sepolia\":\n            return \"sepolia.infura.io\";\n\n        case \"arbitrum\":\n            return \"arbitrum-mainnet.infura.io\";\n        case \"arbitrum-goerli\":\n            return \"arbitrum-goerli.infura.io\";\n        case \"arbitrum-sepolia\":\n            return \"arbitrum-sepolia.infura.io\";\n        case \"base\":\n            return \"base-mainnet.infura.io\";\n        case \"base-goerlia\":\n            return \"base-goerli.infura.io\";\n        case \"base-sepolia\":\n            return \"base-sepolia.infura.io\";\n        case \"bnb\":\n            return \"bnbsmartchain-mainnet.infura.io\";\n        case \"bnbt\":\n            return \"bnbsmartchain-testnet.infura.io\";\n        case \"linea\":\n            return \"linea-mainnet.infura.io\";\n        case \"linea-goerli\":\n            return \"linea-goerli.infura.io\";\n        case \"matic\":\n            return \"polygon-mainnet.infura.io\";\n        case \"matic-mumbai\":\n            return \"polygon-mumbai.infura.io\";\n        case \"optimism\":\n            return \"optimism-mainnet.infura.io\";\n        case \"optimism-goerli\":\n            return \"optimism-goerli.infura.io\";\n        case \"optimism-sepolia\":\n            return \"optimism-sepolia.infura.io\";\n    }\n\n    assertArgument(false, \"unsupported network\", \"network\", name);\n}\n\n/**\n *  The **InfuraWebSocketProvider** connects to the [[link-infura]]\n *  WebSocket end-points.\n *\n *  By default, a highly-throttled API key is used, which is\n *  appropriate for quick prototypes and simple scripts. To\n *  gain access to an increased rate-limit, it is highly\n *  recommended to [sign up here](link-infura-signup).\n */\nexport class InfuraWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n\n    /**\n     *  The Project ID for the INFURA connection.\n     */\n    readonly projectId!: string;\n\n    /**\n     *  The Project Secret.\n     *\n     *  If null, no authenticated requests are made. This should not\n     *  be used outside of private contexts.\n     */\n    readonly projectSecret!: null | string;\n\n    /**\n     *  Creates a new **InfuraWebSocketProvider**.\n     */\n    constructor(network?: Networkish, projectId?: string) {\n        const provider = new InfuraProvider(network, projectId);\n\n        const req = provider._getConnection();\n        assert(!req.credentials, \"INFURA WebSocket project secrets unsupported\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"InfuraProvider.getWebSocketProvider()\" });\n\n        const url = req.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n\n        defineProperties<InfuraWebSocketProvider>(this, {\n            projectId: provider.projectId,\n            projectSecret: provider.projectSecret\n        });\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n\n/**\n *  The **InfuraProvider** connects to the [[link-infura]]\n *  JSON-RPC end-points.\n *\n *  By default, a highly-throttled API key is used, which is\n *  appropriate for quick prototypes and simple scripts. To\n *  gain access to an increased rate-limit, it is highly\n *  recommended to [sign up here](link-infura-signup).\n */\nexport class InfuraProvider extends JsonRpcProvider implements CommunityResourcable {\n    /**\n     *  The Project ID for the INFURA connection.\n     */\n    readonly projectId!: string;\n\n    /**\n     *  The Project Secret.\n     *\n     *  If null, no authenticated requests are made. This should not\n     *  be used outside of private contexts.\n     */\n    readonly projectSecret!: null | string;\n\n    /**\n     *  Creates a new **InfuraProvider**.\n     */\n    constructor(_network?: Networkish, projectId?: null | string, projectSecret?: null | string) {\n        if (_network == null) { _network = \"mainnet\"; }\n        const network = Network.from(_network);\n        if (projectId == null) { projectId = defaultProjectId; }\n        if (projectSecret == null) { projectSecret = null; }\n\n        const request = InfuraProvider.getRequest(network, projectId, projectSecret);\n        super(request, network, { staticNetwork: network });\n\n        defineProperties<InfuraProvider>(this, { projectId, projectSecret });\n    }\n\n    _getProvider(chainId: number): AbstractProvider {\n        try {\n            return new InfuraProvider(chainId, this.projectId, this.projectSecret);\n        } catch (error) { }\n        return super._getProvider(chainId);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n\n    /**\n     *  Creates a new **InfuraWebSocketProvider**.\n     */\n    static getWebSocketProvider(network?: Networkish, projectId?: string): InfuraWebSocketProvider {\n        return new InfuraWebSocketProvider(network, projectId);\n    }\n\n    /**\n     *  Returns a prepared request for connecting to %%network%%\n     *  with %%projectId%% and %%projectSecret%%.\n     */\n    static getRequest(network: Network, projectId?: null | string, projectSecret?: null | string): FetchRequest {\n        if (projectId == null) { projectId = defaultProjectId; }\n        if (projectSecret == null) { projectSecret = null; }\n\n        const request = new FetchRequest(`https:/\\/${ getHost(network.name) }/v3/${ projectId }`);\n        request.allowGzip = true;\n        if (projectSecret) { request.setCredentials(\"\", projectSecret); }\n\n        if (projectId === defaultProjectId) {\n            request.retryFunc = async (request, response, attempt) => {\n                showThrottleMessage(\"InfuraProvider\");\n                return true;\n            };\n        }\n\n        return request;\n    }\n}\n", "/**\n *  [[link-quicknode]] provides a third-party service for connecting to\n *  various blockchains over JSON-RPC.\n *\n *  **Supported Networks**\n *\n *  - Ethereum Mainnet (``mainnet``)\n *  - Goerli Testnet (``goerli``)\n *  - Sepolia Testnet (``sepolia``)\n *  - Holesky Testnet (``holesky``)\n *  - Arbitrum (``arbitrum``)\n *  - Arbitrum Goerli Testnet (``arbitrum-goerli``)\n *  - Arbitrum Sepolia Testnet (``arbitrum-sepolia``)\n *  - Base Mainnet (``base``);\n *  - Base Goerli Testnet (``base-goerli``);\n *  - Base Sepolia Testnet (``base-sepolia``);\n *  - BNB Smart Chain Mainnet (``bnb``)\n *  - BNB Smart Chain Testnet (``bnbt``)\n *  - Optimism (``optimism``)\n *  - Optimism Goerli Testnet (``optimism-goerli``)\n *  - Optimism Sepolia Testnet (``optimism-sepolia``)\n *  - Polygon (``matic``)\n *  - Polygon Mumbai Testnet (``matic-mumbai``)\n *\n *  @_subsection: api/providers/thirdparty:QuickNode  [providers-quicknode]\n */\n\nimport {\n    defineProperties, FetchRequest, assertArgument\n} from \"../utils/index.js\";\n\nimport { showThrottleMessage } from \"./community.js\";\nimport { Network } from \"./network.js\";\nimport { JsonRpcProvider } from \"./provider-jsonrpc.js\";\n\nimport type { AbstractProvider } from \"./abstract-provider.js\";\nimport type { CommunityResourcable } from \"./community.js\";\nimport type { Networkish } from \"./network.js\";\n\n\nconst defaultToken = \"919b412a057b5e9c9b6dce193c5a60242d6efadb\";\n\nfunction getHost(name: string): string {\n    switch(name) {\n        case \"mainnet\":\n            return \"ethers.quiknode.pro\";\n        case \"goerli\":\n            return \"ethers.ethereum-goerli.quiknode.pro\";\n        case \"sepolia\":\n            return \"ethers.ethereum-sepolia.quiknode.pro\";\n        case \"holesky\":\n            return \"ethers.ethereum-holesky.quiknode.pro\";\n\n        case \"arbitrum\":\n            return \"ethers.arbitrum-mainnet.quiknode.pro\";\n        case \"arbitrum-goerli\":\n            return \"ethers.arbitrum-goerli.quiknode.pro\";\n        case \"arbitrum-sepolia\":\n            return \"ethers.arbitrum-sepolia.quiknode.pro\";\n        case \"base\":\n            return \"ethers.base-mainnet.quiknode.pro\";\n        case \"base-goerli\":\n            return \"ethers.base-goerli.quiknode.pro\";\n        case \"base-spolia\":\n            return \"ethers.base-sepolia.quiknode.pro\";\n        case \"bnb\":\n            return \"ethers.bsc.quiknode.pro\";\n        case \"bnbt\":\n            return \"ethers.bsc-testnet.quiknode.pro\";\n        case \"matic\":\n            return \"ethers.matic.quiknode.pro\";\n        case \"matic-mumbai\":\n            return \"ethers.matic-testnet.quiknode.pro\";\n        case \"optimism\":\n            return \"ethers.optimism.quiknode.pro\";\n        case \"optimism-goerli\":\n            return \"ethers.optimism-goerli.quiknode.pro\";\n        case \"optimism-sepolia\":\n            return \"ethers.optimism-sepolia.quiknode.pro\";\n        case \"xdai\":\n            return \"ethers.xdai.quiknode.pro\";\n    }\n\n    assertArgument(false, \"unsupported network\", \"network\", name);\n}\n\n/*\n@TODO:\n  These networks are not currently present in the Network\n  default included networks. Research them and ensure they\n  are EVM compatible and work with ethers\n\n  http://ethers.matic-amoy.quiknode.pro\n\n  http://ethers.avalanche-mainnet.quiknode.pro\n  http://ethers.avalanche-testnet.quiknode.pro\n  http://ethers.blast-sepolia.quiknode.pro\n  http://ethers.celo-mainnet.quiknode.pro\n  http://ethers.fantom.quiknode.pro\n  http://ethers.imx-demo.quiknode.pro\n  http://ethers.imx-mainnet.quiknode.pro\n  http://ethers.imx-testnet.quiknode.pro\n  http://ethers.near-mainnet.quiknode.pro\n  http://ethers.near-testnet.quiknode.pro\n  http://ethers.nova-mainnet.quiknode.pro\n  http://ethers.scroll-mainnet.quiknode.pro\n  http://ethers.scroll-testnet.quiknode.pro\n  http://ethers.tron-mainnet.quiknode.pro\n  http://ethers.zkevm-mainnet.quiknode.pro\n  http://ethers.zkevm-testnet.quiknode.pro\n  http://ethers.zksync-mainnet.quiknode.pro\n  http://ethers.zksync-testnet.quiknode.pro\n*/\n\n\n\n/**\n *  The **QuickNodeProvider** connects to the [[link-quicknode]]\n *  JSON-RPC end-points.\n *\n *  By default, a highly-throttled API token is used, which is\n *  appropriate for quick prototypes and simple scripts. To\n *  gain access to an increased rate-limit, it is highly\n *  recommended to [sign up here](link-quicknode).\n */\nexport class QuickNodeProvider extends JsonRpcProvider implements CommunityResourcable {\n    /**\n     *  The API token.\n     */\n    readonly token!: string;\n\n    /**\n     *  Creates a new **QuickNodeProvider**.\n     */\n    constructor(_network?: Networkish, token?: null | string) {\n        if (_network == null) { _network = \"mainnet\"; }\n        const network = Network.from(_network);\n        if (token == null) { token = defaultToken; }\n\n        const request = QuickNodeProvider.getRequest(network, token);\n        super(request, network, { staticNetwork: network });\n\n        defineProperties<QuickNodeProvider>(this, { token });\n    }\n\n    _getProvider(chainId: number): AbstractProvider {\n        try {\n            return new QuickNodeProvider(chainId, this.token);\n        } catch (error) { }\n        return super._getProvider(chainId);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.token === defaultToken);\n    }\n\n    /**\n     *  Returns a new request prepared for %%network%% and the\n     *  %%token%%.\n     */\n    static getRequest(network: Network, token?: null | string): FetchRequest {\n        if (token == null) { token = defaultToken; }\n\n        const request = new FetchRequest(`https:/\\/${ getHost(network.name) }/${ token }`);\n        request.allowGzip = true;\n        //if (projectSecret) { request.setCredentials(\"\", projectSecret); }\n\n        if (token === defaultToken) {\n            request.retryFunc = async (request, response, attempt) => {\n                showThrottleMessage(\"QuickNodeProvider\");\n                return true;\n            };\n        }\n\n        return request;\n    }\n}\n", "/**\n *  A **FallbackProvider** provides resilience, security and performance\n *  in a way that is customizable and configurable.\n *\n *  @_section: api/providers/fallback-provider:Fallback Provider [about-fallback-provider]\n */\nimport {\n    assert, assertArgument, getBigInt, getNumber, isError\n} from \"../utils/index.js\";\n\nimport { AbstractProvider } from \"./abstract-provider.js\";\nimport { Network } from \"./network.js\"\n\nimport type { PerformActionRequest } from \"./abstract-provider.js\";\nimport type { Networkish } from \"./network.js\"\n\nconst BN_1 = BigInt(\"1\");\nconst BN_2 = BigInt(\"2\");\n\nfunction shuffle<T = any>(array: Array<T>): void {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => { setTimeout(resolve, duration); });\n}\n\nfunction getTime(): number { return (new Date()).getTime(); }\n\nfunction stringify(value: any): string {\n    return JSON.stringify(value, (key, value) => {\n        if (typeof(value) === \"bigint\") {\n            return { type: \"bigint\", value: value.toString() };\n        }\n        return value;\n    });\n}\n\n/**\n *  A configuration entry for how to use a [[Provider]].\n */\nexport interface FallbackProviderConfig {\n\n    /**\n     *  The provider.\n     */\n    provider: AbstractProvider;\n\n    /**\n     *  The amount of time to wait before kicking off the next provider.\n     *\n     *  Any providers that have not responded can still respond and be\n     *  counted, but this ensures new providers start.\n     */\n    stallTimeout?: number;\n\n    /**\n     *  The priority. Lower priority providers are dispatched first.\n     */\n    priority?: number;\n\n    /**\n     *  The amount of weight a provider is given against the quorum.\n     */\n    weight?: number;\n};\n\nconst defaultConfig = { stallTimeout: 400, priority: 1, weight: 1 };\n\n// We track a bunch of extra stuff that might help debug problems or\n// optimize infrastructure later on.\n/**\n *  The statistics and state maintained for a [[Provider]].\n */\nexport interface FallbackProviderState extends Required<FallbackProviderConfig> {\n\n    /**\n     *  The most recent blockNumber this provider has reported (-2 if none).\n     */\n    blockNumber: number;\n\n    /**\n     *  The number of total requests ever sent to this provider.\n     */\n    requests: number;\n\n    /**\n     *  The number of responses that errored.\n     */\n    errorResponses: number;\n\n    /**\n     *  The number of responses that occured after the result resolved.\n     */\n    lateResponses: number;\n\n    /**\n     *  How many times syncing was required to catch up the expected block.\n     */\n    outOfSync: number;\n\n    /**\n     *  The number of requests which reported unsupported operation.\n     */\n    unsupportedEvents: number;\n\n    /**\n     *  A rolling average (5% current duration) for response time.\n     */\n    rollingDuration: number;\n\n    /**\n     *  The ratio of quorum-agreed results to total.\n     */\n    score: number;\n}\n\ninterface Config extends FallbackProviderState {\n    _updateNumber: null | Promise<any>;\n    _network: null | Network;\n    _totalTime: number;\n    _lastFatalError: null | Error;\n    _lastFatalErrorTimestamp: number;\n}\n\nconst defaultState = {\n    blockNumber: -2, requests: 0, lateResponses: 0, errorResponses: 0,\n    outOfSync: -1, unsupportedEvents: 0, rollingDuration: 0, score: 0,\n    _network: null, _updateNumber: null, _totalTime: 0,\n    _lastFatalError: null, _lastFatalErrorTimestamp: 0\n};\n\n\nasync function waitForSync(config: Config, blockNumber: number): Promise<void> {\n    while (config.blockNumber < 0 || config.blockNumber < blockNumber) {\n        if (!config._updateNumber) {\n            config._updateNumber = (async () => {\n                try {\n                    const blockNumber = await config.provider.getBlockNumber();\n                    if (blockNumber > config.blockNumber) {\n                        config.blockNumber = blockNumber;\n                    }\n                } catch (error: any) {\n                    config.blockNumber = -2;\n                    config._lastFatalError = error;\n                    config._lastFatalErrorTimestamp = getTime();\n                }\n                config._updateNumber = null;\n            })();\n        }\n        await config._updateNumber;\n        config.outOfSync++;\n        if (config._lastFatalError) { break; }\n    }\n}\n\n/**\n *  Additional options to configure a [[FallbackProvider]].\n */\nexport type FallbackProviderOptions = {\n    // How many providers must agree on a value before reporting\n    // back the response\n    quorum?: number;\n\n    // How many providers must have reported the same event\n    // for it to be emitted (currently unimplmented)\n    eventQuorum?: number;\n\n    // How many providers to dispatch each event to simultaneously.\n    // Set this to 0 to use getLog polling, which implies eventQuorum\n    // is equal to quorum. (currently unimplemented)\n    eventWorkers?: number;\n\n    cacheTimeout?: number;\n\n    pollingInterval?: number;\n};\n\ntype RunnerResult = { result: any } | { error: Error };\n\ntype RunnerState = {\n    config: Config;\n    staller: null | Promise<void>;\n    didBump: boolean;\n    perform: null | Promise<any>;\n    result: null | RunnerResult;\n}\n\nfunction _normalize(value: any): string {\n    if (value == null) { return \"null\"; }\n\n    if (Array.isArray(value)) {\n        return \"[\" + (value.map(_normalize)).join(\",\") + \"]\";\n    }\n\n    if (typeof(value) === \"object\" && typeof(value.toJSON) === \"function\") {\n        return _normalize(value.toJSON());\n    }\n\n    switch (typeof(value)) {\n        case \"boolean\": case \"symbol\":\n            return value.toString();\n        case \"bigint\": case \"number\":\n            return BigInt(value).toString();\n        case \"string\":\n            return JSON.stringify(value);\n        case \"object\": {\n            const keys = Object.keys(value);\n            keys.sort();\n            return \"{\" + keys.map((k) => `${ JSON.stringify(k) }:${ _normalize(value[k]) }`).join(\",\") + \"}\";\n        }\n    }\n\n    console.log(\"Could not serialize\", value);\n    throw new Error(\"Hmm...\");\n}\n\nfunction normalizeResult(value: RunnerResult): { tag: string, value: any } {\n\n    if (\"error\" in value) {\n        const error = value.error;\n        return { tag: _normalize(error), value: error };\n    }\n\n    const result = value.result;\n    return { tag: _normalize(result), value: result };\n}\n\ntype TallyResult = {\n    tag: string;\n    value: any;\n    weight: number;\n};\n\n// This strategy picks the highest weight result, as long as the weight is\n// equal to or greater than quorum\nfunction checkQuorum(quorum: number, results: Array<TallyResult>): any | Error {\n    const tally: Map<string, { value: any, weight: number }> = new Map();\n    for (const { value, tag, weight } of results) {\n        const t = tally.get(tag) || { value, weight: 0 };\n        t.weight += weight;\n        tally.set(tag, t);\n    }\n\n    let best: null | { value: any, weight: number } = null;\n\n    for (const r of tally.values()) {\n        if (r.weight >= quorum && (!best || r.weight > best.weight)) {\n            best = r;\n        }\n    }\n\n    if (best) { return best.value; }\n\n    return undefined;\n}\n\nfunction getMedian(quorum: number, results: Array<TallyResult>): undefined | bigint | Error {\n    let resultWeight = 0;\n\n    const errorMap: Map<string, { weight: number, value: Error }> = new Map();\n    let bestError: null | { weight: number, value: Error } = null;\n\n    const values: Array<bigint> = [ ];\n    for (const { value, tag, weight } of results) {\n        if (value instanceof Error) {\n            const e = errorMap.get(tag) || { value, weight: 0 };\n            e.weight += weight;\n            errorMap.set(tag, e);\n\n            if (bestError == null || e.weight > bestError.weight) { bestError = e; }\n        } else {\n            values.push(BigInt(value));\n            resultWeight += weight;\n        }\n    }\n\n    if (resultWeight < quorum) {\n        // We have quorum for an error\n        if (bestError && bestError.weight >= quorum) { return bestError.value; }\n\n        // We do not have quorum for a result\n        return undefined;\n    }\n\n    // Get the sorted values\n    values.sort((a, b) => ((a < b) ? -1: (b > a) ? 1: 0));\n\n    const mid = Math.floor(values.length / 2);\n\n    // Odd-length; take the middle value\n    if (values.length % 2) { return values[mid]; }\n\n    // Even length; take the ceiling of the mean of the center two values\n    return (values[mid - 1] + values[mid] + BN_1) / BN_2;\n}\n\nfunction getAnyResult(quorum: number, results: Array<TallyResult>): undefined | any | Error {\n    // If any value or error meets quorum, that is our preferred result\n    const result = checkQuorum(quorum, results);\n    if (result !== undefined) { return result; }\n\n    // Otherwise, do we have any result?\n    for (const r of results) {\n        if (r.value) { return r.value; }\n    }\n\n    // Nope!\n    return undefined;\n}\n\nfunction getFuzzyMode(quorum: number, results: Array<TallyResult>): undefined | number {\n    if (quorum === 1) { return getNumber(<bigint>getMedian(quorum, results), \"%internal\"); }\n\n    const tally: Map<number, { result: number, weight: number }> = new Map();\n    const add = (result: number, weight: number) => {\n        const t = tally.get(result) || { result, weight: 0 };\n        t.weight += weight;\n        tally.set(result, t);\n    };\n\n    for (const { weight, value } of results) {\n        const r = getNumber(value);\n        add(r - 1, weight);\n        add(r, weight);\n        add(r + 1, weight);\n    }\n\n    let bestWeight = 0;\n    let bestResult: undefined | number = undefined;\n\n    for (const { weight, result } of tally.values()) {\n        // Use this result, if this result meets quorum and has either:\n        // - a better weight\n        // - or equal weight, but the result is larger\n        if (weight >= quorum && (weight > bestWeight || (bestResult != null && weight === bestWeight && result > bestResult))) {\n            bestWeight = weight;\n            bestResult = result;\n        }\n    }\n\n    return bestResult;\n}\n\n/**\n *  A **FallbackProvider** manages several [[Providers]] providing\n *  resilience by switching between slow or misbehaving nodes, security\n *  by requiring multiple backends to aggree and performance by allowing\n *  faster backends to respond earlier.\n *\n */\nexport class FallbackProvider extends AbstractProvider {\n\n    /**\n     *  The number of backends that must agree on a value before it is\n     *  accpeted.\n     */\n    readonly quorum: number;\n\n    /**\n     *  @_ignore:\n     */\n    readonly eventQuorum: number;\n\n    /**\n     *  @_ignore:\n     */\n    readonly eventWorkers: number;\n\n    readonly #configs: Array<Config>;\n\n    #height: number;\n    #initialSyncPromise: null | Promise<void>;\n\n    /**\n     *  Creates a new **FallbackProvider** with %%providers%% connected to\n     *  %%network%%.\n     *\n     *  If a [[Provider]] is included in %%providers%%, defaults are used\n     *  for the configuration.\n     */\n    constructor(providers: Array<AbstractProvider | FallbackProviderConfig>, network?: Networkish, options?: FallbackProviderOptions) {\n        super(network, options);\n\n        this.#configs = providers.map((p) => {\n            if (p instanceof AbstractProvider) {\n                return Object.assign({ provider: p }, defaultConfig, defaultState );\n            } else {\n                return Object.assign({ }, defaultConfig, p, defaultState );\n            }\n        });\n\n        this.#height = -2;\n        this.#initialSyncPromise = null;\n\n        if (options && options.quorum != null) {\n            this.quorum = options.quorum;\n        } else {\n            this.quorum = Math.ceil(this.#configs.reduce((accum, config) => {\n                accum += config.weight;\n                return accum;\n            }, 0) / 2);\n        }\n\n        this.eventQuorum = 1;\n        this.eventWorkers = 1;\n\n        assertArgument(this.quorum <= this.#configs.reduce((a, c) => (a + c.weight), 0),\n            \"quorum exceed provider wieght\", \"quorum\", this.quorum);\n    }\n\n    get providerConfigs(): Array<FallbackProviderState> {\n        return this.#configs.map((c) => {\n            const result: any = Object.assign({ }, c);\n            for (const key in result) {\n                if (key[0] === \"_\") { delete result[key]; }\n            }\n            return result;\n        });\n    }\n\n    async _detectNetwork(): Promise<Network> {\n        return Network.from(getBigInt(await this._perform({ method: \"chainId\" })));\n    }\n\n    // @TODO: Add support to select providers to be the event subscriber\n    //_getSubscriber(sub: Subscription): Subscriber {\n    //    throw new Error(\"@TODO\");\n    //}\n\n    /**\n     *  Transforms a %%req%% into the correct method call on %%provider%%.\n     */\n    async _translatePerform(provider: AbstractProvider, req: PerformActionRequest): Promise<any> {\n        switch (req.method) {\n            case \"broadcastTransaction\":\n                return await provider.broadcastTransaction(req.signedTransaction);\n            case \"call\":\n                return await provider.call(Object.assign({ }, req.transaction, { blockTag: req.blockTag }));\n            case \"chainId\":\n                return (await provider.getNetwork()).chainId;\n            case \"estimateGas\":\n                return await provider.estimateGas(req.transaction);\n            case \"getBalance\":\n                return await provider.getBalance(req.address, req.blockTag);\n            case \"getBlock\": {\n                const block = (\"blockHash\" in req) ? req.blockHash: req.blockTag;\n                return await provider.getBlock(block, req.includeTransactions);\n            }\n            case \"getBlockNumber\":\n                return await provider.getBlockNumber();\n            case \"getCode\":\n                return await provider.getCode(req.address, req.blockTag);\n            case \"getGasPrice\":\n                return (await provider.getFeeData()).gasPrice;\n            case \"getPriorityFee\":\n                return (await provider.getFeeData()).maxPriorityFeePerGas;\n            case \"getLogs\":\n                return await provider.getLogs(req.filter);\n            case \"getStorage\":\n                return await provider.getStorage(req.address, req.position, req.blockTag);\n            case \"getTransaction\":\n                return await provider.getTransaction(req.hash);\n            case \"getTransactionCount\":\n                return await provider.getTransactionCount(req.address, req.blockTag);\n            case \"getTransactionReceipt\":\n                return await provider.getTransactionReceipt(req.hash);\n            case \"getTransactionResult\":\n                return await provider.getTransactionResult(req.hash);\n        }\n    }\n\n    // Grab the next (random) config that is not already part of\n    // the running set\n    #getNextConfig(running: Set<RunnerState>): null | Config {\n        // @TODO: Maybe do a check here to favour (heavily) providers that\n        //        do not require waitForSync and disfavour providers that\n        //        seem down-ish or are behaving slowly\n\n        const configs = Array.from(running).map((r) => r.config)\n\n        // Shuffle the states, sorted by priority\n        const allConfigs = this.#configs.slice();\n        shuffle(allConfigs);\n        allConfigs.sort((a, b) => (a.priority - b.priority));\n\n        for (const config of allConfigs) {\n            if (config._lastFatalError) { continue; }\n            if (configs.indexOf(config) === -1) { return config; }\n        }\n\n        return null;\n    }\n\n    // Adds a new runner (if available) to running.\n    #addRunner(running: Set<RunnerState>, req: PerformActionRequest): null | RunnerState {\n        const config = this.#getNextConfig(running);\n\n        // No runners available\n        if (config == null) { return null; }\n\n        // Create a new runner\n        const runner: RunnerState = {\n            config, result: null, didBump: false,\n            perform: null, staller: null\n        };\n\n        const now = getTime();\n\n        // Start performing this operation\n        runner.perform = (async () => {\n            try {\n                config.requests++;\n                const result = await this._translatePerform(config.provider, req);\n                runner.result = { result };\n            } catch (error: any) {\n                config.errorResponses++;\n                runner.result = { error };\n            }\n\n            const dt = (getTime() - now);\n            config._totalTime += dt;\n\n            config.rollingDuration = 0.95 * config.rollingDuration + 0.05 * dt;\n\n            runner.perform = null;\n        })();\n\n        // Start a staller; when this times out, it's time to force\n        // kicking off another runner because we are taking too long\n        runner.staller = (async () => {\n            await stall(config.stallTimeout);\n            runner.staller = null;\n        })();\n\n        running.add(runner);\n        return runner;\n    }\n\n    // Initializes the blockNumber and network for each runner and\n    // blocks until initialized\n    async #initialSync(): Promise<void> {\n        let initialSync = this.#initialSyncPromise;\n        if (!initialSync) {\n            const promises: Array<Promise<any>> = [ ];\n            this.#configs.forEach((config) => {\n                promises.push((async () => {\n                    await waitForSync(config, 0);\n                    if (!config._lastFatalError) {\n                        config._network = await config.provider.getNetwork();\n                    }\n                })());\n            });\n\n            this.#initialSyncPromise = initialSync = (async () => {\n                // Wait for all providers to have a block number and network\n                await Promise.all(promises);\n\n                // Check all the networks match\n                let chainId: null | bigint = null;\n                for (const config of this.#configs) {\n                    if (config._lastFatalError) { continue; }\n                    const network = <Network>(config._network);\n                    if (chainId == null) {\n                        chainId = network.chainId;\n                    } else if (network.chainId !== chainId) {\n                        assert(false, \"cannot mix providers on different networks\", \"UNSUPPORTED_OPERATION\", {\n                            operation: \"new FallbackProvider\"\n                        });\n                    }\n                }\n            })();\n        }\n\n        await initialSync\n    }\n\n\n    async #checkQuorum(running: Set<RunnerState>, req: PerformActionRequest): Promise<any> {\n        // Get all the result objects\n        const results: Array<TallyResult> = [ ];\n        for (const runner of running) {\n            if (runner.result != null) {\n                const { tag, value } = normalizeResult(runner.result);\n                results.push({ tag, value, weight: runner.config.weight });\n            }\n        }\n\n        // Are there enough results to event meet quorum?\n        if (results.reduce((a, r) => (a + r.weight), 0) < this.quorum) {\n            return undefined;\n        }\n\n        switch (req.method) {\n            case \"getBlockNumber\": {\n                // We need to get the bootstrap block height\n                if (this.#height === -2) {\n                    this.#height = Math.ceil(getNumber(<bigint>getMedian(this.quorum, this.#configs.filter((c) => (!c._lastFatalError)).map((c) => ({\n                        value: c.blockNumber,\n                        tag: getNumber(c.blockNumber).toString(),\n                        weight: c.weight\n                    })))));\n                }\n\n                // Find the mode across all the providers, allowing for\n                // a little drift between block heights\n                const mode = getFuzzyMode(this.quorum, results);\n                if (mode === undefined) { return undefined; }\n                if (mode > this.#height) { this.#height = mode; }\n                return this.#height;\n            }\n\n            case \"getGasPrice\":\n            case \"getPriorityFee\":\n            case \"estimateGas\":\n                return getMedian(this.quorum, results);\n\n            case \"getBlock\":\n                // Pending blocks are in the mempool and already\n                // quite untrustworthy; just grab anything\n                if (\"blockTag\" in req && req.blockTag === \"pending\") {\n                    return getAnyResult(this.quorum, results);\n                }\n                return checkQuorum(this.quorum, results);\n\n            case \"call\":\n            case \"chainId\":\n            case \"getBalance\":\n            case \"getTransactionCount\":\n            case \"getCode\":\n            case \"getStorage\":\n            case \"getTransaction\":\n            case \"getTransactionReceipt\":\n            case \"getLogs\":\n                return checkQuorum(this.quorum, results);\n\n            case \"broadcastTransaction\":\n                return getAnyResult(this.quorum, results);\n        }\n\n        assert(false, \"unsupported method\", \"UNSUPPORTED_OPERATION\", {\n            operation: `_perform(${ stringify((<any>req).method) })`\n        });\n    }\n\n    async #waitForQuorum(running: Set<RunnerState>, req: PerformActionRequest): Promise<any> {\n        if (running.size === 0) { throw new Error(\"no runners?!\"); }\n\n        // Any promises that are interesting to watch for; an expired stall\n        // or a successful perform\n        const interesting: Array<Promise<void>> = [ ];\n\n        let newRunners = 0;\n        for (const runner of running) {\n\n            // No responses, yet; keep an eye on it\n            if (runner.perform) {\n                interesting.push(runner.perform);\n            }\n\n            // Still stalling...\n            if (runner.staller) {\n                interesting.push(runner.staller);\n                continue;\n            }\n\n            // This runner has already triggered another runner\n            if (runner.didBump) { continue; }\n\n            // Got a response (result or error) or stalled; kick off another runner\n            runner.didBump = true;\n            newRunners++;\n        }\n\n        // Check if we have reached quorum on a result (or error)\n        const value = await this.#checkQuorum(running, req);\n        if (value !== undefined) {\n            if (value instanceof Error) { throw value; }\n            return value;\n        }\n\n        // Add any new runners, because a staller timed out or a result\n        // or error response came in.\n        for (let i = 0; i < newRunners; i++) {\n            this.#addRunner(running, req);\n        }\n\n        // All providers have returned, and we have no result\n\n        assert(interesting.length > 0, \"quorum not met\", \"SERVER_ERROR\", {\n            request: \"%sub-requests\",\n            info: { request: req, results: Array.from(running).map((r) => stringify(r.result)) }\n        });\n\n        // Wait for someone to either complete its perform or stall out\n        await Promise.race(interesting);\n\n        // This is recursive, but at worst case the depth is 2x the\n        // number of providers (each has a perform and a staller)\n        return await this.#waitForQuorum(running, req);\n    }\n\n    async _perform<T = any>(req: PerformActionRequest): Promise<T> {\n        // Broadcasting a transaction is rare (ish) and already incurs\n        // a cost on the user, so spamming is safe-ish. Just send it to\n        // every backend.\n        if (req.method === \"broadcastTransaction\") {\n            // Once any broadcast provides a positive result, use it. No\n            // need to wait for anyone else\n            const results: Array<null | TallyResult> = this.#configs.map((c) => null);\n            const broadcasts = this.#configs.map(async ({ provider, weight }, index) => {\n                try {\n                    const result = await provider._perform(req);\n                    results[index] = Object.assign(normalizeResult({ result }), { weight });\n                } catch (error: any) {\n                    results[index] = Object.assign(normalizeResult({ error }), { weight });\n                }\n            });\n\n            // As each promise finishes...\n            while (true) {\n                // Check for a valid broadcast result\n                const done = <Array<any>>results.filter((r) => (r != null));\n                for (const { value } of done) {\n                    if (!(value instanceof Error)) { return value; }\n                }\n\n                // Check for a legit broadcast error (one which we cannot\n                // recover from; some nodes may return the following red\n                // herring events:\n                // - alredy seend (UNKNOWN_ERROR)\n                // - NONCE_EXPIRED\n                // - REPLACEMENT_UNDERPRICED\n                const result = checkQuorum(this.quorum, <Array<any>>results.filter((r) => (r != null)));\n                if (isError(result, \"INSUFFICIENT_FUNDS\")) {\n                    throw result;\n                }\n\n                // Kick off the next provider (if any)\n                const waiting = broadcasts.filter((b, i) => (results[i] == null));\n                if (waiting.length === 0) { break; }\n                await Promise.race(waiting);\n            }\n\n            // Use standard quorum results; any result was returned above,\n            // so this will find any error that met quorum if any\n            const result = getAnyResult(this.quorum, <Array<any>>results);\n            assert(result !== undefined, \"problem multi-broadcasting\", \"SERVER_ERROR\", {\n                request: \"%sub-requests\",\n                info: { request: req, results: results.map(stringify) }\n            })\n            if (result instanceof Error) { throw result; }\n            return result;\n        }\n\n        await this.#initialSync();\n\n        // Bootstrap enough runners to meet quorum\n        const running: Set<RunnerState> = new Set();\n        let inflightQuorum = 0;\n        while (true) {\n            const runner = this.#addRunner(running, req);\n            if (runner == null) { break; }\n            inflightQuorum += runner.config.weight;\n            if (inflightQuorum >= this.quorum) { break; }\n        }\n\n        const result = await this.#waitForQuorum(running, req);\n\n        // Track requests sent to a provider that are still\n        // outstanding after quorum has been otherwise found\n        for (const runner of running) {\n            if (runner.perform && runner.result == null) {\n                runner.config.lateResponses++;\n            }\n        }\n\n        return result;\n    }\n\n    async destroy(): Promise<void> {\n        for (const { provider } of this.#configs) {\n            provider.destroy();\n        }\n        super.destroy();\n    }\n}\n", "\nimport { assert } from \"../utils/index.js\";\n\nimport { AnkrProvider } from \"./provider-ankr.js\";\nimport { AlchemyProvider } from \"./provider-alchemy.js\";\nimport { CloudflareProvider } from \"./provider-cloudflare.js\";\nimport { EtherscanProvider } from \"./provider-etherscan.js\";\nimport { InfuraProvider } from \"./provider-infura.js\";\n//import { PocketProvider } from \"./provider-pocket.js\";\nimport { QuickNodeProvider } from \"./provider-quicknode.js\";\n\nimport { FallbackProvider } from \"./provider-fallback.js\";\nimport { JsonRpcProvider } from \"./provider-jsonrpc.js\";\nimport { Network } from \"./network.js\";\nimport { WebSocketProvider } from \"./provider-websocket.js\";\n\nimport type { AbstractProvider } from \"./abstract-provider.js\";\nimport type { Networkish } from \"./network.js\";\nimport { WebSocketLike } from \"./provider-websocket.js\";\n\nfunction isWebSocketLike(value: any): value is WebSocketLike {\n    return (value && typeof(value.send) === \"function\" &&\n        typeof(value.close) === \"function\");\n}\n\nconst Testnets = \"goerli kovan sepolia classicKotti optimism-goerli arbitrum-goerli matic-mumbai bnbt\".split(\" \");\n\n/**\n *  Returns a default provider for %%network%%.\n *\n *  If %%network%% is a [[WebSocketLike]] or string that begins with\n *  ``\"ws:\"`` or ``\"wss:\"``, a [[WebSocketProvider]] is returned backed\n *  by that WebSocket or URL.\n *\n *  If %%network%% is a string that begins with ``\"HTTP:\"`` or ``\"HTTPS:\"``,\n *  a [[JsonRpcProvider]] is returned connected to that URL.\n *\n *  Otherwise, a default provider is created backed by well-known public\n *  Web3 backends (such as [[link-infura]]) using community-provided API\n *  keys.\n *\n *  The %%options%% allows specifying custom API keys per backend (setting\n *  an API key to ``\"-\"`` will omit that provider) and ``options.exclusive``\n *  can be set to either a backend name or and array of backend names, which\n *  will whitelist **only** those backends.\n *\n *  Current backend strings supported are:\n *  - ``\"alchemy\"``\n *  - ``\"ankr\"``\n *  - ``\"cloudflare\"``\n *  - ``\"etherscan\"``\n *  - ``\"infura\"``\n *  - ``\"publicPolygon\"``\n *  - ``\"quicknode\"``\n *\n *  @example:\n *    // Connect to a local Geth node\n *    provider = getDefaultProvider(\"http://localhost:8545/\");\n *\n *    // Connect to Ethereum mainnet with any current and future\n *    // third-party services available\n *    provider = getDefaultProvider(\"mainnet\");\n *\n *    // Connect to Polygon, but only allow Etherscan and\n *    // INFURA and use \"MY_API_KEY\" in calls to Etherscan.\n *    provider = getDefaultProvider(\"matic\", {\n *      etherscan: \"MY_API_KEY\",\n *      exclusive: [ \"etherscan\", \"infura\" ]\n *    });\n */\nexport function getDefaultProvider(network?: string | Networkish | WebSocketLike, options?: any): AbstractProvider {\n    if (options == null) { options = { }; }\n\n    const allowService = (name: string) => {\n        if (options[name] === \"-\") { return false; }\n        if (typeof(options.exclusive) === \"string\") {\n            return (name === options.exclusive);\n        }\n        if (Array.isArray(options.exclusive)) {\n            return (options.exclusive.indexOf(name) !== -1);\n        }\n        return true;\n    };\n\n    if (typeof(network) === \"string\" && network.match(/^https?:/)) {\n        return new JsonRpcProvider(network);\n    }\n\n    if (typeof(network) === \"string\" && network.match(/^wss?:/) || isWebSocketLike(network)) {\n        return new WebSocketProvider(network);\n    }\n\n    // Get the network and name, if possible\n    let staticNetwork: null | Network = null;\n    try {\n        staticNetwork = Network.from(network);\n    } catch (error) { }\n\n\n    const providers: Array<AbstractProvider> = [ ];\n\n    if (allowService(\"publicPolygon\") && staticNetwork) {\n        if (staticNetwork.name === \"matic\") {\n            providers.push(new JsonRpcProvider(\"https:/\\/polygon-rpc.com/\", staticNetwork, { staticNetwork }));\n        }\n    }\n\n    if (allowService(\"alchemy\")) {\n        try {\n            providers.push(new AlchemyProvider(network, options.alchemy));\n        } catch (error) { }\n    }\n\n    if (allowService(\"ankr\") && options.ankr != null) {\n        try {\n            providers.push(new AnkrProvider(network, options.ankr));\n        } catch (error) { }\n    }\n\n    if (allowService(\"cloudflare\")) {\n        try {\n            providers.push(new CloudflareProvider(network));\n        } catch (error) { }\n    }\n\n    if (allowService(\"etherscan\")) {\n        try {\n            providers.push(new EtherscanProvider(network, options.etherscan));\n        } catch (error) { }\n    }\n\n    if (allowService(\"infura\")) {\n        try {\n            let projectId = options.infura;\n            let projectSecret: undefined | string = undefined;\n            if (typeof(projectId) === \"object\") {\n                projectSecret = projectId.projectSecret;\n                projectId = projectId.projectId;\n            }\n            providers.push(new InfuraProvider(network, projectId, projectSecret));\n        } catch (error) { }\n    }\n/*\n    if (options.pocket !== \"-\") {\n        try {\n            let appId = options.pocket;\n            let secretKey: undefined | string = undefined;\n            let loadBalancer: undefined | boolean = undefined;\n            if (typeof(appId) === \"object\") {\n                loadBalancer = !!appId.loadBalancer;\n                secretKey = appId.secretKey;\n                appId = appId.appId;\n            }\n            providers.push(new PocketProvider(network, appId, secretKey, loadBalancer));\n        } catch (error) { console.log(error); }\n    }\n*/\n    if (allowService(\"quicknode\")) {\n        try {\n            let token = options.quicknode;\n            providers.push(new QuickNodeProvider(network, token));\n        } catch (error) { }\n    }\n\n    assert(providers.length, \"unsupported default network\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"getDefaultProvider\"\n    });\n\n    // No need for a FallbackProvider\n    if (providers.length === 1) { return providers[0]; }\n\n    // We use the floor because public third-party providers can be unreliable,\n    // so a low number of providers with a large quorum will fail too often\n    let quorum = Math.floor(providers.length / 2);\n    if (quorum > 2) { quorum = 2; }\n\n    // Testnets don't need as strong a security gaurantee and speed is\n    // more useful during testing\n    if (staticNetwork && Testnets.indexOf(staticNetwork.name) !== -1) { quorum = 1; }\n\n    // Provided override qorum takes priority\n    if (options && options.quorum) { quorum = options.quorum; }\n\n    return new FallbackProvider(providers, undefined, { quorum });\n}\n", "import { defineProperties } from \"../utils/index.js\";\nimport { AbstractSigner } from \"./abstract-signer.js\";\n\nimport type { TypedDataDomain, TypedDataField } from \"../hash/index.js\";\n\nimport type {\n    BlockTag, Provider, TransactionRequest, TransactionResponse\n} from \"./provider.js\";\nimport type { Signer } from \"./signer.js\";\n\n\n/**\n *  A **NonceManager** wraps another [[Signer]] and automatically manages\n *  the nonce, ensuring serialized and sequential nonces are used during\n *  transaction.\n */\nexport class NonceManager extends AbstractSigner {\n    /**\n     *  The Signer being managed.\n     */\n    signer!: Signer;\n\n    #noncePromise: null | Promise<number>;\n    #delta: number;\n\n    /**\n     *  Creates a new **NonceManager** to manage %%signer%%.\n     */\n    constructor(signer: Signer) {\n        super(signer.provider);\n        defineProperties<NonceManager>(this, { signer });\n\n        this.#noncePromise = null;\n        this.#delta = 0;\n    }\n\n    async getAddress(): Promise<string> {\n        return this.signer.getAddress();\n    }\n\n    connect(provider: null | Provider): NonceManager {\n        return new NonceManager(this.signer.connect(provider));\n    }\n\n    async getNonce(blockTag?: BlockTag): Promise<number> {\n        if (blockTag === \"pending\") {\n            if (this.#noncePromise == null) {\n                this.#noncePromise = super.getNonce(\"pending\");\n            }\n\n            const delta = this.#delta;\n            return (await this.#noncePromise) + delta;\n        }\n\n        return super.getNonce(blockTag);\n    }\n\n    /**\n     *  Manually increment the nonce. This may be useful when managng\n     *  offline transactions.\n     */\n    increment(): void {\n        this.#delta++;\n    }\n\n    /**\n     *  Resets the nonce, causing the **NonceManager** to reload the current\n     *  nonce from the blockchain on the next transaction.\n     */\n    reset(): void {\n        this.#delta = 0;\n        this.#noncePromise = null;\n    }\n\n    async sendTransaction(tx: TransactionRequest): Promise<TransactionResponse> {\n        const noncePromise = this.getNonce(\"pending\");\n        this.increment();\n\n        tx = await this.signer.populateTransaction(tx);\n        tx.nonce = await noncePromise;\n\n        // @TODO: Maybe handle interesting/recoverable errors?\n        // Like don't increment if the tx was certainly not sent\n        return await this.signer.sendTransaction(tx);\n    }\n\n    signTransaction(tx: TransactionRequest): Promise<string> {\n        return this.signer.signTransaction(tx);\n    }\n\n    signMessage(message: string | Uint8Array): Promise<string> {\n        return this.signer.signMessage(message);\n    }\n\n    signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        return this.signer.signTypedData(domain, types, value);\n    }\n}\n", "import { assertArgument } from \"../utils/index.js\";\n\nimport { JsonRpcApiPollingProvider } from \"./provider-jsonrpc.js\";\n\nimport type {\n    JsonRpcError, JsonRpcPayload, JsonRpcResult,\n    JsonRpcSigner\n} from \"./provider-jsonrpc.js\";\nimport type { Networkish } from \"./network.js\";\n\n/**\n *  The interface to an [[link-eip-1193]] provider, which is a standard\n *  used by most injected providers, which the [[BrowserProvider]] accepts\n *  and exposes the API of.\n */\nexport interface Eip1193Provider {\n    /**\n     *  See [[link-eip-1193]] for details on this method.\n     */\n    request(request: { method: string, params?: Array<any> | Record<string, any> }): Promise<any>;\n};\n\n/**\n *  The possible additional events dispatched when using the ``\"debug\"``\n *  event on a [[BrowserProvider]].\n */\nexport type DebugEventBrowserProvider = {\n    action: \"sendEip1193Payload\",\n    payload: { method: string, params: Array<any> }\n} | {\n    action: \"receiveEip1193Result\",\n    result: any\n} | {\n    action: \"receiveEip1193Error\",\n    error: Error\n};\n\n\n/**\n *  A **BrowserProvider** is intended to wrap an injected provider which\n *  adheres to the [[link-eip-1193]] standard, which most (if not all)\n *  currently do.\n */\nexport class BrowserProvider extends JsonRpcApiPollingProvider {\n    #request: (method: string, params: Array<any> | Record<string, any>) => Promise<any>;\n\n    /**\n     *  Connnect to the %%ethereum%% provider, optionally forcing the\n     *  %%network%%.\n     */\n    constructor(ethereum: Eip1193Provider, network?: Networkish) {\n        assertArgument(ethereum && ethereum.request, \"invalid EIP-1193 provider\", \"ethereum\", ethereum);\n\n        super(network, { batchMaxCount: 1 });\n\n        this.#request = async (method: string, params: Array<any> | Record<string, any>) => {\n            const payload = { method, params };\n            this.emit(\"debug\", { action: \"sendEip1193Request\", payload });\n            try {\n                const result = await ethereum.request(payload);\n                this.emit(\"debug\", { action: \"receiveEip1193Result\", result });\n                return result;\n            } catch (e: any) {\n                const error = new Error(e.message);\n                (<any>error).code = e.code;\n                (<any>error).data = e.data;\n                (<any>error).payload = payload;\n                this.emit(\"debug\", { action: \"receiveEip1193Error\", error });\n                throw error;\n            }\n        };\n    }\n\n    async send(method: string, params: Array<any> | Record<string, any>): Promise<any> {\n        await this._start();\n\n        return await super.send(method, params);\n    }\n\n    async _send(payload: JsonRpcPayload | Array<JsonRpcPayload>): Promise<Array<JsonRpcResult | JsonRpcError>> {\n        assertArgument(!Array.isArray(payload), \"EIP-1193 does not support batch request\", \"payload\", payload);\n\n        try {\n            const result = await this.#request(payload.method, payload.params || [ ]);\n            return [ { id: payload.id, result } ];\n        } catch (e: any) {\n            return [ {\n                id: payload.id,\n                error: { code: e.code, data: e.data, message: e.message }\n            } ];\n        }\n    }\n\n    getRpcError(payload: JsonRpcPayload, error: JsonRpcError): Error {\n\n        error = JSON.parse(JSON.stringify(error));\n\n        // EIP-1193 gives us some machine-readable error codes, so rewrite\n        // them into \n        switch (error.error.code || -1) {\n            case 4001:\n                error.error.message = `ethers-user-denied: ${ error.error.message }`;\n                break;\n            case 4200:\n                error.error.message = `ethers-unsupported: ${ error.error.message }`;\n                break;\n        }\n\n        return super.getRpcError(payload, error);\n    }\n\n    /**\n     *  Resolves to ``true`` if the provider manages the %%address%%.\n     */\n    async hasSigner(address: number | string): Promise<boolean> {\n        if (address == null) { address = 0; }\n\n        const accounts = await this.send(\"eth_accounts\", [ ]);\n        if (typeof(address) === \"number\") {\n            return (accounts.length > address);\n        }\n\n        address = address.toLowerCase();\n        return accounts.filter((a: string) => (a.toLowerCase() === address)).length !== 0;\n    }\n\n    async getSigner(address?: number | string): Promise<JsonRpcSigner> {\n        if (address == null) { address = 0; }\n\n        if (!(await this.hasSigner(address))) {\n            try {\n                //const resp = \n                await this.#request(\"eth_requestAccounts\", [ ]);\n                //console.log(\"RESP\", resp);\n\n            } catch (error: any) {\n                const payload = error.payload;\n                throw this.getRpcError(payload, { id: payload.id, error });\n            }\n        }\n\n        return await super.getSigner(address);\n    }\n}\n", "/**\n *  [[link-pocket]] provides a third-party service for connecting to\n *  various blockchains over JSON-RPC.\n *\n *  **Supported Networks**\n *\n *  - Ethereum Mainnet (``mainnet``)\n *  - Goerli Testnet (``goerli``)\n *  - Polygon (``matic``)\n *  - Arbitrum (``arbitrum``)\n *\n *  @_subsection: api/providers/thirdparty:Pocket  [providers-pocket]\n */\nimport {\n    defineProperties, FetchRequest, assertArgument\n} from \"../utils/index.js\";\n\nimport { AbstractProvider } from \"./abstract-provider.js\";\nimport { showThrottleMessage } from \"./community.js\";\nimport { Network } from \"./network.js\";\nimport { JsonRpcProvider } from \"./provider-jsonrpc.js\";\n\nimport type { CommunityResourcable } from \"./community.js\";\nimport type { Networkish } from \"./network.js\";\n\nconst defaultApplicationId = \"62e1ad51b37b8e00394bda3b\";\n\nfunction getHost(name: string): string {\n    switch (name) {\n        case \"mainnet\":\n            return  \"eth-mainnet.gateway.pokt.network\";\n        case \"goerli\":\n            return \"eth-goerli.gateway.pokt.network\";\n\n        case \"matic\":\n            return \"poly-mainnet.gateway.pokt.network\";\n        case \"matic-mumbai\":\n            return \"polygon-mumbai-rpc.gateway.pokt.network\";\n    }\n\n    assertArgument(false, \"unsupported network\", \"network\", name);\n}\n\n\n/**\n *  The **PocketProvider** connects to the [[link-pocket]]\n *  JSON-RPC end-points.\n *\n *  By default, a highly-throttled API key is used, which is\n *  appropriate for quick prototypes and simple scripts. To\n *  gain access to an increased rate-limit, it is highly\n *  recommended to [sign up here](link-pocket-signup).\n */\nexport class PocketProvider extends JsonRpcProvider implements CommunityResourcable {\n\n    /**\n     *  The Application ID for the Pocket connection.\n     */\n    readonly applicationId!: string;\n\n    /**\n     *  The Application Secret for making authenticated requests\n     *  to the Pocket connection.\n     */\n    readonly applicationSecret!: null | string;\n\n    /**\n     *  Create a new **PocketProvider**.\n     *\n     *  By default connecting to ``mainnet`` with a highly throttled\n     *  API key.\n     */\n    constructor(_network?: Networkish, applicationId?: null | string, applicationSecret?: null | string) {\n        if (_network == null) { _network = \"mainnet\"; }\n        const network = Network.from(_network);\n        if (applicationId == null) { applicationId = defaultApplicationId; }\n        if (applicationSecret == null) { applicationSecret = null; }\n\n        const options = { staticNetwork: network };\n\n        const request = PocketProvider.getRequest(network, applicationId, applicationSecret);\n        super(request, network, options);\n\n        defineProperties<PocketProvider>(this, { applicationId, applicationSecret });\n    }\n\n    _getProvider(chainId: number): AbstractProvider {\n        try {\n            return new PocketProvider(chainId, this.applicationId, this.applicationSecret);\n        } catch (error) { }\n        return super._getProvider(chainId);\n    }\n\n    /**\n     *  Returns a prepared request for connecting to %%network%% with\n     *  %%applicationId%%.\n     */\n    static getRequest(network: Network, applicationId?: null | string, applicationSecret?: null | string): FetchRequest {\n        if (applicationId == null) { applicationId = defaultApplicationId; }\n\n        const request = new FetchRequest(`https:/\\/${ getHost(network.name) }/v1/lb/${ applicationId }`);\n        request.allowGzip = true;\n\n        if (applicationSecret) {\n            request.setCredentials(\"\", applicationSecret);\n        }\n\n        if (applicationId === defaultApplicationId) {\n            request.retryFunc = async (request, response, attempt) => {\n                showThrottleMessage(\"PocketProvider\");\n                return true;\n            };\n        }\n\n        return request;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.applicationId === defaultApplicationId);\n    }\n}\n", "const IpcSocketProvider = undefined;\n\nexport { IpcSocketProvider };\n", "import { getAddress, resolveAddress } from \"../address/index.js\";\nimport { hashMessage, TypedDataEncoder } from \"../hash/index.js\";\nimport { AbstractSigner } from \"../providers/index.js\";\nimport { computeAddress, Transaction } from \"../transaction/index.js\";\nimport {\n    defineProperties, resolveProperties, assert, assertArgument\n} from \"../utils/index.js\";\n\nimport type { SigningKey } from \"../crypto/index.js\";\nimport type { TypedDataDomain, TypedDataField } from \"../hash/index.js\";\nimport type { Provider, TransactionRequest } from \"../providers/index.js\";\nimport type { TransactionLike } from \"../transaction/index.js\";\n\n\n/**\n *  The **BaseWallet** is a stream-lined implementation of a\n *  [[Signer]] that operates with a private key.\n *\n *  It is preferred to use the [[Wallet]] class, as it offers\n *  additional functionality and simplifies loading a variety\n *  of JSON formats, Mnemonic Phrases, etc.\n *\n *  This class may be of use for those attempting to implement\n *  a minimal Signer.\n */\nexport class BaseWallet extends AbstractSigner {\n    /**\n     *  The wallet address.\n     */\n    readonly address!: string;\n\n    readonly #signingKey: SigningKey;\n\n    /**\n     *  Creates a new BaseWallet for %%privateKey%%, optionally\n     *  connected to %%provider%%.\n     *\n     *  If %%provider%% is not specified, only offline methods can\n     *  be used.\n     */\n    constructor(privateKey: SigningKey, provider?: null | Provider) {\n        super(provider);\n\n        assertArgument(privateKey && typeof(privateKey.sign) === \"function\", \"invalid private key\", \"privateKey\", \"[ REDACTED ]\");\n\n        this.#signingKey = privateKey;\n\n        const address = computeAddress(this.signingKey.publicKey);\n        defineProperties<BaseWallet>(this, { address });\n    }\n\n    // Store private values behind getters to reduce visibility\n    // in console.log\n\n    /**\n     *  The [[SigningKey]] used for signing payloads.\n     */\n    get signingKey(): SigningKey { return this.#signingKey; }\n\n    /**\n     *  The private key for this wallet.\n     */\n    get privateKey(): string { return this.signingKey.privateKey; }\n\n    async getAddress(): Promise<string> { return this.address; }\n\n    connect(provider: null | Provider): BaseWallet {\n        return new BaseWallet(this.#signingKey, provider);\n    }\n\n    async signTransaction(tx: TransactionRequest): Promise<string> {\n\n        // Replace any Addressable or ENS name with an address\n        const { to, from } = await resolveProperties({\n            to: (tx.to ? resolveAddress(tx.to, this.provider): undefined),\n            from: (tx.from ? resolveAddress(tx.from, this.provider): undefined)\n        });\n\n        if (to != null) { tx.to = to; }\n        if (from != null) { tx.from = from; }\n\n        if (tx.from != null) {\n            assertArgument(getAddress(<string>(tx.from)) === this.address,\n                \"transaction from address mismatch\", \"tx.from\", tx.from);\n            delete tx.from;\n        }\n\n        // Build the transaction\n        const btx = Transaction.from(<TransactionLike<string>>tx);\n        btx.signature = this.signingKey.sign(btx.unsignedHash);\n\n        return btx.serialized;\n    }\n\n    async signMessage(message: string | Uint8Array): Promise<string> {\n        return this.signMessageSync(message);\n    }\n\n    // @TODO: Add a secialized signTx and signTyped sync that enforces\n    // all parameters are known?\n    /**\n     *  Returns the signature for %%message%% signed with this wallet.\n     */\n    signMessageSync(message: string | Uint8Array): string {\n        return this.signingKey.sign(hashMessage(message)).serialized;\n    }\n\n    async signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n\n        // Populate any ENS names\n        const populated = await TypedDataEncoder.resolveNames(domain, types, value, async (name: string) => {\n            // @TODO: this should use resolveName; addresses don't\n            //        need a provider\n\n            assert(this.provider != null, \"cannot resolve ENS names without a provider\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"resolveName\",\n                info: { name }\n            });\n\n            const address = await this.provider.resolveName(name);\n            assert(address != null, \"unconfigured ENS name\", \"UNCONFIGURED_NAME\", {\n                value: name\n            });\n\n            return address;\n        });\n\n        return this.signingKey.sign(TypedDataEncoder.hash(populated.domain, types, populated.value)).serialized;\n    }\n}\n", "import { assertArgument } from \"../utils/index.js\";\n\n\nconst subsChrs = \" !#$%&'()*+,-./<=>?@[]^_`{|}~\";\nconst Word = /^[a-z]*$/i;\n\nfunction unfold(words: Array<string>, sep: string): Array<string> {\n    let initial = 97;\n    return words.reduce((accum, word) => {\n        if (word === sep) {\n            initial++;\n        } else if (word.match(Word)) {\n            accum.push(String.fromCharCode(initial) + word);\n        } else {\n            initial = 97;\n            accum.push(word);\n        }\n        return accum;\n    }, <Array<string>>[]);\n}\n\n/**\n *  @_ignore\n */\nexport function decode(data: string, subs: string): Array<string> {\n\n    // Replace all the substitutions with their expanded form\n    for (let i = subsChrs.length - 1; i >= 0; i--) {\n        data = data.split(subsChrs[i]).join(subs.substring(2 * i, 2 * i + 2));\n    }\n\n    // Get all tle clumps; each suffix, first-increment and second-increment\n    const clumps: Array<string> = [ ];\n    const leftover = data.replace(/(:|([0-9])|([A-Z][a-z]*))/g, (all, item, semi, word) => {\n        if (semi) {\n            for (let i = parseInt(semi); i >= 0; i--) { clumps.push(\";\"); }\n        } else {\n            clumps.push(item.toLowerCase());\n        }\n        return \"\";\n    });\n    /* c8 ignore start */\n    if (leftover) { throw new Error(`leftovers: ${ JSON.stringify(leftover) }`); }\n    /* c8 ignore stop */\n\n    return unfold(unfold(clumps, \";\"), \":\");\n}\n\n/**\n *  @_ignore\n */\nexport function decodeOwl(data: string): Array<string> {\n    assertArgument(data[0] === \"0\", \"unsupported auwl data\", \"data\", data);\n\n    return decode(\n        data.substring(1 + 2 * subsChrs.length),\n        data.substring(1, 1 + 2 * subsChrs.length));\n}\n", "import { defineProperties } from \"../utils/index.js\";\n\n/**\n *  A Wordlist represents a collection of language-specific\n *  words used to encode and devoce [[link-bip-39]] encoded data\n *  by mapping words to 11-bit values and vice versa.\n */\nexport abstract class Wordlist {\n    locale!: string;\n\n    /**\n     *  Creates a new Wordlist instance.\n     *\n     *  Sub-classes MUST call this if they provide their own constructor,\n     *  passing in the locale string of the language.\n     *\n     *  Generally there is no need to create instances of a Wordlist,\n     *  since each language-specific Wordlist creates an instance and\n     *  there is no state kept internally, so they are safe to share.\n     */\n    constructor(locale: string) {\n        defineProperties<Wordlist>(this, { locale });\n    }\n\n    /**\n     *  Sub-classes may override this to provide a language-specific\n     *  method for spliting %%phrase%% into individual words.\n     *\n     *  By default, %%phrase%% is split using any sequences of\n     *  white-space as defined by regular expressions (i.e. ``/\\s+/``).\n     */\n    split(phrase: string): Array<string> {\n        return phrase.toLowerCase().split(/\\s+/g)\n    }\n\n    /**\n     *  Sub-classes may override this to provider a language-specific\n     *  method for joining %%words%% into a phrase.\n     *\n     *  By default, %%words%% are joined by a single space.\n     */\n    join(words: Array<string>): string {\n        return words.join(\" \");\n    }\n\n    /**\n     *  Maps an 11-bit value into its coresponding word in the list.\n     *\n     *  Sub-classes MUST override this.\n     */\n    abstract getWord(index: number): string;\n\n    /**\n     *  Maps a word to its corresponding 11-bit value.\n     *\n     *  Sub-classes MUST override this.\n     */\n    abstract getWordIndex(word: string): number;\n}\n", "\n// Use the encode-latin.js script to create the necessary\n// data files to be consumed by this class\n\nimport { id } from \"../hash/index.js\";\nimport { assertArgument } from \"../utils/index.js\";\n\nimport { decodeOwl } from \"./decode-owl.js\";\nimport { Wordlist } from \"./wordlist.js\";\n\n/**\n *  An OWL format Wordlist is an encoding method that exploits\n *  the general locality of alphabetically sorted words to\n *  achieve a simple but effective means of compression.\n *\n *  This class is generally not useful to most developers as\n *  it is used mainly internally to keep Wordlists for languages\n *  based on ASCII-7 small.\n *\n *  If necessary, there are tools within the ``generation/`` folder\n *  to create the necessary data.\n */\nexport class WordlistOwl extends Wordlist {\n    #data: string;\n    #checksum: string;\n\n    /**\n     *  Creates a new Wordlist for %%locale%% using the OWL %%data%%\n     *  and validated against the %%checksum%%.\n     */\n    constructor(locale: string, data: string, checksum: string) {\n        super(locale);\n        this.#data = data;\n        this.#checksum = checksum;\n        this.#words = null;\n    }\n\n    /**\n     *  The OWL-encoded data.\n     */\n    get _data(): string { return this.#data; }\n\n    /**\n     *  Decode all the words for the wordlist.\n     */\n    _decodeWords(): Array<string> {\n        return decodeOwl(this.#data);\n    }\n\n    #words: null | Array<string>;\n    #loadWords(): Array<string> {\n        if (this.#words == null) {\n            const words = this._decodeWords();\n\n            // Verify the computed list matches the official list\n            const checksum = id(words.join(\"\\n\") + \"\\n\");\n            /* c8 ignore start */\n            if (checksum !== this.#checksum) {\n                throw new Error(`BIP39 Wordlist for ${ this.locale } FAILED`);\n            }\n            /* c8 ignore stop */\n\n            this.#words = words;\n        }\n        return this.#words;\n    }\n\n    getWord(index: number): string {\n        const words = this.#loadWords();\n        assertArgument(index >= 0 && index < words.length, `invalid word index: ${ index }`, \"index\", index);\n        return words[index];\n    }\n\n    getWordIndex(word: string): number {\n        return this.#loadWords().indexOf(word);\n    }\n}\n", "import { WordlistOwl } from \"./wordlist-owl.js\";\n\nconst words = \"0erleonalorenseinceregesticitStanvetearctssi#ch2Athck&tneLl0And#Il.yLeOutO=S|S%b/ra@SurdU'0Ce[Cid|CountCu'Hie=IdOu,-Qui*Ro[TT]T%T*[Tu$0AptDD-tD*[Ju,M.UltV<)Vi)0Rob-0FairF%dRaid0A(EEntRee0Ead0MRRp%tS!_rmBumCoholErtI&LLeyLowMo,O}PhaReadySoT Ways0A>urAz(gOngOuntU'd0Aly,Ch%Ci|G G!GryIm$K!Noun)Nu$O` Sw T&naTiqueXietyY1ArtOlogyPe?P!Pro=Ril1ChCt-EaEnaGueMMedM%MyOundR<+Re,Ri=RowTTefa@Ti,Tw%k0KPe@SaultSetSi,SumeThma0H!>OmTa{T&dT.udeTra@0Ct]D.Gu,NtTh%ToTumn0Era+OcadoOid0AkeA*AyEsomeFulKw?d0Is:ByChel%C#D+GL<)Lc#y~MbooN<aNn RRelyRga(R*lSeS-SketTt!3A^AnAutyCau'ComeEfF%eG(Ha=H(dLie=LowLtN^Nef./TrayTt Twe&Y#d3Cyc!DKeNdOlogyRdR`Tt _{AdeAmeAnketA,EakE[IndOodO[omOu'UeUrUsh_rdAtDyIlMbNeNusOkO,Rd R(gRrowSsTtomUn)XY_{etA(AndA[A=EadEezeI{Id+IefIghtIngIskOccoliOk&OnzeOomO` OwnUsh2Bb!DdyD+tFf$oIldLbLkL!tNd!Nk Rd&Rg R,SS(e[SyTt Y Zz:Bba+B(B!CtusGeKe~LmM aMpNN$N)lNdyNn#NoeNvasNy#Pab!P.$Pta(RRb#RdRgoRpetRryRtSeShS(o/!Su$TT$ogT^Teg%yTt!UghtU'Ut]Ve3Il(gL yM|NsusNturyRe$Rta(_irAlkAmp]An+AosApt Ar+A'AtEapE{Ee'EfErryE,I{&IefIldIm}yOi)Oo'R#-U{!UnkUrn0G?Nnam#Rc!Tiz&TyVil_imApArifyAwAyE<ErkEv I{I|IffImbIn-IpO{OgO'O`OudOwnUbUmpU, Ut^_^A,C#utDeFfeeIlInL!@L%LumnMb(eMeMf%tM-Mm#Mp<yNc tNdu@NfirmNg*[N}@Nsid NtrolNv()OkOlPp PyR$ReRnR*@/Tt#U^UntryUp!Ur'Us(V Yo>_{Ad!AftAmA}AshAt AwlAzyEamEd.EekEwI{etImeIspIt-OpO[Ou^OwdUci$UelUi'Umb!Un^UshYY,$2BeLtu*PPbo?dRiousRr|Rta(R=Sh]/omTe3C!:DMa+MpN)Ng R(gShUght WnY3AlBa>BrisCadeCemb CideCl(eC%a>C*a'ErF&'F(eFyG*eLayLiv M<dMi'Ni$Nti,NyP?tP&dPos.P`PutyRi=ScribeS tSignSkSpair/royTailTe@VelopVi)Vo>3AgramAlAm#dAryCeE'lEtFf G.$Gn.yLemmaNn NosaurRe@RtSag*eScov Sea'ShSmi[S%d Splay/<)V tVideV%)Zzy5Ct%Cum|G~Lph(Ma(Na>NkeyN%OrSeUb!Ve_ftAg#AmaA,-AwEamE[IftIllInkIpI=OpUmY2CkMbNeR(g/T^Ty1Arf1Nam-:G G!RlyRnR`Sily/Sy1HoOlogyOnomy0GeItUca>1F%t0G1GhtTh 2BowD E@r-Eg<tEm|Eph<tEvat%I>Se0B?kBodyBra)Er+Ot]PloyPow Pty0Ab!A@DD![D%'EmyErgyF%)Ga+G(eH<)JoyLi,OughR-hRollSu*T Ti*TryVelope1Isode0U$Uip0AA'OdeOs]R%Upt0CapeSayS&)Ta>0Ern$H-s1Id&)IlOkeOl=1A@Amp!Ce[Ch<+C.eCludeCu'Ecu>Erci'Hau,Hib.I!I,ItOt-P<dPe@Pi*Pla(Po'P*[T&dTra0EEbrow:Br-CeCultyDeIntI`~L'MeMilyMousNNcyNtasyRmSh]TT$Th TigueUltV%.e3Atu*Bru?yD $EEdElMa!N)/iv$T^V W3B Ct]EldGu*LeLmLt N$NdNeNg NishReRmR,Sc$ShTT}[X_gAmeAshAtAv%EeIghtIpOatO{O%Ow UidUshY_mCusGIlLd~owOdOtR)Re,R+tRkRtu}RumRw?dSsil/ UndX_gi!AmeEqu|EshI&dIn+OgOntO,OwnOz&U.2ElNNnyRna)RyTu*:D+tInLaxy~ yMePRa+Rba+Rd&Rl-Rm|SSpTeTh U+Ze3N $NiusN*Nt!Nu(e/u*2O,0AntFtGg!Ng RaffeRlVe_dAn)A*A[IdeImp'ObeOomOryO=OwUe_tDde[LdOdO'RillaSpelSsipV nWn_bA)A(AntApeA[Av.yEatE&IdIefItOc yOupOwUnt_rdE[IdeIltIt?N3M:B.IrLfMm M, NdPpyRb%RdRshR=,TVeWkZ?d3AdAl`ArtAvyD+hogIght~oLmetLpNRo3Dd&Gh~NtPRe/%y5BbyCkeyLdLeLiday~owMeNeyOdPeRnRr%R'Sp.$/TelUrV 5BGeM<Mb!M%Nd*dNgryNtRd!RryRtSb<d3Brid:1EOn0EaEntifyLe2N%e4LLeg$L}[0A+Ita>M&'Mu}Pa@Po'Pro=Pul'0ChCludeComeC*a'DexD-a>Do%Du,ryF<tFl-tF%mHa!H .Iti$Je@JuryMa>N Noc|PutQuiryS<eSe@SideSpi*/$lTa@T e,ToVe,V.eVol=3On0L<dOla>Sue0Em1Ory:CketGu?RZz3AlousAns~yWel9BInKeUr}yY5D+I)MpNg!Ni%Nk/:Ng?oo3EnEpT^upY3CkDD}yNdNgdomSsTT^&TeTt&Wi4EeIfeO{Ow:BBelB%Dd DyKeMpNgua+PtopR+T T(UghUndryVaWWnWsu.Y Zy3Ad AfArnA=Ctu*FtGG$G&dIsu*M#NdNg`NsOp?dSs#Tt Vel3ArB tyBr?yC&'FeFtGhtKeMbM.NkOnQuid/Tt!VeZ?d5AdAnB, C$CkG-NelyNgOpTt yUdUn+VeY$5CkyGga+Mb N?N^Xury3R-s:Ch(eDG-G}tIdIlInJ%KeMm$NNa+Nda>NgoNs]Nu$P!Rb!R^Rg(R(eRketRria+SkSs/ T^T i$ThTrixTt XimumZe3AdowAnAsu*AtCh<-D$DiaLodyLtMb M%yNt]NuRcyR+R.RryShSsa+T$Thod3Dd!DnightLk~]M-NdNimumN%Nu>Rac!Rr%S ySs/akeXXedXtu*5Bi!DelDifyMM|N.%NkeyN, N`OnR$ReRn(gSqu.oTh T]T%Unta(U'VeVie5ChFf(LeLtiplySc!SeumShroomS-/Tu$3Self/ yTh:I=MePk(Rrow/yT]Tu*3ArCkEdGati=G!@I` PhewR=/TTw%kUtr$V WsXt3CeGht5B!I'M(eeOd!Rm$R`SeTab!TeTh(gTi)VelW5C!?Mb R'T:K0EyJe@Li+Scu*S =Ta(Vious0CurE<Tob 0Or1FF Fi)T&2L1Ay0DI=Ymp-0It0CeEI#L(eLy1EnEraIn]Po'T]1An+B.Ch?dD D(?yG<I|Ig($Ph<0Tr-h0H 0Tdo%T TputTside0AlEnEr0NN 0Yg&0/ 0O}:CtDd!GeIrLa)LmNdaNelN-N` P RadeR|RkRrotRtySsT^ThTi|TrolTt nU'VeYm|3A)AnutArAs<tL-<NN$tyNcilOp!Pp Rfe@Rm.Rs#T2O}OtoRa'Ys-$0AnoCn-Ctu*E)GGe#~LotNkO} Pe/olT^Zza_)A}tA,-A>AyEa'Ed+U{UgUn+2EmEtIntL?LeLi)NdNyOlPul?Rt]S.]Ssib!/TatoTt yV tyWd W _@i)Ai'Ed-tEf Epa*Es|EttyEv|I)IdeIm?yIntI%.yIs#Iva>IzeOb!mO)[Odu)Of.OgramOje@Omo>OofOp tyOsp O>@OudOvide2Bl-Dd(g~LpL'Mpk(N^PilPpyR^a'R.yRpo'R'ShTZz!3Ramid:99Al.yAntumArt E,]I{ItIzO>:Bb.Cco#CeCkD?DioIlInI'~yMpN^NdomN+PidReTeTh V&WZ%3AdyAlAs#BelBuildC$lCei=CipeC%dCyc!Du)F!@F%mFu'G]G*tGul?Je@LaxLea'LiefLyMa(Memb M(dMo=Nd NewNtOp&PairPeatPla)P%tQui*ScueSemb!Si,Sour)Sp#'SultTi*T*atTurnUn]Ve$ViewW?d2Y`m0BBb#CeChDeD+F!GhtGidNgOtPp!SkTu$V$V 5AdA,BotBu,CketM<)OfOkieOmSeTa>UghUndU>Y$5Bb DeGLeNNwayR$:DDd!D}[FeIlLadLm#L#LtLu>MeMp!NdTisfyToshiU)Usa+VeY1A!AnA*Att E}HemeHoolI&)I[%sOrp]OutRapRe&RiptRub1AAr^As#AtC#dC*tCt]Cur.yEdEkGm|Le@~M(?Ni%N'Nt&)RiesRvi)Ss]Tt!TupV&_dowAftAllowA*EdEllEriffIeldIftI}IpIv O{OeOotOpOrtOuld O=RimpRugUff!Y0Bl(gCkDeE+GhtGnL|Lk~yLv Mil?Mp!N)NgR&/ Tua>XZe1A>Et^IIllInIrtUll0AbAmEepEnd I)IdeIghtImOg<OtOwUsh0AllArtI!OkeOo`0A{AkeApIffOw0ApCc Ci$CkDaFtL?Ldi LidLut]L=Me#eNgOnRryRtUlUndUpUr)U`0A)A*Ati$AwnEakEci$EedEllEndH eI)Id IkeInIr.L.OilOns%O#OrtOtRayReadR(gY0Ua*UeezeUir*l_b!AdiumAffA+AirsAmpAndArtA>AyEakEelEmEpE*oI{IllIngO{Oma^O}OolOryO=Ra>gyReetRikeR#gRugg!Ud|UffUmb!Y!0Bje@Bm.BwayC)[ChDd&Ff G?G+,ItMm NNnyN'tP PplyP*meReRfa)R+Rpri'RroundR=ySpe@/a(1AllowAmpApArmE?EetIftImIngIt^Ord1MbolMptomRup/em:B!Ck!GIlL|LkNkPeR+tSk/eTtooXi3A^Am~NN<tNnisNtRm/Xt_nkAtEmeEnE%yE*EyIngIsOughtReeRi=RowUmbUnd 0CketDeG LtMb MeNyPRedSsueT!5A,BaccoDayDdl EGe` I!tK&MatoM%rowNeNgueNightOlO`PP-Pp!R^RnadoRtoi'SsT$Uri,W?dW WnY_{AdeAff-Ag-A(Ansf ApAshA=lAyEatEeEndI$IbeI{Igg ImIpOphyOub!U{UeUlyUmpetU,U`Y2BeIt]Mb!NaN}lRkeyRnRt!1El=EntyI)InI,O1PeP-$:5Ly5B*lla0Ab!Awa*C!Cov D DoFairFoldHappyIf%mIqueItIv 'KnownLo{TilUsu$Veil1Da>GradeHoldOnP Set1B<Ge0A+EEdEfulE![U$0Il.y:C<tCuumGueLidL!yL=NNishP%Rious/Ult3H-!L=tNd%Ntu*NueRbRifyRs]RyS'lT <3Ab!Br<tCiousCt%yDeoEw~a+Nta+Ol(Rtu$RusSaS.Su$T$Vid5C$I)IdLc<oLumeTeYa+:GeG#ItLk~LnutNtRfa*RmRri%ShSp/eT VeY3Al`Ap#ArA'lA` BDd(gEk&dIrdLcome/T_!AtEatEelEnE*IpIsp 0DeD`FeLd~NNdowNeNgNkNn Nt ReSdomSeShT}[5LfM<Nd OdOlRdRkRldRryR`_pE{E,!I,I>Ong::Rd3Ar~ow9UUngU`:3BraRo9NeO\";\nconst checksum = \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\";\n\nlet wordlist: null | LangEn = null;\n\n/**\n *  The [[link-bip39-en]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nexport class LangEn extends WordlistOwl {\n\n    /**\n     *  Creates a new instance of the English language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langEn]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"en\", words, checksum); }\n\n    /**\n     *  Returns a singleton instance of a ``LangEn``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist(): LangEn {\n        if (wordlist == null) { wordlist = new LangEn(); }\n        return wordlist;\n    }\n}\n", "import { pbkdf2, sha256 } from \"../crypto/index.js\";\nimport {\n    defineProperties, getBytes, hexlify, assertNormalize, assertPrivate, assertArgument, toUtf8Bytes\n} from \"../utils/index.js\";\nimport { LangEn } from \"../wordlists/lang-en.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\nimport type { Wordlist } from \"../wordlists/index.js\";\n\n\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits: number): number {\n   return ((1 << bits) - 1) << (8 - bits) & 0xff;\n}\n\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits: number): number {\n   return ((1 << bits) - 1) & 0xff;\n}\n\n\nfunction mnemonicToEntropy(mnemonic: string, wordlist?: null | Wordlist): string {\n    assertNormalize(\"NFKD\");\n\n    if (wordlist == null) { wordlist = LangEn.wordlist(); }\n\n    const words = wordlist.split(mnemonic);\n    assertArgument((words.length % 3) === 0 && words.length >= 12 && words.length <= 24,\n        \"invalid mnemonic length\", \"mnemonic\", \"[ REDACTED ]\");\n\n    const entropy = new Uint8Array(Math.ceil(11 * words.length / 8));\n\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        assertArgument(index >= 0, `invalid mnemonic word at index ${ i }`, \"mnemonic\", \"[ REDACTED ]\");\n\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n\n    const entropyBits = 32 * words.length / 3;\n\n\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n\n    const checksum = getBytes(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n\n    assertArgument(checksum === (entropy[entropy.length - 1] & checksumMask),\n        \"invalid mnemonic checksum\", \"mnemonic\", \"[ REDACTED ]\");\n\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\n\nfunction entropyToMnemonic(entropy: Uint8Array, wordlist?: null | Wordlist): string {\n\n    assertArgument((entropy.length % 4) === 0 && entropy.length >= 16 && entropy.length <= 32,\n        \"invalid entropy size\", \"entropy\", \"[ REDACTED ]\");\n\n    if (wordlist == null) { wordlist = LangEn.wordlist(); }\n\n    const indices: Array<number> = [ 0 ];\n\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n\n            remainingBits -= 8;\n\n        // This byte will complete an 11-bit index\n        } else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n\n            remainingBits += 3;\n        }\n    }\n\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = parseInt(sha256(entropy).substring(2, 4), 16) & getUpperMask(checksumBits);\n\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n\n    return wordlist.join(indices.map((index) => (<Wordlist>wordlist).getWord(index)));\n}\n\nconst _guard = { };\n\n/**\n *  A **Mnemonic** wraps all properties required to compute [[link-bip-39]]\n *  seeds and convert between phrases and entropy.\n */\nexport class Mnemonic {\n    /**\n     *  The mnemonic phrase of 12, 15, 18, 21 or 24 words.\n     *\n     *  Use the [[wordlist]] ``split`` method to get the individual words.\n     */\n    readonly phrase!: string;\n\n    /**\n     *  The password used for this mnemonic. If no password is used this\n     *  is the empty string (i.e. ``\"\"``) as per the specification.\n     */\n    readonly password!: string;\n\n    /**\n     *  The wordlist for this mnemonic.\n     */\n    readonly wordlist!: Wordlist;\n\n    /**\n     *  The underlying entropy which the mnemonic encodes.\n     */\n    readonly entropy!: string;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, entropy: string, phrase: string, password?: null | string, wordlist?: null | Wordlist) {\n        if (password == null) { password = \"\"; }\n        if (wordlist == null) { wordlist = LangEn.wordlist(); }\n        assertPrivate(guard, _guard, \"Mnemonic\");\n        defineProperties<Mnemonic>(this, { phrase, password, wordlist, entropy });\n    }\n\n    /**\n     *  Returns the seed for the mnemonic.\n     */\n    computeSeed(): string {\n        const salt = toUtf8Bytes(\"mnemonic\" + this.password, \"NFKD\");\n        return pbkdf2(toUtf8Bytes(this.phrase, \"NFKD\"), salt, 2048, 64, \"sha512\");\n    }\n\n    /**\n     *  Creates a new Mnemonic for the %%phrase%%.\n     *\n     *  The default %%password%% is the empty string and the default\n     *  wordlist is the [English wordlists](LangEn).\n     */\n    static fromPhrase(phrase: string, password?: null | string, wordlist?: null | Wordlist): Mnemonic {\n        // Normalize the case and space; throws if invalid\n        const entropy = mnemonicToEntropy(phrase, wordlist);\n        phrase = entropyToMnemonic(getBytes(entropy), wordlist);\n        return new Mnemonic(_guard, entropy, phrase, password, wordlist);\n    }\n\n    /**\n     *  Create a new **Mnemonic** from the %%entropy%%.\n     *\n     *  The default %%password%% is the empty string and the default\n     *  wordlist is the [English wordlists](LangEn).\n     */\n    static fromEntropy(_entropy: BytesLike, password?: null | string, wordlist?: null | Wordlist): Mnemonic {\n        const entropy = getBytes(_entropy, \"entropy\");\n        const phrase = entropyToMnemonic(entropy, wordlist);\n        return new Mnemonic(_guard, hexlify(entropy), phrase, password, wordlist);\n    }\n\n    /**\n     *  Returns the phrase for %%mnemonic%%.\n     */\n    static entropyToPhrase(_entropy: BytesLike, wordlist?: null | Wordlist): string {\n        const entropy = getBytes(_entropy, \"entropy\");\n        return entropyToMnemonic(entropy, wordlist);\n    }\n\n    /**\n     *  Returns the entropy for %%phrase%%.\n     */\n    static phraseToEntropy(phrase: string, wordlist?: null | Wordlist): string {\n        return mnemonicToEntropy(phrase, wordlist);\n    }\n\n    /**\n     *  Returns true if %%phrase%% is a valid [[link-bip-39]] phrase.\n     *\n     *  This checks all the provided words belong to the %%wordlist%%,\n     *  that the length is valid and the checksum is correct.\n     */\n    static isValidMnemonic(phrase: string, wordlist?: null | Wordlist): boolean {\n        try {\n            mnemonicToEntropy(phrase, wordlist);\n            return true;\n        } catch (error) { }\n        return false;\n    }\n}\n", "/*! MIT License. Copyright 2015-2022 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */\n\n// Number of rounds by keysize\nconst numberOfRounds: Record<number, number> = { 16: 10, 24: 12, 32: 14 };\n\n// Round constant words\nconst rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n// S-box and Inverse S-box (S is for Substitution)\nconst S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\nconst Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n// Transformations for encryption\nconst T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\nconst T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\nconst T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\nconst T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n// Transformations for decryption\nconst T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\nconst T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\nconst T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\nconst T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n// Transformations for decryption key expansion\nconst U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\nconst U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\nconst U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\nconst U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\nfunction convertToInt32(bytes: Uint8Array): Array<number> {\n  const result = [ ];\n  for (let i = 0; i < bytes.length; i += 4) {\n    result.push((bytes[i] << 24) | (bytes[i + 1] << 16) | (bytes[i + 2] <<  8) | bytes[i + 3]);\n  }\n  return result;\n}\n\nexport class AES {\n  readonly #key: Uint8Array;\n  readonly #Kd: Array<Array<number>>;\n  readonly #Ke: Array<Array<number>>;\n\n  get key(): Uint8Array { return this.#key.slice(); }\n\n  constructor(key: Uint8Array) {\n    if (!(this instanceof AES)) {\n      throw Error('AES must be instanitated with `new`');\n    }\n\n    this.#key = new Uint8Array(key);\n\n    const rounds = numberOfRounds[this.key.length];\n    if (rounds == null) {\n      throw new TypeError('invalid key size (must be 16, 24 or 32 bytes)');\n    }\n\n    // encryption round keys\n    this.#Ke = [];\n\n    // decryption round keys\n    this.#Kd = [];\n\n    for (let i = 0; i <= rounds; i++) {\n      this.#Ke.push([0, 0, 0, 0]);\n      this.#Kd.push([0, 0, 0, 0]);\n    }\n\n    const roundKeyCount = (rounds + 1) * 4;\n    const KC = this.key.length / 4;\n\n    // convert the key into ints\n    const tk = convertToInt32(this.key);\n\n    // copy values into round key arrays\n    let index;\n    for (let i = 0; i < KC; i++) {\n      index = i >> 2;\n      this.#Ke[index][i % 4] = tk[i];\n      this.#Kd[rounds - index][i % 4] = tk[i];\n    }\n\n    // key expansion (fips-197 section 5.2)\n    let rconpointer = 0;\n    let t = KC, tt;\n    while (t < roundKeyCount) {\n      tt = tk[KC - 1];\n      tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                (S[(tt >>  8) & 0xFF] << 16) ^\n                (S[ tt        & 0xFF] <<  8) ^\n                 S[(tt >> 24) & 0xFF]        ^\n                (rcon[rconpointer] << 24));\n      rconpointer += 1;\n\n      // key expansion (for non-256 bit)\n      if (KC != 8) {\n        for (let i = 1; i < KC; i++) {\n          tk[i] ^= tk[i - 1];\n        }\n\n      // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n      } else {\n        for (let i = 1; i < (KC / 2); i++) {\n          tk[i] ^= tk[i - 1];\n        }\n        tt = tk[(KC / 2) - 1];\n\n        tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                      (S[(tt >>  8) & 0xFF] <<  8) ^\n                      (S[(tt >> 16) & 0xFF] << 16) ^\n                      (S[(tt >> 24) & 0xFF] << 24));\n\n        for (let i = (KC / 2) + 1; i < KC; i++) {\n          tk[i] ^= tk[i - 1];\n        }\n      }\n\n      // copy values into round key arrays\n      let i = 0, r, c;\n      while (i < KC && t < roundKeyCount) {\n        r = t >> 2;\n        c = t % 4;\n        this.#Ke[r][c] = tk[i];\n        this.#Kd[rounds - r][c] = tk[i++];\n        t++;\n      }\n    }\n\n    // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n    for (let r = 1; r < rounds; r++) {\n      for (let c = 0; c < 4; c++) {\n        tt = this.#Kd[r][c];\n        this.#Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                          U2[(tt >> 16) & 0xFF] ^\n                          U3[(tt >>  8) & 0xFF] ^\n                          U4[ tt        & 0xFF]);\n      }\n    }\n  }\n\n  encrypt(plaintext: Uint8Array): Uint8Array {\n    if (plaintext.length != 16) {\n      throw new TypeError('invalid plaintext size (must be 16 bytes)');\n    }\n\n    const rounds = this.#Ke.length - 1;\n    const a = [0, 0, 0, 0];\n\n    // convert plaintext to (ints ^ key)\n    let t = convertToInt32(plaintext);\n    for (let i = 0; i < 4; i++) {\n      t[i] ^= this.#Ke[0][i];\n    }\n\n    // apply round transforms\n    for (let r = 1; r < rounds; r++) {\n      for (let i = 0; i < 4; i++) {\n        a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                T4[ t[(i + 3) % 4]        & 0xff] ^\n                this.#Ke[r][i]);\n      }\n      t = a.slice();\n    }\n\n    // the last round is special\n    const result = new Uint8Array(16);\n    let tt = 0;\n    for (let i = 0; i < 4; i++) {\n      tt = this.#Ke[rounds][i];\n      result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n      result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n      result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n      result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n    }\n\n    return result;\n  }\n\n  decrypt(ciphertext: Uint8Array): Uint8Array {\n    if (ciphertext.length != 16) {\n      throw new TypeError('invalid ciphertext size (must be 16 bytes)');\n    }\n\n    const rounds = this.#Kd.length - 1;\n    const a = [0, 0, 0, 0];\n\n    // convert plaintext to (ints ^ key)\n    let t = convertToInt32(ciphertext);\n    for (let i = 0; i < 4; i++) {\n      t[i] ^= this.#Kd[0][i];\n    }\n\n    // apply round transforms\n    for (let r = 1; r < rounds; r++) {\n      for (let i = 0; i < 4; i++) {\n        a[i] = (T5[(t[ i         ] >> 24) & 0xff] ^\n                T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                T8[ t[(i + 1) % 4]        & 0xff] ^\n                this.#Kd[r][i]);\n      }\n      t = a.slice();\n    }\n\n    // the last round is special\n    const result = new Uint8Array(16);\n    let tt = 0;\n    for (let i = 0; i < 4; i++) {\n      tt = this.#Kd[rounds][i];\n      result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n      result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n      result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n      result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n    }\n\n    return result;\n  }\n}\n", "\nimport { AES } from \"./aes.js\";\n\nexport abstract class ModeOfOperation {\n  readonly aes!: AES;\n  readonly name!: string;\n\n  constructor(name: string, key: Uint8Array, cls?: any) {\n    if (cls && !(this instanceof cls)) {\n      throw new Error(`${ name } must be instantiated with \"new\"`);\n    }\n\n    Object.defineProperties(this, {\n      aes: { enumerable: true, value: new AES(key) },\n      name: { enumerable: true, value: name }\n    });\n  }\n\n  abstract encrypt(plaintext: Uint8Array): Uint8Array;\n  abstract decrypt(ciphertext: Uint8Array): Uint8Array;\n}\n", "// Cipher Block Chaining\n\nimport { ModeOfOperation } from \"./mode.js\";\n\nexport class CBC extends ModeOfOperation {\n  #iv: Uint8Array;\n  #lastBlock: Uint8Array;\n\n  constructor(key: Uint8Array, iv?: Uint8Array) {\n    super(\"ECC\", key, CBC);\n\n    if (iv) {\n      if (iv.length % 16) {\n        throw new TypeError(\"invalid iv size (must be 16 bytes)\");\n      }\n      this.#iv = new Uint8Array(iv);\n    } else {\n      this.#iv = new Uint8Array(16);\n    }\n\n    this.#lastBlock = this.iv;\n  }\n\n  get iv(): Uint8Array { return new Uint8Array(this.#iv); }\n\n  encrypt(plaintext: Uint8Array): Uint8Array {\n    if (plaintext.length % 16) {\n      throw new TypeError(\"invalid plaintext size (must be multiple of 16 bytes)\");\n    }\n\n    const ciphertext = new Uint8Array(plaintext.length);\n    for (let i = 0; i < plaintext.length; i += 16) {\n      for (let j = 0; j < 16; j++) {\n        this.#lastBlock[j] ^= plaintext[i + j];\n      }\n\n      this.#lastBlock = this.aes.encrypt(this.#lastBlock);\n      ciphertext.set(this.#lastBlock, i);\n    }\n\n    return ciphertext;\n  }\n\n  decrypt(ciphertext: Uint8Array): Uint8Array {\n    if (ciphertext.length % 16) {\n        throw new TypeError(\"invalid ciphertext size (must be multiple of 16 bytes)\");\n    }\n\n    const plaintext = new Uint8Array(ciphertext.length);\n    for (let i = 0; i < ciphertext.length; i += 16) {\n        const block = this.aes.decrypt(ciphertext.subarray(i, i + 16));\n\n        for (let j = 0; j < 16; j++) {\n          plaintext[i + j] = block[j] ^ this.#lastBlock[j];\n          this.#lastBlock[j] = ciphertext[i + j];\n        }\n    }\n\n    return plaintext;\n  }\n}\n", "// Cipher Feedback\n\nimport { ModeOfOperation } from \"./mode.js\";\n\nexport class CFB extends ModeOfOperation {\n  #iv: Uint8Array;\n  #shiftRegister: Uint8Array;\n\n  readonly segmentSize!: number;\n\n  constructor(key: Uint8Array, iv?: Uint8Array, segmentSize: number = 8) {\n    super(\"CFB\", key, CFB);\n\n    // This library currently only handles byte-aligned segmentSize\n    if (!Number.isInteger(segmentSize) || (segmentSize % 8)) {\n      throw new TypeError(\"invalid segmentSize\");\n    }\n\n    Object.defineProperties(this, {\n      segmentSize: { enumerable: true, value: segmentSize }\n    });\n\n    if (iv) {\n      if (iv.length % 16) {\n        throw new TypeError(\"invalid iv size (must be 16 bytes)\");\n      }\n      this.#iv = new Uint8Array(iv);\n    } else {\n      this.#iv = new Uint8Array(16);\n    }\n\n    this.#shiftRegister = this.iv;\n  }\n\n  get iv(): Uint8Array { return new Uint8Array(this.#iv); }\n\n  #shift(data: Uint8Array): void {\n    const segmentSize = this.segmentSize / 8;\n\n    // Shift the register\n    this.#shiftRegister.set(this.#shiftRegister.subarray(segmentSize));\n    this.#shiftRegister.set(data.subarray(0, segmentSize), 16 - segmentSize);\n  }\n\n  encrypt(plaintext: Uint8Array): Uint8Array {\n    if (8 * plaintext.length % this.segmentSize) {\n      throw new TypeError(\"invalid plaintext size (must be multiple of segmentSize bytes)\");\n    }\n\n    const segmentSize = this.segmentSize / 8;\n\n    const ciphertext = new Uint8Array(plaintext);\n\n    for (let i = 0; i < ciphertext.length; i += segmentSize) {\n      const xorSegment = this.aes.encrypt(this.#shiftRegister);\n      for (let j = 0; j < segmentSize; j++) {\n        ciphertext[i + j] ^= xorSegment[j];\n      }\n\n      this.#shift(ciphertext.subarray(i));\n    }\n\n    return ciphertext;\n  }\n\n  decrypt(ciphertext: Uint8Array): Uint8Array {\n    if (8 * ciphertext.length % this.segmentSize) {\n        throw new TypeError(\"invalid ciphertext size (must be multiple of segmentSize bytes)\");\n    }\n\n    const segmentSize = this.segmentSize / 8;\n\n    const plaintext = new Uint8Array(ciphertext);\n\n    for (let i = 0; i < plaintext.length; i += segmentSize) {\n      const xorSegment = this.aes.encrypt(this.#shiftRegister);\n      for (let j = 0; j < segmentSize; j++) {\n        plaintext[i + j] ^= xorSegment[j];\n      }\n\n      this.#shift(ciphertext.subarray(i));\n    }\n\n    return plaintext;\n  }\n}\n", "// Counter Mode\n\nimport { ModeOfOperation } from \"./mode.js\";\n\nexport class CTR extends ModeOfOperation {\n\n  // Remaining bytes for the one-time pad\n  #remaining: Uint8Array;\n  #remainingIndex: number;\n\n  // The current counter\n  #counter: Uint8Array;\n\n  constructor(key: Uint8Array, initialValue?: number | Uint8Array) {\n    super(\"CTR\", key, CTR);\n\n    this.#counter = new Uint8Array(16)\n    this.#counter.fill(0);\n\n    this.#remaining = this.#counter;  // This will be discarded immediately\n    this.#remainingIndex = 16;\n\n    if (initialValue == null) { initialValue = 1; }\n\n    if (typeof(initialValue) === \"number\") {\n      this.setCounterValue(initialValue);\n    } else {\n      this.setCounterBytes(initialValue);\n    }\n  }\n\n  get counter(): Uint8Array { return new Uint8Array(this.#counter); }\n\n  setCounterValue(value: number): void {\n    if (!Number.isInteger(value) || value < 0 || value > Number.MAX_SAFE_INTEGER) {\n      throw new TypeError(\"invalid counter initial integer value\");\n    }\n\n    for (let index = 15; index >= 0; --index) {\n      this.#counter[index] = value % 256;\n      value = Math.floor(value / 256);\n    }\n  }\n\n  setCounterBytes(value: Uint8Array): void {\n    if (value.length !== 16) {\n      throw new TypeError(\"invalid counter initial Uint8Array value length\");\n    }\n\n    this.#counter.set(value);\n  }\n\n  increment() {\n    for (let i = 15; i >= 0; i--) {\n      if (this.#counter[i] === 255) {\n        this.#counter[i] = 0;\n      } else {\n        this.#counter[i]++;\n        break;\n      }\n    }\n  }\n\n  encrypt(plaintext: Uint8Array): Uint8Array {\n    const crypttext = new Uint8Array(plaintext);\n\n    for (let i = 0; i < crypttext.length; i++) {\n      if (this.#remainingIndex === 16) {\n        this.#remaining = this.aes.encrypt(this.#counter);\n        this.#remainingIndex = 0;\n        this.increment();\n      }\n      crypttext[i] ^= this.#remaining[this.#remainingIndex++];\n    }\n\n    return crypttext;\n  }\n\n  decrypt(ciphertext: Uint8Array): Uint8Array {\n    return this.encrypt(ciphertext);\n  }\n}\n", "\nexport function pkcs7Pad(data: Uint8Array): Uint8Array {\n    const padder = 16 - (data.length % 16);\n\n    const result = new Uint8Array(data.length + padder);\n    result.set(data);\n\n    for (let i = data.length; i < result.length; i++) {\n        result[i] = padder;\n    }\n\n    return result;\n}\n\nexport function pkcs7Strip(data: Uint8Array): Uint8Array {\n    if (data.length < 16) { throw new TypeError('PKCS#7 invalid length'); }\n\n    const padder = data[data.length - 1];\n    if (padder > 16) { throw new TypeError('PKCS#7 padding byte out of range'); }\n\n    const length = data.length - padder;\n    for (let i = 0; i < padder; i++) {\n        if (data[length + i] !== padder) {\n            throw new TypeError('PKCS#7 invalid padding byte');\n        }\n    }\n\n    return new Uint8Array(data.subarray(0, length));\n}\n", "/**\n *  @_ignore\n */\n\nimport {\n    getBytesCopy, assertArgument, toUtf8Bytes\n} from \"../utils/index.js\";\n\nexport function looseArrayify(hexString: string): Uint8Array {\n    if (typeof(hexString) === \"string\" && !hexString.startsWith(\"0x\")) {\n        hexString = \"0x\" + hexString;\n    }\n    return getBytesCopy(hexString);\n}\n\nexport function zpad(value: String | number, length: number): String {\n    value = String(value);\n    while (value.length < length) { value = '0' + value; }\n    return value;\n}\n\nexport function getPassword(password: string | Uint8Array): Uint8Array {\n    if (typeof(password) === 'string') {\n        return toUtf8Bytes(password, \"NFKC\");\n    }\n    return getBytesCopy(password);\n}\n\nexport function spelunk<T>(object: any, _path: string): T {\n\n    const match = _path.match(/^([a-z0-9$_.-]*)(:([a-z]+))?(!)?$/i);\n    assertArgument(match != null, \"invalid path\", \"path\", _path);\n\n    const path = match[1];\n    const type = match[3];\n    const reqd = (match[4] === \"!\");\n\n    let cur = object;\n    for (const comp of path.toLowerCase().split('.')) {\n\n        // Search for a child object with a case-insensitive matching key\n        if (Array.isArray(cur)) {\n            if (!comp.match(/^[0-9]+$/)) { break; }\n            cur = cur[parseInt(comp)];\n\n        } else if (typeof(cur) === \"object\") {\n            let found: any = null;\n            for (const key in cur) {\n                 if (key.toLowerCase() === comp) {\n                     found = cur[key];\n                     break;\n                 }\n            }\n            cur = found;\n\n        } else {\n            cur = null;\n        }\n\n        if (cur == null) { break; }\n    }\n\n    assertArgument(!reqd || cur != null, \"missing required value\", \"path\", path);\n\n    if (type && cur != null) {\n        if (type === \"int\") {\n            if (typeof(cur) === \"string\" && cur.match(/^-?[0-9]+$/)) {\n                return <T><unknown>parseInt(cur);\n            } else if (Number.isSafeInteger(cur)) {\n                return cur;\n            }\n        }\n\n        if (type === \"number\") {\n            if (typeof(cur) === \"string\" && cur.match(/^-?[0-9.]*$/)) {\n                return <T><unknown>parseFloat(cur);\n            }\n        }\n\n        if (type === \"data\") {\n            if (typeof(cur) === \"string\") { return <T><unknown>looseArrayify(cur); }\n        }\n\n        if (type === \"array\" && Array.isArray(cur)) { return <T><unknown>cur; }\n        if (type === typeof(cur)) { return cur; }\n\n        assertArgument(false, `wrong type found for ${ type } `, \"path\", path);\n    }\n\n    return cur;\n}\n/*\nexport function follow(object: any, path: string): null | string {\n    let currentChild = object;\n\n    for (const comp of path.toLowerCase().split('/')) {\n\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n             if (key.toLowerCase() === comp) {\n                 matchingChild = currentChild[key];\n                 break;\n             }\n        }\n\n        if (matchingChild === null) { return null; }\n\n        currentChild = matchingChild;\n    }\n\n    return currentChild;\n}\n\n// \"path/to/something:type!\"\nexport function followRequired(data: any, path: string): string {\n    const value = follow(data, path);\n    if (value != null) { return value; }\n    return logger.throwArgumentError(\"invalid value\", `data:${ path }`,\n    JSON.stringify(data));\n}\n*/\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\n/*\nexport function uuidV4(randomBytes: BytesLike): string {\n    const bytes = getBytes(randomBytes, \"randomBytes\");\n\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    const value = hexlify(bytes);\n\n    return [\n       value.substring(2, 10),\n       value.substring(10, 14),\n       value.substring(14, 18),\n       value.substring(18, 22),\n       value.substring(22, 34),\n    ].join(\"-\");\n}\n*/\n", "/**\n *  The JSON Wallet formats allow a simple way to store the private\n *  keys needed in Ethereum along with related information and allows\n *  for extensible forms of encryption.\n *\n *  These utilities facilitate decrypting and encrypting the most common\n *  JSON Wallet formats.\n *\n *  @_subsection: api/wallet:JSON Wallets  [json-wallets]\n */\n\nimport { CTR } from \"aes-js\";\n\nimport { getAddress } from \"../address/index.js\";\nimport { keccak256, pbkdf2, randomBytes, scrypt, scryptSync } from \"../crypto/index.js\";\nimport { computeAddress } from \"../transaction/index.js\";\nimport {\n    concat, getBytes, hexlify, uuidV4, assert, assertArgument\n} from \"../utils/index.js\";\n\nimport { getPassword, spelunk, zpad } from \"./utils.js\";\n\nimport type { ProgressCallback } from \"../crypto/index.js\";\nimport type { BytesLike } from \"../utils/index.js\";\n\nimport { version } from \"../_version.js\";\n\n\nconst defaultPath = \"m/44'/60'/0'/0/0\";\n\n/**\n *  The contents of a JSON Keystore Wallet.\n */\nexport type KeystoreAccount = {\n    address: string;\n    privateKey: string;\n    mnemonic?: {\n        path?: string;\n        locale?: string;\n        entropy: string;\n    }\n};\n\n/**\n *  The parameters to use when encrypting a JSON Keystore Wallet.\n */\nexport type EncryptOptions = {\n   progressCallback?: ProgressCallback;\n   iv?: BytesLike;\n   entropy?: BytesLike;\n   client?: string;\n   salt?: BytesLike;\n   uuid?: string;\n   scrypt?: {\n       N?: number;\n       r?: number;\n       p?: number;\n   }\n}\n\n/**\n *  Returns true if %%json%% is a valid JSON Keystore Wallet.\n */\nexport function isKeystoreJson(json: string): boolean {\n    try {\n        const data = JSON.parse(json);\n        const version = ((data.version != null) ? parseInt(data.version): 0);\n        if (version === 3) { return true; }\n    } catch (error) { }\n    return false;\n}\n\nfunction decrypt(data: any, key: Uint8Array, ciphertext: Uint8Array): string {\n    const cipher = spelunk<string>(data, \"crypto.cipher:string\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = spelunk<Uint8Array>(data, \"crypto.cipherparams.iv:data!\")\n        const aesCtr = new CTR(key, iv);\n        return hexlify(aesCtr.decrypt(ciphertext));\n    }\n\n    assert(false, \"unsupported cipher\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"decrypt\"\n    });\n}\n\nfunction getAccount(data: any, _key: string): KeystoreAccount {\n    const key = getBytes(_key);\n    const ciphertext = spelunk<Uint8Array>(data, \"crypto.ciphertext:data!\");\n\n    const computedMAC = hexlify(keccak256(concat([ key.slice(16, 32), ciphertext ]))).substring(2);\n    assertArgument(computedMAC === spelunk<string>(data, \"crypto.mac:string!\").toLowerCase(),\n        \"incorrect password\", \"password\", \"[ REDACTED ]\");\n\n    const privateKey = decrypt(data, key.slice(0, 16), ciphertext);\n\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (!check.startsWith(\"0x\")) { check = \"0x\" + check; }\n\n        assertArgument(getAddress(check) === address, \"keystore address/privateKey mismatch\", \"address\", data.address);\n    }\n\n    const account: KeystoreAccount = { address, privateKey };\n\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    const version = spelunk(data, \"x-ethers.version:string\");\n    if (version === \"0.1\") {\n        const mnemonicKey = key.slice(32, 64);\n\n        const mnemonicCiphertext = spelunk<Uint8Array>(data, \"x-ethers.mnemonicCiphertext:data!\");\n        const mnemonicIv = spelunk<Uint8Array>(data, \"x-ethers.mnemonicCounter:data!\");\n\n        const mnemonicAesCtr = new CTR(mnemonicKey, mnemonicIv);\n\n        account.mnemonic = {\n            path: (spelunk<null | string>(data, \"x-ethers.path:string\") || defaultPath),\n            locale: (spelunk<null | string>(data, \"x-ethers.locale:string\") || \"en\"),\n            entropy: hexlify(getBytes(mnemonicAesCtr.decrypt(mnemonicCiphertext)))\n        };\n    }\n\n    return account;\n}\n\ntype ScryptParams = {\n    name: \"scrypt\";\n    salt: Uint8Array;\n    N: number;\n    r: number;\n    p: number;\n    dkLen: number;\n};\n\ntype KdfParams = ScryptParams | {\n    name: \"pbkdf2\";\n    salt: Uint8Array;\n    count: number;\n    dkLen: number;\n    algorithm: \"sha256\" | \"sha512\";\n};\n\nfunction getDecryptKdfParams<T>(data: any): KdfParams {\n    const kdf = spelunk(data, \"crypto.kdf:string\");\n    if (kdf && typeof(kdf) === \"string\") {\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = spelunk<Uint8Array>(data, \"crypto.kdfparams.salt:data!\");\n            const N = spelunk<number>(data, \"crypto.kdfparams.n:int!\");\n            const r = spelunk<number>(data, \"crypto.kdfparams.r:int!\");\n            const p = spelunk<number>(data, \"crypto.kdfparams.p:int!\");\n\n            // Make sure N is a power of 2\n            assertArgument(N > 0 && (N & (N - 1)) === 0, \"invalid kdf.N\", \"kdf.N\", N);\n            assertArgument(r > 0 && p > 0, \"invalid kdf\", \"kdf\", kdf);\n\n            const dkLen = spelunk<number>(data, \"crypto.kdfparams.dklen:int!\");\n            assertArgument(dkLen === 32, \"invalid kdf.dklen\", \"kdf.dflen\", dkLen);\n\n            return { name: \"scrypt\", salt, N, r, p, dkLen: 64 };\n\n        } else if (kdf.toLowerCase() === \"pbkdf2\") {\n\n            const salt = spelunk<Uint8Array>(data, \"crypto.kdfparams.salt:data!\");\n\n            const prf = spelunk<string>(data, \"crypto.kdfparams.prf:string!\");\n            const algorithm = prf.split(\"-\").pop();\n            assertArgument(algorithm === \"sha256\" || algorithm === \"sha512\", \"invalid kdf.pdf\", \"kdf.pdf\", prf);\n\n            const count = spelunk<number>(data, \"crypto.kdfparams.c:int!\");\n\n            const dkLen = spelunk<number>(data, \"crypto.kdfparams.dklen:int!\");\n            assertArgument(dkLen === 32, \"invalid kdf.dklen\", \"kdf.dklen\", dkLen);\n\n            return { name: \"pbkdf2\", salt, count, dkLen, algorithm };\n        }\n    }\n\n    assertArgument(false, \"unsupported key-derivation function\", \"kdf\", kdf);\n}\n\n\n/**\n *  Returns the account details for the JSON Keystore Wallet %%json%%\n *  using %%password%%.\n *\n *  It is preferred to use the [async version](decryptKeystoreJson)\n *  instead, which allows a [[ProgressCallback]] to keep the user informed\n *  as to the decryption status.\n *\n *  This method will block the event loop (freezing all UI) until decryption\n *  is complete, which can take quite some time, depending on the wallet\n *  paramters and platform.\n */\nexport function decryptKeystoreJsonSync(json: string, _password: string | Uint8Array): KeystoreAccount {\n    const data = JSON.parse(json);\n\n    const password = getPassword(_password);\n\n    const params = getDecryptKdfParams(data);\n    if (params.name === \"pbkdf2\") {\n        const { salt, count, dkLen, algorithm } = params;\n        const key = pbkdf2(password, salt, count, dkLen, algorithm);\n        return getAccount(data, key);\n    }\n\n    assert(params.name === \"scrypt\", \"cannot be reached\", \"UNKNOWN_ERROR\", { params })\n\n    const { salt, N, r, p, dkLen } = params;\n    const key = scryptSync(password, salt, N, r, p, dkLen);\n    return getAccount(data, key);\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => { setTimeout(() => { resolve(); }, duration); });\n}\n\n/**\n *  Resolves to the decrypted JSON Keystore Wallet %%json%% using the\n *  %%password%%.\n *\n *  If provided, %%progress%% will be called periodically during the\n *  decrpytion to provide feedback, and if the function returns\n *  ``false`` will halt decryption.\n *\n *  The %%progressCallback%% will **always** receive ``0`` before\n *  decryption begins and ``1`` when complete.\n */\nexport async function decryptKeystoreJson(json: string, _password: string | Uint8Array, progress?: ProgressCallback): Promise<KeystoreAccount> {\n    const data = JSON.parse(json);\n\n    const password = getPassword(_password);\n\n    const params = getDecryptKdfParams(data);\n    if (params.name === \"pbkdf2\") {\n        if (progress) {\n            progress(0);\n            await stall(0);\n        }\n        const { salt, count, dkLen, algorithm } = params;\n        const key = pbkdf2(password, salt, count, dkLen, algorithm);\n        if (progress) {\n            progress(1);\n            await stall(0);\n        }\n        return getAccount(data, key);\n    }\n\n    assert(params.name === \"scrypt\", \"cannot be reached\", \"UNKNOWN_ERROR\", { params })\n\n    const { salt, N, r, p, dkLen } = params;\n    const key = await scrypt(password, salt, N, r, p, dkLen, progress);\n    return getAccount(data, key);\n}\n\nfunction getEncryptKdfParams(options: EncryptOptions): ScryptParams {\n    // Check/generate the salt\n    const salt = (options.salt != null) ? getBytes(options.salt, \"options.salt\"): randomBytes(32);\n\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) { N = options.scrypt.N; }\n        if (options.scrypt.r) { r = options.scrypt.r; }\n        if (options.scrypt.p) { p = options.scrypt.p; }\n    }\n    assertArgument(typeof(N) === \"number\" && N > 0 && Number.isSafeInteger(N) && (BigInt(N) & BigInt(N - 1)) === BigInt(0), \"invalid scrypt N parameter\", \"options.N\", N);\n    assertArgument(typeof(r) === \"number\" && r > 0 && Number.isSafeInteger(r), \"invalid scrypt r parameter\", \"options.r\", r);\n    assertArgument(typeof(p) === \"number\" && p > 0 && Number.isSafeInteger(p), \"invalid scrypt p parameter\", \"options.p\", p);\n\n    return { name: \"scrypt\", dkLen: 32, salt, N, r, p };\n}\n\nfunction _encryptKeystore(key: Uint8Array, kdf: ScryptParams, account: KeystoreAccount, options: EncryptOptions): any {\n\n    const privateKey = getBytes(account.privateKey, \"privateKey\");\n\n    // Override initialization vector\n    const iv = (options.iv != null) ? getBytes(options.iv, \"options.iv\"): randomBytes(16);\n    assertArgument(iv.length === 16, \"invalid options.iv length\", \"options.iv\", options.iv);\n\n    // Override the uuid\n    const uuidRandom = (options.uuid != null) ? getBytes(options.uuid, \"options.uuid\"): randomBytes(16);\n    assertArgument(uuidRandom.length === 16, \"invalid options.uuid length\", \"options.uuid\", options.iv);\n\n    // This will be used to encrypt the wallet (as per Web3 secret storage)\n    // - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    // - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    const derivedKey = key.slice(0, 16);\n    const macPrefix = key.slice(16, 32);\n\n    // Encrypt the private key\n    const aesCtr = new CTR(derivedKey, iv);\n    const ciphertext = getBytes(aesCtr.encrypt(privateKey));\n\n    // Compute the message authentication code, used to check the password\n    const mac = keccak256(concat([ macPrefix, ciphertext ]))\n\n    // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n    const data: { [key: string]: any } = {\n        address: account.address.substring(2).toLowerCase(),\n        id: uuidV4(uuidRandom),\n        version: 3,\n        Crypto: {\n            cipher: \"aes-128-ctr\",\n            cipherparams: {\n                iv: hexlify(iv).substring(2),\n            },\n            ciphertext: hexlify(ciphertext).substring(2),\n            kdf: \"scrypt\",\n            kdfparams: {\n                salt: hexlify(kdf.salt).substring(2),\n                n: kdf.N,\n                dklen: 32,\n                p: kdf.p,\n                r: kdf.r\n            },\n            mac: mac.substring(2)\n        }\n    };\n\n    // If we have a mnemonic, encrypt it into the JSON wallet\n    if (account.mnemonic) {\n        const client = (options.client != null) ? options.client: `ethers/${ version }`;\n\n        const path = account.mnemonic.path || defaultPath;\n        const locale = account.mnemonic.locale || \"en\";\n\n        const mnemonicKey = key.slice(32, 64);\n\n        const entropy = getBytes(account.mnemonic.entropy, \"account.mnemonic.entropy\");\n        const mnemonicIv = randomBytes(16);\n        const mnemonicAesCtr = new CTR(mnemonicKey, mnemonicIv);\n        const mnemonicCiphertext = getBytes(mnemonicAesCtr.encrypt(entropy));\n\n        const now = new Date();\n        const timestamp = (now.getUTCFullYear() + \"-\" +\n                           zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                           zpad(now.getUTCDate(), 2) + \"T\" +\n                           zpad(now.getUTCHours(), 2) + \"-\" +\n                           zpad(now.getUTCMinutes(), 2) + \"-\" +\n                           zpad(now.getUTCSeconds(), 2) + \".0Z\");\n        const gethFilename = (\"UTC--\" + timestamp + \"--\" + data.address);\n\n        data[\"x-ethers\"] = {\n            client, gethFilename, path, locale,\n            mnemonicCounter: hexlify(mnemonicIv).substring(2),\n            mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n            version: \"0.1\"\n        };\n    }\n\n    return JSON.stringify(data);\n}\n\n/**\n *  Return the JSON Keystore Wallet for %%account%% encrypted with\n *  %%password%%.\n *\n *  The %%options%% can be used to tune the password-based key\n *  derivation function parameters, explicitly set the random values\n *  used. Any provided [[ProgressCallback]] is ignord.\n */\nexport function encryptKeystoreJsonSync(account: KeystoreAccount, password: string | Uint8Array, options?: EncryptOptions): string {\n    if (options == null) { options = { }; }\n\n    const passwordBytes = getPassword(password);\n    const kdf = getEncryptKdfParams(options);\n    const key = scryptSync(passwordBytes, kdf.salt, kdf.N, kdf.r, kdf.p, 64);\n    return _encryptKeystore(getBytes(key), kdf, account, options);\n}\n\n/**\n *  Resolved to the JSON Keystore Wallet for %%account%% encrypted\n *  with %%password%%.\n *\n *  The %%options%% can be used to tune the password-based key\n *  derivation function parameters, explicitly set the random values\n *  used and provide a [[ProgressCallback]] to receive periodic updates\n *  on the completion status..\n */\nexport async function encryptKeystoreJson(account: KeystoreAccount, password: string | Uint8Array, options?: EncryptOptions): Promise<string> {\n    if (options == null) { options = { }; }\n\n    const passwordBytes = getPassword(password);\n    const kdf = getEncryptKdfParams(options);\n    const key = await scrypt(passwordBytes, kdf.salt, kdf.N, kdf.r, kdf.p, 64, options.progressCallback);\n    return _encryptKeystore(getBytes(key), kdf, account, options);\n}\n\n", "/**\n *  Explain HD Wallets..\n *\n *  @_subsection: api/wallet:HD Wallets  [hd-wallets]\n */\nimport { computeHmac, randomBytes, ripemd160, SigningKey, sha256 } from \"../crypto/index.js\";\nimport { VoidSigner } from \"../providers/index.js\";\nimport { computeAddress } from \"../transaction/index.js\";\nimport {\n    concat, dataSlice, decodeBase58, defineProperties, encodeBase58,\n    getBytes, hexlify, isBytesLike,\n    getNumber, toBeArray, toBigInt, toBeHex,\n    assertPrivate, assert, assertArgument\n} from \"../utils/index.js\";\nimport { LangEn } from \"../wordlists/lang-en.js\";\n\nimport { BaseWallet } from \"./base-wallet.js\";\nimport { Mnemonic } from \"./mnemonic.js\";\nimport {\n    encryptKeystoreJson, encryptKeystoreJsonSync,\n} from \"./json-keystore.js\";\n\nimport type { ProgressCallback } from \"../crypto/index.js\";\nimport type { Provider } from \"../providers/index.js\";\nimport type { BytesLike, Numeric } from \"../utils/index.js\";\nimport type { Wordlist } from \"../wordlists/index.js\";\n\nimport type { KeystoreAccount } from \"./json-keystore.js\";\n\n/**\n *  The default derivation path for Ethereum HD Nodes. (i.e. ``\"m/44'/60'/0'/0/0\"``)\n */\nexport const defaultPath: string = \"m/44'/60'/0'/0/0\";\n\n\n// \"Bitcoin seed\"\nconst MasterSecret = new Uint8Array([ 66, 105, 116, 99, 111, 105, 110, 32, 115, 101, 101, 100 ]);\n\nconst HardenedBit = 0x80000000;\n\nconst N = BigInt(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n\nconst Nibbles = \"0123456789abcdef\";\nfunction zpad(value: number, length: number): string {\n    let result = \"\";\n    while (value) {\n        result = Nibbles[value % 16] + result;\n        value = Math.trunc(value / 16);\n    }\n    while (result.length < length * 2) { result = \"0\" + result; }\n    return \"0x\" + result;\n}\n\nfunction encodeBase58Check(_value: BytesLike): string {\n    const value = getBytes(_value);\n    const check = dataSlice(sha256(sha256(value)), 0, 4);\n    const bytes = concat([ value, check ]);\n    return encodeBase58(bytes);\n}\n\nconst _guard = { };\n\nfunction ser_I(index: number, chainCode: string, publicKey: string, privateKey: null | string): { IL: Uint8Array, IR: Uint8Array } {\n    const data = new Uint8Array(37);\n\n    if (index & HardenedBit) {\n        assert(privateKey != null, \"cannot derive child of neutered node\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"deriveChild\"\n        });\n\n        // Data = 0x00 || ser_256(k_par)\n        data.set(getBytes(privateKey), 1);\n\n    } else {\n        // Data = ser_p(point(k_par))\n        data.set(getBytes(publicKey));\n    }\n\n    // Data += ser_32(i)\n    for (let i = 24; i >= 0; i -= 8) { data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff); }\n    const I = getBytes(computeHmac(\"sha512\", chainCode, data));\n\n    return { IL: I.slice(0, 32), IR: I.slice(32) };\n}\n\ntype HDNodeLike<T> = { depth: number, deriveChild: (i: number) => T };\nfunction derivePath<T extends HDNodeLike<T>>(node: T, path: string): T {\n    const components = path.split(\"/\");\n\n    assertArgument(components.length > 0, \"invalid path\", \"path\", path);\n\n    if (components[0] === \"m\") {\n        assertArgument(node.depth === 0, `cannot derive root path (i.e. path starting with \"m/\") for a node at non-zero depth ${ node.depth }`, \"path\", path);\n        components.shift();\n    }\n\n    let result: T = node;\n    for (let i = 0; i < components.length; i++) {\n        const component = components[i];\n\n        if (component.match(/^[0-9]+'$/)) {\n            const index = parseInt(component.substring(0, component.length - 1));\n            assertArgument(index < HardenedBit, \"invalid path index\", `path[${ i }]`, component);\n            result = result.deriveChild(HardenedBit + index);\n\n        } else if (component.match(/^[0-9]+$/)) {\n            const index = parseInt(component);\n            assertArgument(index < HardenedBit, \"invalid path index\", `path[${ i }]`, component);\n            result = result.deriveChild(index);\n\n        } else {\n            assertArgument(false, \"invalid path component\", `path[${ i }]`, component);\n        }\n    }\n\n    return result;\n}\n\n/**\n *  An **HDNodeWallet** is a [[Signer]] backed by the private key derived\n *  from an HD Node using the [[link-bip-32]] stantard.\n *\n *  An HD Node forms a hierarchal structure with each HD Node having a\n *  private key and the ability to derive child HD Nodes, defined by\n *  a path indicating the index of each child.\n */\nexport class HDNodeWallet extends BaseWallet {\n    /**\n     *  The compressed public key.\n     */\n    readonly publicKey!: string;\n\n    /**\n     *  The fingerprint.\n     *\n     *  A fingerprint allows quick qay to detect parent and child nodes,\n     *  but developers should be prepared to deal with collisions as it\n     *  is only 4 bytes.\n     */\n    readonly fingerprint!: string;\n\n    /**\n     *  The parent fingerprint.\n     */\n    readonly parentFingerprint!: string;\n\n    /**\n     *  The mnemonic used to create this HD Node, if available.\n     *\n     *  Sources such as extended keys do not encode the mnemonic, in\n     *  which case this will be ``null``.\n     */\n    readonly mnemonic!: null | Mnemonic;\n\n    /**\n     *  The chaincode, which is effectively a public key used\n     *  to derive children.\n     */\n    readonly chainCode!: string;\n\n    /**\n     *  The derivation path of this wallet.\n     *\n     *  Since extended keys do not provider full path details, this\n     *  may be ``null``, if instantiated from a source that does not\n     *  enocde it.\n     */\n    readonly path!: null | string;\n\n    /**\n     *  The child index of this wallet. Values over ``2 *\\* 31`` indicate\n     *  the node is hardened.\n     */\n    readonly index!: number;\n\n    /**\n     *  The depth of this wallet, which is the number of components\n     *  in its path.\n     */\n    readonly depth!: number;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, signingKey: SigningKey, parentFingerprint: string, chainCode: string, path: null | string, index: number, depth: number, mnemonic: null | Mnemonic, provider: null | Provider) {\n        super(signingKey, provider);\n        assertPrivate(guard, _guard, \"HDNodeWallet\");\n\n        defineProperties<HDNodeWallet>(this, { publicKey: signingKey.compressedPublicKey });\n\n        const fingerprint = dataSlice(ripemd160(sha256(this.publicKey)), 0, 4);\n        defineProperties<HDNodeWallet>(this, {\n            parentFingerprint, fingerprint,\n            chainCode, path, index, depth\n        });\n\n        defineProperties<HDNodeWallet>(this, { mnemonic });\n    }\n\n    connect(provider: null | Provider): HDNodeWallet {\n        return new HDNodeWallet(_guard, this.signingKey, this.parentFingerprint,\n            this.chainCode, this.path, this.index, this.depth, this.mnemonic, provider);\n    }\n\n    #account(): KeystoreAccount {\n        const account: KeystoreAccount = { address: this.address, privateKey: this.privateKey };\n        const m = this.mnemonic;\n        if (this.path && m && m.wordlist.locale === \"en\" && m.password === \"\") {\n            account.mnemonic = {\n                path: this.path,\n                locale: \"en\",\n                entropy: m.entropy\n            };\n        }\n\n        return account;\n    }\n\n    /**\n     *  Resolves to a [JSON Keystore Wallet](json-wallets) encrypted with\n     *  %%password%%.\n     *\n     *  If %%progressCallback%% is specified, it will receive periodic\n     *  updates as the encryption process progreses.\n     */\n    async encrypt(password: Uint8Array | string, progressCallback?: ProgressCallback): Promise<string> {\n        return await encryptKeystoreJson(this.#account(), password, { progressCallback });\n    }\n\n    /**\n     *  Returns a [JSON Keystore Wallet](json-wallets) encryped with\n     *  %%password%%.\n     *\n     *  It is preferred to use the [async version](encrypt) instead,\n     *  which allows a [[ProgressCallback]] to keep the user informed.\n     *\n     *  This method will block the event loop (freezing all UI) until\n     *  it is complete, which may be a non-trivial duration.\n     */\n    encryptSync(password: Uint8Array | string): string {\n        return encryptKeystoreJsonSync(this.#account(), password);\n    }\n\n    /**\n     *  The extended key.\n     *\n     *  This key will begin with the prefix ``xpriv`` and can be used to\n     *  reconstruct this HD Node to derive its children.\n     */\n    get extendedKey(): string {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n\n        assert(this.depth < 256, \"Depth too deep\", \"UNSUPPORTED_OPERATION\", { operation: \"extendedKey\" });\n\n        return encodeBase58Check(concat([\n            \"0x0488ADE4\", zpad(this.depth, 1), this.parentFingerprint,\n            zpad(this.index, 4), this.chainCode,\n            concat([ \"0x00\", this.privateKey ])\n        ]));\n    }\n\n    /**\n     *  Returns true if this wallet has a path, providing a Type Guard\n     *  that the path is non-null.\n     */\n    hasPath(): this is { path: string } { return (this.path != null); }\n\n    /**\n     *  Returns a neutered HD Node, which removes the private details\n     *  of an HD Node.\n     *\n     *  A neutered node has no private key, but can be used to derive\n     *  child addresses and other public data about the HD Node.\n     */\n    neuter(): HDNodeVoidWallet {\n        return new HDNodeVoidWallet(_guard, this.address, this.publicKey,\n            this.parentFingerprint, this.chainCode, this.path, this.index,\n            this.depth, this.provider);\n    }\n\n    /**\n     *  Return the child for %%index%%.\n     */\n    deriveChild(_index: Numeric): HDNodeWallet {\n        const index = getNumber(_index, \"index\");\n        assertArgument(index <= 0xffffffff, \"invalid index\", \"index\", index);\n\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n            if (index & HardenedBit) { path += \"'\"; }\n        }\n\n        const { IR, IL } = ser_I(index, this.chainCode, this.publicKey, this.privateKey);\n        const ki = new SigningKey(toBeHex((toBigInt(IL) + BigInt(this.privateKey)) % N, 32));\n\n        return new HDNodeWallet(_guard, ki, this.fingerprint, hexlify(IR),\n            path, index, this.depth + 1, this.mnemonic, this.provider);\n\n    }\n\n    /**\n     *  Return the HDNode for %%path%% from this node.\n     */\n    derivePath(path: string): HDNodeWallet {\n        return derivePath<HDNodeWallet>(this, path);\n    }\n\n    static #fromSeed(_seed: BytesLike, mnemonic: null | Mnemonic): HDNodeWallet {\n        assertArgument(isBytesLike(_seed), \"invalid seed\", \"seed\", \"[REDACTED]\");\n\n        const seed = getBytes(_seed, \"seed\");\n        assertArgument(seed.length >= 16 && seed.length <= 64 , \"invalid seed\", \"seed\", \"[REDACTED]\");\n\n        const I = getBytes(computeHmac(\"sha512\", MasterSecret, seed));\n        const signingKey = new SigningKey(hexlify(I.slice(0, 32)));\n\n        return new HDNodeWallet(_guard, signingKey, \"0x00000000\", hexlify(I.slice(32)),\n            \"m\", 0, 0, mnemonic, null);\n    }\n\n    /**\n     *  Creates a new HD Node from %%extendedKey%%.\n     *\n     *  If the %%extendedKey%% will either have a prefix or ``xpub`` or\n     *  ``xpriv``, returning a neutered HD Node ([[HDNodeVoidWallet]])\n     *  or full HD Node ([[HDNodeWallet) respectively.\n     */\n    static fromExtendedKey(extendedKey: string): HDNodeWallet | HDNodeVoidWallet {\n        const bytes = toBeArray(decodeBase58(extendedKey)); // @TODO: redact\n\n        assertArgument(bytes.length === 82 || encodeBase58Check(bytes.slice(0, 78)) === extendedKey,\n            \"invalid extended key\", \"extendedKey\", \"[ REDACTED ]\");\n\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\": case \"0x043587cf\": {\n                const publicKey = hexlify(key);\n                return new HDNodeVoidWallet(_guard, computeAddress(publicKey), publicKey,\n                    parentFingerprint, chainCode, null, index, depth, null);\n            }\n\n            // Private Key\n            case \"0x0488ade4\": case \"0x04358394 \":\n                if (key[0] !== 0) { break; }\n                return new HDNodeWallet(_guard, new SigningKey(key.slice(1)),\n                    parentFingerprint, chainCode, null, index, depth, null, null);\n        }\n\n\n        assertArgument(false, \"invalid extended key prefix\", \"extendedKey\", \"[ REDACTED ]\");\n    }\n\n    /**\n     *  Creates a new random HDNode.\n     */\n    static createRandom(password?: string, path?: string, wordlist?: Wordlist): HDNodeWallet {\n        if (password == null) { password = \"\"; }\n        if (path == null) { path = defaultPath; }\n        if (wordlist == null) { wordlist = LangEn.wordlist(); }\n        const mnemonic = Mnemonic.fromEntropy(randomBytes(16), password, wordlist)\n        return HDNodeWallet.#fromSeed(mnemonic.computeSeed(), mnemonic).derivePath(path);\n    }\n\n    /**\n     *  Create an HD Node from %%mnemonic%%.\n     */\n    static fromMnemonic(mnemonic: Mnemonic, path?: string): HDNodeWallet {\n        if (!path) { path = defaultPath; }\n        return HDNodeWallet.#fromSeed(mnemonic.computeSeed(), mnemonic).derivePath(path);\n    }\n\n    /**\n     *  Creates an HD Node from a mnemonic %%phrase%%.\n     */\n    static fromPhrase(phrase: string, password?: string, path?: string, wordlist?: Wordlist): HDNodeWallet {\n        if (password == null) { password = \"\"; }\n        if (path == null) { path = defaultPath; }\n        if (wordlist == null) { wordlist = LangEn.wordlist(); }\n        const mnemonic = Mnemonic.fromPhrase(phrase, password, wordlist)\n        return HDNodeWallet.#fromSeed(mnemonic.computeSeed(), mnemonic).derivePath(path);\n    }\n\n    /**\n     *  Creates an HD Node from a %%seed%%.\n     */\n    static fromSeed(seed: BytesLike): HDNodeWallet {\n        return HDNodeWallet.#fromSeed(seed, null);\n    }\n}\n\n/**\n *  A **HDNodeVoidWallet** cannot sign, but provides access to\n *  the children nodes of a [[link-bip-32]] HD wallet addresses.\n *\n *  The can be created by using an extended ``xpub`` key to\n *  [[HDNodeWallet_fromExtendedKey]] or by \n *  [nuetering](HDNodeWallet-neuter) a [[HDNodeWallet]].\n */\nexport class HDNodeVoidWallet extends VoidSigner {\n    /**\n     *  The compressed public key.\n     */\n    readonly publicKey!: string;\n\n    /**\n     *  The fingerprint.\n     *\n     *  A fingerprint allows quick qay to detect parent and child nodes,\n     *  but developers should be prepared to deal with collisions as it\n     *  is only 4 bytes.\n     */\n    readonly fingerprint!: string;\n\n    /**\n     *  The parent node fingerprint.\n     */\n    readonly parentFingerprint!: string;\n\n    /**\n     *  The chaincode, which is effectively a public key used\n     *  to derive children.\n     */\n    readonly chainCode!: string;\n\n    /**\n     *  The derivation path of this wallet.\n     *\n     *  Since extended keys do not provider full path details, this\n     *  may be ``null``, if instantiated from a source that does not\n     *  enocde it.\n     */\n    readonly path!: null | string;\n\n    /**\n     *  The child index of this wallet. Values over ``2 *\\* 31`` indicate\n     *  the node is hardened.\n     */\n    readonly index!: number;\n\n    /**\n     *  The depth of this wallet, which is the number of components\n     *  in its path.\n     */\n    readonly depth!: number;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, address: string, publicKey: string, parentFingerprint: string, chainCode: string, path: null | string, index: number, depth: number, provider: null | Provider) {\n        super(address, provider);\n        assertPrivate(guard, _guard, \"HDNodeVoidWallet\");\n\n        defineProperties<HDNodeVoidWallet>(this, { publicKey });\n\n        const fingerprint = dataSlice(ripemd160(sha256(publicKey)), 0, 4);\n        defineProperties<HDNodeVoidWallet>(this, {\n            publicKey, fingerprint, parentFingerprint, chainCode, path, index, depth\n        });\n    }\n\n    connect(provider: null | Provider): HDNodeVoidWallet {\n        return new HDNodeVoidWallet(_guard, this.address, this.publicKey,\n            this.parentFingerprint, this.chainCode, this.path, this.index, this.depth, provider);\n    }\n\n    /**\n     *  The extended key.\n     *\n     *  This key will begin with the prefix ``xpub`` and can be used to\n     *  reconstruct this neutered key to derive its children addresses.\n     */\n    get extendedKey(): string {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n\n        assert(this.depth < 256, \"Depth too deep\", \"UNSUPPORTED_OPERATION\", { operation: \"extendedKey\" });\n\n        return encodeBase58Check(concat([\n            \"0x0488B21E\",\n            zpad(this.depth, 1),\n            this.parentFingerprint,\n            zpad(this.index, 4),\n            this.chainCode,\n            this.publicKey,\n        ]));\n    }\n\n    /**\n     *  Returns true if this wallet has a path, providing a Type Guard\n     *  that the path is non-null.\n     */\n    hasPath(): this is { path: string } { return (this.path != null); }\n\n    /**\n     *  Return the child for %%index%%.\n     */\n    deriveChild(_index: Numeric): HDNodeVoidWallet {\n        const index = getNumber(_index, \"index\");\n        assertArgument(index <= 0xffffffff, \"invalid index\", \"index\", index);\n\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n            if (index & HardenedBit) { path += \"'\"; }\n        }\n\n        const { IR, IL } = ser_I(index, this.chainCode, this.publicKey, null);\n        const Ki = SigningKey.addPoints(IL, this.publicKey, true);\n\n        const address = computeAddress(Ki);\n\n        return new HDNodeVoidWallet(_guard, address, Ki, this.fingerprint, hexlify(IR),\n            path, index, this.depth + 1, this.provider);\n\n    }\n\n    /**\n     *  Return the signer for %%path%% from this node.\n     */\n    derivePath(path: string): HDNodeVoidWallet {\n        return derivePath<HDNodeVoidWallet>(this, path);\n    }\n}\n\n/*\nexport class HDNodeWalletManager {\n    #root: HDNodeWallet;\n\n    constructor(phrase: string, password?: null | string, path?: null | string, locale?: null | Wordlist) {\n        if (password == null) { password = \"\"; }\n        if (path == null) { path = \"m/44'/60'/0'/0\"; }\n        if (locale == null) { locale = LangEn.wordlist(); }\n        this.#root = HDNodeWallet.fromPhrase(phrase, password, path, locale);\n    }\n\n    getSigner(index?: number): HDNodeWallet {\n        return this.#root.deriveChild((index == null) ? 0: index);\n    }\n}\n*/\n\n/**\n *  Returns the [[link-bip-32]] path for the account at %%index%%.\n *\n *  This is the pattern used by wallets like Ledger.\n *\n *  There is also an [alternate pattern](getIndexedAccountPath) used by\n *  some software.\n */\nexport function getAccountPath(_index: Numeric): string {\n    const index = getNumber(_index, \"index\");\n    assertArgument(index >= 0 && index < HardenedBit, \"invalid account index\", \"index\", index);\n    return `m/44'/60'/${ index }'/0/0`;\n}\n\n/**\n *  Returns the path using an alternative pattern for deriving accounts,\n *  at %%index%%.\n *\n *  This derivation path uses the //index// component rather than the\n *  //account// component to derive sequential accounts.\n *\n *  This is the pattern used by wallets like MetaMask.\n */\nexport function getIndexedAccountPath(_index: Numeric): string {\n    const index = getNumber(_index, \"index\");\n    assertArgument(index >= 0 && index < HardenedBit, \"invalid account index\", \"index\", index);\n    return `m/44'/60'/0'/0/${ index}`;\n}\n\n", "/**\n *  @_subsection: api/wallet:JSON Wallets  [json-wallets]\n */\n\nimport { CBC, pkcs7Strip } from \"aes-js\";\n\nimport { getAddress } from \"../address/index.js\";\nimport { pbkdf2 } from \"../crypto/index.js\";\nimport { id } from \"../hash/index.js\";\nimport { getBytes, assertArgument } from \"../utils/index.js\";\n\nimport { getPassword, looseArrayify, spelunk } from \"./utils.js\";\n\n\n/**\n *  The data stored within a JSON Crowdsale wallet is fairly\n *  minimal.\n */\nexport type CrowdsaleAccount = {\n    privateKey: string;\n    address: string;\n}\n\n/**\n *  Returns true if %%json%% is a valid JSON Crowdsale wallet.\n */\nexport function isCrowdsaleJson(json: string): boolean {\n    try {\n        const data = JSON.parse(json);\n        if (data.encseed) { return true; }\n    } catch (error) { }\n    return false;\n}\n\n// See: https://github.com/ethereum/pyethsaletool\n\n/**\n *  Before Ethereum launched, it was necessary to create a wallet\n *  format for backers to use, which would be used to receive ether\n *  as a reward for contributing to the project.\n *\n *  The [[link-crowdsale]] format is now obsolete, but it is still\n *  useful to support and the additional code is fairly trivial as\n *  all the primitives required are used through core portions of\n *  the library.\n */\nexport function decryptCrowdsaleJson(json: string, _password: string | Uint8Array): CrowdsaleAccount {\n    const data = JSON.parse(json);\n    const password = getPassword(_password);\n\n    // Ethereum Address\n    const address = getAddress(spelunk(data, \"ethaddr:string!\"));\n\n    // Encrypted Seed\n    const encseed = looseArrayify(spelunk(data, \"encseed:string!\"));\n    assertArgument(encseed && (encseed.length % 16) === 0, \"invalid encseed\", \"json\", json);\n\n    const key = getBytes(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n\n    // Decrypt the seed\n    const aesCbc = new CBC(key, iv);\n    const seed = pkcs7Strip(getBytes(aesCbc.decrypt(encryptedSeed)));\n\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n\n    return { address, privateKey: id(seedHex) };\n}\n", "import { SigningKey } from \"../crypto/index.js\";\nimport { assertArgument } from \"../utils/index.js\";\n\nimport { BaseWallet } from \"./base-wallet.js\";\nimport { HDNodeWallet } from \"./hdwallet.js\";\nimport { decryptCrowdsaleJson, isCrowdsaleJson  } from \"./json-crowdsale.js\";\nimport {\n    decryptKeystoreJson, decryptKeystoreJsonSync,\n    encryptKeystoreJson, encryptKeystoreJsonSync,\n    isKeystoreJson\n} from \"./json-keystore.js\";\nimport { Mnemonic } from \"./mnemonic.js\";\n\nimport type { ProgressCallback } from \"../crypto/index.js\";\nimport type { Provider } from \"../providers/index.js\";\n\nimport type { CrowdsaleAccount } from \"./json-crowdsale.js\";\nimport type { KeystoreAccount } from \"./json-keystore.js\";\n\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => { setTimeout(() => { resolve(); }, duration); });\n}\n\n/**\n *  A **Wallet** manages a single private key which is used to sign\n *  transactions, messages and other common payloads.\n *\n *  This class is generally the main entry point for developers\n *  that wish to use a private key directly, as it can create\n *  instances from a large variety of common sources, including\n *  raw private key, [[link-bip-39]] mnemonics and encrypte JSON\n *  wallets.\n */\nexport class Wallet extends BaseWallet {\n\n    /**\n     *  Create a new wallet for the private %%key%%, optionally connected\n     *  to %%provider%%.\n     */\n    constructor(key: string | SigningKey, provider?: null | Provider) {\n        if (typeof(key) === \"string\" && !key.startsWith(\"0x\")) {\n            key = \"0x\" + key;\n        }\n\n        let signingKey = (typeof(key) === \"string\") ? new SigningKey(key): key;\n        super(signingKey, provider);\n    }\n\n    connect(provider: null | Provider): Wallet {\n        return new Wallet(this.signingKey, provider);\n    }\n\n    /**\n     *  Resolves to a [JSON Keystore Wallet](json-wallets) encrypted with\n     *  %%password%%.\n     *\n     *  If %%progressCallback%% is specified, it will receive periodic\n     *  updates as the encryption process progreses.\n     */\n    async encrypt(password: Uint8Array | string, progressCallback?: ProgressCallback): Promise<string> {\n        const account = { address: this.address, privateKey: this.privateKey };\n        return await encryptKeystoreJson(account, password, { progressCallback });\n    }\n\n    /**\n     *  Returns a [JSON Keystore Wallet](json-wallets) encryped with\n     *  %%password%%.\n     *\n     *  It is preferred to use the [async version](encrypt) instead,\n     *  which allows a [[ProgressCallback]] to keep the user informed.\n     *\n     *  This method will block the event loop (freezing all UI) until\n     *  it is complete, which may be a non-trivial duration.\n     */\n    encryptSync(password: Uint8Array | string): string {\n        const account = { address: this.address, privateKey: this.privateKey };\n        return encryptKeystoreJsonSync(account, password);\n    }\n\n    static #fromAccount(account: null | CrowdsaleAccount | KeystoreAccount): HDNodeWallet | Wallet {\n        assertArgument(account, \"invalid JSON wallet\", \"json\", \"[ REDACTED ]\");\n\n        if (\"mnemonic\" in account && account.mnemonic && account.mnemonic.locale === \"en\") {\n            const mnemonic = Mnemonic.fromEntropy(account.mnemonic.entropy);\n            const wallet = HDNodeWallet.fromMnemonic(mnemonic, account.mnemonic.path);\n            if (wallet.address === account.address && wallet.privateKey === account.privateKey) {\n                return wallet;\n            }\n            console.log(\"WARNING: JSON mismatch address/privateKey != mnemonic; fallback onto private key\");\n        }\n\n        const wallet = new Wallet(account.privateKey);\n\n        assertArgument(wallet.address === account.address,\n            \"address/privateKey mismatch\", \"json\", \"[ REDACTED ]\");\n\n        return wallet;\n    }\n\n    /**\n     *  Creates (asynchronously) a **Wallet** by decrypting the %%json%%\n     *  with %%password%%.\n     *\n     *  If %%progress%% is provided, it is called periodically during\n     *  decryption so that any UI can be updated.\n     */\n    static async fromEncryptedJson(json: string, password: Uint8Array | string, progress?: ProgressCallback): Promise<HDNodeWallet | Wallet> {\n        let account: null | CrowdsaleAccount | KeystoreAccount = null;\n        if (isKeystoreJson(json)) {\n            account = await decryptKeystoreJson(json, password, progress);\n\n        } else if (isCrowdsaleJson(json)) {\n            if (progress) { progress(0); await stall(0); }\n            account = decryptCrowdsaleJson(json, password);\n            if (progress) { progress(1); await stall(0); }\n\n        }\n\n        return Wallet.#fromAccount(account);\n    }\n\n    /**\n     *  Creates a **Wallet** by decrypting the %%json%% with %%password%%.\n     *\n     *  The [[fromEncryptedJson]] method is preferred, as this method\n     *  will lock up and freeze the UI during decryption, which may take\n     *  some time.\n     */\n    static fromEncryptedJsonSync(json: string, password: Uint8Array | string): HDNodeWallet | Wallet {\n        let account: null | CrowdsaleAccount | KeystoreAccount = null;\n        if (isKeystoreJson(json)) {\n            account = decryptKeystoreJsonSync(json, password);\n        } else if (isCrowdsaleJson(json)) {\n            account = decryptCrowdsaleJson(json, password);\n        } else {\n            assertArgument(false, \"invalid JSON wallet\", \"json\", \"[ REDACTED ]\");\n        }\n\n        return Wallet.#fromAccount(account);\n    }\n\n    /**\n     *  Creates a new random [[HDNodeWallet]] using the available\n     *  [cryptographic random source](randomBytes).\n     *\n     *  If there is no crytographic random source, this will throw.\n     */\n    static createRandom(provider?: null | Provider): HDNodeWallet {\n        const wallet = HDNodeWallet.createRandom();\n        if (provider) { return wallet.connect(provider); }\n        return wallet;\n    }\n\n    /**\n     *  Creates a [[HDNodeWallet]] for %%phrase%%.\n     */\n    static fromPhrase(phrase: string, provider?: Provider): HDNodeWallet {\n        const wallet = HDNodeWallet.fromPhrase(phrase);\n        if (provider) { return wallet.connect(provider); }\n        return wallet;\n    }\n}\n", "const Base64 = \")!@#$%^&*(ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_\";\n\n/**\n *  @_ignore\n */\nexport function decodeBits(width: number, data: string): Array<number> {\n    const maxValue = (1 << width) - 1;\n    const result: Array<number> = [ ];\n    let accum = 0, bits = 0, flood = 0;\n    for (let i = 0; i < data.length; i++) {\n\n        // Accumulate 6 bits of data\n        accum = ((accum << 6) | Base64.indexOf(data[i]));\n        bits += 6;\n\n        // While we have enough for a word...\n        while (bits >= width) {\n            // ...read the word\n            const value = (accum >> (bits - width));\n            accum &= (1 << (bits - width)) - 1;\n            bits -= width;\n\n            // A value of 0 indicates we exceeded maxValue, it\n            // floods over into the next value\n            if (value === 0) {\n                flood += maxValue;\n            } else {\n                result.push(value + flood);\n                flood = 0;\n            }\n        }\n    }\n\n    return result;\n}\n", "import { assertArgument } from \"../utils/index.js\";\n\nimport { decodeBits } from \"./bit-reader.js\";\nimport { decodeOwl } from \"./decode-owl.js\";\n\n/**\n *  @_ignore\n */\nexport function decodeOwlA(data: string, accents: string): Array<string> {\n    let words = decodeOwl(data).join(\",\");\n\n    // Inject the accents\n    accents.split(/,/g).forEach((accent) => {\n\n        const match = accent.match(/^([a-z]*)([0-9]+)([0-9])(.*)$/);\n        assertArgument(match !== null, \"internal error parsing accents\", \"accents\", accents);\n\n        let posOffset = 0;\n        const positions = decodeBits(parseInt(match[3]), match[4]);\n        const charCode = parseInt(match[2]);\n        const regex = new RegExp(`([${ match[1] }])`, \"g\");\n        words = words.replace(regex, (all, letter) => {\n            const rem = --positions[posOffset];\n            if (rem === 0) {\n                letter = String.fromCharCode(letter.charCodeAt(0), charCode);\n                posOffset++;\n            }\n            return letter;\n        });\n    });\n\n    return words.split(\",\");\n}\n", "\nimport { WordlistOwl } from \"./wordlist-owl.js\";\nimport { decodeOwlA } from \"./decode-owla.js\";\n\n/**\n *  An OWL-A format Wordlist extends the OWL format to add an\n *  overlay onto an OWL format Wordlist to support diacritic\n *  marks.\n *\n *  This class is generally not useful to most developers as\n *  it is used mainly internally to keep Wordlists for languages\n *  based on latin-1 small.\n *\n *  If necessary, there are tools within the ``generation/`` folder\n *  to create the necessary data.\n */\nexport class WordlistOwlA extends WordlistOwl {\n    #accent: string;\n\n\n    /**\n     *  Creates a new Wordlist for %%locale%% using the OWLA %%data%%\n     *  and %%accent%% data and validated against the %%checksum%%.\n     */\n    constructor(locale: string, data: string, accent: string, checksum: string) {\n        super(locale, data, checksum);\n        this.#accent = accent;\n    }\n\n    /**\n     *  The OWLA-encoded accent data.\n     */\n    get _accent(): string { return this.#accent; }\n\n    /**\n     *  Decode all the words for the wordlist.\n     */\n    _decodeWords(): Array<string> {\n        return decodeOwlA(this._data, this._accent);\n    }\n}\n", "\nimport { LangEn } from \"./lang-en.js\";\n\nimport type { Wordlist } from \"./wordlist.js\";\n\nexport const wordlists: Record<string, Wordlist> = {\n  en: LangEn.wordlist(),\n};\n", "export default function getTotalSupply(){\n    return this.contract.totalSupply();\n}\n", "export default function getMaxSupply(){\n    return this.contract.MAX_SUPPLY();\n}\n", "{\n  \"chainName\": \"Matic Mumbai Testnet\",\n  \"chainId\": 80001,\n  \"rpc\": \"https://polygon-mumbai-bor-rpc.publicnode.com\",\n  \"nativeSymbol\": \"MATIC\",\n  \"graphApiUrl\": \"https://api.studio.thegraph.com/proxy/65744/dsponsor-mumbai/0.0.4/\",\n  \"contracts\": {\n    \"DSponsorAdmin\": \"0xA82B4bBc8e6aC3C100bBc769F4aE0360E9ac9FC3\"\n  },\n  \"assets\": {\n    \"JEUR\": {\n      \"contract\": \"0x0Ae7fC7e7D2F8dD77d2d6e8f3aDfCf6f8Fb3dFf4\",\n      \"decimals\": 18,\n      \"symbol\": \"JEUR\"\n    },\n    \"USDC\": {\n        \"contract\": \"0x9999f7Fea5938fD3b1E26A12c3f2fb024e194f97\",\n        \"decimals\": 6,\n        \"symbol\": \"USDC\"\n    },\n    \"USDT\": {\n        \"contract\": \"0x3813e82e6f7098b9583fc0f33a962d02018b6803\",\n        \"decimals\": 6,\n        \"symbol\": \"USDT\"\n    },\n    \"WETH\": {\n        \"contract\": \"0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa\",\n        \"decimals\": 18,\n        \"symbol\": \"WETH\"\n    },\n    \"WNATIVE\": {\n        \"contract\": \"0x9c3c9283d3e44854697cd22d3faa240cfb032889\",\n        \"decimals\": 18,\n        \"symbol\": \"WNATIVE\"\n    },\n    \"NATIVE\": {\n      \"contract\": \"0x0000000000000000000000000000000000000000\",\n      \"decimals\": 18,\n      \"symbol\": \"NATIVE\"\n    },\n    \"MATIC\": {\n      \"contract\": \"0x0000000000000000000000000000000000000000\",\n      \"decimals\": 18,\n      \"symbol\": \"MATIC\"\n    },\n    \"WMATIC\": {\n      \"contract\": \"0x9c3c9283d3e44854697cd22d3faa240cfb032889\",\n      \"decimals\": 18,\n      \"symbol\": \"WMATIC\"\n    }\n  }\n}\n", "import PolygonMumbai from './chains/polygon-mumbai.json' assert { type: 'json' };\n\nconst CONFIG = {\n    'polygon-mumbai': PolygonMumbai\n}\nexport default function getChainConfig(chainName){\n    if(!CONFIG[chainName]){\n        throw new Error(`Chain ${chainName} not supported`);\n    }\n    return CONFIG[chainName];\n}\n", "import getChainConfig from \"./getChainConfig.js\";\nimport {ethers} from \"ethers\";\n\nclass ChainNetwork {\n    constructor({rpc, chainName, graphApiUrl, contracts, chainId, assets} = {\n        chainName: 'polygon-mumbai'\n    }) {\n        let defaultConfig = {};\n        try {\n            defaultConfig = getChainConfig(chainName)\n        } catch (e) {\n            // Catch error as we expect ChainNetwork init from unknown chain possible.\n            console.error(e)\n        }\n\n        this.rpc = rpc ?? defaultConfig.rpc;\n        this.graphApiUrl = graphApiUrl ?? defaultConfig.graphApiUrl;\n        this.provider = new ethers.JsonRpcProvider(this.rpc);\n        this.contracts = Object.assign(defaultConfig.contracts, contracts)\n        this.assets = Object.assign(defaultConfig.assets, assets)\n        this.chainName = chainName\n        this.chainId = chainId ?? defaultConfig.chainId\n    }\n\n    getCurrencyAddress(currencySymbol) {\n        return this.assets[currencySymbol];\n    }\n\n    getCurrencyDecimals(currencySymbol) {\n        // We could use ethers to get the decimals for the currencySymbol\n        // However, we are using a hardcoded value for now to avoid the need to make a call to the blockchain\n        // to get the decimals for the currencySymbol every time we need it.\n\n        if (this.assets[currencySymbol] === undefined) {\n            throw new Error(`Currency ${currencySymbol} not found in assets`);\n        }\n        return this.assets[currencySymbol].decimals;\n\n    }\n}\n\nexport default ChainNetwork;\n", "import {ethers} from \"ethers\";\n\nfunction generatePrivateKey() {\n    return ethers.Wallet.createRandom().privateKey;\n}\n\nexport default generatePrivateKey;\n", "export default function getTokenURI(tokenId){\n    return this.contract.tokenURI(tokenId);\n}\n", "export default function getTokenURIs(tokenId){\n    return this.contract.tokenURIs(tokenId);\n}\n", "export default function approve(to, tokenId) {\n    return this.contract.approve(to, tokenId);\n}\n", "import { ApolloClient, InMemoryCache, gql } from \"@apollo/client/core/core.cjs\";\nimport Ad from \"../../../primitives/Ad/Ad.js\";\n\nexport default async function getAds() {\n    if(!this.offerId) {\n        this.offerId = await this.getOfferId();\n    }\n\n    const offerId = this.offerId;\n\n    const adsRequestQuery = `\n        query GetAdProposals($offerId: ID!) {\n            updateAdProposals(first: 500, where: {offerId: $offerId}) {\n                offerId\n                tokenId\n                adParameter\n                data\n            }\n        }\n    `;\n\n    const adsRequest = await this.client.query({\n        query: gql(adsRequestQuery),\n        variables: {\n            offerId,\n        },\n    });\n\n    const adData = adsRequest.data.updateAdProposals;\n\n    const adList = {};\n\n    for (const ad of adData) {\n        const key = `${ad.offerId}-${ad.tokenId}`;\n        if (!adList[key]) {\n            adList[key] = new Ad({ offerId: ad.offerId, tokenId: ad.tokenId });\n        }\n\n        if (ad.adParameter === 'linkURL') {\n            adList[key].addRecord({ kind: 'linkURL', value: ad.data });\n        } else if (ad.adParameter === 'imageURL') {\n            adList[key].addRecord({ kind: 'imageURL', value: ad.data });\n        }\n    }\n\n    // Convert adList values to an array for easy iteration\n    return Object.values(adList);\n}\n", "class Ad {\n    constructor({ offerId, tokenId }) {\n        this.offerId = offerId;\n        this.tokenId = tokenId;\n        this.records = {};\n    }\n\n    addRecord({ provider = '', kind, ratio = '', size = '', value }) {\n        if (!kind) {\n            throw new Error('Kind is required for ad records');\n        }\n        const key = this.generateKey({ provider, kind, ratio, size });\n        this.records[key] = value;\n    }\n\n    getRecord({ provider = '', kind, ratio = '', size = '' }) {\n        const key = this.generateKey({ provider, kind, ratio, size });\n        return this.records[key];\n    }\n\n    // Helper method to generate deterministic keys\n    generateKey({ provider, kind, ratio, size }) {\n        return `${provider}-${kind}-${ratio}-${size}`.replace(/--+/g, '-').trim('-')\n        // replace leading and trailing hyphens\n            .replace(/^-+|-+$/g, '');\n    }\n\n    serialize() {\n        return JSON.stringify({\n            offerId: this.offerId,\n            tokenId: this.tokenId,\n            records: this.records,\n        });\n    }\n\n    static deserialize(adString) {\n        const { offerId, tokenId, records } = JSON.parse(adString);\n        const ad = new Ad({ offerId, tokenId });\n        ad.records = records;\n        return ad;\n    }\n}\n\nexport default Ad;\n", "export default function getApproved(tokenId) {\n    return this.contract.getApproved(tokenId);\n}\n", "export default function getBalanceOf(owner) {\n    return this.contract.balanceOf(owner);\n}\n", "export default function getIsApprovedForAll(owner, operator) {\n    return this.contract.isApprovedForAll(owner, operator);\n}\n", "export default function getName(){\n    return this.contract.name();\n}\n", "export default function getOwnerAddress(){\n    return this.contract.owner();\n}\n", "export default function getOwnerOf(tokenId) {\n    return this.contract.ownerOf(tokenId);\n}\n", "export default function getSymbol() {\n    return this.contract.symbol();\n}\n", "export default function mint(tokenId, to, currency, tokenData) {\n    return this.contract.mint(tokenId, to, currency, tokenData);\n}\n", "export default function safeTransferFrom(from, to, tokenId, data = \"\") {\n    return this.contract.safeTransferFrom(from, to, tokenId, data);\n}\n", "export default function setApprovalForAll(operator, approved) {\n    return this.contract.setApprovalForAll(operator, approved);\n}\n", "export default function setBaseURI(_contractURI) {\n    return this.contract.setBaseURI(_contractURI);\n}\n", "export default function setContractURI(_contractURI) {\n    return this.contract.setContractURI(_contractURI);\n}\n", "export default function supportsInterface(interfaceId) {\n    return this.contract.supportsInterface(interfaceId);\n}\n", "export default function transferFrom(from, to, tokenId) {\n    return this.contract.transferFrom(from, to, tokenId);\n}\n", "//              function transferOwnership(address newOwner)\nexport default function transferOwnership(newOwner) {\n    return this.contract.transferOwnership(newOwner);\n}\n\n", "import {ethers} from \"ethers\";\n\nimport getTotalSupply from \"./methods/getTotalSupply.js\";\nimport getMaxSupply from \"./methods/getMaxSupply.js\";\nimport ChainNetwork from \"../../primitives/ChainNetwork/ChainNetwork.js\";\nimport generatePrivateKey from \"../../utils/generatePrivateKey.js\";\nimport getTokenURI from \"./methods/getTokenURI.js\";\nimport getTokenURIs from \"./methods/getTokenURIs.js\";\nimport approve from \"./methods/approve.js\";\nimport getAds from \"./methods/getAds.js\";\nimport getApproved from \"./methods/getApproved.js\";\nimport getBalanceOf from \"./methods/getBalanceOf.js\";\nimport getIsApprovedForAll from \"./methods/getIsApprovedForAll.js\";\nimport getName from \"./methods/getName.js\";\nimport getOwnerAddress from \"./methods/getOwnerAddress.js\";\nimport getOwnerOf from \"./methods/getOwnerOf.js\";\nimport getSymbol from \"./methods/getSymbol.js\";\nimport mint from \"./methods/mint.js\";\nimport safeTransferFrom from \"./methods/safeTransferFrom.js\";\nimport setApprovalForAll from \"./methods/setApprovalForAll.js\";\nimport setBaseURI from \"./methods/setBaseURI.js\";\nimport setContractURI from \"./methods/setContractURI.js\";\nimport supportsInterface from \"./methods/supportsInterface.js\";\nimport transferFrom from \"./methods/transferFrom.js\";\nimport transferOwnership from \"./methods/transferOwnership.js\";\nimport {ApolloClient, InMemoryCache} from \"@apollo/client/core/core.cjs\";\nimport getOfferId from \"./methods/getOfferId.js\";\nimport getDSponsorAdmin from \"./methods/getDSponsorAdmin.js\";\nimport getMintPrice from \"./methods/getMintPrice.js\";\nimport getCreationInfo from \"./methods/getCreationInfo.js\";\n\nconst APIURL = 'https://api.studio.thegraph.com/proxy/65744/dsponsor-mumbai/0.0.4/'\n\nclass DSponsorNFT {\n    constructor({address, signer, chain} = {}) {\n        this.chain = new ChainNetwork(chain);\n\n        this.signer = (signer) ? signer : new ethers.Wallet(generatePrivateKey(), this.chain.provider);\n\n        this.address = address\n\n        this.contract = new ethers.Contract(\n            this.address,\n            [\n                'error AddressEmptyCode(address target)',\n                'error AddressInsufficientBalance(address account)',\n                'error AlreadyMinted(uint256 tokenId)',\n                'error AmountValueTooLow(uint256 value)',\n                'error CannotBeZeroAddress()',\n                'error ERC2981InvalidDefaultRoyalty(uint256 numerator, uint256 denominator)',\n                'error ERC2981InvalidDefaultRoyaltyReceiver(address receiver)',\n                'error ERC2981InvalidTokenRoyalty(uint256 tokenId, uint256 numerator, uint256 denominator)',\n                'error ERC2981InvalidTokenRoyaltyReceiver(uint256 tokenId, address receiver)',\n                'error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner)',\n                'error ERC721InsufficientApproval(address operator, uint256 tokenId)',\n                'error ERC721InvalidApprover(address approver)',\n                'error ERC721InvalidOperator(address operator)',\n                'error ERC721InvalidOwner(address owner)',\n                'error ERC721InvalidReceiver(address receiver)',\n                'error ERC721InvalidSender(address sender)',\n                'error ERC721NonexistentToken(uint256 tokenId)',\n                'error FailedInnerCall()',\n                'error ForbiddenCurrency(address currency)',\n                'error InvalidInitialization()',\n                'error InvalidInputLengths()',\n                'error InvalidPricingStructure(address[] currencies, uint256[] prices)',\n                'error MaxSupplyExceeded()',\n                'error MaxSupplyShouldBeGreaterThan0()',\n                'error NotInitializing()',\n                'error OwnableInvalidOwner(address owner)',\n                'error OwnableUnauthorizedAccount(address account)',\n                'error ReentrancyGuardReentrantCall()',\n                'error SafeERC20FailedOperation(address token)',\n                'error TokenNotAllowed(uint256 tokenId)',\n                'error UnauthorizedToMint()',\n                'event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)',\n                'event ApprovalForAll(address indexed owner, address indexed operator, bool approved)',\n                'event ContractURIUpdated()',\n                'event Initialized(uint64 version)',\n                'event Mint(uint256 tokenId, address indexed from, address indexed to, address indexed currency, uint256 amount, string tokenData)',\n                'event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)',\n                'event TokensAllowlist(bool indexed allowed)',\n                'event TokensAllowlistUpdated(uint256 tokenId, bool indexed allowed)',\n                'event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)',\n                'event UpdateDefaultMintPrice(address indexed currency, bool indexed enabled, uint256 indexed amount)',\n                'event UpdateMintPrice(uint256 tokenId, address indexed currency, bool indexed enabled, uint256 indexed amount)',\n                'event UpdateUser(uint256 indexed tokenId, address indexed user, uint256 expires)',\n                'function MAX_SUPPLY() view returns (uint256)',\n                'function MINTER() view returns (address)',\n                'function applyTokensAllowlist() view returns (bool)',\n                'function approve(address to, uint256 tokenId)',\n                'function balanceOf(address owner) view returns (uint256)',\n                'function baseURI() view returns (string)',\n                'function contractURI() view returns (string)',\n                'function getApproved(uint256 tokenId) view returns (address)',\n                'function getMintPrice(uint256 tokenId, address currency) view returns (bool enabled, uint256 amount)',\n                'function getOwner() view returns (address)',\n                'function initialize((string name, string symbol, string baseURI, string contractURI, address minter, uint256 maxSupply, address forwarder, address initialOwner, uint96 royaltyBps, address[] currencies, uint256[] prices, uint256[] allowedTokenIds) params)',\n                'function isApprovedForAll(address owner, address operator) view returns (bool)',\n                'function isTrustedForwarder(address forwarder) view returns (bool)',\n                'function mint(uint256 tokenId, address to, address currency, string tokenData) payable',\n                'function mintFromData(address to, address currency, string tokenData) payable',\n                'function name() view returns (string)',\n                'function owner() view returns (address)',\n                'function ownerOf(uint256 tokenId) view returns (address)',\n                'function renounceOwnership()',\n                'function royaltyInfo(uint256 tokenId, uint256 salePrice) view returns (address, uint256)',\n                'function safeTransferFrom(address from, address to, uint256 tokenId)',\n                'function safeTransferFrom(address from, address to, uint256 tokenId, bytes data)',\n                'function setApprovalForAll(address operator, bool approved)',\n                'function setBaseURI(string _baseURI)',\n                'function setContractURI(string _contractURI)',\n                'function setDefaultMintPrice(address currency, bool enabled, uint256 amount)',\n                'function setMintPrice(uint256 tokenId, address currency, bool enabled, uint256 amount)',\n                'function setRoyalty(address receiver, uint96 feeBps)',\n                'function setTokenURI(uint256 tokenId, string _tokenURI)',\n                'function setTokensAllowlist(bool _applyTokensAllowlist)',\n                'function setTokensAreAllowed(uint256[] tokenIds, bool[] allowed)',\n                'function setTrustedForwarder(address forwarder)',\n                'function setUser(uint256 tokenId, address user, uint64 expires)',\n                'function supportsInterface(bytes4 interfaceId) view returns (bool)',\n                'function symbol() view returns (string)',\n                'function tokenIdIsAllowedToMint(uint256 tokenId) view returns (bool)',\n                'function tokenURI(uint256 tokenId) view returns (string)',\n                'function tokenURIs(uint256) view returns (string)',\n                'function totalSupply() view returns (uint256)',\n                'function transferFrom(address from, address to, uint256 tokenId)',\n                'function transferOwnership(address newOwner)',\n                'function trustedForwarder() view returns (address)',\n                'function userExpires(uint256 tokenId) view returns (uint256)',\n                'function userOf(uint256 tokenId) view returns (address)'\n            ],\n            this.signer\n        )\n\n        this.client = new ApolloClient({\n            uri: APIURL,\n            cache: new InMemoryCache(),\n        });\n    }\n}\n\nDSponsorNFT.prototype.approve = approve;\nDSponsorNFT.prototype.getAds = getAds;\nDSponsorNFT.prototype.getApproved = getApproved;\nDSponsorNFT.prototype.getBalanceOf = getBalanceOf;\nDSponsorNFT.prototype.getDSponsorAdmin = getDSponsorAdmin;\nDSponsorNFT.prototype.getMintPrice = getMintPrice;\nDSponsorNFT.prototype.getIsApprovedForAll = getIsApprovedForAll;\nDSponsorNFT.prototype.getMaxSupply = getMaxSupply;\nDSponsorNFT.prototype.getName = getName;\nDSponsorNFT.prototype.getCreationInfo = getCreationInfo;\nDSponsorNFT.prototype.getOfferId = getOfferId;\nDSponsorNFT.prototype.getOwnerAddress = getOwnerAddress;\nDSponsorNFT.prototype.getOwnerOf = getOwnerOf;\nDSponsorNFT.prototype.getSymbol = getSymbol;\nDSponsorNFT.prototype.getTokenURI = getTokenURI;\nDSponsorNFT.prototype.getTokenURIs = getTokenURIs;\nDSponsorNFT.prototype.getTotalSupply = getTotalSupply;\nDSponsorNFT.prototype.mint = mint;\nDSponsorNFT.prototype.safeTransferFrom = safeTransferFrom;\nDSponsorNFT.prototype.setApprovalForAll = setApprovalForAll;\nDSponsorNFT.prototype.setBaseURI = setBaseURI;\nDSponsorNFT.prototype.setContractURI = setContractURI;\nDSponsorNFT.prototype.supportsInterface = supportsInterface;\nDSponsorNFT.prototype.transferFrom = transferFrom;\nDSponsorNFT.prototype.transferOwnership = transferOwnership;\nexport default DSponsorNFT;\n", "import { ApolloClient, InMemoryCache, gql } from \"@apollo/client/core/core.cjs\";\n\nexport default async function getOfferId() {\n    const getOfferIdQuery = `\n        query GetOfferId($contractAddress: String!) {\n            updateOffers(where: {nftContract: $contractAddress}) {\n                id\n                offerId\n            }\n        }\n    `;\n\n    const offersRequest = await this.client.query({\n        query: gql(getOfferIdQuery),\n        variables: {\n            contractAddress: this.address,\n        },\n    });\n\n\n    const offers = offersRequest.data.updateOffers;\n    if(offers.length === 0) return [];\n    const offerId = offers[0].offerId;\n\n    return offerId;\n}\n", "import {ethers} from \"ethers\";\nimport {ApolloClient, gql, InMemoryCache} from \"@apollo/client/core/core.cjs\";\nimport getOfferContract from \"./methods/getOfferContract.js\";\nimport getBPS from \"./methods/getBPS.js\";\nimport getOfferProposals from \"./methods/getOfferProposals.js\";\nimport isAllowedAdParameter from \"./methods/isAllowedAdParameter.js\";\nimport isOfferAdmin from \"./methods/isOfferAdmin.js\";\nimport isOfferDisabled from \"./methods/isOfferDisabled.js\";\nimport getAllowedTokensFromId from \"./methods/getAllowedTokensFromId.js\";\nimport getNFTFactoryContractAddress from \"./methods/getNFTFactoryContractAddress.js\";\nimport getCurrentTrustedForwarder from \"./methods/getCurrentTrustedForwarder.js\";\nimport getOwnerAddress from \"./methods/getOwnerAddress.js\";\nimport getRecipientAddress from \"./methods/getRecipientAddress.js\";\nimport getSwapRouterAddress from \"./methods/getSwapRouterAddress.js\";\nimport createDSponsorNFTAndOffer from \"./methods/createDSponsortNFTAndOffer.js\";\nimport createOffer from \"./methods/createOffer.js\";\nimport mintAndSubmit from \"./methods/mintAndSubmit.js\";\nimport reviewAdProposal from \"./methods/reviewAdProposal.js\";\nimport setTrustedForwarder from \"./methods/setTrustedForwarder.js\";\nimport submitAdProposal from \"./methods/submitAdProposal.js\";\nimport transferOwnership from \"./methods/transferOwnership.js\";\nimport updateOffer from \"./methods/updateOffer.js\";\nimport updateProtocolFee from \"./methods/updateProtocolFee.js\";\nimport ChainNetwork from \"../../primitives/ChainNetwork/ChainNetwork.js\";\nimport getAdsProposalsFromOfferId from \"./methods/getAdsProposalsFromOfferId.js\";\nimport getValidatedAdsFromOfferId from \"./methods/getValidatedAdsFromOfferId.js\";\nimport getAdProposalFromProposalId from \"./methods/getAdProposalFromProposalId.js\";\nimport getOffer from \"./methods/getOffer.js\";\nimport getOffers from \"./methods/getOffers.js\";\nimport getDSponsorNFT from \"./methods/getDSponsorNFT.js\";\nimport getMintPricesFromId from \"./methods/getMintPricesFromId.js\";\nimport generatePrivateKey from \"../../utils/generatePrivateKey.js\";\n\nclass DSponsorAdmin {\n    constructor({address, signer, chain} = {}) {\n        this.chain = new ChainNetwork(chain);\n\n        this.address = address ?? this.chain.contracts.DSponsorAdmin;\n\n        this.signer = signer;\n        if(!this.signer) {\n            const privateKey = generatePrivateKey();\n            const wallet = new ethers.Wallet(privateKey, this.chain.provider);\n            this.signer = wallet;\n        }\n\n        this.contract = new ethers.Contract(\n            this.address,\n            [\n                // Public variables\n                'function bps() public view returns (uint96)',\n                'function nftFactory() public view returns (address)',\n                'function owner() public view returns (address)',\n                'function recipient() public view returns (address)',\n                'function swapRouter() public view returns (address)',\n                'function trustedForwarder() public view returns (address)',\n                // External read fn\n                'function getOfferContract(uint256 offerId) external view returns(address)',\n                'function getOfferProposals(uint256 offerId, uint256 tokenId, string adParameter) external view returns(uint256,uint256,uint256)',\n                'function isOfferAdmin(uint256 offerId, address admin) external view returns(bool)',\n                'function isOfferDisabled(uint256 offerId) external view returns(bool)',\n                'function isOfferValidator(uint256 offerId, address validator) external view returns(bool)',\n                'function isTrustedForwarder(address forwarder) external view returns(bool)',\n                // External exec fn\n                'function createDSponsorNFTAndOffer((string name, string symbol, string baseURI, string contractURI, address minter, uint256 maxSupply, address forwarder, address initialOwner, uint96 royaltyBps, address[] currencies, uint256[] prices, uint256[] allowedTokenIds) nftParams, (string name, string rulesURI, (address[] admins, address[] validators, string[] adParameters) options) offerParams)',\n                'function createOffer(address nftContract, (string name, string rulesURI, (address[] admins, address[] validators, string[] adParameters) options) offerParams)',\n                'function mintAndSubmit((uint256 tokenId, address to, address currency, string tokenData, uint256 offerId, string[] adParameters, string[] adDatas, string referralAdditionalInformation) params) payable',\n                'function reviewAdProposal(uint256 offerId, uint256 tokenId, uint256 proposalId, string adParameter, bool validated, string reason)',\n                'function setTrustedForwarder(address forwarder)',\n                'function submitAdProposal(uint256 offerId, uint256 tokenId, string adParameter, string data)',\n                'function transferOwnership(address newOwner)',\n                'function updateOffer(uint256 offerId, bool disable, string name, string rulesURI, (address[] admins, address[] validators, string[] adParameters) addOptions, (address[] admins, address[] validators, string[] adParameters) removeOptions)',\n                'function updateProtocolFee(address _recipient, uint96 _bps)',\n                // constructor\n                'constructor(address _nftFactory, address forwarder, address initialOwner, address _swapRouter, address _recipient, uint96 _bps)',\n                // Events\n                'event CallWithProtocolFee(address indexed target, address indexed currency, uint256 fee, address enabler, address spender, string additionalInformation)',\n                'event FeeUpdate(address recipient, uint96 bps)',\n                'event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)',\n                'event UpdateAdProposal(uint256 indexed offerId, uint256 indexed tokenId, uint256 indexed proposalId, string adParameter, string data)',\n                'event UpdateAdValidation(uint256 indexed offerId, uint256 indexed tokenId, uint256 indexed proposalId, string adParameter, bool validated, string reason)',\n                'event UpdateOffer(uint256 indexed offerId, bool indexed disable, string name, string rulesURI, address indexed nftContract)',\n                'event UpdateOfferAdParameter(uint256 indexed offerId, string indexed adParameter, bool indexed enable)',\n                'event UpdateOfferAdmin(uint256 indexed offerId, address indexed admin, bool indexed enable)',\n                'event UpdateOfferValidator(uint256 indexed offerId, address indexed validator, bool indexed enable)',\n                // Errors\n                'error AddressEmptyCode(address target)',\n                'error AddressInsufficientBalance(address account)',\n                'error CannotRemoveSelfAsAdmin()',\n                'error DisabledOffer(uint256 offerId)',\n                'error EmptyString(string key)',\n                'error ExternalCallError()',\n                'error FailedInnerCall()',\n                'error InsufficientAllowance()',\n                'error InsufficientFunds()',\n                'error InvalidAdData()',\n                'error MathOverflowedMulDiv()',\n                'error NoAdDataSubmitted()',\n                'error NoAdParametersProvided()',\n                'error NoAdminsProvided()',\n                'error OfferDoesNotExist()',\n                'error OwnableInvalidOwner(address owner)',\n                'error OwnableUnauthorizedAccount(address account)',\n                'error ProposalNotSubmittedBySponsor(uint256 offerId, uint256 tokenId, string adParameter, uint256 proposalId)',\n                'error ReentrancyGuardReentrantCall()',\n                'error SafeERC20FailedOperation(address token)',\n                'error UnallowedAdParameter(uint256 offerId, string adParameter)',\n                'error UnallowedAdminOperation(address msgSender, uint256 offerId)',\n                'error UnallowedSponsorOperation(address msgSender, uint256 offerId, uint256 tokenId)',\n                'error UnallowedValidatorOperation(address msgSender, uint256 offerId)',\n                'error ZeroAddress()',\n            ],\n            this.chain.provider\n        )\n\n        this.client = new ApolloClient({\n            uri: this.chain.graphApiUrl,\n            cache: new InMemoryCache(),\n        });\n    }\n}\n\nDSponsorAdmin.prototype.createDSponsorNFTAndOffer = createDSponsorNFTAndOffer;\nDSponsorAdmin.prototype.createOffer = createOffer;\nDSponsorAdmin.prototype.getAdProposalFromProposalId = getAdProposalFromProposalId;\nDSponsorAdmin.prototype.getAdsProposalsFromOfferId = getAdsProposalsFromOfferId;\nDSponsorAdmin.prototype.getValidatedAdsFromOfferId = getValidatedAdsFromOfferId;\nDSponsorAdmin.prototype.getAllowedTokensFromId = getAllowedTokensFromId;\nDSponsorAdmin.prototype.getMintPricesFromId = getMintPricesFromId;\nDSponsorAdmin.prototype.getBPS = getBPS;\nDSponsorAdmin.prototype.getOffer = getOffer;\nDSponsorAdmin.prototype.getOffers = getOffers;\nDSponsorAdmin.prototype.getDSponsorNFT = getDSponsorNFT;\nDSponsorAdmin.prototype.getCurrentTrustedForwarder = getCurrentTrustedForwarder;\nDSponsorAdmin.prototype.getNFTFactoryContractAddress = getNFTFactoryContractAddress;\nDSponsorAdmin.prototype.getOfferContract = getOfferContract;\nDSponsorAdmin.prototype.getOfferProposals = getOfferProposals;\nDSponsorAdmin.prototype.getOwnerAddress = getOwnerAddress;\nDSponsorAdmin.prototype.getRecipientAddress = getRecipientAddress;\nDSponsorAdmin.prototype.getSwapRouterAddress = getSwapRouterAddress;\nDSponsorAdmin.prototype.isAllowedAdParameter = isAllowedAdParameter;\nDSponsorAdmin.prototype.isOfferAdmin = isOfferAdmin;\nDSponsorAdmin.prototype.isOfferDisabled = isOfferDisabled;\nDSponsorAdmin.prototype.mintAndSubmit = mintAndSubmit;\nDSponsorAdmin.prototype.reviewAdProposal = reviewAdProposal;\nDSponsorAdmin.prototype.setTrustedForwarder = setTrustedForwarder;\nDSponsorAdmin.prototype.submitAdProposal = submitAdProposal;\nDSponsorAdmin.prototype.transferOwnership = transferOwnership;\nDSponsorAdmin.prototype.updateOffer = updateOffer;\nDSponsorAdmin.prototype.updateProtocolFee = updateProtocolFee;\nexport default DSponsorAdmin;\n", "export default function getOfferContract(offerId){\n    return this.contract.getOfferContract(offerId)\n}\n", "export default function getBPS(){\n    return this.contract.bps();\n}\n", "export default function getOfferProposals(offerId, tokenId, adParameter){\n    return this.contract.getOfferProposals(offerId, tokenId, adParameter);\n}\n", "export default function isAllowedAdParameter(offerId, adParameter){\n    return this.contract.isAllowedAdParameter(offerId, adParameter);\n}\n", "export default function isOfferAdmin(offerId, admin){\n    return this.contract.isOfferAdmin(offerId, admin);\n}\n", "export default function isOfferDisabled(offerId){\n    return this.contract.isOfferDisabled(offerId);\n}\n", "import {gql} from \"@apollo/client/core/core.cjs\";\n\nexport default async function getAllowedTokensFromId(id){\n    const getAllowedTokensQuery = `\n       {\n          tokensAllowlistUpdateds(where:{\n            id_contains: \"${id}\"\n          }){\n            id,\n            tokenId,\n            allowed,\n            blockNumber,\n            blockTimestamp,\n            transactionHash,\n            __typename\n          }\n      }`;\n\n\n    const allowedTokensRequest = await this.client.query({\n        query: gql(getAllowedTokensQuery),\n    });\n\n    const allowedTokens = allowedTokensRequest.data.tokensAllowlistUpdateds.map(token => {\n        return {\n            id: token.id,\n            tokenId: token.tokenId,\n            allowed: token.allowed,\n            transactionHash: token.transactionHash,\n        }\n    });\n\n    return allowedTokens;\n}\n", "export default function getNFTFactoryContractAddress(){\n    return this.contract.nftFactory();\n}\n", "export default function getCurrentTrustedForwarder(){\n    return this.contract.trustedForwarder();\n}\n", "export default function getOwnerAddress(){\n    return this.contract.owner();\n}\n", "export default function getRecipientAddress(){\n    return this.contract.recipient();\n}\n", "export default function getSwapRouterAddress(){\n    return this.contract.swapRouter();\n}\n", "//                'function createDSponsorNFTAndOffer((string name, string symbol, string baseURI, string contractURI, address minter, uint256 maxSupply, address forwarder, address initialOwner, uint96 royaltyBps, address[] currencies, uint256[] prices, uint256[] allowedTokenIds) nftParams, (string name, string rulesURI, (address[] admins, address[] validators, string[] adParameters) options) offerParams)',\nexport default function createDSponsorNFTAndOffer(nftParams, offerParams) {\n    return this.contract.createDSponsorNFTAndOffer(nftParams, offerParams);\n}\n", "//'function createOffer(address nftContract, (string name, string rulesURI, (address[] admins, address[] validators, string[] adParameters) options) offerParams)',\nexport default function createOffer(nftContract, offerParams) {\n    return this.contract.createOffer(nftContract, offerParams);\n}\n", "//                'function mintAndSubmit((uint256 tokenId, address to, address currency, string tokenData, uint256 offerId, string[] adParameters, string[] adDatas, string referralAdditionalInformation) params) payable',\nexport default function mintAndSubmit(params, opts) {\n    return this.contract.mintAndSubmit(params, opts)\n}\n", "// 'function reviewAdProposal(uint256 offerId, uint256 tokenId, uint256 proposalId, string adParameter, bool validated, string reason)',\nexport default function reviewAdProposal(offerId, tokenId, proposalId, adParameter, validated, reason) {\n    return this.contract.reviewAdProposal(offerId, tokenId, proposalId, adParameter, validated, reason);\n}\n", "//                 'function setTrustedForwarder(address forwarder)',\nexport default function setTrustedForwarder(forwarder) {\n    return this.contract.setTrustedForwarder(forwarder);\n}\n", "//               'function submitAdProposal(uint256 offerId, uint256 tokenId, string adParameter, string data)',\nexport default function submitAdProposal(offerId, tokenId, adParameter, data) {\n    return this.contract.submitAdProposal(offerId, tokenId, adParameter, data);\n}\n", "//              function transferOwnership(address newOwner)\nexport default function transferOwnership(newOwner) {\n    return this.contract.transferOwnership(newOwner);\n}\n", "//                'function updateOffer(uint256 offerId, bool disable, string name, string rulesURI, (address[] admins, address[] validators, string[] adParameters) addOptions, (address[] admins, address[] validators, string[] adParameters) removeOptions)',\nexport default function updateOffer(offerId, disable, name, rulesURI, addOptions, removeOptions) {\n    return this.contract.updateOffer(offerId, disable, name, rulesURI, addOptions, removeOptions);\n}\n", "//               function updateProtocolFee(address _recipient, uint96 _bps)\n\nexport default function updateProtocolFee(_recipient, _bps) {\n    return this.contract.updateProtocolFee(_recipient, _bps);\n}\n", "import {gql} from \"@apollo/client/core/core.cjs\";\nimport isNumber from \"../../../utils/isNumber.js\";\nimport Ad from \"../../../primitives/Ad/Ad.js\";\n\n/**\n * Get ads proposals from offer ID\n * @param offerId\n * @returns {Promise}\n */\nexport default async function getAdsProposalsFromOfferId(offerId) {\n    if(!isNumber(offerId)) {\n        throw new Error(`Invalid offer ID: ${offerId}`);\n    }\n\n    const adsRequestQuery = `\n        query GetAdProposals($offerId: ID!) {\n            updateAdProposals(first: 500, where: {offerId: $offerId}) {\n                offerId\n                tokenId\n                adParameter\n                data\n            }\n        }\n    `;\n\n    const adsRequest = await this.client.query({\n        query: gql(adsRequestQuery),\n        variables: {\n            offerId,\n        },\n    });\n\n    const adData = adsRequest.data.updateAdProposals;\n\n    const adList = {};\n\n    for (const ad of adData) {\n        const key = `${ad.offerId}-${ad.tokenId}`;\n        if (!adList[key]) {\n            adList[key] = new Ad({ offerId: ad.offerId, tokenId: ad.tokenId });\n        }\n        if(ad.adParameter){\n            adList[key].addRecord({ kind: ad.adParameter, value: ad.data });\n        }\n    }\n\n    // Convert adList values to an array for easy iteration\n    return Object.values(adList);\n}\n", "export default function isNumber(str) {\n    return /^-?\\d*\\.?\\d+$/.test(str);\n}\n", "import {gql} from \"@apollo/client/core/core.cjs\";\nimport isNumber from \"../../../utils/isNumber.js\";\nimport Ad from \"../../../primitives/Ad/Ad.js\";\n\n/**\n * Get ads from offer ID\n * @param offerId\n * @returns {Promise}\n */\nexport default async function getValidatedAdsFromOfferId(offerId) {\n    if (!isNumber(offerId)) {\n        throw new Error(`Invalid offer ID: ${offerId}`);\n    }\n    const getValidatedProposalsQuery = `\n        query GetValidatedProposals($offerId: ID!) {\n            updateAdValidations(\n                orderBy: blockNumber,\n                orderDirection: desc,\n                where: {\n                    offerId: $offerId, \n                    validated:true\n                }) {\n                    tokenId,\n                    blockNumber,\n                    adParameter,\n                    reason,\n                    proposalId,\n                    validated\n                }\n        }\n    `;\n\n    const getValidatedProposalsRequest = await this.client.query({\n        query: gql(getValidatedProposalsQuery),\n        variables: {\n            offerId,\n        },\n    });\n\n    const {updateAdValidations} = getValidatedProposalsRequest.data;\n    const adList = {};\n\n    if (Array.isArray(updateAdValidations) && updateAdValidations.length > 0) {\n        const validatedAdProposals = {};\n\n        // This is an ordered list of validated adParameters and their corresponding proposalId\n        // We need to take the first proposalId (last validated) for each adParameter.\n        for (const updateAdValidation of updateAdValidations) {\n            const {tokenId, proposalId, adParameter} = updateAdValidation;\n            const key = `${offerId}-${updateAdValidation.tokenId}`;\n\n            if (!validatedAdProposals[key]) {\n                validatedAdProposals[key] = {offerId, tokenId, records: {}};\n            }\n\n            if (!validatedAdProposals[key].records[adParameter]) {\n                validatedAdProposals[key].records[adParameter] = proposalId;\n            }\n        }\n\n        // Now we have the last validated proposalId for each adParameter\n        // We can get the data from the proposals\n        for (const validatedAdProposal in validatedAdProposals) {\n            const {offerId, tokenId, records} = validatedAdProposals[validatedAdProposal];\n            // For each records, fetch the proposal\n            for (const adParameter in records) {\n                const proposalId = records[adParameter];\n                const proposal = await this.getAdProposalFromProposalId(proposalId);\n\n                const key = `${offerId}-${tokenId}`;\n                if (!adList[key]) {\n                    adList[key] = new Ad({offerId: proposal.offerId, tokenId: proposal.tokenId});\n                }\n                if (proposal?.records?.[adParameter]) {\n                    adList[key].addRecord({kind: adParameter, value: proposal.records[adParameter]});\n                }\n            }\n        }\n    }\n\n    return Object.values(adList);\n}\n", "import {gql} from \"@apollo/client/core/core.cjs\";\nimport isNumber from \"../../../utils/isNumber.js\";\nimport Ad from \"../../../primitives/Ad/Ad.js\";\n\n/**\n * Get ad proposal from proposal ID\n * @param offerId\n * @returns {Promise}\n */\nexport default async function getAdProposalFromProposalId(proposalId) {\n    if(!isNumber(proposalId)) {\n        throw new Error(`Invalid proposal ID: ${proposalId}`);\n    }\n\n    const getProposalQuery = `\n        query GetProposal($proposalId: ID!) {\n            updateAdProposals(where: {\n                proposalId: $proposalId\n            }) {\n                offerId\n                tokenId\n                adParameter\n                data\n            }\n        }\n    `;\n\n    const getProposalRequest = await this.client.query({\n        query: gql(getProposalQuery),\n        variables: {\n            proposalId,\n        },\n    });\n\n    const adProposal = {\n        offerId: null,\n        tokenId: null,\n        records:{}\n    }\n\n    const {updateAdProposals} = getProposalRequest.data;\n\n    if(Array.isArray(updateAdProposals) && updateAdProposals.length > 0) {\n        const {tokenId, offerId} = updateAdProposals[0];\n\n        adProposal.offerId = offerId;\n        adProposal.tokenId = tokenId;\n\n        for(const ad of updateAdProposals) {\n            if(ad.adParameter){\n                adProposal.records[ad.adParameter] = ad.data;\n            }\n        }\n\n        return adProposal;\n    }\n\n    return null;\n}\n", "import isNumber from \"../../../utils/isNumber.js\";\nimport {gql} from \"@apollo/client/core/core.cjs\";\n\nexport default async function getOffer(offerId) {\n    if(!isNumber(offerId)) {\n        throw new Error('Offer ID must be a number');\n    }\n\n    const getOfferQueryByOfferId = `\n       {\n              updateOffers(where:{\n                offerId: ${offerId}\n          }) {\n                offerId\n                id\n                disable\n                name\n                rulesURI\n                nftContract\n                blockNumber\n                blockTimestamp\n                transactionHash\n                __typename\n          }\n      }`;\n\n    const offerRequest = await this.client.query({\n        query: gql(getOfferQueryByOfferId),\n    });\n\n    const offerData = offerRequest?.data?.updateOffers[0] || {};\n\n    if(!offerData.offerId) {\n        throw new Error(`Offer ${offerId} not found`);\n    }\n    const offer = {\n        offerId: offerData.offerId,\n        id: offerData.id,\n        disable: offerData.disable,\n        name: offerData.name,\n        rulesURI: offerData.rulesURI,\n        nftContract: offerData.nftContract,\n        blockNumber: offerData.blockNumber,\n        blockTimestamp: offerData.blockTimestamp,\n        transactionHash: offerData.transactionHash,\n        queryableId: offerData.id.slice(0,66),\n    }\n\n    const allowedTokens = await this.getAllowedTokensFromId(offer.queryableId);\n    const updateDefaultMintPrices = await this.getMintPricesFromId(offer.queryableId);\n\n    return {\n        offerId: offer.offerId,\n        id: offer.id,\n        disable: offer.disable,\n        name: offer.name,\n        rulesURI: offer.rulesURI,\n        nftContract: offer.nftContract,\n        currencies: updateDefaultMintPrices.map(price => {\n            return price.currency\n        }),\n        prices: updateDefaultMintPrices.map(price => {\n            return price.amount\n        }),\n        allowedTokens: allowedTokens.map(token => {\n            return token.tokenId\n        }),\n        queryableId: offer.queryableId,\n        maxSupply: allowedTokens?.length || -1,\n    }\n}\n", "import {gql} from \"@apollo/client/core/core.cjs\";\n\nexport default async function getOffers() {\n        const getOffersQuery = `\n        {\n              updateOffers(orderDirection:desc, orderBy:offerId){\n                offerId,\n                id,\n                disable,\n                name,\n                rulesURI,\n                nftContract,\n                blockNumber,\n                blockTimestamp,\n                transactionHash,\n                __typename\n              }\n        } \n    `;\n\n        const offersRequest = await this.client.query({\n            query: gql(getOffersQuery),\n        });\n\n        const offers = new Map();\n        for (const offer of offersRequest.data.updateOffers) {\n            offers.set(offer.offerId, offer);\n        }\n\n        return Object.values(Object.fromEntries(offers));\n\n}\n", "import DSponsorNFT from \"../../DSponsorNFT/DSponsorNFT.js\";\nexport default function getDSponsorNFT(address) {\n    return new DSponsorNFT({\n        address,\n        signer: this.signer,\n        chain: this.chain\n    });\n}\n", "import {gql} from \"@apollo/client/core/core.cjs\";\n\nexport default async function getMintPricesFromId(id){\n    const updateDefaultMintPricesQuery = `\n         {\n             updateDefaultMintPrices(where:{\n                id_contains: \"${id}\"\n            }){\n                id,\n                amount,\n                currency,\n                enabled,\n                amount,\n                blockNumber,\n                blockTimestamp,\n                transactionHash,\n                __typename\n             }\n        }`;\n\n\n    const updateDefaultMintPricesRequest = await this.client.query({\n        query: gql(updateDefaultMintPricesQuery),\n    });\n\n\n    const updateDefaultMintPrices = updateDefaultMintPricesRequest.data.updateDefaultMintPrices.map(price => {\n        return {\n            id: price.id,\n            amount: price.amount,\n            currency: price.currency,\n            enabled: price.enabled,\n            blockNumber: price.blockNumber,\n            blockTimestamp: price.blockTimestamp,\n            transactionHash: price.transactionHash,\n        }\n    });\n\n    return updateDefaultMintPrices;\n}\n", "import DSponsorAdmin from \"../../DSponsorAdmin/DSponsorAdmin.js\";\n\nexport default function getDSponsorAdmin(options = {}) {\n    return new DSponsorAdmin({\n        address: this.chain.contracts.DSponsorAdmin,\n        signer: options?.signer ?? this.signer,\n    });\n}\n", "//                'function getMintPrice(uint256 tokenId, address currency) view returns (bool enabled, uint256 amount)',\nexport default async function getMintPrice(tokenId, currency) {\n    return this.contract.getMintPrice(tokenId, currency);\n}\n", "import {gql} from \"@apollo/client/core/core.cjs\";\n\nexport default async function getCreationInfo() {\n    const contractAddress = this.address;\n    const getCreationInfoQuery = `\n                query GetTransactionReceipt($contractAddress: String!) {\n                    newDSponsorNFTs(where: {contractAddr: $contractAddress}) {\n                        id\n                        transactionHash,\n                        currencies,\n                        prices,\n                        allowedTokenIds\n                    }\n            }\n            `;\n\n    const creationInfoRequest = await this.client.query({\n        query: gql(getCreationInfoQuery),\n        variables: {\n            contractAddress,\n        },\n    });\n\n    const [creationInfo] = creationInfoRequest.data.newDSponsorNFTs;\n    return creationInfo;\n}\n", "const mockCreateElement = (el) => {\n    return {\n        style: {},\n        childrens: [],\n        sheet: {\n            insertRule: () => {\n            }\n        },\n        appendChild(node) {\n            this.childrens.push(node)\n        }\n    }\n}\n/**\n * Renders the selected ads into the specified DOM element in a grid pattern.\n * @param {Object} options The options for rendering the ads.\n * @param {string} options.theme The theme for the ad space.\n * @param {string} options.tokenData The token data for the ad space.\n * @param {string} options.referral The referral code for the ad space.\n * @returns {HTMLElement} The newly created div element containing the ad.\n */\nexport default function render(options = {}) {\n    console.log('AdSpaceRenderer: Rendering ads...');\n    function createElement(el) {\n        if (typeof document !== 'undefined') {\n            return document.createElement(el);\n        }\n        return mockCreateElement(el);\n    }\n\n    function createTextNode(text) {\n        if (typeof document !== 'undefined') {\n            return document.createTextNode(text);\n        }\n        return text;\n    }\n\n    // Creating and appending the style element for responsive design and themes\n    const styleElement = createElement('style');\n\n    if (document && document.head) {\n        document.head.appendChild(styleElement);\n    }\n\n    styleElement.appendChild(createTextNode(`\n       .ad-container {\n            display: grid;\n            max-width: 310px;\n            grid-template-columns: repeat(auto-fill, minmax(60px, 1fr));\n            gap: 5px;\n        }\n        .ad {\n            border: 1px solid black;\n            overflow: hidden;\n            height: 50px;\n            width: 50px;\n            justify-content: center;\n            align-items: center;\n        }\n        \n        .ad-container.blue-theme {\n            color: white;\n            background-color: #2d4258;\n            border: 1px solid blue;\n            border-radius: 5px;\n            padding: 10px;\n            margin: 10px;\n        }\n        .ad-container.blue-theme .ad {\n            background-color: #7dd3fc;\n            color: black;\n            border: 1px solid blue;\n            border-radius: 5px;\n            padding: 1px;\n            margin: 5px;\n        }\n        .ad-container.blue-theme .ad a {\n             color: black; \n            text-decoration: none;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 100%; \n            width: 100%; \n        }\n        .ad-container.blue-theme .ad:hover {\n            background-color: #4d7f9b;\n            color: black;\n        }\n    `));\n\n    const container = createElement('div');\n    container.className = 'ad-container' + (options && options.theme === 'blue' ? ' blue-theme' : '');\n    if (!container) {\n        console.error('AdSpaceRenderer: Selector not found in document.');\n        return;\n    }\n\n    container.innerHTML = '';\n    const self = this;\n    // We need to get our metamask signer\n\n\n    const dsponsorAdmin = self.admin;\n\n    const ads = this.select(this.selection, {includeOpenAds: true});\n    ads.forEach(adsRow => {\n        adsRow.forEach(ad => {\n            const adElement = createElement('div');\n            adElement.className = 'ad';\n            // Remove flex display from adElement\n            adElement.style.overflow = 'hidden';\n            adElement.style.border = '1px solid black';\n            let link = createElement('a');\n            if (ad?.records?.['linkURL']) {\n                link.href = ad?.records['linkURL'] || '#';\n                link.target = '_blank';\n            }\n\n            if (ad?.records?.['imageURL']) {\n                const image = createElement('img');\n                image.src = ad.records['imageURL'] || '';\n                image.style.width = '100%';\n                image.style.height = 'auto';\n                image.style.objectFit = 'cover';\n                link.appendChild(image);\n            }\n            if (ad?.records?.['text']) {\n                const text = createElement('p');\n                text.textContent = ad.records['text'];\n                // FIXME: Optimistic case - Might just be ads data\n                // We allow to buy the ad space if no text is provided\n                // OnClick event to buy the ad space\n                link.onclick = async (e) => {\n                    e.preventDefault();\n\n                    const imageURL = window.prompt('Enter the imageURL');\n                    if (!prompt) {\n                        return;\n                    }\n                    const linkURL = window.prompt('Enter the linkURL');\n                    if (!linkURL) {\n                        return;\n                    }\n                    console.log('AdSpaceRenderer: Buying ad space...');\n                    let tokenId = ad.tokenId;\n                    const adParameters = [\"imageURL\",\"linkURL\"]\n                    const tokenData = options.tokenData || '0x';\n                    const valuePrice = BigInt(self.prices[0]);\n                    const bps = self.bps;\n                    const fee = (valuePrice * BigInt(bps)) / BigInt(10000); // Calculate fee based on BPS\n                    const feeAndValue = valuePrice + fee; // Total value including the fee\n\n                    const mintParameters = {\n                        tokenId,\n                        to: self.signer.getAddress(),\n                        currency: self.currencies[0],\n                        tokenData,\n                        offerId: self.offerId,\n                        adParameters,\n                        adDatas: [imageURL, linkURL],\n                        referralAdditionalInformation: options?.referral ?? self.referral\n                    }\n                    try{\n                        await dsponsorAdmin.mintAndSubmit(mintParameters, {value:feeAndValue.toString()});\n                    } catch (e) {\n                        console.error('AdSpaceRenderer: Error buying ad space', e);\n                    }\n                }\n\n                link.appendChild(text);\n            }\n\n            adElement.appendChild(link);\n            container.appendChild(adElement); // Append directly to container\n        });\n    });\n\n    return container;\n}\n", "\n/**\n * Preloads ad data from the contract.\n * @returns {Promise<void>} A promise that resolves when the data is preloaded.\n */\nexport default async function preload() {\n    const offer = await this.admin.getOffer(this.offerId);\n    this.offer = offer;\n\n    const ads = await this.admin.getValidatedAdsFromOfferId(this.offerId);\n    const bps = await this.admin.getBPS();\n    this.ads = ads;\n    this.bps = bps;\n}\n", "/**\n * Selects ads based on the provided selection criteria.\n * @param {string} selection The selection criteria, e.g., 'random 1', 'grid 2x2'.\n * @returns {Array} An array of selected ads.\n */\nexport default function select(selection) {\n    const [type, count] = selection.split(' ');\n    const adList = Object.values(this.ads);\n    let selectedAds = [];\n\n    switch (type) {\n        case 'random':\n            selectedAds = adList.sort(() => Math.random() - 0.5).slice(0, parseInt(count));\n            break;\n        case 'grid':\n            const [rows, cols] = count.split('x') ?? [1, count];\n            const grid = [];\n            // List of array of available id without those in adList as string\n            let availableSlots = this.offer.allowedTokens;\n            // let availableSlots = Array.from({ length: parseInt(this.offer.maxSupply) }, (_, i) => i + 1).map(String);\n\n\n            for (let i = 0; i < rows; i++) {\n                // We need to create a row of ads, with placeholders for empty slots\n                const row = []\n                for(let j = 0; j < cols; j++) {\n                    const ad = adList[i * cols + j];\n                    if(ad) {\n                        row.push(ad);\n                        availableSlots = availableSlots.filter(slot => slot !== ad.tokenId);\n                    } else {\n                        row.push({\n                            offerId: this.offerId,\n                            tokenId: availableSlots.pop(),\n                            records: {\n                                text: 'Buy',\n                                linkURL: 'https://dsponsor.com',\n                            }\n                        });\n                    }\n                }\n                grid.push(row);\n            }\n            selectedAds = grid;\n            console.log({ selectedAds });\n            break;\n    }\n    return selectedAds;\n}\n", "import {ethers} from \"ethers\";\nimport DSponsorNFT from \"../../DSponsorNFT/DSponsorNFT.js\";\nimport {DSponsorAdmin} from \"../../../index.js\";\n\n/**\n * Called before preload, allows to get signer from provider and associate for transaction support\n * @returns {Promise<void>}\n */\nexport default async function connect() {\n    const ethereum = (typeof window !== 'undefined') ? window.ethereum : null;\n    if (!ethereum) {\n        throw new Error('Ethereum provider not found.');\n    }\n    const provider = new ethers.BrowserProvider(ethereum);\n    await provider.send(\"eth_accounts\", []);\n    const signer = await provider.getSigner();\n    this.signer = signer;\n\n    this.admin = new DSponsorAdmin({\n        address: this.admin.address,\n        signer,\n        chain: this.admin.chain,\n    });\n\n}\n", "import DSponsorNFT from \"../DSponsorNFT/DSponsorNFT.js\";\nimport render from \"./methods/render.js\";\nimport preload from \"./methods/preload.js\";\nimport select from \"./methods/select.js\";\nimport connect from \"./methods/connect.js\";\nimport {DSponsorAdmin} from \"../../index.js\";\n\n/**\n * Handles rendering of ad spaces using NFT contracts for ad data.\n */\nclass AdSpaceRenderer {\n    /**\n     * Initializes a new instance of the AdSpaceRenderer.\n     * @param {Object} props The initialization properties.\n     * @param {string} props.contract The contract address.\n     * @param {string} props.selector The DOM selector for the ad space.\n     * @param {string} props.selection The selection criteria for ads.\n     */\n    constructor(props) {\n        const { offerId } = props;\n\n        const { address, signer, chain } = props;\n\n        this.admin = new DSponsorAdmin({\n            address,\n            signer,\n            chain,\n        });\n\n        this.offer = null;\n\n        this.selector = props.selector;\n        this.selection = props.selection;\n\n        this.offerId = offerId.toString();\n\n        this.ads = {};\n        this.bps = null;\n        this.id = null; // id is also the txhash of the minting transaction on the DSponsorNFT contract\n\n        this.referral = props?.referral ?? 'dsponsor';\n    }\n\n    // /**\n    //  * Creates an AdSpaceRenderer instance from a contract address.\n    //  * @param {string} contract The contract address.\n    //  * @param {Object} props Additional properties to set on the renderer.\n    //  * @returns {AdSpaceRenderer} A new instance of AdSpaceRenderer.\n    //  */\n    // static fromContract(contract, props = {}) {\n    //     const { selector = 'dsponsor', selection = 'grid 2x4', referral } = props;\n    //\n    //     return new AdSpaceRenderer({\n    //         contract,\n    //         selector,\n    //         selection,\n    //         referral,\n    //     });\n    // }\n\n    /**\n     * Creates an AdSpaceRenderer instance from an offer ID.\n     * @param {number} offerId The offer ID.\n     * @param {Object} props Additional properties to set on the renderer.\n     * @returns {AdSpaceRenderer} A new instance of AdSpaceRenderer.\n     */\n    static fromOffer(offerId, props = {}) {\n        const {selector = 'dsponsor', selection = 'grid 2x4', referral} = props;\n\n        return new AdSpaceRenderer({\n            offerId,\n            selector,\n            selection,\n            referral,\n        });\n    }\n}\n\nAdSpaceRenderer.prototype.preload = preload;\nAdSpaceRenderer.prototype.connect = connect;\nAdSpaceRenderer.prototype.render = render;\nAdSpaceRenderer.prototype.select = select;\nexport default AdSpaceRenderer;\n", "import {ethers} from \"ethers\";\n\nclass Wallet {\n    constructor({privateKey} = {}) {\n\n        this.signer = new ethers.Wallet(privateKey);\n    }\n}\n\nexport default Wallet;\n", "class Token {\n\n    constructor({chainName, tokenName} = {chainName: 'Unknown', tokenName: 'Unknown'}) {\n        this.chainName = chainName;\n        this.name = tokenName;\n    }\n\n    toString() {\n        return `<Token[${this.chainName}]: ${this.name}>`;\n    }\n}\n\nexport default Token;\n", "import {ethers} from \"ethers\";\nimport ChainNetwork from \"./primitives/ChainNetwork/ChainNetwork.js\";\nimport DSponsorAdmin from \"./services/DSponsorAdmin/DSponsorAdmin.js\";\nimport generatePrivateKey from \"./utils/generatePrivateKey.js\";\n\nclass DSponsorSDK {\n    constructor({chain, privateKey} = {}) {\n        this.chain = new ChainNetwork(chain);\n\n        let key = privateKey || generatePrivateKey();\n        const signer = new ethers.Wallet(key, this.chain.provider);\n        this.signer = signer;\n\n        this.contracts = {\n            \"DSponsorAdmin\": new DSponsorAdmin({\n                address: this.chain.contracts.DSponsorAdmin,\n                signer\n            })\n        }\n    }\n    getDSponsorAdmin() {\n        return this.contracts.DSponsorAdmin;\n    }\n    renderAdSpace(props){\n        return new AdSpaceRenderer(props);\n    }\n    getSigner() {\n        return this.signer;\n    }\n\n    static generatePrivateKey() {\n        return generatePrivateKey();\n    }\n\n    async approve({currency, amount}) {\n        const contract = new ethers.Contract(currency, ['function approve(address spender, uint256 amount) returns (bool)'], this.signer);\n        console.log(`Approving ${amount} to ${this.contracts.DSponsorAdmin.address}...`);\n        const tx = await contract.approve(this.contracts.DSponsorAdmin.address, amount);\n        const receipt = await tx.wait();\n        return receipt;\n    }\n}\n\nexport default DSponsorSDK;\n\n\n", "import {keccak256, toUtf8Bytes} from \"ethers\";\n\nexport default function stringToUint256(s) {\n    const normalized = s\n        .toLowerCase()\n        .normalize('NFKD')\n        .replace(/\\p{Diacritic}/gu, \"\")\n        .replace(/[^a-z0-9]/gi, '')\n\n    return BigInt(keccak256(toUtf8Bytes(normalized)))\n}\n", "import {ethers} from \"ethers\";\n\nexport default function convertABIToShortABI(abi){\n    return new ethers.Interface(abi).format();\n}\n", "export default function isHexadecimal(s) {\n    return /^[0-9a-fA-F]+$/.test(s)\n}\n"],
  "mappings": "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IO,EAAI,WAAWP,CAAC,EAG7B,OAAOS,CACT,IC1IA,IAAAC,GAAAC,EAAAC,IAAA,cAEA,OAAO,eAAeA,GAAS,aAAc,CAC3C,MAAO,EACT,CAAC,EACDA,GAAQ,SAAWC,GAEnB,SAASA,GAASC,EAAK,CACrB,GAAIA,GAAO,KACT,OAAO,OAAO,OAAO,IAAI,EAG3B,GAAI,OAAO,eAAeA,CAAG,IAAM,KACjC,OAAOA,EAGT,IAAMC,EAAM,OAAO,OAAO,IAAI,EAE9B,OAAW,CAACC,EAAKC,CAAK,IAAK,OAAO,QAAQH,CAAG,EAC3CC,EAAIC,CAAG,EAAIC,EAGb,OAAOF,CACT,ICvBA,IAAAG,GAAAC,EAAAC,IAAA,cAEA,OAAO,eAAeA,GAAS,aAAc,CAC3C,MAAO,EACT,CAAC,EACDA,GAAQ,YAAcC,GAMtB,SAASA,GAAYC,EAAK,CACxB,MAAO,IAAIA,EAAI,QAAQC,GAAeC,EAAe,CAAC,GACxD,CAEA,IAAMD,GAAgB,gCAEtB,SAASC,GAAgBF,EAAK,CAC5B,OAAOG,GAAgBH,EAAI,WAAW,CAAC,CAAC,CAC1C,CAEA,IAAMG,GAAkB,CACtB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,MACA,MACA,MACA,UACA,MACA,MACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,GACA,GACA,MACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,OACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G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CACF,EAWA,GARAU,GACEd,EACAK,EACAF,EACAF,EACAU,CACF,EAEIC,EAAc,SAAW,EAG3B,QAASG,EAAI,EAAGA,EAAIH,EAAc,OAAQG,IAAK,CAC7CC,GACEhB,EACAK,EACAF,EACAF,EACA,GACAU,EACAC,EAAcG,CAAC,CACjB,EAKA,QAASE,EAAIF,EAAI,EAAGE,EAAIL,EAAc,OAAQK,IAC5CC,GACElB,EACAK,EACAF,EACAF,EACA,GACAW,EAAcG,CAAC,EACfH,EAAcK,CAAC,CACjB,CAEJ,CAGF,OAAOZ,CACT,CAGA,SAASW,GACPhB,EACAK,EACAF,EACAF,EACAkB,EACAR,EACAS,EACA,CACA,IAAMC,EAAWrB,EAAQ,YAAYoB,CAAY,EAEjD,GAAI,CAACC,EACH,OAGF,GAAM,CAACC,EAAWC,CAAuB,EACvCC,GACExB,EACAG,EACAkB,CACF,EAEF,GAAIV,IAAaW,EAKjB,CAAAG,GACEzB,EACAK,EACAF,EACAF,EACAkB,EACAR,EACAW,CACF,EAGA,QAAWI,KAA0BH,EAGjCtB,EAAsB,IACpByB,EACAN,EACAD,CACF,IAKFlB,EAAsB,IACpByB,EACAN,EACAD,CACF,EACAH,GACEhB,EACAK,EACAF,EACAF,EACAkB,EACAR,EACAe,CACF,GAEJ,CAGA,SAASR,GACPlB,EACAK,EACAF,EACAF,EACAkB,EACAQ,EACAC,EACA,CAMA,GAJID,IAAkBC,GAKpB3B,EAAsB,IACpB0B,EACAC,EACAT,CACF,EAEA,OAGFlB,EAAsB,IAAI0B,EAAeC,EAAeT,CAAoB,EAC5E,IAAMU,EAAY7B,EAAQ,YAAY2B,CAAa,EAC7CG,EAAY9B,EAAQ,YAAY4B,CAAa,EAEnD,GAAI,CAACC,GAAa,CAACC,EACjB,OAGF,GAAM,CAACC,EAAWC,CAAwB,EACxCR,GACExB,EACAG,EACA0B,CACF,EACI,CAACP,EAAWW,CAAwB,EACxCT,GACExB,EACAG,EACA2B,CACF,EAGFL,GACEzB,EACAK,EACAF,EACAF,EACAkB,EACAY,EACAT,CACF,EAGA,QAAWY,KAA2BD,EACpCf,GACElB,EACAK,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AM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAI,EAG1LC,GAAI,CAAC,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,EAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,EAAM,IAAM,GAAM,IAAM,GAAM,IAAM,EAAM,IAAM,EAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,EAAM,IAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,EAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAAM,EAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,EAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,EAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,EAAI,EACngngpgpgGC,GAAK,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,SAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,SAAY,WAAY,UAAY,WAAY,UAAY,WAAY,SAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,EAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,SAAU,EACpgpgpgpgpgpgpgpgGC,GAAK,CAAC,EAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,UAAY,UAAY,UAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,SAAY,UAAY,UAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY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,GAAO,SACvB,KAAK,QACL,CACI,yCACA,oDACA,uCACA,yCACA,8BACA,6EACA,+DACA,4FACA,8EACA,6EACA,sEACA,gDACA,gDACA,0CACA,gDACA,4CACA,gDACA,0BACA,4CACA,gCACA,8BACA,wEACA,4BACA,wCACA,0BACA,2CACA,oDACA,uCACA,gDACA,yCACA,6BACA,2FACA,uFACA,6BACA,oCACA,oIACA,sFACA,8CACA,sEACA,oFACA,uGACA,iHACA,mFACA,+CACA,2CACA,sDACA,gDACA,2DACA,2CACA,+CACA,+DACA,uGACA,6CACA,iQACA,iFACA,qEACA,yFACA,gFACA,wCACA,0CACA,2DACA,+BACA,2FACA,uEACA,mFACA,8DACA,uCACA,+CACA,+EACA,yFACA,uDACA,0DACA,0DACA,mEACA,kDACA,kEACA,qEACA,0CACA,uEACA,2DACA,oDACA,gDACA,mEACA,+CACA,qDACA,+DACA,yDACJ,EACA,KAAK,MACT,EAEA,KAAK,OAAS,IAAI,gBAAa,CAC3B,IAAKN,GACL,MAAO,IAAI,gBACf,CAAC,CACL,CACJ,EAEAC,GAAY,UAAU,QAAUO,GAChCP,GAAY,UAAU,OAASQ,GAC/BR,GAAY,UAAU,YAAcS,GACpCT,GAAY,UAAU,aAAeU,GACrCV,GAAY,UAAU,iBAAmBW,GACzCX,GAAY,UAAU,aAAeY,GACrCZ,GAAY,UAAU,oBAAsBa,GAC5Cb,GAAY,UAAU,aAAec,GACrCd,GAAY,UAAU,QAAUe,GAChCf,GAAY,UAAU,gBAAkBgB,GACxChB,GAAY,UAAU,WAAaiB,GACnCjB,GAAY,UAAU,gBAAkBkB,GACxClB,GAAY,UAAU,WAAamB,GACnCnB,GAAY,UAAU,UAAYoB,GAClCpB,GAAY,UAAU,YAAcqB,GACpCrB,GAAY,UAAU,aAAesB,GACrCtB,GAAY,UAAU,eAAiBuB,GACvCvB,GAAY,UAAU,KAAOwB,GAC7BxB,GAAY,UAAU,iBAAmByB,GACzCzB,GAAY,UAAU,kBAAoB0B,GAC1C1B,GAAY,UAAU,WAAa2B,GACnC3B,GAAY,UAAU,eAAiB4B,GACvC5B,GAAY,UAAU,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",
  "names": ["tslib_es6_exports", "__export", "__addDisposableResource", "__assign", "__asyncDelegator", "__asyncGenerator", "__asyncValues", "__await", "__awaiter", "__classPrivateFieldGet", "__classPrivateFieldIn", "__classPrivateFieldSet", "__createBinding", "__decorate", "__disposeResources", "__esDecorate", "__exportStar", "__extends", "__generator", "__importDefault", "__importStar", "__makeTemplateObject", "__metadata", "__param", "__propKey", "__read", "__rest", "__runInitializers", "__setFunctionName", "__spread", "__spreadArray", "__spreadArrays", "__values", "tslib_es6_default", "d", "b", "extendStatics", "__", "s", "t", "p", "decorators", "target", "key", "desc", "c", "r", "i", "paramIndex", "decorator", "ctor", "descriptorIn", "contextIn", "initializers", "extraInitializers", "accept", "f", "kind", "descriptor", "_", "done", "context", "result", "thisArg", "value", "useValue", "x", "name", "prefix", "metadataKey", "metadataValue", "_arguments", "P", "generator", "adopt", "resolve", "reject", "fulfilled", "step", "e", "rejected", "body", "y", "g", "verb", "n", "v", "op", "m", "o", "ar", "error", "il", "k", "a", "j", "jl", "to", "from", "pack", "l", "q", "resume", "settle", "fulfill", "cooked", "raw", "mod", "__setModuleDefault", "receiver", "state", "env", "async", "dispose", "fail", "_SuppressedError", "next", "rec", "init_tslib_es6", "__esmMin", "k2", "suppressed", "message", "genericMessage", "_a", "setPrototypeOf", "obj", "proto", "InvariantError", "_super", "__extends", "message", "_this", "invariant", "condition", "verbosityLevels", "verbosityLevel", "wrapConsoleMethod", "name", "method", "setVerbosity", "level", "old", "invariant$1", "version", "maybe", "thunk", "global$1", "prefixCounts", "makeUniqueId", "prefix", "count", "stringifyForDisplay", "value", "space", "undefId", "key", "wrap", "fn", "message", "args", "_i", "arg0", "getHandledErrorMsg", "getFallbackErrorMsg", "invariant", "condition", "originalInvariant", "newInvariantError", "optionalParams", "InvariantError", "ApolloErrorMessageHandler", "stringify", "arg", "messageArgs", "global", "DEV", "require_version", "__commonJSMin", "exports", "version", "versionInfo", "require_devAssert", "__commonJSMin", "exports", "devAssert", "condition", "message", "require_isPromise", "__commonJSMin", "exports", "isPromise", "value", "require_isObjectLike", "__commonJSMin", "exports", "isObjectLike", "value", "require_invariant", "__commonJSMin", "exports", "invariant", "condition", "message", "require_location", "__commonJSMin", "exports", "getLocation", "_invariant", "LineRegExp", "source", "position", "lastLineStart", "line", "match", "require_printLocation", "__commonJSMin", "exports", "printLocation", "printSourceLocation", "_location", "location", "source", "sourceLocation", "firstLineColumnOffset", "body", "lineIndex", "lineOffset", "lineNum", "columnOffset", "columnNum", "locationStr", "lines", "locationLine", "subLineIndex", "subLineColumnNum", "subLines", "i", "printPrefixedLines", "subLine", "existingLines", "_", "line", "padLen", "prefix", "require_GraphQLError", "__commonJSMin", "exports", "formatError", "printError", "_isObjectLike", "_location", "_printLocation", "toNormalizedOptions", "args", "firstArg", "GraphQLError", "_GraphQLError", "message", "rawArgs", "_this$nodes", "_nodeLocations$", "_ref", "nodes", "source", "positions", "path", "originalError", "extensions", "undefinedIfEmpty", "nodeLocations", "node", "loc", "pos", "originalExtensions", "output", "location", "formattedError", "array", "error", "require_syntaxError", "__commonJSMin", "exports", "syntaxError", "_GraphQLError", "source", "position", "description", "require_ast", "__commonJSMin", "exports", "isNode", "Location", "startToken", "endToken", "source", "Token", "kind", "start", "end", "line", "column", "value", "QueryDocumentKeys", "kindValues", "maybeNode", "maybeKind", "OperationTypeNode", "require_directiveLocation", "__commonJSMin", "exports", "DirectiveLocation", "require_kinds", "__commonJSMin", "exports", "Kind", "require_characterClasses", "__commonJSMin", "exports", "isDigit", "isLetter", "isNameContinue", "isNameStart", "isWhiteSpace", "code", "require_blockString", "__commonJSMin", "exports", "dedentBlockStringLines", "isPrintableAsBlockString", "printBlockString", "_characterClasses", "lines", "_firstNonEmptyLine2", "commonIndent", "firstNonEmptyLine", "lastNonEmptyLine", "i", "_firstNonEmptyLine", "line", "indent", "leadingWhitespace", "str", "value", "isEmptyLine", "hasIndent", "hasCommonIndent", "seenNonEmptyLine", "options", "escapedValue", "isSingleLine", "forceLeadingNewLine", "hasTrailingTripleQuotes", "hasTrailingQuote", "hasTrailingSlash", "forceTrailingNewline", "printAsMultipleLines", "result", "skipLeadingNewLine", "require_tokenKind", "__commonJSMin", "exports", "TokenKind", "require_lexer", "__commonJSMin", "exports", "isPunctuatorTokenKind", "_syntaxError", "_ast", "_blockString", "_characterClasses", "_tokenKind", "Lexer", "source", "startOfFileToken", "token", "nextToken", "readNextToken", "kind", "isUnicodeScalarValue", "code", "isSupplementaryCodePoint", "body", "location", "isLeadingSurrogate", "isTrailingSurrogate", "printCodePointAt", "lexer", "char", "createToken", "start", "end", "value", "line", "col", "bodyLength", "position", "readComment", "readBlockString", "readString", "readNumber", "readName", "firstCode", "isFloat", "readDigits", "chunkStart", "escape", "readEscapedUnicodeVariableWidth", "readEscapedUnicodeFixedWidth", "readEscapedCharacter", "point", "size", "readHexDigit", "read16BitHexCode", "trailingCode", "lineStart", "currentLine", "blockLines", "require_inspect", "__commonJSMin", "exports", "inspect", "MAX_ARRAY_LENGTH", "MAX_RECURSIVE_DEPTH", "value", "formatValue", "seenValues", "formatObjectValue", "previouslySeenValues", "isJSONable", "jsonValue", "formatArray", "formatObject", "object", "entries", "getObjectTag", "key", "array", "len", "remaining", "items", "i", "tag", "name", "require_instanceOf", "__commonJSMin", "exports", "_inspect", "instanceOf", "value", "constructor", "_value$constructor", "className", "valueClassName", "stringifiedValue", "require_source", "__commonJSMin", "exports", "isSource", "_devAssert", "_inspect", "_instanceOf", "Source", "body", "name", "locationOffset", "source", "require_parser", "__commonJSMin", "exports", "parse", "parseConstValue", "parseType", "parseValue", "_syntaxError", "_ast", "_directiveLocation", "_kinds", "_lexer", "_source", "_tokenKind", "source", "options", "Parser", "parser", "value", "type", "sourceObj", "token", "hasDescription", "keywordToken", "start", "operation", "name", "operationToken", "nameOrAlias", "alias", "isConst", "item", "hasTypeCondition", "varName", "directives", "innerType", "description", "operationTypes", "interfaces", "fields", "args", "defaultValue", "types", "values", "getTokenDesc", "repeatable", "locations", "startToken", "node", "kind", "getTokenKindDesc", "atToken", "openKind", "parseFn", "closeKind", "nodes", "delimiterKind", "maxTokens", "require_didYouMean", "__commonJSMin", "exports", "didYouMean", "MAX_SUGGESTIONS", "firstArg", "secondArg", "subMessage", "suggestionsArg", "message", "suggestions", "x", "selected", "lastItem", "require_identityFunc", "__commonJSMin", "exports", "identityFunc", "x", "require_keyMap", "__commonJSMin", "exports", "keyMap", "list", "keyFn", "result", "item", "require_keyValMap", "__commonJSMin", "exports", "keyValMap", "list", "keyFn", "valFn", "result", "item", "require_mapValue", "__commonJSMin", "exports", "mapValue", "map", "fn", "result", "key", "require_naturalCompare", "__commonJSMin", "exports", "naturalCompare", "aStr", "bStr", "aIndex", "bIndex", "aChar", "bChar", "isDigit", "aNum", "DIGIT_0", "bNum", "DIGIT_9", "code", "require_suggestionList", "__commonJSMin", "exports", "suggestionList", "_naturalCompare", "input", "options", "optionsByDistance", "lexicalDistance", "LexicalDistance", "threshold", "option", "distance", "a", "b", "distanceDiff", "stringToArray", "optionLowerCase", "tmp", "aLength", "bLength", "rows", "j", "i", "upRow", "currentRow", "smallestCell", "cost", "currentCell", "doubleDiagonalCell", "str", "strLength", "array", "require_toObjMap", "__commonJSMin", "exports", "toObjMap", "obj", "map", "key", "value", "require_printString", "__commonJSMin", "exports", "printString", "str", "escapedRegExp", "escapedReplacer", "escapeSequences", "require_visitor", "__commonJSMin", "exports", "getEnterLeaveForKind", "getVisitFn", "visit", "visitInParallel", "_devAssert", "_inspect", "_ast", "_kinds", "BREAK", "root", "visitor", "visitorKeys", "enterLeaveMap", "kind", "stack", "inArray", "keys", "index", "edits", "node", "key", "parent", "path", "ancestors", "isLeaving", "isEdited", "editOffset", "editKey", "editValue", "arrayKey", "result", "_enterLeaveMap$get", "_enterLeaveMap$get2", "visitFn", "_node$kind", "visitors", "skipping", "mergedVisitor", "hasVisitor", "enterList", "leaveList", "i", "enter", "leave", "mergedEnterLeave", "args", "_enterList$i", "_leaveList$i", "kindVisitor", "require_printer", "__commonJSMin", "exports", "print", "_blockString", "_printString", "_visitor", "ast", "printDocASTReducer", "MAX_LINE_LENGTH", "node", "join", "varDefs", "wrap", "prefix", "variable", "type", "defaultValue", "directives", "selections", "block", "alias", "name", "args", "selectionSet", "argsLine", "indent", "value", "typeCondition", "variableDefinitions", "isBlockString", "values", "fields", "description", "operationTypes", "operation", "interfaces", "hasMultilineItems", "types", "repeatable", "locations", "maybeArray", "separator", "_maybeArray$filter$jo", "x", "array", "start", "maybeString", "end", "str", "_maybeArray$some", "require_valueFromASTUntyped", "__commonJSMin", "exports", "valueFromASTUntyped", "_keyValMap", "_kinds", "valueNode", "variables", "node", "field", "require_assertName", "__commonJSMin", "exports", "assertEnumValueName", "assertName", "_devAssert", "_GraphQLError", "_characterClasses", "name", "i", "require_definition", "__commonJSMin", "exports", "argsToArgsConfig", "assertAbstractType", "assertCompositeType", "assertEnumType", "assertInputObjectType", "assertInputType", "assertInterfaceType", "assertLeafType", "assertListType", "assertNamedType", "assertNonNullType", "assertNullableType", "assertObjectType", "assertOutputType", "assertScalarType", "assertType", "assertUnionType", "assertWrappingType", "defineArguments", "getNamedType", "getNullableType", "isAbstractType", "isCompositeType", "isEnumType", "isInputObjectType", "isInputType", "isInterfaceType", "isLeafType", "isListType", "isNamedType", "isNonNullType", "isNullableType", "isObjectType", "isOutputType", "isRequiredArgument", "isRequiredInputField", "isScalarType", "isType", "isUnionType", "isWrappingType", "resolveObjMapThunk", "resolveReadonlyArrayThunk", "_devAssert", "_didYouMean", "_identityFunc", "_inspect", "_instanceOf", "_isObjectLike", "_keyMap", "_keyValMap", "_mapValue", "_suggestionList", "_toObjMap", "_GraphQLError", "_kinds", "_printer", "_valueFromASTUntyped", "_assertName", "type", "GraphQLScalarType", "GraphQLObjectType", "GraphQLInterfaceType", "GraphQLUnionType", "GraphQLEnumType", "GraphQLInputObjectType", "GraphQLList", "GraphQLNonNull", "ofType", "unwrappedType", "thunk", "config", "_config$parseValue", "_config$serialize", "_config$parseLiteral", "_config$extensionASTN", "parseValue", "node", "variables", "_config$extensionASTN2", "defineFieldMap", "defineInterfaces", "fieldsToFieldsConfig", "_config$interfaces", "interfaces", "fieldMap", "isPlainObj", "fieldConfig", "fieldName", "_fieldConfig$args", "argsConfig", "argName", "argConfig", "obj", "fields", "field", "args", "arg", "_config$extensionASTN3", "_config$extensionASTN4", "defineTypes", "types", "_config$extensionASTN5", "defineEnumValues", "enumValue", "value", "name", "outputValue", "inputValue", "valueStr", "didYouMeanEnumValue", "valueNode", "_variables", "values", "enumType", "unknownValueStr", "allNames", "suggestedValues", "typeName", "valueMap", "valueName", "valueConfig", "_config$extensionASTN6", "defineInputFieldMap", "require_typeComparators", "__commonJSMin", "exports", "doTypesOverlap", "isEqualType", "isTypeSubTypeOf", "_definition", "typeA", "typeB", "schema", "maybeSubType", "superType", "type", "require_scalars", "__commonJSMin", "exports", "isSpecifiedScalarType", "_inspect", "_isObjectLike", "_GraphQLError", "_kinds", "_printer", "_definition", "GRAPHQL_MAX_INT", "GRAPHQL_MIN_INT", "GraphQLInt", "outputValue", "coercedValue", "serializeObject", "num", "inputValue", "valueNode", "GraphQLFloat", "GraphQLString", "GraphQLBoolean", "GraphQLID", "specifiedScalarTypes", "type", "name", "valueOfResult", "require_directives", "__commonJSMin", "exports", "assertDirective", "isDirective", "isSpecifiedDirective", "_devAssert", "_inspect", "_instanceOf", "_isObjectLike", "_toObjMap", "_directiveLocation", "_assertName", "_definition", "_scalars", "directive", "GraphQLDirective", "config", "_config$isRepeatable", "_config$args", "args", "GraphQLIncludeDirective", "GraphQLSkipDirective", "DEFAULT_DEPRECATION_REASON", "GraphQLDeprecatedDirective", "GraphQLSpecifiedByDirective", "specifiedDirectives", "name", "require_isIterableObject", "__commonJSMin", "exports", "isIterableObject", "maybeIterable", "require_astFromValue", "__commonJSMin", "exports", "astFromValue", "_inspect", "_invariant", "_isIterableObject", "_isObjectLike", "_kinds", "_definition", "_scalars", "value", "type", "astValue", "itemType", "valuesNodes", "item", "itemNode", "fieldNodes", "field", "fieldValue", "serialized", "stringNum", "integerStringRegExp", "require_introspection", "__commonJSMin", "exports", "isIntrospectionType", "_inspect", "_invariant", "_directiveLocation", "_printer", "_astFromValue", "_definition", "_scalars", "__Schema", "schema", "__Type", "__Directive", "directive", "__DirectiveLocation", "__InputValue", "field", "includeDeprecated", "arg", "__TypeKind", "type", "TypeKind", "obj", "__Field", "fields", "_args", "_context", "__EnumValue", "values", "inputValue", "defaultValue", "valueAST", "enumValue", "SchemaMetaFieldDef", "_source", "TypeMetaFieldDef", "name", "TypeNameMetaFieldDef", "parentType", "introspectionTypes", "require_schema", "__commonJSMin", "exports", "assertSchema", "isSchema", "_devAssert", "_inspect", "_instanceOf", "_isObjectLike", "_toObjMap", "_ast", "_definition", "_directives", "_introspection", "schema", "GraphQLSchema", "config", "_config$extensionASTN", "_config$directives", "allReferencedTypes", "type", "collectReferencedTypes", "directive", "arg", "namedType", "typeName", "iface", "implementations", "operation", "name", "abstractType", "interfaceType", "maybeSubType", "map", "typeSet", "memberType", "field", "require_validate", "__commonJSMin", "exports", "assertValidSchema", "validateSchema", "_inspect", "_GraphQLError", "_ast", "_typeComparators", "_definition", "_directives", "_introspection", "_schema", "schema", "context", "SchemaValidationContext", "validateRootTypes", "validateDirectives", "validateTypes", "errors", "error", "message", "nodes", "_nodes", "queryType", "_getOperationTypeNode", "getOperationTypeNode", "mutationType", "_getOperationTypeNode2", "subscriptionType", "_getOperationTypeNode3", "operation", "_flatMap$find", "schemaNode", "_schemaNode$operation", "operationNode", "directive", "validateName", "arg", "_arg$astNode", "getDeprecatedDirectiveNode", "node", "validateInputObjectCircularRefs", "createInputObjectCircularRefsValidator", "typeMap", "type", "validateFields", "validateInterfaces", "validateUnionMembers", "validateEnumValues", "validateInputFields", "fields", "field", "_field$astNode", "argName", "_arg$astNode2", "_arg$astNode3", "ifaceTypeNames", "iface", "getAllImplementsInterfaceNodes", "validateTypeImplementsAncestors", "validateTypeImplementsInterface", "typeFieldMap", "ifaceField", "fieldName", "typeField", "_ifaceField$astNode", "_typeField$astNode", "ifaceArg", "typeArg", "_ifaceArg$astNode", "_typeArg$astNode", "ifaceInterfaces", "transitive", "union", "memberTypes", "includedTypeNames", "memberType", "getUnionMemberTypeNodes", "enumType", "enumValues", "enumValue", "inputObj", "_field$astNode2", "_field$astNode3", "visitedTypes", "fieldPath", "fieldPathIndexByTypeName", "detectCycleRecursive", "fieldType", "cycleIndex", "cyclePath", "pathStr", "fieldObj", "astNode", "extensionASTNodes", "typeNode", "_typeNode$interfaces", "ifaceNode", "typeName", "unionNode", "_unionNode$types", "definitionNode", "_definitionNode$direc", "require_typeFromAST", "__commonJSMin", "exports", "typeFromAST", "_kinds", "_definition", "schema", "typeNode", "innerType", "require_TypeInfo", "__commonJSMin", "exports", "visitWithTypeInfo", "_ast", "_kinds", "_visitor", "_definition", "_introspection", "_typeFromAST", "TypeInfo", "schema", "initialType", "getFieldDefFn", "getFieldDef", "node", "namedType", "parentType", "fieldDef", "fieldType", "rootType", "typeConditionAST", "outputType", "inputType", "_this$getDirective", "argDef", "argType", "fieldOrDirective", "arg", "listType", "itemType", "objectType", "inputFieldType", "inputField", "enumType", "enumValue", "fieldNode", "name", "typeInfo", "visitor", "args", "fn", "result", "require_predicates", "__commonJSMin", "exports", "isConstValueNode", "isDefinitionNode", "isExecutableDefinitionNode", "isSelectionNode", "isTypeDefinitionNode", "isTypeExtensionNode", "isTypeNode", "isTypeSystemDefinitionNode", "isTypeSystemExtensionNode", "isValueNode", "_kinds", "node", "field", "require_ExecutableDefinitionsRule", "__commonJSMin", "exports", "ExecutableDefinitionsRule", "_GraphQLError", "_kinds", "_predicates", "context", "node", "definition", "defName", "require_FieldsOnCorrectTypeRule", "__commonJSMin", "exports", "FieldsOnCorrectTypeRule", "_didYouMean", "_naturalCompare", "_suggestionList", "_GraphQLError", "_definition", "context", "node", "type", "schema", "fieldName", "suggestion", "getSuggestedTypeNames", "getSuggestedFieldNames", "suggestedTypes", "usageCount", "possibleType", "possibleInterface", "_usageCount$possibleI", "typeA", "typeB", "usageCountDiff", "x", "possibleFieldNames", "require_FragmentsOnCompositeTypesRule", "__commonJSMin", "exports", "FragmentsOnCompositeTypesRule", "_GraphQLError", "_printer", "_definition", "_typeFromAST", "context", "node", "typeCondition", "type", "typeStr", "require_KnownArgumentNamesRule", "__commonJSMin", "exports", "KnownArgumentNamesOnDirectivesRule", "KnownArgumentNamesRule", "_didYouMean", "_suggestionList", "_GraphQLError", "_kinds", "_directives", "context", "argNode", "argDef", "fieldDef", "parentType", "argName", "knownArgsNames", "arg", "suggestions", "directiveArgs", "schema", "definedDirectives", "directive", "astDefinitions", "def", "_def$arguments", "argsNodes", "directiveNode", "directiveName", "knownArgs", "require_KnownDirectivesRule", "__commonJSMin", "exports", "KnownDirectivesRule", "_inspect", "_invariant", "_GraphQLError", "_ast", "_directiveLocation", "_kinds", "_directives", "context", "locationsMap", "schema", "definedDirectives", "directive", "astDefinitions", "def", "name", "node", "_key", "_parent", "_path", "ancestors", "locations", "candidateLocation", "getDirectiveLocationForASTPath", "appliedTo", "getDirectiveLocationForOperation", "parentNode", "operation", "require_KnownFragmentNamesRule", "__commonJSMin", "exports", "KnownFragmentNamesRule", "_GraphQLError", "context", "node", "fragmentName", "require_KnownTypeNamesRule", "__commonJSMin", "exports", "KnownTypeNamesRule", "_didYouMean", "_suggestionList", "_GraphQLError", "_predicates", "_introspection", "_scalars", "context", "schema", "existingTypesMap", "definedTypes", "def", "typeNames", "node", "_1", "parent", "_2", "ancestors", "typeName", "_ancestors$", "definitionNode", "isSDL", "isSDLNode", "standardTypeNames", "suggestedTypes", "type", "value", "require_LoneAnonymousOperationRule", "__commonJSMin", "exports", "LoneAnonymousOperationRule", "_GraphQLError", "_kinds", "context", "operationCount", "node", "definition", "require_LoneSchemaDefinitionRule", "__commonJSMin", "exports", "LoneSchemaDefinitionRule", "_GraphQLError", "context", "_ref", "_ref2", "_oldSchema$astNode", "oldSchema", "alreadyDefined", "schemaDefinitionsCount", "node", "require_NoFragmentCyclesRule", "__commonJSMin", "exports", "NoFragmentCyclesRule", "_GraphQLError", "context", "visitedFrags", "spreadPath", "spreadPathIndexByName", "node", "detectCycleRecursive", "fragment", "fragmentName", "spreadNodes", "spreadNode", "spreadName", "cycleIndex", "spreadFragment", "cyclePath", "viaPath", "s", "require_NoUndefinedVariablesRule", "__commonJSMin", "exports", "NoUndefinedVariablesRule", "_GraphQLError", "context", "variableNameDefined", "operation", "usages", "node", "varName", "require_NoUnusedFragmentsRule", "__commonJSMin", "exports", "NoUnusedFragmentsRule", "_GraphQLError", "context", "operationDefs", "fragmentDefs", "node", "fragmentNameUsed", "operation", "fragment", "fragmentDef", "fragName", "require_NoUnusedVariablesRule", "__commonJSMin", "exports", "NoUnusedVariablesRule", "_GraphQLError", "context", "variableDefs", "operation", "variableNameUsed", "usages", "node", "variableDef", "variableName", "def", "require_sortValueNode", "__commonJSMin", "exports", "sortValueNode", "_naturalCompare", "_kinds", "valueNode", "sortFields", "fields", "fieldNode", "fieldA", "fieldB", "require_OverlappingFieldsCanBeMergedRule", "__commonJSMin", "exports", "OverlappingFieldsCanBeMergedRule", "_inspect", "_GraphQLError", "_kinds", "_printer", "_definition", "_sortValueNode", "_typeFromAST", "reasonMessage", "reason", "responseName", "subReason", "context", "comparedFragmentPairs", "PairSet", "cachedFieldsAndFragmentNames", "selectionSet", "conflicts", "findConflictsWithinSelectionSet", "fields1", "fields2", "reasonMsg", "parentType", "fieldMap", "fragmentNames", "getFieldsAndFragmentNames", "collectConflictsWithin", "i", "collectConflictsBetweenFieldsAndFragment", "j", "collectConflictsBetweenFragments", "areMutuallyExclusive", "fragmentName", "fragment", "fieldMap2", "referencedFragmentNames", "getReferencedFieldsAndFragmentNames", "collectConflictsBetween", "referencedFragmentName", "fragmentName1", "fragmentName2", "fragment1", "fragment2", "fieldMap1", "referencedFragmentNames1", "referencedFragmentNames2", "referencedFragmentName2", "referencedFragmentName1", "findConflictsBetweenSubSelectionSets", "parentType1", "selectionSet1", "parentType2", "selectionSet2", "fragmentNames1", "fragmentNames2", "fields", "conflict", "findConflict", "parentFieldsAreMutuallyExclusive", "field1", "field2", "node1", "def1", "node2", "def2", "name1", "name2", "sameArguments", "type1", "type2", "doTypesConflict", "subfieldConflicts", "args1", "args2", "values2", "name", "value", "arg1", "value1", "value2", "stringifyValue", "cached", "nodeAndDefs", "_collectFieldsAndFragmentNames", "result", "fragmentType", "selection", "fieldName", "fieldDef", "typeCondition", "inlineFragmentType", "a", "b", "_this$_data$get", "key1", "key2", "map", "require_PossibleFragmentSpreadsRule", "__commonJSMin", "exports", "PossibleFragmentSpreadsRule", "_inspect", "_GraphQLError", "_definition", "_typeComparators", "_typeFromAST", "context", "node", "fragType", "parentType", "parentTypeStr", "fragTypeStr", "fragName", "getFragmentType", "name", "frag", "type", "require_PossibleTypeExtensionsRule", "__commonJSMin", "exports", "PossibleTypeExtensionsRule", "_didYouMean", "_inspect", "_invariant", "_suggestionList", "_GraphQLError", "_kinds", "_predicates", "_definition", "context", "schema", "definedTypes", "def", "checkExtension", "node", "typeName", "defNode", "existingType", "expectedKind", "defKindToExtKind", "typeToExtKind", "kindStr", "extensionKindToTypeName", "allTypeNames", "suggestedTypes", "type", "kind", "require_ProvidedRequiredArgumentsRule", "__commonJSMin", "exports", "ProvidedRequiredArgumentsOnDirectivesRule", "ProvidedRequiredArgumentsRule", "_inspect", "_keyMap", "_GraphQLError", "_kinds", "_printer", "_definition", "_directives", "context", "fieldNode", "_fieldNode$arguments", "fieldDef", "providedArgs", "arg", "argDef", "argTypeStr", "_schema$getDirectives", "requiredArgsMap", "schema", "definedDirectives", "directive", "astDefinitions", "def", "_def$arguments", "argNodes", "isRequiredArgumentNode", "directiveNode", "directiveName", "requiredArgs", "_directiveNode$argume", "argNodeMap", "argName", "argType", "require_ScalarLeafsRule", "__commonJSMin", "exports", "ScalarLeafsRule", "_inspect", "_GraphQLError", "_definition", "context", "node", "type", "selectionSet", "fieldName", "typeStr", "require_printPathArray", "__commonJSMin", "exports", "printPathArray", "path", "key", "require_Path", "__commonJSMin", "exports", "addPath", "pathToArray", "prev", "key", "typename", "path", "flattened", "curr", "require_coerceInputValue", "__commonJSMin", "exports", "coerceInputValue", "_didYouMean", "_inspect", "_invariant", "_isIterableObject", "_isObjectLike", "_Path", "_printPathArray", "_suggestionList", "_GraphQLError", "_definition", "inputValue", "type", "onError", "defaultOnError", "coerceInputValueImpl", "path", "invalidValue", "error", "errorPrefix", "itemType", "itemValue", "index", "itemPath", "coercedValue", "fieldDefs", "field", "fieldValue", "typeStr", "fieldName", "suggestions", "parseResult", "require_valueFromAST", "__commonJSMin", "exports", "valueFromAST", "_inspect", "_invariant", "_keyMap", "_kinds", "_definition", "valueNode", "type", "variables", "variableName", "variableValue", "itemType", "coercedValues", "itemNode", "isMissingVariable", "itemValue", "coercedValue", "coercedObj", "fieldNodes", "field", "fieldNode", "fieldValue", "result", "require_values", "__commonJSMin", "exports", "getArgumentValues", "getDirectiveValues", "getVariableValues", "_inspect", "_keyMap", "_printPathArray", "_GraphQLError", "_kinds", "_printer", "_definition", "_coerceInputValue", "_typeFromAST", "_valueFromAST", "schema", "varDefNodes", "inputs", "options", "errors", "maxErrors", "coerced", "coerceVariableValues", "error", "onError", "coercedValues", "varDefNode", "varName", "varType", "varTypeStr", "hasOwnProperty", "value", "path", "invalidValue", "prefix", "def", "node", "variableValues", "_node$arguments", "argumentNodes", "argNodeMap", "arg", "argDef", "name", "argType", "argumentNode", "valueNode", "isNull", "variableName", "coercedValue", "directiveDef", "_node$directives", "directiveNode", "directive", "obj", "prop", "require_collectFields", "__commonJSMin", "exports", "collectFields", "collectSubfields", "_kinds", "_definition", "_directives", "_typeFromAST", "_values", "schema", "fragments", "variableValues", "runtimeType", "selectionSet", "fields", "collectFieldsImpl", "returnType", "fieldNodes", "subFieldNodes", "visitedFragmentNames", "node", "selection", "shouldIncludeNode", "name", "getFieldEntryKey", "fieldList", "doesFragmentConditionMatch", "fragName", "fragment", "skip", "include", "type", "typeConditionNode", "conditionalType", "require_SingleFieldSubscriptionsRule", "__commonJSMin", "exports", "SingleFieldSubscriptionsRule", "_GraphQLError", "_kinds", "_collectFields", "context", "node", "schema", "subscriptionType", "operationName", "variableValues", "document", "fragments", "definition", "fields", "extraFieldSelections", "fieldNodes", "require_groupBy", "__commonJSMin", "exports", "groupBy", "list", "keyFn", "result", "item", "key", "group", "require_UniqueArgumentDefinitionNamesRule", "__commonJSMin", "exports", "UniqueArgumentDefinitionNamesRule", "_groupBy", "_GraphQLError", "context", "directiveNode", "_directiveNode$argume", "argumentNodes", "checkArgUniqueness", "checkArgUniquenessPerField", "typeNode", "_typeNode$fields", "typeName", "fieldNodes", "fieldDef", "_fieldDef$arguments", "fieldName", "parentName", "seenArgs", "arg", "argName", "argNodes", "node", "require_UniqueArgumentNamesRule", "__commonJSMin", "exports", "UniqueArgumentNamesRule", "_groupBy", "_GraphQLError", "context", "checkArgUniqueness", "parentNode", "_parentNode$arguments", "argumentNodes", "seenArgs", "arg", "argName", "argNodes", "node", "require_UniqueDirectiveNamesRule", "__commonJSMin", "exports", "UniqueDirectiveNamesRule", "_GraphQLError", "context", "knownDirectiveNames", "schema", "node", "directiveName", "require_UniqueDirectivesPerLocationRule", "__commonJSMin", "exports", "UniqueDirectivesPerLocationRule", "_GraphQLError", "_kinds", "_predicates", "_directives", "context", "uniqueDirectiveMap", "schema", "definedDirectives", "directive", "astDefinitions", "def", "schemaDirectives", "typeDirectivesMap", "node", "seenDirectives", "typeName", "directiveName", "require_UniqueEnumValueNamesRule", "__commonJSMin", "exports", "UniqueEnumValueNamesRule", "_GraphQLError", "_definition", "context", "schema", "existingTypeMap", "knownValueNames", "checkValueUniqueness", "node", "_node$values", "typeName", "valueNodes", "valueNames", "valueDef", "valueName", "existingType", "require_UniqueFieldDefinitionNamesRule", "__commonJSMin", "exports", "UniqueFieldDefinitionNamesRule", "_GraphQLError", "_definition", "context", "schema", "existingTypeMap", "knownFieldNames", "checkFieldUniqueness", "node", "_node$fields", "typeName", "fieldNodes", "fieldNames", "fieldDef", "fieldName", "hasField", "type", "require_UniqueFragmentNamesRule", "__commonJSMin", "exports", "UniqueFragmentNamesRule", "_GraphQLError", "context", "knownFragmentNames", "node", "fragmentName", "require_UniqueInputFieldNamesRule", "__commonJSMin", "exports", "UniqueInputFieldNamesRule", "_invariant", "_GraphQLError", "context", "knownNameStack", "knownNames", "prevKnownNames", "node", "fieldName", "require_UniqueOperationNamesRule", "__commonJSMin", "exports", "UniqueOperationNamesRule", "_GraphQLError", "context", "knownOperationNames", "node", "operationName", "require_UniqueOperationTypesRule", "__commonJSMin", "exports", "UniqueOperationTypesRule", "_GraphQLError", "context", "schema", "definedOperationTypes", "existingOperationTypes", "checkOperationTypes", "node", "_node$operationTypes", "operationTypesNodes", "operationType", "operation", "alreadyDefinedOperationType", "require_UniqueTypeNamesRule", "__commonJSMin", "exports", "UniqueTypeNamesRule", "_GraphQLError", "context", "knownTypeNames", "schema", "checkTypeName", "node", "typeName", "require_UniqueVariableNamesRule", "__commonJSMin", "exports", "UniqueVariableNamesRule", "_groupBy", "_GraphQLError", "context", "operationNode", "_operationNode$variab", "variableDefinitions", "seenVariableDefinitions", "node", "variableName", "variableNodes", "require_ValuesOfCorrectTypeRule", "__commonJSMin", "exports", "ValuesOfCorrectTypeRule", "_didYouMean", "_inspect", "_keyMap", "_suggestionList", "_GraphQLError", "_printer", "_definition", "context", "node", "type", "isValidValueNode", "fieldNodeMap", "field", "fieldDef", "typeStr", "parentType", "suggestions", "locationType", "error", "require_VariablesAreInputTypesRule", "__commonJSMin", "exports", "VariablesAreInputTypesRule", "_GraphQLError", "_printer", "_definition", "_typeFromAST", "context", "node", "type", "variableName", "typeName", "require_VariablesInAllowedPositionRule", "__commonJSMin", "exports", "VariablesInAllowedPositionRule", "_inspect", "_GraphQLError", "_kinds", "_definition", "_typeComparators", "_typeFromAST", "context", "varDefMap", "operation", "usages", "node", "type", "defaultValue", "varName", "varDef", "schema", "varType", "allowedVariableUsage", "varTypeStr", "typeStr", "varDefaultValue", "locationType", "locationDefaultValue", "nullableLocationType", "require_specifiedRules", "__commonJSMin", "exports", "_ExecutableDefinitionsRule", "_FieldsOnCorrectTypeRule", "_FragmentsOnCompositeTypesRule", "_KnownArgumentNamesRule", "_KnownDirectivesRule", "_KnownFragmentNamesRule", "_KnownTypeNamesRule", "_LoneAnonymousOperationRule", "_LoneSchemaDefinitionRule", "_NoFragmentCyclesRule", "_NoUndefinedVariablesRule", "_NoUnusedFragmentsRule", "_NoUnusedVariablesRule", "_OverlappingFieldsCanBeMergedRule", "_PossibleFragmentSpreadsRule", "_PossibleTypeExtensionsRule", "_ProvidedRequiredArgumentsRule", "_ScalarLeafsRule", "_SingleFieldSubscriptionsRule", "_UniqueArgumentDefinitionNamesRule", "_UniqueArgumentNamesRule", "_UniqueDirectiveNamesRule", "_UniqueDirectivesPerLocationRule", "_UniqueEnumValueNamesRule", "_UniqueFieldDefinitionNamesRule", "_UniqueFragmentNamesRule", "_UniqueInputFieldNamesRule", "_UniqueOperationNamesRule", "_UniqueOperationTypesRule", "_UniqueTypeNamesRule", "_UniqueVariableNamesRule", "_ValuesOfCorrectTypeRule", "_VariablesAreInputTypesRule", "_VariablesInAllowedPositionRule", "specifiedRules", "specifiedSDLRules", "require_ValidationContext", "__commonJSMin", "exports", "_kinds", "_visitor", "_TypeInfo", "ASTValidationContext", "ast", "onError", "error", "name", "fragments", "defNode", "node", "spreads", "setsToVisit", "set", "selection", "operation", "collectedNames", "nodesToVisit", "spread", "fragName", "fragment", "SDLValidationContext", "schema", "ValidationContext", "typeInfo", "usages", "newUsages", "variable", "frag", "require_validate", "__commonJSMin", "exports", "assertValidSDL", "assertValidSDLExtension", "validate", "validateSDL", "_devAssert", "_GraphQLError", "_visitor", "_validate", "_TypeInfo", "_specifiedRules", "_ValidationContext", "schema", "documentAST", "rules", "options", "typeInfo", "_options$maxErrors", "maxErrors", "abortObj", "errors", "context", "error", "visitor", "rule", "e", "schemaToExtend", "visitors", "require_memoize3", "__commonJSMin", "exports", "memoize3", "fn", "cache0", "a1", "a2", "a3", "cache1", "cache2", "fnResult", "require_promiseForObject", "__commonJSMin", "exports", "promiseForObject", "object", "resolvedValues", "resolvedObject", "i", "key", "require_promiseReduce", "__commonJSMin", "exports", "promiseReduce", "_isPromise", "values", "callbackFn", "initialValue", "accumulator", "value", "resolved", "require_toError", "__commonJSMin", "exports", "toError", "_inspect", "thrownValue", "NonErrorThrown", "require_locatedError", "__commonJSMin", "exports", "locatedError", "_toError", "_GraphQLError", "rawOriginalError", "nodes", "path", "_nodes", "originalError", "isLocatedGraphQLError", "error", "require_execute", "__commonJSMin", "exports", "assertValidExecutionArguments", "buildExecutionContext", "buildResolveInfo", "execute", "executeSync", "getFieldDef", "_devAssert", "_inspect", "_invariant", "_isIterableObject", "_isObjectLike", "_isPromise", "_memoize", "_Path", "_promiseForObject", "_promiseReduce", "_GraphQLError", "_locatedError", "_ast", "_kinds", "_definition", "_introspection", "_validate", "_collectFields", "_values", "collectSubfields", "exeContext", "returnType", "fieldNodes", "args", "schema", "document", "variableValues", "rootValue", "operation", "result", "executeOperation", "data", "buildResponse", "error", "errors", "rawVariableValues", "_definition$name", "_operation$variableDe", "contextValue", "operationName", "fieldResolver", "typeResolver", "subscribeFieldResolver", "fragments", "definition", "variableDefinitions", "coercedVariableValues", "defaultFieldResolver", "defaultTypeResolver", "rootType", "rootFields", "path", "executeFields", "executeFieldsSerially", "parentType", "sourceValue", "fields", "results", "responseName", "fieldPath", "executeField", "resolvedResult", "containsPromise", "source", "_fieldDef$resolve", "fieldDef", "resolveFn", "info", "completed", "resolved", "completeValue", "rawError", "handleFieldError", "completeListValue", "completeLeafValue", "completeAbstractValue", "completeObjectValue", "itemType", "completedResults", "item", "index", "itemPath", "completedItem", "serializedResult", "_returnType$resolveTy", "resolveTypeFn", "runtimeType", "resolvedRuntimeType", "ensureValidRuntimeType", "runtimeTypeName", "subFieldNodes", "isTypeOf", "resolvedIsTypeOf", "invalidReturnTypeError", "value", "abstractType", "possibleTypes", "promisedIsTypeOfResults", "i", "type", "isTypeOfResult", "isTypeOfResults", "property", "fieldNode", "fieldName", "require_graphql", "__commonJSMin", "exports", "graphql", "graphqlSync", "_devAssert", "_isPromise", "_parser", "_validate", "_validate2", "_execute", "args", "resolve", "graphqlImpl", "result", "schema", "source", "rootValue", "contextValue", "variableValues", "operationName", "fieldResolver", "typeResolver", "schemaValidationErrors", "document", "syntaxError", "validationErrors", "require_type", "__commonJSMin", "exports", "_directives", "_scalars", "_definition", "_schema", "_introspection", "_assertName", "_validate", "require_language", "__commonJSMin", "exports", "_visitor", "_directiveLocation", "_kinds", "_lexer", "_ast", "_source", "_tokenKind", "_location", "_predicates", "_parser", "_printer", "_printLocation", "require_isAsyncIterable", "__commonJSMin", "exports", "isAsyncIterable", "maybeAsyncIterable", "require_mapAsyncIterator", "__commonJSMin", "exports", "mapAsyncIterator", "iterable", "callback", "iterator", "mapResult", "result", "error", "require_subscribe", "__commonJSMin", "exports", "createSourceEventStream", "subscribe", "_devAssert", "_inspect", "_isAsyncIterable", "_Path", "_GraphQLError", "_locatedError", "_collectFields", "_execute", "_mapAsyncIterator", "_values", "args", "resultOrStream", "mapSourceToResponse", "payload", "toNormalizedArgs", "firstArg", "rawArgs", "schema", "document", "variableValues", "exeContext", "eventStream", "executeSubscription", "error", "fragments", "operation", "rootValue", "rootType", "rootFields", "responseName", "fieldNodes", "fieldDef", "fieldName", "path", "info", "_fieldDef$subscribe", "contextValue", "require_execution", "__commonJSMin", "exports", "_subscribe", "_execute", "_values", "_Path", "require_NoDeprecatedCustomRule", "__commonJSMin", "exports", "NoDeprecatedCustomRule", "_invariant", "_GraphQLError", "_definition", "context", "node", "fieldDef", "deprecationReason", "parentType", "argDef", "directiveDef", "inputObjectDef", "inputFieldDef", "enumValueDef", "enumTypeDef", "require_NoSchemaIntrospectionCustomRule", "__commonJSMin", "exports", "NoSchemaIntrospectionCustomRule", "_GraphQLError", "_definition", "_introspection", "context", "node", "type", "require_validation", "__commonJSMin", "exports", "_ExecutableDefinitionsRule", "_FieldsOnCorrectTypeRule", "_FragmentsOnCompositeTypesRule", "_KnownArgumentNamesRule", "_KnownDirectivesRule", "_KnownFragmentNamesRule", "_KnownTypeNamesRule", "_LoneAnonymousOperationRule", "_LoneSchemaDefinitionRule", "_NoDeprecatedCustomRule", "_NoFragmentCyclesRule", "_NoSchemaIntrospectionCustomRule", "_NoUndefinedVariablesRule", "_NoUnusedFragmentsRule", "_NoUnusedVariablesRule", "_OverlappingFieldsCanBeMergedRule", "_PossibleFragmentSpreadsRule", "_PossibleTypeExtensionsRule", "_ProvidedRequiredArgumentsRule", "_ScalarLeafsRule", "_SingleFieldSubscriptionsRule", "_UniqueArgumentDefinitionNamesRule", "_UniqueArgumentNamesRule", "_UniqueDirectiveNamesRule", "_UniqueDirectivesPerLocationRule", "_UniqueEnumValueNamesRule", "_UniqueFieldDefinitionNamesRule", "_UniqueFragmentNamesRule", "_UniqueInputFieldNamesRule", "_UniqueOperationNamesRule", "_UniqueOperationTypesRule", "_UniqueTypeNamesRule", "_UniqueVariableNamesRule", "_ValidationContext", "_ValuesOfCorrectTypeRule", "_VariablesAreInputTypesRule", "_VariablesInAllowedPositionRule", "_specifiedRules", "_validate", "require_error", "__commonJSMin", "exports", "_GraphQLError", "_locatedError", "_syntaxError", "require_getIntrospectionQuery", "__commonJSMin", "exports", "getIntrospectionQuery", "options", "optionsWithDefault", "descriptions", "specifiedByUrl", "directiveIsRepeatable", "schemaDescription", "inputDeprecation", "str", "require_getOperationAST", "__commonJSMin", "exports", "getOperationAST", "_kinds", "documentAST", "operationName", "operation", "definition", "_definition$name", "require_getOperationRootType", "__commonJSMin", "exports", "getOperationRootType", "_GraphQLError", "schema", "operation", "queryType", "mutationType", "subscriptionType", "require_introspectionFromSchema", "__commonJSMin", "exports", "introspectionFromSchema", "_invariant", "_parser", "_execute", "_getIntrospectionQuery", "schema", "options", "optionsWithDefaults", "document", "result", "require_buildClientSchema", "__commonJSMin", "exports", "buildClientSchema", "_devAssert", "_inspect", "_isObjectLike", "_keyValMap", "_parser", "_definition", "_directives", "_introspection", "_scalars", "_schema", "_valueFromAST", "introspection", "options", "schemaIntrospection", "typeMap", "typeIntrospection", "buildType", "stdType", "queryType", "getObjectType", "mutationType", "subscriptionType", "directives", "buildDirective", "getType", "typeRef", "itemRef", "nullableRef", "nullableType", "getNamedType", "typeName", "type", "getInterfaceType", "buildScalarDef", "buildObjectDef", "buildInterfaceDef", "buildUnionDef", "buildEnumDef", "buildInputObjectDef", "typeStr", "scalarIntrospection", "buildImplementationsList", "implementingIntrospection", "implementingIntrospectionStr", "objectIntrospection", "buildFieldDefMap", "interfaceIntrospection", "unionIntrospection", "unionIntrospectionStr", "enumIntrospection", "enumIntrospectionStr", "valueIntrospection", "inputObjectIntrospection", "inputObjectIntrospectionStr", "buildInputValueDefMap", "fieldIntrospection", "buildField", "fieldIntrospectionStr", "inputValueIntrospections", "inputValue", "buildInputValue", "inputValueIntrospection", "defaultValue", "directiveIntrospection", "directiveIntrospectionStr", "require_extendSchema", "__commonJSMin", "exports", "extendSchema", "extendSchemaImpl", "_devAssert", "_inspect", "_invariant", "_keyMap", "_mapValue", "_kinds", "_predicates", "_definition", "_directives", "_introspection", "_scalars", "_schema", "_validate", "_values", "_valueFromAST", "schema", "documentAST", "options", "schemaConfig", "extendedConfig", "_schemaDef", "_schemaDef$descriptio", "_schemaDef2", "_options$assumeValid", "typeDefs", "typeExtensionsMap", "directiveDefs", "schemaDef", "schemaExtensions", "def", "extendedTypeName", "existingTypeExtensions", "typeMap", "existingType", "extendNamedType", "typeNode", "_stdTypeMap$name", "name", "stdTypeMap", "buildType", "operationTypes", "replaceNamedType", "getOperationTypes", "replaceDirective", "buildDirective", "replaceType", "type", "directive", "config", "extendArg", "extendScalarType", "extendObjectType", "extendInterfaceType", "extendUnionType", "extendEnumType", "extendInputObjectType", "_typeExtensionsMap$co", "extensions", "field", "buildInputFieldMap", "_typeExtensionsMap$ty", "buildEnumValueMap", "_typeExtensionsMap$co2", "specifiedByURL", "extensionNode", "_getSpecifiedByURL", "getSpecifiedByURL", "_typeExtensionsMap$co3", "buildInterfaces", "extendField", "buildFieldMap", "_typeExtensionsMap$co4", "_typeExtensionsMap$co5", "buildUnionTypes", "arg", "nodes", "opTypes", "node", "_node$operationTypes", "operationTypesNodes", "operationType", "getNamedType", "_stdTypeMap$name2", "getWrappedType", "_node$description", "value", "buildArgumentMap", "fieldConfigMap", "_node$fields", "nodeFields", "_field$description", "getDeprecationReason", "args", "argsNodes", "argConfigMap", "_arg$description", "inputFieldMap", "_node$fields2", "fieldsNodes", "_field$description2", "enumValueMap", "_node$values", "valuesNodes", "_value$description", "_node$interfaces$map", "_node$interfaces", "_node$types$map", "_node$types", "astNode", "_typeExtensionsMap$na", "extensionASTNodes", "_astNode$description", "allNodes", "_astNode$description2", "_astNode$description3", "_astNode$description4", "_astNode$description5", "_astNode$description6", "deprecated", "specifiedBy", "require_buildASTSchema", "__commonJSMin", "exports", "buildASTSchema", "buildSchema", "_devAssert", "_kinds", "_parser", "_directives", "_schema", "_validate", "_extendSchema", "documentAST", "options", "emptySchemaConfig", "config", "type", "directives", "stdDirective", "directive", "source", "document", "require_lexicographicSortSchema", "__commonJSMin", "exports", "lexicographicSortSchema", "_inspect", "_invariant", "_keyValMap", "_naturalCompare", "_definition", "_directives", "_introspection", "_schema", "schema", "schemaConfig", "typeMap", "sortByName", "type", "sortNamedType", "sortDirective", "replaceMaybeType", "replaceType", "replaceNamedType", "maybeType", "directive", "config", "sortBy", "x", "sortArgs", "args", "sortObjMap", "arg", "sortFields", "fieldsMap", "field", "sortInputFields", "sortTypes", "array", "value", "map", "sortValueFn", "sortedMap", "key", "obj", "mapToKey", "obj1", "obj2", "key1", "key2", "require_printSchema", "__commonJSMin", "exports", "printIntrospectionSchema", "printSchema", "printType", "_inspect", "_invariant", "_blockString", "_kinds", "_printer", "_definition", "_directives", "_introspection", "_scalars", "_astFromValue", "schema", "printFilteredSchema", "n", "isDefinedType", "type", "directiveFilter", "typeFilter", "directives", "types", "printSchemaDefinition", "directive", "printDirective", "isSchemaOfCommonNames", "operationTypes", "queryType", "mutationType", "subscriptionType", "printDescription", "printScalar", "printObject", "printInterface", "printUnion", "printEnum", "printInputObject", "printSpecifiedByURL", "printImplementedInterfaces", "interfaces", "i", "printFields", "possibleTypes", "values", "value", "printDeprecated", "printBlock", "fields", "f", "printInputValue", "printArgs", "items", "args", "indentation", "arg", "defaultAST", "argDecl", "reason", "scalar", "def", "firstInBlock", "description", "blockString", "require_concatAST", "__commonJSMin", "exports", "concatAST", "_kinds", "documents", "definitions", "doc", "require_separateOperations", "__commonJSMin", "exports", "separateOperations", "_kinds", "_visitor", "documentAST", "operations", "depGraph", "definitionNode", "collectDependencies", "separatedDocumentASTs", "operation", "dependencies", "fragmentName", "collectTransitiveDependencies", "operationName", "node", "collected", "fromName", "immediateDeps", "toName", "selectionSet", "require_stripIgnoredCharacters", "__commonJSMin", "exports", "stripIgnoredCharacters", "_blockString", "_lexer", "_source", "_tokenKind", "source", "sourceObj", "body", "lexer", "strippedBody", "wasLastAddedTokenNonPunctuator", "currentToken", "tokenKind", "isNonPunctuator", "tokenBody", "require_assertValidName", "__commonJSMin", "exports", "assertValidName", "isValidNameError", "_devAssert", "_GraphQLError", "_assertName", "name", "error", "require_findBreakingChanges", "__commonJSMin", "exports", "findBreakingChanges", "findDangerousChanges", "_inspect", "_invariant", "_keyMap", "_printer", "_definition", "_scalars", "_astFromValue", "_sortValueNode", "BreakingChangeType", "DangerousChangeType", "oldSchema", "newSchema", "findSchemaChanges", "change", "findTypeChanges", "findDirectiveChanges", "schemaChanges", "directivesDiff", "diff", "oldDirective", "newDirective", "argsDiff", "newArg", "oldArg", "location", "typesDiff", "oldType", "newType", "findEnumTypeChanges", "findUnionTypeChanges", "findInputObjectTypeChanges", "findFieldChanges", "findImplementedInterfacesChanges", "typeKindName", "fieldsDiff", "newField", "oldField", "isChangeSafeForInputObjectFieldOrFieldArg", "possibleTypesDiff", "newPossibleType", "oldPossibleType", "valuesDiff", "newValue", "oldValue", "interfacesDiff", "newInterface", "oldInterface", "findArgChanges", "isChangeSafeForObjectOrInterfaceField", "oldValueStr", "stringifyValue", "newValueStr", "type", "value", "ast", "oldArray", "newArray", "added", "removed", "persisted", "oldMap", "name", "newMap", "oldItem", "newItem", "require_utilities", "__commonJSMin", "exports", "_findBreakingChanges", "_TypeInfo", "_assertValidName", "_astFromValue", "_buildASTSchema", "_buildClientSchema", "_coerceInputValue", "_concatAST", "_typeComparators", "_extendSchema", "_getIntrospectionQuery", "_getOperationAST", "_getOperationRootType", "_introspectionFromSchema", "_lexicographicSortSchema", "_printSchema", "_separateOperations", "_stripIgnoredCharacters", "_typeFromAST", "_valueFromAST", "_valueFromASTUntyped", "require_graphql", "__commonJSMin", "exports", "_index2", "_index6", "_index", "_index4", "_index5", "_index3", "_graphql", "_version", "defaultMakeData", "_a", "forEach", "slice", "hasOwnProperty", "Trie", "weakness", "makeData", "array", "node", "key", "i", "len", "map", "data", "head", "child", "create", "isObjRef", "value", "defaultDispose", "StrongCache", "max", "dispose", "key", "node", "older", "newer", "value", "noop", "_WeakRef", "_WeakMap", "_FinalizationRegistry", "finalizationBatchSize", "WeakCache", "_this", "iterator", "i", "defaultMakeData", "_a", "forEach", "slice", "hasOwnProperty", "Trie", "weakness", "makeData", "array", "_i", "node", "key", "i", "len", "map", "isObjRef", "child", "value", "currentContext", "MISSING_VALUE", "idCounter", "makeSlotClass", "Slot", "context_1", "value", "callback", "args", "thisArg", "_a", "slots", "parent", "context", "saved", "maybe", "fn", "globalKey", "host", "globalHost", "bind", "noContext", "setTimeoutWithContext", "delay", "asyncFromGen", "genFn", "gen", "boundNext", "boundThrow", "resolve", "reject", "invoke", "method", "argument", "result", "error", "next", "invokeNext", "isPromiseLike", "invokeThrow", "wrappedFibers", "wrapYieldingFiberMethods", "Fiber", "wrap", "obj", "parentEntrySlot", "Slot", "nonReactive", "fn", "hasOwnProperty", "arrayFromSet", "set", "array", "item", "maybeUnsubscribe", "entryOrDep", "unsubscribe", "emptySetPool", "POOL_TARGET_SIZE", "assert", "condition", "optionalMessage", "valueIs", "a", "b", "len", "valueGet", "value", "valueCopy", "Entry", "mightBeDirty", "rememberParent", "args", "reallyRecompute", "reportDirty", "_this", "forgetChildren", "eachParent", "parent", "child", "forgetChild", "dep", "reportDirtyChild", "reportCleanChild", "entry", "recomputeNewValue", "maybeSubscribe", "setClean", "normalizeResult", "oldValueCopy", "e", "reportClean", "callback", "parentCount", "parents", "parentWasClean", "childValue", "removeDirtyChild", "dc", "_value", "EntryMethods", "options", "depsByKey", "subscribe", "depend", "key", "dep_1", "entryMethodName", "m_1", "defaultKeyTrie", "defaultMakeCacheKey", "_i", "trie", "Trie", "caches", "wrap", "originalFunction", "_a", "_b", "_c", "max", "keyArgs", "_d", "makeCacheKey", "_e", "cacheOption", "StrongCache", "cache", "optimistic", "dirtyKey", "peekKey", "forgetKey", "require_Observable", "__commonJSMin", "exports", "_classCallCheck", "instance", "Constructor", "_defineProperties", "target", "props", "i", "descriptor", "_createClass", "protoProps", "staticProps", "hasSymbols", "hasSymbol", "name", "getSymbol", "SymbolIterator", "SymbolObservable", "SymbolSpecies", "getMethod", "obj", "key", "value", "getSpecies", "ctor", "Observable", "isObservable", "x", "hostReportError", "e", "enqueue", "fn", "cleanupSubscription", "subscription", "cleanup", "unsubscribe", "closeSubscription", "flushSubscription", "queue", "notifySubscription", "type", "observer", "m", "onNotify", "Subscription", "subscriber", "subscriptionObserver", "SubscriptionObserver", "_this", "resolve", "reject", "done", "_this2", "C", "_this3", "_this4", "hasSeed", "hasValue", "seed", "acc", "first", "_this5", "_len", "sources", "_key", "index", "startNext", "next", "v", "_this6", "subscriptions", "outer", "inner", "completeIfDone", "s", "method", "observable", "_iteratorNormalCompletion", "_didIteratorError", "_iteratorError", "_iterator", "_step", "_item", "err", "_len2", "items", "_key2", "require_zen_observable", "__commonJSMin", "exports", "module", "require_zen_observable_ts", "__commonJSMin", "exports", "require_ponyfill", "__commonJSMin", "exports", "symbolObservablePonyfill", "root", "result", "_Symbol", "require_lib", "__commonJSMin", "exports", "module", "_ponyfill", "_ponyfill2", "_interopRequireDefault", "obj", "root", "result", "shouldInclude", "_a", "variables", "directives", "getInclusionDirectives", "directive", "ifArgument", "evaledValue", "invariant", "getDirectiveNames", "root", "names", "visit", "node", "hasAnyDirectives", "hasDirectives", "hasAllDirectives", "all", "nameSet", "uniqueCount", "BREAK", "hasClientExports", "document", "isInclusionDirective", "value", "result", "directiveArguments", "directiveName", "ifValue", "canUseWeakMap", "maybe", "canUseWeakSet", "canUseSymbol", "canUseAsyncIteratorSymbol", "canUseDOM", "usingJSDOM", "canUseLayoutEffect", "isNonNullObject", "obj", "isPlainObject", "getFragmentQueryDocument", "fragmentName", "actualFragmentName", "fragments", "definition", "newInvariantError", "query", "__assign", "__spreadArray", "createFragmentMap", "symTable", "fragment", "getFragmentFromSelection", "selection", "fragmentMap", "scheduledCleanup", "schedule", "cache", "AutoCleanedWeakCache", "max", "dispose", "WeakCache", "key", "AutoCleanedStrongCache", "StrongCache", "cacheSizeSymbol", "cacheSizes", "global", "globalCaches", "registerGlobalCache", "name", "getSize", "canonicalStringify", "stableObjectReplacer", "sortingMap", "proto", "keys", "everyKeyInOrder", "unsortedKey", "sortedKeys", "sortedKey", "sortedObject_1", "i", "makeReference", "id", "isReference", "isDocumentNode", "isStringValue", "isBooleanValue", "isIntValue", "isFloatValue", "isVariable", "isObjectValue", "isListValue", "isEnumValue", "isNullValue", "valueToObjectRepresentation", "argObj", "nestedArgObj_1", "variableValue", "listValue", "nestedArgArrayObj", "storeKeyNameFromField", "field", "directivesObj", "getStoreKeyName", "KNOWN_DIRECTIVES", "storeKeyNameStringify", "fieldName", "args", "filterKeys", "filteredArgs_1", "completeFieldName", "stringifiedArgs", "s", "previous", "argumentsObjectFromField", "argObj_1", "resultKeyNameFromField", "getTypenameFromResult", "selectionSet", "_i", "isField", "_b", "fragments_1", "typename", "isInlineFragment", "checkDocument", "doc", "operations", "d", "getOperationDefinition", "getOperationName", "x", "getFragmentDefinitions", "getQueryDefinition", "queryDef", "getFragmentDefinition", "fragmentDef", "getMainDefinition", "queryDoc", "fragmentDefinition", "operation", "getDefaultValues", "defaultValues", "defs", "def", "identity", "DocumentTransform", "transform", "options", "predicate", "left", "right", "documentTransform", "_this", "stableCacheKeys_1", "Trie", "wrap", "cacheKeys", "transformedDocument", "otherTransform", "printCache", "print", "ast", "origPrint", "isArray", "isNonEmptyArray", "TYPENAME_FIELD", "Kind", "isEmpty", "op", "nullIfDocIsEmpty", "getDirectiveMatcher", "configs", "tests", "config", "testConfig", "test", "makeInUseGetterFunction", "defaultKey", "map", "inUse", "removeDirectivesFromDocument", "getInUseByOperationName", "getInUseByFragmentName", "getInUse", "ancestors", "p", "ancestor", "operationCount", "directiveMatcher", "shouldRemoveField", "nodeDirectives", "originalFragmentDefsByPath", "firstVisitMadeChanges", "fieldOrInlineFragmentVisitor", "docWithoutDirectiveSubtrees", "_key", "_parent", "_path", "path", "originalNode", "populateTransitiveVars", "childFragmentName", "varName", "allFragmentNamesUsed", "fragmentWillBeRemoved", "enterVisitor", "usedVariableNames_1", "varDef", "addTypenameToDocument", "parent", "selections", "skip", "connectionRemoveConfig", "willRemove", "arg", "removeConnectionDirectiveFromDocument", "getArgumentMatcher", "argument", "aConfig", "removeArgumentsFromDocument", "argMatcher", "argConfig", "argMatchCount_1", "removeFragmentSpreadFromDocument", "enter", "buildQueryFromSelectionSet", "definitionOperation", "modifiedDoc", "removeClientSetsFromDocument", "isOperation", "isMutationOperation", "isQueryOperation", "isSubscriptionOperation", "hasOwnProperty", "mergeDeep", "sources", "mergeDeepArray", "target", "count", "merger", "DeepMerger", "defaultReconciler", "source", "property", "reconciler", "context", "sourceKey", "targetValue", "concatPagination", "keyArgs", "existing", "incoming", "offsetLimitPagination", "merged", "offset", "relayStylePagination", "canRead", "readField", "edges", "firstEdgeCursor", "lastEdgeCursor", "edge", "startCursor", "endCursor", "getExtras", "makeEmptyData", "incomingEdges", "pageInfo_1", "firstEdge", "lastEdge", "firstCursor", "lastCursor", "prefix", "suffix", "index", "pageInfo", "hasPreviousPage", "hasNextPage", "extras", "__rest_1", "__rest", "notExtras", "createFulfilledPromise", "promise", "createRejectedPromise", "reason", "isStatefulPromise", "wrapPromiseWithState", "pendingPromise", "fulfilledPromise", "rejectedPromise", "toString", "cloneDeep", "cloneDeepHelper", "val", "seen", "copy_1", "child", "copy_2", "deepFreeze", "workSet", "shallowFreeze", "maybeDeepFreeze", "iterateObserversSafely", "observers", "method", "observersWithMethod", "obs", "asyncMap", "observable", "mapFn", "catchFn", "Observable", "observer", "promiseQueue", "callback", "resolve", "makeCallback", "examiner", "both", "error", "handler", "sub", "fixObservableSubclass", "subclass", "set", "isPromiseLike", "Concast", "_super", "__extends", "reject", "_", "iterable", "nextOrError", "nextResultListeners", "listener", "called", "isExecutionPatchIncrementalResult", "isExecutionPatchInitialResult", "isExecutionPatchResult", "isApolloPayloadResult", "mergeIncrementalData", "prevResult", "mergedData", "data", "isNumericKey", "parent_1", "graphQLResultHasError", "errors", "getGraphQLErrorsFromResult", "graphQLErrors", "incrementalResult", "compact", "objects", "prefixCounts", "makeUniqueId", "stringifyForDisplay", "space", "undefId", "mergeOptions", "defaults", "omitDeep", "__omitDeep", "known", "modified", "array_1", "obj_1", "k", "stripTypename", "fromError", "errorValue", "Observable", "observer", "toPromise", "observable", "completed", "resolve", "reject", "data", "invariant", "fromPromise", "promise", "value", "throwServerError", "response", "result", "message", "error", "validateOperation", "operation", "OPERATION_FIELDS", "_i", "_a", "key", "newInvariantError", "createOperation", "starting", "context", "__assign", "setContext", "next", "getContext", "transformOperation", "transformedOperation", "getOperationName", "filterOperationVariables", "variables", "query", "unusedNames", "visit", "node", "_key", "parent", "name", "passthrough", "op", "forward", "Observable", "toLink", "handler", "ApolloLink", "isTerminating", "link", "request", "links", "x", "y", "test", "left", "right", "leftLink", "rightLink", "ret", "operation", "createOperation", "transformOperation", "validateOperation", "first", "second", "firstLink", "invariant", "nextLink", "next", "newInvariantError", "error", "observer", "fn", "empty", "from", "split", "concat", "execute", "PROTOCOL_ERRORS_SYMBOL", "graphQLResultHasProtocolErrors", "result", "isApolloError", "err", "generateErrorMessage", "errors", "__spreadArray", "isNonNullObject", "ApolloError", "_super", "__extends", "_a", "graphQLErrors", "protocolErrors", "clientErrors", "networkError", "errorMessage", "extraInfo", "_this", "asyncIterator", "source", "_a", "iterator", "nodeStreamIterator", "stream", "cleanup", "error", "done", "data", "waiting", "onData", "chunk", "shiftedArr", "onError", "err", "all", "pair", "onEnd", "getNext", "resolve", "reject", "canUseAsyncIteratorSymbol", "promiseIterator", "promise", "resolved", "value", "readerIterator", "reader", "isNodeResponse", "isReadableStream", "isAsyncIterableIterator", "isStreamableBlob", "isBlob", "isNodeReadableStream", "responseIterator", "response", "body", "isNonNullObject", "obj", "isApolloPayloadResult", "hasOwnProperty", "readMultipartBody", "nextValue", "__awaiter", "decoder", "contentType", "delimiter", "boundaryVal", "boundary", "buffer", "running", "searchFrom", "bi", "message", "i", "headers", "contentType_1", "result", "next", "_b", "_c", "_d", "__generator", "_e", "parseHeaders", "parseJsonBody", "__assign", "PROTOCOL_ERRORS_SYMBOL", "headerText", "headersInit", "line", "name_1", "bodyText", "getResult", "throwServerError", "parseError", "handleError", "observer", "parseAndCheckHttpResponse", "operations", "op", "serializeFetchParameter", "p", "label", "serialized", "e", "newInvariantError", "defaultHttpOptions", "defaultHeaders", "defaultOptions", "fallbackHttpConfig", "defaultPrinter", "ast", "printer", "selectHttpOptionsAndBody", "operation", "fallbackConfig", "configs", "_i", "selectHttpOptionsAndBodyInternal", "__spreadArray", "options", "http", "config", "removeDuplicateHeaders", "operationName", "extensions", "variables", "query", "print", "preserveHeaderCase", "normalizedHeaders_1", "name", "headerData", "normalizedHeaders", "checkFetcher", "fetcher", "createSignalIfSupported", "controller", "signal", "selectURI", "fallbackURI", "context", "contextURI", "rewriteURIForGET", "chosenURI", "queryParams", "addQueryParam", "key", "serializedVariables", "serializedExtensions", "fragment", "preFragment", "fragmentStart", "queryParamsPrefix", "newURI", "backupFetch", "maybe", "createHttpLink", "linkOptions", "uri", "preferredFetch", "includeExtensions", "useGETForQueries", "includeUnusedVariables", "requestOptions", "__rest", "linkConfig", "ApolloLink", "clientAwarenessHeaders", "version", "contextHeaders", "contextConfig", "hasDirectives", "transformedQuery", "removeClientSetsFromDocument", "fromError", "filterOperationVariables", "definitionIsMutation", "d", "definitionIsSubscription", "isSubscription", "getMainDefinition", "hasDefer", "acceptHeader", "invariant", "Observable", "currentFetch", "observerNext", "ctype", "HttpLink", "_super", "__extends", "_this", "toString", "hasOwnProperty", "fnToStr", "previousComparisons", "equal", "a", "b", "check", "aTag", "bTag", "previouslyCompared", "aKeys", "definedKeys", "bKeys", "keyCount", "k", "key", "aIterator", "isMap", "info", "aKey", "aValue", "len", "aCode", "endsWith", "nativeCodeSuffix", "obj", "isDefinedKey", "full", "suffix", "fromIndex", "bSet", "getInMemoryCacheMemoryInternals", "_getInMemoryCacheMemoryInternals", "getApolloCacheMemoryInternals", "_getApolloCacheMemoryInternals", "getWrapperInformation", "fragments", "__assign", "transformInfo", "isWrapper", "f", "isDefined", "value", "transform", "recurseTransformInfo", "cache", "__spreadArray", "ApolloCache", "wrap", "getFragmentQueryDocument", "cacheSizes", "WeakCache", "options", "_this", "optimisticId", "updateResult", "transaction", "document", "object", "optimistic", "_a", "id", "data", "__rest", "fragment", "fragmentName", "update", "Cache", "MissingFieldError", "_super", "__extends", "message", "path", "query", "variables", "i", "hasOwn", "isNullish", "defaultDataIdFromObject", "context", "__typename", "_id", "defaultConfig", "normalizeConfig", "config", "compact", "shouldCanonizeResults", "getTypenameFromStoreObject", "store", "objectOrReference", "isReference", "TypeOrFieldNameRegExp", "fieldNameFromStoreName", "storeFieldName", "match", "selectionSetMatchesResult", "selectionSet", "result", "isNonNullObject", "isArray", "item", "field", "isField", "shouldInclude", "key", "resultKeyNameFromField", "storeValueIsStoreObject", "makeProcessedFieldsMerger", "DeepMerger", "extractFragmentContext", "fragmentMap", "createFragmentMap", "getFragmentDefinitions", "name", "def", "DELETE", "delModifier", "INVALIDATE", "EntityStore", "policies", "group", "maybeDeepFreeze", "objOrRef", "objOrIdOrRef", "mergeIntoStore", "makeReference", "ref", "dataId", "fieldName", "storeObject", "Layer", "dependOnExistence", "older", "newer", "existing", "incoming", "invariant", "merged", "storeObjectReconciler", "fieldsToDirty_1", "fields", "changedFields_1", "needToMerge_1", "allDeleted_1", "sharedDetails_1", "fieldNameOrOptions", "from", "fieldValue", "modify", "newValue", "checkReference", "seenReference", "someNonReference", "_i", "newValue_1", "args", "typename", "limit", "evicted", "obj", "extraRootIds", "newData", "__META", "rest_1", "rootId", "count", "ids", "snapshot", "idsToRemove", "root_1", "found_1", "root", "workSet_1", "child", "CacheGroup", "caching", "parent", "dep", "Trie", "canUseWeakMap", "makeDepKey", "maybeDependOnExistenceOfEntity", "entityId", "supportsResultCaching", "Root", "_b", "resultCaching", "seed", "Stump", "layerId", "replay", "ownStoreObject", "parentStoreObject", "equal", "fromParent", "p", "existingObject", "incomingObject", "property", "existingValue", "incomingValue", "shallowCopy", "isObjectOrArray", "ObjectCanon", "canUseWeakSet", "copy", "original", "proto", "array", "node", "proto_1", "array_1", "keys", "firstValueIndex_1", "obj_1", "json", "execSelectionSetKeyArgs", "StoreReader", "canonizeResults", "peekArgs", "other", "_c", "returnPartialData", "_d", "getDefaultValues", "getQueryDefinition", "rootRef", "execResult", "getMainDefinition", "canonicalStringify", "missing", "firstMissing", "latest", "enclosingRef", "objectsToMerge", "missingMerger", "handleMissing", "resultName", "workSet", "selection", "addTypenameToDocument", "getFragmentFromSelection", "Kind", "newInvariantError", "mergeDeepArray", "finalResult", "frozen", "childResult", "assertSelectionSetForIdValue", "tree", "_", "cacheSlot", "Slot", "cacheInfoMap", "getCacheInfo", "info", "forgetCache", "rv", "recallCache", "makeVar", "caches", "listeners", "broadcast", "oldListeners", "listener", "attach", "specifierInfoCache", "lookupSpecifierInfo", "spec", "cacheKey", "keyFieldsFnFromSpecifier", "specifier", "extract", "keyObject", "collectSpecifierPaths", "schemaKeyPath", "extracted", "extractKeyPath", "extractKey", "keyArgsFnFromSpecifier", "collected", "keyPath", "firstKey", "firstChar", "isNonEmptyArray", "directiveName_1", "d", "directiveArgs", "argumentsObjectFromField", "variableName", "varKeyPath", "suffix", "extractor", "merger", "getSpecifierPaths", "toMerge", "paths_1", "currentPath_1", "s", "normalize", "reducer", "argsFromFieldSpecifier", "nullKeyFieldsFn", "simpleKeyArgsFn", "_args", "mergeTrueFn", "mergeObjects", "mergeFalseFn", "Policies", "partialContext", "normalizeReadFieldOptions", "policy", "keyFn", "specifierOrId", "typePolicies", "queryType", "mutationType", "subscriptionType", "keyFields", "setMerge", "merge", "keyArgs", "read", "which", "old", "possibleTypes", "supertype", "subtype", "policy_1", "supertypes_1", "regExp", "fuzzy", "fuzzySupertypes", "rest", "inbox", "createIfMissing", "fieldPolicies", "supertypeSet", "typenameSupertypeSet", "workQueue_1", "maybeEnqueue_1", "needToCheckFuzzySubtypes", "checkingFuzzySubtypes", "fuzzyString", "fieldSpec", "specifierOrString", "storeKeyNameFromField", "getStoreKeyName", "nameOrField", "readOptions", "makeFieldFunctionOptions", "parentTypename", "childTypename", "storage", "makeMergeObjectsFunction", "toReference", "canRead", "readFieldArgs", "argc", "stringifyForDisplay", "eType", "iType", "typesDiffer", "getContextFlavor", "clientOnly", "deferred", "flavored", "StoreWriter", "reader", "overwrite", "operationDefinition", "getOperationDefinition", "mergeTree", "fieldNodeSet", "entityRef", "applied", "fieldsWithSelectionSets_1", "hasSelectionSet_1", "hasMergeFunction_1", "childTree", "warnAboutDataLoss", "getTypenameFromResult", "readField", "result_1", "resultFieldKey", "getChildMergeTree", "maybeRecycleChildMergeTree", "e", "dataRef", "sets", "previous_1", "mergeMergeTrees", "mergeTreeIsEmpty", "cloneDeep", "fieldMap", "limitingTrie", "flatten", "inheritedContext", "visitedNode", "dir", "getStorageArgs", "e_1", "i_1", "getValue_1", "eVal", "iVal", "aVal", "emptyMergeTreePool", "map", "left", "right", "needToMergeMaps", "remainingRightKeys_1", "leftTree", "warnings", "existingRef", "incomingObj", "getChild", "parentType", "typeDotName", "childTypenames", "InMemoryCache", "DocumentTransform", "rootStore", "resetResultIdentities", "previousReader", "c", "watch", "print", "idToRemove", "newOptimisticData", "removeOptimistic", "onWatchUpdated", "perform", "layer", "optimisticData", "alreadyDirty", "diff", "lastDiff", "createFragmentRegistry", "FragmentRegistry", "definitions", "doc", "arg", "defined", "unbound", "enqueue", "spreadName", "enqueueChildSpreads", "knownFragmentDef", "defsToAppend_1", "spreads", "visit", "docCache", "fragmentSourceMap", "printFragmentWarnings", "experimentalFragmentVariables", "normalize", "string", "cacheKeyFromLoc", "loc", "processFragments", "ast", "seenKeys", "definitions", "fragmentDefinition", "fragmentName", "sourceKey", "sourceKeySet", "tslib", "stripLoc", "doc", "workSet", "node", "key", "value", "parseDocument", "source", "cacheKey", "parsed", "parse", "gql", "literals", "args", "_i", "result", "arg", "i", "resetCaches", "disableFragmentWarnings", "enableExperimentalFragmentVariables", "disableExperimentalFragmentVariables", "extras", "gql_1", "gql$1", "require_main", "__commonJSMin", "exports", "module", "version", "isNonNullObject", "obj", "isNonEmptyArray", "value", "hasOwnProperty", "defaultReconciler", "target", "source", "property", "DeepMerger", "reconciler", "_this", "context", "_i", "sourceKey", "targetValue", "result", "__spreadArray", "__assign", "isExecutionPatchIncrementalResult", "mergeIncrementalData", "prevResult", "mergedData", "merger", "_a", "data", "path", "i", "key", "isNumericKey", "parent_1", "NetworkStatus", "isNetworkRequestInFlight", "networkStatus", "isNetworkRequestSettled", "equalByQuery", "query", "_b", "variables", "aData", "aRest", "__rest", "bData", "bRest", "equal", "equalBySelectionSet", "getMainDefinition", "createFragmentMap", "getFragmentDefinitions", "selectionSet", "aResult", "bResult", "seenSelections", "selection", "shouldInclude", "selectionHasNonreactiveDirective", "isField", "resultKey", "resultKeyNameFromField", "aResultChild", "bResultChild", "childSelectionSet", "aChildIsArray", "bChildIsArray", "length_1", "fragment", "getFragmentFromSelection", "directiveIsNonreactive", "dir", "assign", "ObservableQuery", "_super", "__extends", "queryManager", "queryInfo", "options", "observer", "subObserver", "defaultSubscriptionObserverErrorCallback", "first", "last", "skipCacheDataFor", "_c", "_d", "defaultFetchPolicy", "_e", "fetchPolicy", "_f", "initialFetchPolicy", "opDef", "getOperationDefinition", "resolve", "reject", "subscription", "saveAsLastResult", "lastResult", "diff", "logMissingFieldErrors", "newResult", "resultIsDifferent", "variablesMustMatch", "reobserveOptions", "queryDef", "getQueryDefinition", "vars", "v", "invariant", "fetchMoreOptions", "combinedOptions", "qid", "originalNetworkStatus", "updatedQuerySet", "fetchMoreResult", "cache", "updateQuery", "previous", "watch", "reobserveCacheFirst", "subscriptionData", "err", "newOptions", "mergedOptions", "compact", "mapFn", "pollInterval", "reason", "newNetworkStatus", "pollingInfo", "info", "maybeFetch", "poll", "error", "cloneDeep", "useDisposableConcast", "oldVariables", "oldFetchPolicy", "finishWaitingForOwnResult", "concast", "fromLink", "args", "lastError", "isDifferent", "iterateObserversSafely", "errorResult", "sub", "document", "Observable", "fixObservableSubclass", "obsQuery", "nextFetchPolicy", "currentFetchPolicy", "missing", "LocalState", "client", "resolvers", "fragmentMatcher", "resolverGroup", "mergeDeep", "__awaiter", "remoteResult", "onlyRunForcedResolvers", "__generator", "localResult", "hasDirectives", "removeClientSetsFromDocument", "document_1", "forceResolvers", "visit", "node", "arg", "BREAK", "buildQueryFromSelectionSet", "rootValue_1", "rootValue", "mainDefinition", "fragments", "fragmentMap", "selectionsToResolve", "definitionOperation", "defaultOperationType", "execContext", "isClientFieldDescendant", "resultsToMerge", "execute", "typeCondition", "fieldResult", "isInlineFragment", "fragmentResult", "mergeDeepArray", "field", "fieldName", "aliasedFieldName", "aliasUsed", "defaultResult", "resultPromise", "resolverType", "resolverMap", "cacheSlot", "argumentsObjectFromField", "directive", "isClientField", "d", "item", "isSingleASTNode", "selectionsToResolveCache", "collectByDefinition", "definitionNode", "matches_1", "_", "__", "___", "ancestors", "isSelectionNode", "spread", "fragmentSelections", "destructiveMethodCounts", "canUseWeakMap", "wrapDestructiveCacheMethod", "methodName", "original", "cancelNotifyTimeout", "QueryInfo", "queryId", "oq", "oldDiff", "listener", "watchOptions", "lastWrite", "cacheWriteBehavior", "graphQLErrors", "shouldWriteResult", "diffOptions", "errorPolicy", "ignoreErrors", "writeWithErrors", "graphQLResultHasError", "IGNORE", "QueryManager", "link", "defaultOptions", "documentTransform", "queryDeduplication", "onBroadcast", "ssrMode", "clientAwareness", "localState", "assumeImmutableResults", "defaultContext", "AutoCleanedWeakCache", "cacheSizes", "Trie", "defaultDocumentTransform", "DocumentTransform", "_info", "newInvariantError", "cancel", "mutationId", "hasClientExports", "mutationStoreValue", "isOptimistic", "self", "mutation", "optimisticResponse", "updateQueries", "refetchQueries", "awaitRefetchQueries", "updateWithProxyFn", "onQueryUpdated", "_g", "_h", "keepRootFields", "_j", "asyncMap", "ApolloError", "getGraphQLErrorsFromResult", "storeResult", "cacheWrites", "skipCache", "updateQueries_1", "observableQuery", "queryName", "updater", "currentQueryResult", "complete", "nextQueryResult", "getOperationName", "results_1", "write", "update", "isFinalResult", "isExecutionPatchResult", "DELETE", "store", "transformCache", "cacheEntry", "removeDirectivesFromDocument", "getDefaultValues", "def", "observable", "include", "queries", "queryNamesAndDocs", "legacyQueryOptions", "desc", "isDocumentNode", "makeUniqueId", "included", "nameOrDoc", "includeStandby", "observableQueryPromises", "makeObservable", "hasErrors", "hasProtocolErrors", "graphQLResultHasProtocolErrors", "errors", "PROTOCOL_ERRORS_SYMBOL", "observablePromise_1", "deduplication", "serverQuery", "clientQuery", "inFlightLinkObservables_1", "operation", "printedServerQuery_1", "print", "varJson_1", "canonicalStringify", "entry", "Concast", "requestId", "linkDocument", "aqr", "networkError", "isApolloError", "defaults", "returnPartialData", "notifyOnNetworkStatusChange", "normalized", "fromVariables", "sourcesWithInfo", "cleanupCancelFn", "containsDataFromLink", "updateCache", "optimistic", "removeOptimistic", "includedQueriesById", "results", "lastDiff", "refetchWritePolicy", "oldNetworkStatus", "readCache", "resultsFromCache", "fromData", "resolved", "resultsFromLink", "shouldNotify", "newContext", "cacheSizeSymbol", "global", "globalCaches", "getApolloClientMemoryInternals", "_getApolloClientMemoryInternals", "getCurrentCacheSizes", "k", "linkInfo", "transformInfo", "isWrapper", "f", "getWrapperInformation", "isDefined", "transform", "recurseTransformInfo", "hasSuggestedDevtools", "ApolloClient", "uri", "credentials", "headers", "ssrForceFetchDelay", "connectToDevTools", "typeDefs", "clientAwarenessName", "clientAwarenessVersion", "HttpLink", "ApolloLink", "windowWithDevTools", "devtoolsSymbol", "nav", "ua", "url", "mergeOptions", "ref", "cb", "payload", "fn", "c", "map", "serializedState", "newLink", "setVerbosity", "ethers_exports", "__export", "AbiCoder", "AbstractProvider", "AbstractSigner", "AlchemyProvider", "AnkrProvider", "BaseContract", "BaseWallet", "Block", "BrowserProvider", "CloudflareProvider", "ConstructorFragment", "Contract", "ContractEventPayload", "ContractFactory", "ContractTransactionReceipt", "ContractTransactionResponse", "ContractUnknownEventPayload", "EnsPlugin", "EnsResolver", "ErrorDescription", "ErrorFragment", "EtherSymbol", "EtherscanPlugin", "EtherscanProvider", "EventFragment", "EventLog", "EventPayload", "FallbackFragment", "FallbackProvider", "FeeData", "FeeDataNetworkPlugin", "FetchCancelSignal", "FetchRequest", "FetchResponse", "FetchUrlFeeDataNetworkPlugin", "FixedNumber", "Fragment", "FunctionFragment", "GasCostPlugin", "HDNodeVoidWallet", "HDNodeWallet", "Indexed", "InfuraProvider", "InfuraWebSocketProvider", "Interface", "IpcSocketProvider", "JsonRpcApiProvider", "JsonRpcProvider", "JsonRpcSigner", "LangEn", "Log", "LogDescription", "MaxInt256", "MaxUint256", "MessagePrefix", "MinInt256", "Mnemonic", "MulticoinProviderPlugin", "N", "NamedFragment", "Network", "NetworkPlugin", "NonceManager", "ParamType", "PocketProvider", "QuickNodeProvider", "Result", "Signature", "SigningKey", "SocketBlockSubscriber", "SocketEventSubscriber", "SocketPendingSubscriber", "SocketProvider", "SocketSubscriber", "StructFragment", "Transaction", "TransactionDescription", "TransactionReceipt", "TransactionResponse", "Typed", "TypedDataEncoder", "UndecodedEventLog", "UnmanagedSubscriber", "Utf8ErrorFuncs", "VoidSigner", "Wallet", "WebSocketProvider", "WeiPerEther", "Wordlist", "WordlistOwl", "WordlistOwlA", "ZeroAddress", "ZeroHash", "accessListify", "assert", "assertArgument", "assertArgumentCount", "assertNormalize", "assertPrivate", "checkResultErrors", "computeAddress", "computeHmac", "concat", "copyRequest", "dataLength", "dataSlice", "decodeBase58", "decodeBase64", "decodeBytes32String", "decodeRlp", "decryptCrowdsaleJson", "decryptKeystoreJson", "decryptKeystoreJsonSync", "defaultPath", "defineProperties", "dnsEncode", "encodeBase58", "encodeBase64", "encodeBytes32String", "encodeRlp", "encryptKeystoreJson", "encryptKeystoreJsonSync", "ensNormalize", "formatEther", "formatUnits", "fromTwos", "getAccountPath", "getAddress", "getBigInt", "getBytes", "getBytesCopy", "getCreate2Address", "getCreateAddress", "getDefaultProvider", "getIcapAddress", "getIndexedAccountPath", "getNumber", "getUint", "hashMessage", "hexlify", "id", "isAddress", "isAddressable", "isBytesLike", "isCallException", "isCrowdsaleJson", "isError", "isHexString", "isKeystoreJson", "isValidName", "keccak256", "lock", "makeError", "mask", "namehash", "parseEther", "parseUnits", "pbkdf2", "randomBytes", "recoverAddress", "resolveAddress", "resolveProperties", "ripemd160", "scrypt", "scryptSync", "sha256", "sha512", "showThrottleMessage", "solidityPacked", "solidityPackedKeccak256", "solidityPackedSha256", "stripZerosLeft", "toBeArray", "toBeHex", "toBigInt", "toNumber", "toQuantity", "toTwos", "toUtf8Bytes", "toUtf8CodePoints", "toUtf8String", "uuidV4", "verifyMessage", "verifyTypedData", "version", "wordlists", "zeroPadBytes", "zeroPadValue", "version", "checkType", "value", "type", "name", "types", "t", "i", "error", "resolveProperties", "keys", "k", "accum", "v", "index", "defineProperties", "target", "values", "key", "stringify", "value", "HEX", "result", "i", "keys", "k", "isError", "error", "code", "isCallException", "makeError", "message", "info", "shortMessage", "details", "key", "version", "defineProperties", "assert", "check", "assertArgument", "name", "assertArgumentCount", "count", "expectedCount", "_normalizeForms", "accum", "form", "assertNormalize", "assertPrivate", "givenGuard", "guard", "className", "method", "operation", "_getBytes", "value", "name", "copy", "result", "offset", "i", "assertArgument", "getBytes", "getBytesCopy", "isHexString", "length", "isBytesLike", "HexCharacters", "hexlify", "data", "bytes", "v", "concat", "datas", "d", "dataLength", "dataSlice", "start", "end", "assert", "stripZerosLeft", "zeroPad", "left", "zeroPadValue", "zeroPadBytes", "BN_0", "BN_1", "maxValue", "fromTwos", "_value", "_width", "value", "getUint", "width", "getNumber", "assert", "mask", "toTwos", "getBigInt", "limit", "_bits", "bits", "name", "assertArgument", "e", "result", "Nibbles", "toBigInt", "v", "toNumber", "toBeHex", "toBeArray", "hex", "offset", "toQuantity", "hexlify", "isBytesLike", "Alphabet", "Lookup", "getAlpha", "letter", "i", "result", "assertArgument", "BN_0", "BN_58", "encodeBase58", "_value", "bytes", "getBytes", "value", "toBigInt", "decodeBase58", "decodeBase64", "textData", "data", "i", "getBytes", "encodeBase64", "_data", "EventPayload", "#listener", "emitter", "listener", "filter", "defineProperties", "errorFunc", "reason", "offset", "bytes", "output", "badCodepoint", "assertArgument", "ignoreFunc", "i", "replaceFunc", "Utf8ErrorFuncs", "getUtf8CodePoints", "_bytes", "onError", "getBytes", "result", "c", "extraLength", "overlongMask", "res", "j", "nextChar", "toUtf8Bytes", "str", "form", "assertNormalize", "c2", "pair", "_toUtf8String", "codePoints", "codePoint", "toUtf8String", "toUtf8CodePoints", "createGetUrl", "options", "getUrl", "req", "_signal", "protocol", "assert", "signal", "controller", "init", "resp", "headers", "value", "key", "respBody", "body", "defaultGetUrl", "MAX_ATTEMPTS", "SLOT_INTERVAL", "defaultGetUrlFunc", "createGetUrl", "reData", "reIpfs", "locked", "dataGatewayFunc", "url", "signal", "match", "FetchResponse", "decodeBase64", "unpercent", "FetchRequest", "getIpfsGatewayFunc", "baseUrl", "gatewayIpfs", "Gateways", "fetchSignals", "FetchCancelSignal", "#listeners", "#cancelled", "request", "listener", "assert", "checkSignal", "_FetchRequest", "#allowInsecure", "#gzip", "#headers", "#method", "#timeout", "#url", "#body", "#bodyType", "#creds", "#preflight", "#process", "#retry", "#signal", "#throttle", "#getUrlFunc", "body", "toUtf8Bytes", "method", "headers", "encodeBase64", "key", "value", "keys", "index", "username", "password", "assertArgument", "timeout", "preflight", "process", "retry", "hexlify", "params", "#send", "attempt", "expires", "delay", "_request", "_response", "getTime", "wait", "req", "scheme", "result", "response", "error", "resp", "location", "retryAfter", "current", "target", "clone", "func", "getUrl", "options", "_FetchResponse", "#statusCode", "#statusMessage", "#request", "#error", "toUtf8String", "statusCode", "statusMessage", "accum", "k", "message", "stall", "defineProperties", "requestUrl", "responseBody", "all", "code", "resolve", "BN_N1", "BN_0", "BN_1", "BN_5", "_guard", "Zeros", "getTens", "decimals", "result", "checkValue", "val", "format", "safeOp", "width", "limit", "assert", "fromTwos", "mask", "getFormat", "value", "signed", "match", "assertArgument", "v", "check", "key", "type", "defaultValue", "name", "toString", "negative", "str", "index", "FixedNumber", "_FixedNumber", "#format", "#val", "#tens", "guard", "assertPrivate", "_value", "defineProperties", "#checkFormat", "other", "#checkValue", "#add", "o", "#sub", "#mul", "#div", "a", "b", "delta", "bump", "tens", "_decimals", "_format", "getNumber", "getBigInt", "whole", "decimal", "toBigInt", "getBytes", "hexlifyByte", "value", "result", "unarrayifyInteger", "data", "offset", "length", "_decodeChildren", "childOffset", "decoded", "_decode", "assert", "checkOffset", "lengthLength", "hexlify", "decodeRlp", "_data", "getBytes", "assertArgument", "arrayifyInteger", "value", "result", "_encode", "object", "payload", "child", "length", "data", "getBytes", "nibbles", "encodeRlp", "v", "names", "formatUnits", "value", "unit", "decimals", "index", "assertArgument", "getNumber", "FixedNumber", "parseUnits", "formatEther", "wei", "parseEther", "ether", "uuidV4", "randomBytes", "bytes", "getBytes", "value", "hexlify", "WordSize", "Padding", "passProperties", "_guard", "throwError", "name", "error", "wrapped", "Result", "_Result", "#names", "args", "guard", "items", "names", "wrap", "item", "index", "nameCounts", "accum", "target", "prop", "receiver", "getNumber", "value", "result", "assert", "start", "end", "i", "callback", "thisArg", "keys", "checkResultErrors", "errors", "checkErrors", "path", "object", "key", "childPath", "getValue", "bytes", "toBeArray", "getBytesCopy", "concat", "Coder", "type", "localName", "dynamic", "defineProperties", "message", "assertArgument", "Writer", "#data", "#dataLength", "#writeData", "data", "writer", "paddingOffset", "offset", "Reader", "_Reader", "#offset", "#bytesRead", "#parent", "#maxInflation", "allowLoose", "maxInflation", "hexlify", "#incrementBytesRead", "count", "#peekBytes", "length", "loose", "alignedLength", "reader", "toBigInt", "toNumber", "number", "n", "bytes", "b", "lengths", "hash", "number", "exists", "instance", "checkFinished", "output", "out", "min", "crypto", "u8a", "a", "u32", "arr", "createView", "rotr", "word", "shift", "isLE", "nextTick", "asyncLoop", "iters", "tick", "cb", "ts", "diff", "utf8ToBytes", "str", "toBytes", "data", "u8a", "concatBytes", "arrays", "r", "sum", "a", "pad", "Hash", "toStr", "checkOpts", "defaults", "opts", "wrapConstructor", "hashCons", "hashC", "msg", "tmp", "wrapXOFConstructorWithOpts", "hashCons", "hashC", "msg", "opts", "toBytes", "tmp", "randomBytes", "bytesLength", "crypto", "HMAC", "Hash", "hash", "_key", "key", "toBytes", "blockLen", "pad", "i", "buf", "exists", "out", "bytes", "to", "oHash", "iHash", "finished", "destroyed", "outputLen", "hmac", "message", "pbkdf2Init", "hash", "_password", "_salt", "_opts", "opts", "checkOpts", "c", "dkLen", "asyncTick", "number", "password", "toBytes", "salt", "DK", "PRF", "hmac", "PRFSalt", "pbkdf2Output", "prfW", "u", "pbkdf2", "arr", "view", "createView", "ti", "pos", "Ti", "ui", "i", "setBigUint64", "view", "byteOffset", "value", "isLE", "_32n", "_u32_max", "wh", "wl", "h", "l", "SHA2", "Hash", "blockLen", "outputLen", "padOffset", "createView", "data", "exists", "buffer", "toBytes", "len", "pos", "take", "dataView", "out", "output", "i", "oview", "outLen", "state", "res", "to", "length", "finished", "destroyed", "Chi", "a", "b", "c", "Maj", "SHA256_K", "IV", "SHA256_W", "SHA256", "SHA2", "A", "B", "C", "D", "E", "F", "G", "H", "view", "offset", "i", "W15", "W2", "s0", "rotr", "s1", "sigma1", "T1", "T2", "sha256", "wrapConstructor", "SHA256", "U32_MASK64", "_32n", "fromBig", "n", "le", "split", "lst", "Ah", "Al", "h", "l", "toBig", "shrSH", "_l", "s", "shrSL", "rotrSH", "rotrSL", "rotrBH", "rotrBL", "rotr32H", "_h", "rotr32L", "rotlSH", "rotlSL", "rotlBH", "rotlBL", "add", "Bh", "Bl", "add3L", "Cl", "add3H", "low", "Ch", "add4L", "Dl", "add4H", "Dh", "add5L", "El", "add5H", "Eh", "u64", "fromBig", "split", "toBig", "shrSH", "shrSL", "rotrSH", "rotrSL", "rotrBH", "rotrBL", "rotr32H", "rotr32L", "rotlSH", "rotlSL", "rotlBH", "rotlBL", "add", "add3L", "add3H", "add4L", "add4H", "add5H", "add5L", "u64_default", "SHA512_Kh", "SHA512_Kl", "u64_default", "n", "SHA512_W_H", "SHA512_W_L", "SHA512", "SHA2", "Ah", "Al", "Bh", "Bl", "Ch", "Cl", "Dh", "Dl", "Eh", "El", "Fh", "Fl", "Gh", "Gl", "Hh", "Hl", "view", "offset", "i", "W15h", "W15l", "s0h", "s0l", "W2h", "W2l", "s1h", "s1l", "SUMl", "SUMh", "sigma1h", "sigma1l", "CHIh", "CHIl", "T1ll", "T1h", "T1l", "sigma0h", "sigma0l", "MAJh", "MAJl", "All", "sha512", "wrapConstructor", "SHA512", "getGlobal", "anyGlobal", "crypto", "createHash", "algo", "sha256", "sha512", "assertArgument", "createHmac", "_algo", "key", "hmac", "pbkdf2Sync", "password", "salt", "iterations", "keylen", "pbkdf2", "randomBytes", "length", "assert", "result", "locked", "_computeHmac", "algorithm", "key", "data", "createHmac", "__computeHmac", "computeHmac", "_key", "_data", "getBytes", "hexlify", "func", "SHA3_PI", "SHA3_ROTL", "_SHA3_IOTA", "_0n", "_1n", "_2n", "_7n", "_256n", "_0x71n", "round", "R", "x", "y", "t", "j", "SHA3_IOTA_H", "SHA3_IOTA_L", "split", "rotlH", "h", "l", "s", "rotlBH", "rotlSH", "rotlL", "rotlBL", "rotlSL", "keccakP", "rounds", "B", "idx1", "idx0", "B0", "B1", "Th", "Tl", "curH", "curL", "shift", "PI", "Keccak", "_Keccak", "Hash", "blockLen", "suffix", "outputLen", "enableXOF", "number", "u32", "data", "exists", "state", "toBytes", "len", "pos", "take", "i", "out", "bytes", "bufferOut", "output", "to", "gen", "wrapConstructor", "sha3_224", "sha3_256", "sha3_384", "sha3_512", "keccak_224", "keccak_256", "keccak_384", "keccak_512", "genShake", "wrapXOFConstructorWithOpts", "opts", "shake128", "shake256", "locked", "_keccak256", "data", "keccak_256", "__keccak256", "keccak256", "_data", "getBytes", "hexlify", "func", "Rho", "Id", "_", "i", "Pi", "idxL", "idxR", "j", "k", "shifts", "shiftsL", "idx", "shiftsR", "Kl", "Kr", "rotl", "word", "shift", "f", "group", "x", "y", "z", "BUF", "RIPEMD160", "SHA2", "h0", "h1", "h2", "h3", "h4", "view", "offset", "al", "ar", "bl", "br", "cl", "cr", "dl", "dr", "el", "er", "rGroup", "hbl", "hbr", "rl", "rr", "sl", "sr", "tl", "tr", "ripemd160", "wrapConstructor", "locked", "_ripemd160", "data", "ripemd160", "__ripemd160", "_data", "getBytes", "hexlify", "func", "locked", "_pbkdf2", "password", "salt", "iterations", "keylen", "algo", "pbkdf2Sync", "__pbkdf2", "pbkdf2", "_password", "_salt", "getBytes", "hexlify", "func", "locked", "_randomBytes", "length", "randomBytes", "__randomBytes", "func", "rotl", "a", "b", "XorAndSalsa", "prev", "pi", "input", "ii", "out", "oi", "y00", "y01", "y02", "y03", "y04", "y05", "y06", "y07", "y08", "y09", "y10", "y11", "y12", "y13", "y14", "y15", "x00", "x01", "x02", "x03", "x04", "x05", "x06", "x07", "x08", "x09", "x10", "x11", "x12", "x13", "x14", "x15", "i", "BlockMix", "r", "head", "tail", "scryptInit", "password", "salt", "_opts", "opts", "checkOpts", "N", "p", "dkLen", "asyncTick", "maxmem", "onProgress", "number", "blockSize", "blockSize32", "memUsed", "B", "pbkdf2", "sha256", "B32", "u32", "V", "tmp", "blockMixCb", "totalBlockMix", "callbackPer", "blockMixCnt", "scryptOutput", "res", "scrypt", "Pi", "pos", "j", "k", "scryptAsync", "asyncLoop", "lockedSync", "lockedAsync", "_scryptAsync", "passwd", "salt", "N", "r", "p", "dkLen", "onProgress", "scryptAsync", "_scryptSync", "scrypt", "__scryptAsync", "__scryptSync", "_passwd", "_salt", "progress", "getBytes", "hexlify", "func", "scryptSync", "_sha256", "data", "createHash", "_sha512", "__sha256", "__sha512", "locked256", "locked512", "sha256", "_data", "getBytes", "hexlify", "func", "sha512", "utils_exports", "__export", "bitGet", "bitLen", "bitMask", "bitSet", "bytesToHex", "bytesToNumberBE", "bytesToNumberLE", "concatBytes", "createHmacDrbg", "ensureBytes", "equalBytes", "hexToBytes", "hexToNumber", "numberToBytesBE", "numberToBytesLE", "numberToHexUnpadded", "numberToVarBytesBE", "utf8ToBytes", "validateObject", "_0n", "_1n", "_2n", "u8a", "a", "hexes", "_", "i", "bytes", "hex", "num", "len", "array", "j", "hexByte", "byte", "n", "title", "expectedLength", "res", "e", "arrays", "r", "sum", "pad", "b1", "b2", "str", "pos", "value", "u8n", "data", "u8fr", "arr", "hashLen", "qByteLen", "hmacFn", "v", "k", "reset", "h", "b", "reseed", "seed", "gen", "out", "sl", "pred", "validatorFns", "val", "object", "validators", "optValidators", "checkField", "fieldName", "type", "isOptional", "checkVal", "_0n", "_1n", "_2n", "_3n", "_4n", "_5n", "_8n", "_9n", "_16n", "mod", "a", "b", "result", "pow", "num", "power", "modulo", "res", "pow2", "x", "invert", "number", "y", "u", "v", "q", "r", "m", "n", "tonelliShanks", "P", "legendreC", "Q", "S", "Z", "p1div4", "Fp", "root", "Q1div2", "g", "t2", "ge", "FpSqrt", "c1", "n2", "nv", "i", "FIELD_FIELDS", "validateField", "field", "initial", "opts", "map", "val", "validateObject", "FpPow", "f", "num", "power", "_0n", "_1n", "p", "d", "FpInvertBatch", "nums", "tmp", "lastMultiplied", "acc", "i", "inverted", "nLength", "n", "nBitLength", "_nBitLength", "nByteLength", "Field", "ORDER", "bitLen", "isLE", "redef", "_0n", "BITS", "BYTES", "sqrtP", "FpSqrt", "f", "bitMask", "_1n", "num", "mod", "lhs", "rhs", "power", "FpPow", "invert", "lst", "FpInvertBatch", "a", "b", "c", "numberToBytesLE", "numberToBytesBE", "bytes", "bytesToNumberLE", "bytesToNumberBE", "getFieldBytesLength", "fieldOrder", "bitLength", "getMinHashLength", "length", "mapHashToField", "key", "isLE", "len", "fieldLen", "minLen", "num", "bytesToNumberBE", "bytesToNumberLE", "reduced", "mod", "_1n", "numberToBytesLE", "numberToBytesBE", "_0n", "_1n", "wNAF", "c", "bits", "constTimeNegate", "condition", "item", "neg", "opts", "W", "windows", "windowSize", "elm", "n", "p", "d", "points", "base", "window", "i", "precomputes", "f", "mask", "maxNumber", "shiftBy", "offset", "wbits", "offset1", "offset2", "cond1", "cond2", "P", "precomputesMap", "transform", "comp", "validateBasic", "curve", "validateField", "validateObject", "nLength", "validatePointOpts", "curve", "opts", "validateBasic", "validateObject", "endo", "Fp", "a", "b2n", "h2b", "utils_exports", "DER", "m", "data", "E", "len", "res", "hex", "l", "r", "sBytes", "s", "rBytesLeft", "sig", "slice", "h", "num", "shl", "rhl", "sl", "rl", "_0n", "_1n", "_2n", "_3n", "_4n", "weierstrassPoints", "CURVE", "toBytes", "_c", "point", "_isCompressed", "concatBytes", "fromBytes", "bytes", "tail", "x", "weierstrassEquation", "x2", "x3", "isWithinCurveOrder", "assertGE", "normPrivateKeyToScalar", "key", "lengths", "nByteLength", "wrapPrivateKey", "n", "bytesToHex", "bytesToNumberBE", "ensureBytes", "mod", "pointPrecomputes", "assertPrjPoint", "other", "Point", "px", "py", "pz", "p", "is0", "i", "points", "toInv", "P", "privateKey", "windowSize", "y", "left", "right", "X1", "Y1", "Z1", "X2", "Y2", "Z2", "U1", "U2", "b3", "X3", "Y3", "Z3", "t0", "t1", "t2", "t3", "t4", "t5", "wnaf", "comp", "I", "k1neg", "k1", "k2neg", "k2", "k1p", "k2p", "d", "scalar", "fake", "f1p", "f2p", "f", "Q", "b", "G", "mul", "sum", "iz", "z", "ax", "ay", "zz", "cofactor", "isTorsionFree", "clearCofactor", "isCompressed", "_bits", "wNAF", "validateOpts", "weierstrass", "curveDef", "CURVE_ORDER", "compressedLen", "uncompressedLen", "isValidFieldElement", "modN", "invN", "invert", "cat", "head", "y2", "isYOdd", "numToNByteStr", "numberToBytesBE", "isBiggerThanHalfOrder", "number", "HALF", "normalizeS", "slcNum", "from", "to", "Signature", "recovery", "msgHash", "rec", "bits2int_modN", "radj", "prefix", "R", "ir", "u1", "u2", "hexToBytes", "utils", "length", "getMinHashLength", "mapHashToField", "getPublicKey", "isProbPub", "item", "arr", "str", "getSharedSecret", "privateA", "publicB", "bits2int", "delta", "ORDER_MASK", "bitMask", "int2octets", "prepSig", "defaultSigOpts", "k", "hash", "randomBytes", "lowS", "prehash", "ent", "h1int", "seedArgs", "e", "seed", "k2sig", "kBytes", "ik", "q", "normS", "defaultVerOpts", "sign", "privKey", "C", "createHmacDrbg", "verify", "signature", "publicKey", "sg", "_sig", "derError", "error", "is", "getHash", "hash", "key", "msgs", "hmac", "concatBytes", "randomBytes", "createCurve", "curveDef", "defHash", "create", "weierstrass", "secp256k1P", "secp256k1N", "_1n", "_2n", "divNearest", "a", "b", "sqrtMod", "y", "P", "_3n", "_6n", "_11n", "_22n", "_23n", "_44n", "_88n", "b2", "b3", "b6", "pow2", "b9", "b11", "b22", "b44", "b88", "b176", "b220", "b223", "t1", "t2", "root", "Fp", "Field", "secp256k1", "createCurve", "k", "n", "a1", "b1", "a2", "POW_2_128", "c1", "c2", "k1", "mod", "k2", "k1neg", "k2neg", "sha256", "_0n", "Point", "secp256k1", "ZeroAddress", "ZeroHash", "N", "WeiPerEther", "MaxUint256", "MinInt256", "MaxInt256", "EtherSymbol", "MessagePrefix", "BN_0", "BN_1", "BN_2", "BN_27", "BN_28", "BN_35", "_guard", "toUint256", "value", "zeroPadValue", "toBeArray", "Signature", "_Signature", "#r", "#s", "#v", "#networkV", "assertArgument", "dataLength", "hexlify", "_value", "v", "getNumber", "yParityAndS", "getBytes", "concat", "guard", "s", "assertPrivate", "clone", "networkV", "bv", "getBigInt", "chainId", "sig", "assertError", "check", "message", "ZeroHash", "bytes", "r", "_r", "isHexString", "_v", "yParity", "result", "SigningKey", "_SigningKey", "#privateKey", "privateKey", "assertArgument", "dataLength", "hexlify", "digest", "sig", "secp256k1", "getBytesCopy", "Signature", "toBeHex", "other", "pubKey", "getBytes", "key", "compressed", "bytes", "pub", "point", "signature", "secpSig", "concat", "p0", "p1", "pub0", "pub1", "lock", "computeHmac", "keccak256", "pbkdf2", "randomBytes", "ripemd160", "scrypt", "scryptSync", "sha256", "sha512", "BN_0", "BN_36", "getChecksumAddress", "address", "chars", "expanded", "hashed", "getBytes", "keccak256", "ibanLookup", "i", "safeDigits", "ibanChecksum", "c", "block", "checksum", "Base36", "result", "key", "fromBase36", "value", "getAddress", "assertArgument", "getIcapAddress", "base36", "getCreateAddress", "tx", "from", "getAddress", "nonceHex", "getBigInt", "dataSlice", "keccak256", "encodeRlp", "getCreate2Address", "_from", "_salt", "_initCodeHash", "salt", "getBytes", "initCodeHash", "assertArgument", "concat", "isAddressable", "value", "isAddress", "getAddress", "checkAddress", "target", "promise", "result", "assert", "assertArgument", "resolveAddress", "resolver", "_gaurd", "n", "value", "width", "signed", "Typed", "b", "size", "_typedSymbol", "_Typed", "#options", "gaurd", "type", "options", "assertPrivate", "defineProperties", "v", "dynamic", "name", "AddressCoder", "Coder", "localName", "writer", "_value", "value", "Typed", "getAddress", "error", "reader", "toBeHex", "AnonymousCoder", "Coder", "coder", "writer", "value", "reader", "pack", "writer", "coders", "values", "arrayValues", "unique", "coder", "name", "assert", "assertArgument", "staticWriter", "Writer", "dynamicWriter", "updateFuncs", "index", "value", "dynamicOffset", "updateFunc", "baseOffset", "func", "length", "unpack", "reader", "keys", "baseReader", "offset", "offsetReader", "error", "isError", "Result", "ArrayCoder", "Coder", "localName", "type", "dynamic", "defineProperties", "defaultChild", "result", "i", "_value", "Typed", "count", "assertArgumentCount", "WordSize", "AnonymousCoder", "BooleanCoder", "Coder", "localName", "writer", "_value", "value", "Typed", "reader", "DynamicBytesCoder", "Coder", "type", "localName", "writer", "value", "getBytesCopy", "length", "reader", "BytesCoder", "hexlify", "FixedBytesCoder", "Coder", "size", "localName", "name", "defineProperties", "writer", "_value", "data", "getBytesCopy", "Typed", "reader", "hexlify", "Empty", "NullCoder", "Coder", "localName", "writer", "value", "reader", "BN_0", "BN_1", "BN_MAX_UINT256", "NumberCoder", "Coder", "size", "signed", "localName", "name", "defineProperties", "writer", "_value", "value", "getBigInt", "Typed", "maxUintValue", "mask", "WordSize", "bounds", "toTwos", "reader", "fromTwos", "StringCoder", "DynamicBytesCoder", "localName", "writer", "_value", "toUtf8Bytes", "Typed", "reader", "toUtf8String", "TupleCoder", "Coder", "coders", "localName", "dynamic", "types", "coder", "type", "defineProperties", "values", "uniqueNames", "accum", "name", "index", "writer", "_value", "value", "Typed", "pack", "reader", "unpack", "id", "value", "keccak256", "toUtf8Bytes", "COMPRESSED$1", "FENCED", "NSM_MAX", "decode_arithmetic", "bytes", "pos", "u16", "symbol_count", "total", "acc", "i", "skip", "pos_payload", "read_width", "read_buffer", "read_bit", "N", "FULL", "HALF", "QRTR", "MASK", "register", "symbols", "low", "range", "value", "start", "end", "mid", "a", "b", "offset", "x", "read_payload", "v", "read_compressed_payload", "s", "unsafe_atob", "lookup", "c", "n", "ret", "width", "carry", "signed", "read_deltas", "next", "read_sorted", "prev", "read_sorted_arrays", "read_array_while", "read_mapped", "w", "read_linear_table", "read_replacement_table", "read_transposed", "m", "j", "dx", "dy", "vN", "ys", "_", "j_dy", "y", "read_trie", "sorted", "expand", "decode", "Q", "S", "B", "cps", "saved", "br", "cp", "hex_cp", "quote_cp", "explode_cp", "len", "str_from_cps", "buf", "compare_arrays", "COMPRESSED", "S0", "L0", "V0", "T0", "L_COUNT", "V_COUNT", "T_COUNT", "N_COUNT", "S_COUNT", "S1", "L1", "V1", "T1", "unpack_cc", "packed", "unpack_cp", "SHIFTED_RANK", "EXCLUSIONS", "DECOMP", "RECOMP", "init$1", "r", "bucket", "is_hangul", "compose_pair", "recomp", "decomposed", "check_order", "add", "cc", "s_index", "l_index", "v_index", "t_index", "mapped", "prev_cc", "tmp", "composed_from_decomposed", "stack", "prev_cp", "composed", "nfd", "nfc", "HYPHEN", "STOP_CH", "FE0F", "UNIQUE_PH", "Array_from", "x", "group_has_cp", "g", "cp", "Emoji", "MAPPED", "IGNORED", "CM", "NSM", "ESCAPE", "NFC_CHECK", "GROUPS", "WHOLE_VALID", "WHOLE_MAP", "VALID", "EMOJI_LIST", "EMOJI_ROOT", "init", "r", "read_compressed_payload", "COMPRESSED$1", "read_sorted_array", "read_sorted", "read_sorted_set", "set_add_many", "set", "v", "read_mapped", "i", "chunks", "read_sorted_arrays", "unrestricted", "read_chunked", "read_array_while", "N", "R", "str_from_cps", "P", "Q", "M", "wholes", "a", "b", "w", "V", "recs", "gs", "rec", "G", "union", "complement", "multi", "add_to_union", "nfd", "read_trie", "compare_arrays", "cps", "prev", "next", "node", "child", "quoted_cp", "should_escape", "bidi_qq", "safe_str_from_cps", "quote_cp", "s", "check_label_extension", "HYPHEN", "check_leading_underscore", "check_fenced", "FENCED", "error_placement", "last", "match", "max", "quoter", "buf", "is_combining_mark", "n", "ens_normalize", "name", "flatten", "split", "nfc", "filter_fe0f", "split", "name", "nf", "ef", "init", "offset", "STOP_CH", "label", "input", "explode_cp", "info", "tokens", "tokens_from_str", "token_count", "type", "norm", "check_leading_underscore", "cp", "check_label_extension", "chars", "x", "CM", "error_placement", "i", "cps", "str_from_cps", "safe_str_from_cps", "check_fenced", "unique", "Array_from", "g", "determine_group", "check_group", "check_whole", "err", "group", "maker", "shared", "whole", "WHOLE_MAP", "UNIQUE_PH", "set", "group_has_cp", "groups", "GROUPS", "gs", "error_group_member", "error_disallowed", "flatten", "error", "output", "msg", "bidi_qq", "quoted_cp", "quoted", "gg", "where", "decomposed", "nfd", "e", "NSM", "j", "k", "NSM_MAX", "ret", "emoji", "consume_emoji_reversed", "VALID", "MAPPED", "IGNORED", "filter_fe0f", "FE0F", "eaten", "node", "EMOJI_ROOT", "pos", "V", "Zeros", "checkComponent", "comp", "assertArgument", "ensNameSplit", "name", "bytes", "toUtf8Bytes", "ensNormalize", "comps", "last", "ens_normalize", "error", "isValidName", "namehash", "result", "keccak256", "concat", "hexlify", "dnsEncode", "_maxLength", "length", "accessSetify", "addr", "storageKeys", "getAddress", "storageKey", "index", "assertArgument", "isHexString", "accessListify", "value", "set", "result", "accum", "a", "b", "computeAddress", "key", "pubkey", "SigningKey", "getAddress", "keccak256", "recoverAddress", "digest", "signature", "BN_0", "BN_2", "BN_27", "BN_28", "BN_35", "BN_MAX_UINT", "handleAddress", "value", "getAddress", "handleAccessList", "param", "accessListify", "error", "assertArgument", "handleNumber", "_value", "getNumber", "handleUint", "getBigInt", "formatNumber", "name", "result", "toBeArray", "formatAccessList", "set", "formatHashes", "i", "isHexString", "_parseLegacy", "data", "fields", "decodeRlp", "tx", "hexlify", "v", "r", "chainId", "Signature", "zeroPadValue", "keccak256", "_serializeLegacy", "sig", "legacy", "encodeRlp", "_parseEipSignature", "yParity", "s", "signature", "_parseEip1559", "getBytes", "_serializeEip1559", "concat", "_parseEip2930", "_serializeEip2930", "_parseEip4844", "_serializeEip4844", "ZeroAddress", "Transaction", "_Transaction", "#type", "#to", "#data", "#nonce", "#gasLimit", "#gasPrice", "#maxPriorityFeePerGas", "#maxFeePerGas", "#value", "#chainId", "#sig", "#accessList", "#maxFeePerBlobGas", "#blobVersionedHashes", "recoverAddress", "SigningKey", "assert", "types", "hasGasPrice", "hasFee", "hasAccessList", "hasBlob", "payload", "hashMessage", "message", "toUtf8Bytes", "keccak256", "concat", "MessagePrefix", "verifyMessage", "sig", "digest", "recoverAddress", "regexBytes", "regexNumber", "regexArray", "_pack", "type", "value", "isArray", "getBytes", "zeroPadValue", "getAddress", "toUtf8Bytes", "match", "signed", "size", "assertArgument", "toTwos", "toBeArray", "dataLength", "zeroPadBytes", "baseType", "count", "result", "concat", "solidityPacked", "types", "values", "tight", "index", "hexlify", "solidityPackedKeccak256", "keccak256", "solidityPackedSha256", "sha256", "padding", "BN__1", "BN_0", "BN_1", "BN_MAX_UINT256", "hexPadRight", "value", "bytes", "getBytes", "padOffset", "concat", "hexlify", "hexTrue", "toBeHex", "hexFalse", "domainFieldTypes", "domainFieldNames", "checkString", "key", "assertArgument", "domainChecks", "_value", "getBigInt", "toQuantity", "getAddress", "getBaseEncoder", "type", "match", "signed", "width", "boundsUpper", "mask", "boundsLower", "toTwos", "zeroPadValue", "keccak256", "id", "encodeType", "name", "fields", "splitArray", "TypedDataEncoder", "_TypedDataEncoder", "#types", "#fullTypes", "#encoderCache", "_types", "links", "parents", "subtypes", "types", "base", "index", "uniqueNames", "field", "baseType", "primaryTypes", "n", "t", "defineProperties", "checkCircular", "found", "child", "subtype", "set", "st", "encoder", "#getEncoder", "array", "subEncoder", "result", "encodedType", "values", "callback", "v", "accum", "domain", "domainFields", "a", "b", "resolveName", "ensCache", "isHexString", "domainValues", "domainTypes", "typesWithDomain", "verifyTypedData", "signature", "recoverAddress", "setify", "items", "result", "k", "_kwVisibDeploy", "KwVisibDeploy", "_kwVisib", "KwVisib", "_kwTypes", "KwTypes", "_kwModifiers", "KwModifiers", "_kwOther", "_keywords", "Keywords", "SimpleTokens", "regexWhitespacePrefix", "regexNumberPrefix", "regexIdPrefix", "regexId", "regexType", "TokenString", "_TokenString", "#offset", "#tokens", "tokens", "#subTokenString", "from", "to", "t", "allowed", "top", "type", "link", "i", "token", "lex", "text", "throwError", "message", "offset", "brackets", "commas", "cur", "match", "suffix", "value", "getNumber", "allowSingle", "set", "included", "key", "consumeName", "keyword", "consumeKeywords", "keywords", "consumeMutability", "modifiers", "consumeParams", "allowIndexed", "ParamType", "consumeGas", "getBigInt", "consumeEoi", "regexArrayType", "verifyBasicType", "assertArgument", "length", "size", "_guard", "internal", "ParamTypeInternal", "ErrorFragmentInternal", "EventFragmentInternal", "ConstructorFragmentInternal", "FallbackFragmentInternal", "FunctionFragmentInternal", "StructFragmentInternal", "_ParamType", "guard", "name", "baseType", "indexed", "components", "arrayLength", "arrayChildren", "assertPrivate", "defineProperties", "format", "c", "comp", "process", "_this", "v", "#walkAsync", "promises", "setValue", "childType", "index", "param", "obj", "comps", "bracket", "arrayMatch", "Fragment", "_Fragment", "inputs", "ConstructorFragment", "ErrorFragment", "EventFragment", "FallbackFragment", "FunctionFragment", "StructFragment", "assert", "NamedFragment", "joinParams", "params", "p", "_ErrorFragment", "id", "input", "_EventFragment", "anonymous", "_ConstructorFragment", "payable", "gas", "_FallbackFragment", "stateMutability", "errorObj", "topIsValid", "mutability", "outputs", "_FunctionFragment", "o", "_StructFragment", "PanicReasons", "paramTypeBytes", "paramTypeNumber", "defaultCoder", "defaultMaxInflation", "getBuiltinCallException", "action", "tx", "data", "abiCoder", "message", "reason", "invocation", "revert", "bytes", "getBytes", "hexlify", "code", "transaction", "getAddress", "makeError", "AbiCoder", "_AbiCoder", "#getCoder", "param", "ArrayCoder", "TupleCoder", "c", "AddressCoder", "BooleanCoder", "StringCoder", "BytesCoder", "NullCoder", "match", "size", "assertArgument", "NumberCoder", "FixedBytesCoder", "types", "coders", "type", "ParamType", "values", "assertArgumentCount", "coder", "writer", "Writer", "loose", "Reader", "value", "encodeBytes32String", "text", "bytes", "toUtf8Bytes", "zeroPadBytes", "decodeBytes32String", "_bytes", "data", "getBytes", "length", "toUtf8String", "LogDescription", "fragment", "topic", "args", "name", "signature", "defineProperties", "TransactionDescription", "selector", "value", "ErrorDescription", "Indexed", "hash", "PanicReasons", "BuiltinErrors", "message", "code", "reason", "Interface", "_Interface", "#errors", "#events", "#functions", "#abiCoder", "fragments", "abi", "frags", "a", "Fragment", "error", "fallback", "receive", "index", "bucket", "assertArgument", "ConstructorFragment", "minimal", "format", "f", "j", "AbiCoder", "#getFunction", "key", "values", "forceUnique", "isHexString", "matching", "lastValue", "valueLength", "allowOptions", "Typed", "i", "inputs", "lastArg", "matchStr", "m", "result", "FunctionFragment", "callback", "names", "b", "#getEvent", "eventTopic", "EventFragment", "ErrorFragment", "params", "data", "dataSlice", "concat", "bytes", "getBytesCopy", "assert", "hexlify", "_data", "tx", "getBytes", "ef", "parsed", "topics", "encodeTopic", "param", "id", "keccak256", "toBeHex", "zeroPadBytes", "zeroPadValue", "dataTypes", "dataValues", "indexed", "nonIndexed", "dynamic", "ParamType", "resultIndexed", "resultNonIndexed", "keys", "nonIndexedIndex", "indexedIndex", "Result", "getBigInt", "log", "hexData", "BN_0", "getValue", "value", "toJson", "FeeData", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "defineProperties", "copyRequest", "req", "result", "hexlify", "bigIntKeys", "key", "getBigInt", "numberKeys", "getNumber", "accessListify", "Block", "#transactions", "block", "provider", "tx", "TransactionResponse", "txs", "assert", "baseFeePerGas", "difficulty", "extraData", "gasLimit", "gasUsed", "hash", "miner", "nonce", "number", "parentHash", "parentBeaconBlockRoot", "stateRoot", "receiptsRoot", "timestamp", "transactions", "index", "indexOrHash", "v", "assertArgument", "createOrphanedBlockFilter", "Log", "log", "topics", "address", "blockHash", "blockNumber", "data", "removed", "transactionHash", "transactionIndex", "receipt", "createRemovedLogFilter", "TransactionReceipt", "#logs", "to", "from", "contractAddress", "logsBloom", "logs", "status", "root", "createRemovedTransactionFilter", "other", "createReorderedTransactionFilter", "_TransactionResponse", "#startBlock", "type", "signature", "accessList", "blobVersionedHashes", "resolveProperties", "_confirms", "_timeout", "confirms", "timeout", "startBlock", "nextScan", "stopScanning", "checkReplacement", "mined", "i", "reason", "checkReceipt", "resolve", "reject", "cancellers", "cancel", "c", "timer", "makeError", "txListener", "error", "replaceListener", "isError", "EventLog", "Log", "log", "iface", "fragment", "args", "defineProperties", "UndecodedEventLog", "error", "ContractTransactionReceipt", "TransactionReceipt", "#iface", "provider", "tx", "ContractTransactionResponse", "TransactionResponse", "confirms", "timeout", "receipt", "ContractUnknownEventPayload", "EventPayload", "contract", "listener", "filter", "ContractEventPayload", "_log", "BN_0", "canCall", "value", "canEstimate", "canResolve", "canSend", "getResolver", "PreparedTopicFilter", "#filter", "contract", "fragment", "args", "defineProperties", "runner", "getRunner", "resolver", "resolvedArgs", "param", "index", "type", "v", "resolveAddress", "feature", "getProvider", "copyOverrides", "arg", "allowed", "_overrides", "Typed", "assertArgument", "overrides", "copyRequest", "resolveArgs", "_runner", "inputs", "buildWrappedFallback", "populateTransaction", "tx", "iface", "noValue", "getBigInt", "noData", "payable", "staticCall", "assert", "error", "isCallException", "send", "provider", "ContractTransactionResponse", "estimateGas", "method", "buildWrappedMethod", "key", "getFragment", "resolveProperties", "result", "staticCallResult", "buildWrappedEvent", "internal", "internalValues", "setInternal", "values", "getInternal", "isDeferred", "getSubInfo", "event", "topics", "topicHashify", "name", "isHexString", "e", "t", "items", "tag", "hasSub", "subs", "getSub", "operation", "addr", "sub", "filter", "listener", "log", "foundFragment", "_foundFragment", "emit", "ContractEventPayload", "ContractUnknownEventPayload", "starting", "started", "lastEmit", "_emit", "payloadFunc", "count", "once", "passArgs", "resultPromise", "passProperties", "BaseContract", "_BaseContract", "target", "abi", "_deployTx", "isAddressable", "Interface", "addrPromise", "deployTx", "makeError", "filters", "prop", "receiver", "isError", "code", "resolve", "reject", "checkCode", "hash", "fromBlock", "toBlock", "address", "EventLog", "UndecodedEventLog", "Log", "total", "listeners", "stop", "CustomContract", "_ContractBase", "Contract", "ContractFactory", "_ContractFactory", "abi", "bytecode", "runner", "iface", "Interface", "hexlify", "getBytes", "defineProperties", "target", "BaseContract", "args", "overrides", "fragment", "copyOverrides", "resolvedArgs", "resolveArgs", "data", "concat", "tx", "assert", "sentTx", "address", "getCreateAddress", "output", "assertArgument", "getIpfsLink", "link", "assertArgument", "MulticoinProviderPlugin", "name", "defineProperties", "proivder", "coinType", "address", "data", "matcherIpfs", "matchers", "EnsResolver", "_EnsResolver", "#supports2544", "#resolver", "provider", "address", "name", "defineProperties", "Contract", "error", "isError", "#fetch", "funcName", "params", "iface", "namehash", "fragment", "assert", "dnsEncode", "result", "coinType", "ZeroAddress", "ethCoinType", "data", "isHexString", "getAddress", "coinPlugin", "plugin", "MulticoinProviderPlugin", "key", "ipfs", "scheme", "length", "encodeBase58", "swarm", "linkage", "avatar", "i", "match", "url", "getIpfsLink", "selector", "owner", "comps", "tokenId", "contract", "tokenOwner", "balance", "metadataUrl", "toBeHex", "metadata", "response", "FetchRequest", "bytes", "hexlify", "imageUrl", "network", "ensPlugin", "#getResolver", "ensAddr", "addr", "currentName", "resolver", "BN_0", "allowNull", "format", "nullValue", "value", "arrayOf", "array", "i", "object", "altNames", "result", "key", "srcKey", "altKey", "nv", "error", "message", "assert", "formatBoolean", "assertArgument", "formatData", "isHexString", "formatHash", "_formatLog", "object", "getAddress", "formatHash", "getNumber", "formatData", "allowNull", "formatBoolean", "arrayOf", "formatLog", "value", "_formatBlock", "getBigInt", "formatBlock", "result", "tx", "formatTransactionResponse", "_formatReceiptLog", "formatReceiptLog", "_formatTransactionReceipt", "hexlify", "formatTransactionReceipt", "BN_0", "accessListify", "getCreateAddress", "Signature", "chainId", "EnsAddress", "NetworkPlugin", "_NetworkPlugin", "name", "defineProperties", "GasCostPlugin", "_GasCostPlugin", "effectiveBlock", "costs", "props", "set", "nullish", "value", "assertArgument", "EnsPlugin", "_EnsPlugin", "address", "targetNetwork", "FeeDataNetworkPlugin", "_FeeDataNetworkPlugin", "#feeDataFunc", "feeDataFunc", "provider", "FetchUrlFeeDataNetworkPlugin", "#url", "#processFunc", "url", "processFunc", "Networks", "Network", "_Network", "#name", "#chainId", "#plugins", "name", "chainId", "getBigInt", "value", "other", "plugin", "basename", "p", "clone", "tx", "costs", "GasCostPlugin", "gas", "accessList", "accessListify", "addr", "network", "injectCommonNetworks", "networkFunc", "assertArgument", "custom", "EnsPlugin", "nameOrChainId", "existing", "parseUnits", "_value", "decimals", "comps", "frac", "getGasStationPlugin", "url", "FetchUrlFeeDataNetworkPlugin", "fetchFeeData", "provider", "request", "response", "_response", "_feeData", "payload", "error", "assert", "injected", "registerEth", "options", "func", "copy", "obj", "PollingBlockSubscriber", "#provider", "#poller", "#interval", "#blockNumber", "provider", "value", "#poll", "blockNumber", "b", "dropWhilePaused", "OnBlockSubscriber", "#running", "PollingBlockTagSubscriber", "#tag", "#lastBlock", "tag", "block", "PollingOrphanSubscriber", "#filter", "filter", "copy", "PollingTransactionSubscriber", "#hash", "hash", "tx", "PollingEventSubscriber", "logs", "log", "BN_2", "MAX_CCIP_REDIRECTS", "isPromise", "value", "getTag", "prefix", "k", "v", "keys", "accum", "key", "UnmanagedSubscriber", "name", "defineProperties", "dropWhilePaused", "copy", "concisify", "items", "getSubscription", "_event", "provider", "isHexString", "hash", "event", "filter", "t", "addresses", "promises", "addAddress", "addr", "resolveAddress", "assertArgument", "getTime", "defaultOptions", "AbstractProvider", "#subs", "#plugins", "#pausedState", "#destroyed", "#networkPromise", "#anyNetwork", "#performCache", "#lastBlockNumber", "#nextTimer", "#timers", "#disableCcipRead", "#options", "_network", "options", "network", "Network", "plugin", "#perform", "req", "timeout", "tag", "perform", "tx", "calldata", "urls", "sender", "data", "errorMessages", "i", "url", "href", "request", "FetchRequest", "errorMessage", "resp", "result", "assert", "m", "Block", "formatBlock", "Log", "formatLog", "TransactionReceipt", "formatTransactionReceipt", "TransactionResponse", "formatTransactionResponse", "blockNumber", "getNumber", "address", "blockTag", "toQuantity", "b", "topics", "blockHash", "resolve", "_address", "fromBlock", "toBlock", "a", "_request", "copyRequest", "detectNetwork", "error", "networkPromise", "expected", "actual", "getFeeDataFunc", "_block", "gasPrice", "priorityFee", "resolveProperties", "#getBlock", "getBigInt", "maxFeePerGas", "maxPriorityFeePerGas", "block", "FeeData", "feeData", "_tx", "#call", "attempt", "transaction", "hexlify", "isCallException", "dataSlice", "txSender", "ccipArgs", "parseOffchainLookup", "ccipResult", "concat", "encodeBytes", "#checkNetwork", "promise", "#getAccountValue", "_blockTag", "_position", "position", "signedTx", "Transaction", "includeTransactions", "prefetchTxs", "params", "_filter", "p", "chainId", "EnsResolver", "resolver", "getAddress", "node", "namehash", "ensAddr", "Contract", "ZeroAddress", "isError", "_confirms", "confirms", "reject", "timer", "listener", "receipt", "makeError", "timerId", "_func", "func", "sub", "subscriber", "PollingBlockSubscriber", "PollingBlockTagSubscriber", "PollingEventSubscriber", "PollingTransactionSubscriber", "PollingOrphanSubscriber", "oldSub", "newSub", "#hasSub", "emitArgs", "#getSub", "subscription", "args", "count", "once", "payload", "EventPayload", "total", "listeners", "index", "started", "pause", "s", "_parseString", "start", "bytes", "_parseBytes", "toUtf8String", "offset", "length", "numPad", "toBeArray", "padded", "bytesPad", "empty", "datas", "byteCount", "getBytes", "zeros", "dataLength", "urlsOffset", "urlsLength", "urlsData", "u", "extraData", "checkProvider", "signer", "operation", "assert", "populate", "tx", "pop", "copyRequest", "resolveAddress", "from", "address", "assertArgument", "resolveProperties", "AbstractSigner", "provider", "defineProperties", "blockTag", "network", "chainId", "getBigInt", "hasEip1559", "feeData", "gasPrice", "name", "txObj", "Transaction", "VoidSigner", "_VoidSigner", "#throwUnsupported", "suffix", "message", "domain", "types", "value", "shown", "showThrottleMessage", "service", "copy", "obj", "FilterIdSubscriber", "#provider", "#filterIdPromise", "#poller", "#running", "#network", "#hault", "provider", "#poll", "result", "blockNumber", "filterId", "error", "isError", "network", "#teardown", "filterIdPromise", "dropWhilePaused", "FilterIdEventSubscriber", "#event", "filter", "PollingEventSubscriber", "results", "FilterIdPendingSubscriber", "Primitive", "deepCopy", "value", "accum", "key", "stall", "duration", "resolve", "getLowerCase", "isPollable", "defaultOptions", "JsonRpcSigner", "AbstractSigner", "provider", "address", "getAddress", "defineProperties", "assert", "tx", "_tx", "promises", "_from", "from", "resolveAddress", "assertArgument", "_to", "hexTx", "blockNumber", "hash", "reject", "timeouts", "invalids", "checkTx", "error", "isError", "makeError", "_message", "message", "toUtf8Bytes", "hexlify", "domain", "types", "_value", "populated", "TypedDataEncoder", "password", "JsonRpcApiProvider", "AbstractProvider", "#options", "#nextId", "#payloads", "#drainTimer", "#notReady", "#network", "#pendingDetectNetwork", "#scheduleDrain", "stallTime", "payloads", "batch", "p", "payload", "result", "resp", "r", "network", "options", "promise", "_resolve", "staticNetwork", "Network", "req", "getBigInt", "feeData", "request", "sub", "FilterIdPendingSubscriber", "PollingEventSubscriber", "FilterIdEventSubscriber", "UnmanagedSubscriber", "dstKey", "toQuantity", "accessListify", "_error", "method", "msg", "spelunkData", "e", "AbiCoder", "spelunkMessage", "transaction", "unsupported", "params", "id", "accountsPromise", "accounts", "resolveProperties", "account", "a", "JsonRpcApiPollingProvider", "#pollingInterval", "subscriber", "JsonRpcProvider", "#connect", "url", "FetchRequest", "response", "isHexString", "_spelunkMessage", "defaultApiKey", "getHost", "name", "assertArgument", "AnkrProvider", "_AnkrProvider", "JsonRpcProvider", "_network", "apiKey", "network", "Network", "options", "request", "defineProperties", "chainId", "FetchRequest", "response", "attempt", "showThrottleMessage", "payload", "error", "defaultApiKey", "getHost", "name", "assertArgument", "AlchemyProvider", "_AlchemyProvider", "JsonRpcProvider", "_network", "apiKey", "network", "Network", "request", "defineProperties", "chainId", "req", "trace", "tx", "resolveProperties", "data", "error", "assert", "FetchRequest", "response", "attempt", "showThrottleMessage", "CloudflareProvider", "JsonRpcProvider", "_network", "network", "Network", "assertArgument", "THROTTLE", "isPromise", "value", "EtherscanPluginId", "EtherscanPlugin", "_EtherscanPlugin", "NetworkPlugin", "baseUrl", "defineProperties", "skipKeys", "nextId", "EtherscanProvider", "AbstractProvider", "#plugin", "_network", "_apiKey", "apiKey", "network", "Network", "assertArgument", "module", "params", "query", "accum", "key", "post", "id", "url", "payload", "request", "FetchRequest", "req", "resp", "attempt", "showThrottleMessage", "response", "result", "toUtf8String", "throttle", "k", "error", "assert", "transaction", "toQuantity", "accessListify", "set", "hexlify", "message", "isError", "data", "e", "AbiCoder", "Transaction", "postData", "_address", "address", "abi", "Contract", "getGlobal", "_WebSocket", "SocketSubscriber", "#provider", "#filter", "#filterId", "#paused", "#emitPromise", "provider", "filter", "filterId", "dropWhilePaused", "assert", "message", "emitPromise", "SocketBlockSubscriber", "SocketPendingSubscriber", "SocketEventSubscriber", "#logFilter", "SocketProvider", "JsonRpcApiProvider", "#callbacks", "#subs", "#pending", "network", "_options", "options", "assertArgument", "sub", "UnmanagedSubscriber", "subscriber", "pending", "payload", "promise", "resolve", "reject", "result", "callback", "makeError", "WebSocketProvider", "SocketProvider", "#connect", "#websocket", "url", "network", "options", "_WebSocket", "error", "message", "defaultProjectId", "getHost", "name", "assertArgument", "InfuraWebSocketProvider", "WebSocketProvider", "network", "projectId", "provider", "InfuraProvider", "req", "assert", "url", "defineProperties", "_InfuraProvider", "JsonRpcProvider", "_network", "projectSecret", "Network", "request", "chainId", "FetchRequest", "response", "attempt", "showThrottleMessage", "defaultToken", "getHost", "name", "assertArgument", "QuickNodeProvider", "_QuickNodeProvider", "JsonRpcProvider", "_network", "token", "network", "Network", "request", "defineProperties", "chainId", "FetchRequest", "response", "attempt", "showThrottleMessage", "BN_1", "BN_2", "shuffle", "array", "i", "j", "tmp", "stall", "duration", "resolve", "getTime", "stringify", "value", "key", "defaultConfig", "defaultState", "waitForSync", "config", "blockNumber", "error", "_normalize", "keys", "k", "normalizeResult", "result", "checkQuorum", "quorum", "results", "tally", "tag", "weight", "t", "best", "r", "getMedian", "resultWeight", "errorMap", "bestError", "values", "e", "b", "mid", "getAnyResult", "getFuzzyMode", "getNumber", "add", "bestWeight", "bestResult", "FallbackProvider", "AbstractProvider", "#configs", "#height", "#initialSyncPromise", "providers", "network", "options", "p", "accum", "assertArgument", "a", "c", "Network", "getBigInt", "provider", "req", "block", "#getNextConfig", "running", "configs", "allConfigs", "#addRunner", "runner", "now", "dt", "#initialSync", "initialSync", "promises", "chainId", "assert", "#checkQuorum", "mode", "#waitForQuorum", "interesting", "newRunners", "broadcasts", "index", "done", "isError", "waiting", "inflightQuorum", "isWebSocketLike", "value", "Testnets", "getDefaultProvider", "network", "options", "allowService", "name", "JsonRpcProvider", "WebSocketProvider", "staticNetwork", "Network", "providers", "AlchemyProvider", "AnkrProvider", "CloudflareProvider", "EtherscanProvider", "projectId", "projectSecret", "InfuraProvider", "token", "QuickNodeProvider", "assert", "quorum", "FallbackProvider", "NonceManager", "_NonceManager", "AbstractSigner", "#noncePromise", "#delta", "signer", "defineProperties", "provider", "blockTag", "delta", "tx", "noncePromise", "message", "domain", "types", "value", "BrowserProvider", "JsonRpcApiPollingProvider", "#request", "ethereum", "network", "assertArgument", "method", "params", "payload", "result", "e", "error", "address", "accounts", "a", "defaultApplicationId", "getHost", "name", "assertArgument", "PocketProvider", "_PocketProvider", "JsonRpcProvider", "_network", "applicationId", "applicationSecret", "network", "Network", "options", "request", "defineProperties", "chainId", "FetchRequest", "response", "attempt", "showThrottleMessage", "IpcSocketProvider", "BaseWallet", "_BaseWallet", "AbstractSigner", "#signingKey", "privateKey", "provider", "assertArgument", "address", "computeAddress", "defineProperties", "tx", "to", "from", "resolveProperties", "resolveAddress", "getAddress", "btx", "Transaction", "message", "hashMessage", "domain", "types", "value", "populated", "TypedDataEncoder", "name", "assert", "subsChrs", "Word", "unfold", "words", "sep", "initial", "accum", "word", "decode", "data", "subs", "clumps", "leftover", "all", "item", "semi", "i", "decodeOwl", "assertArgument", "Wordlist", "locale", "defineProperties", "phrase", "words", "WordlistOwl", "Wordlist", "#data", "#checksum", "locale", "data", "checksum", "#words", "decodeOwl", "#loadWords", "words", "id", "index", "assertArgument", "word", "words", "checksum", "wordlist", "LangEn", "_LangEn", "WordlistOwl", "getUpperMask", "bits", "getLowerMask", "mnemonicToEntropy", "mnemonic", "wordlist", "assertNormalize", "LangEn", "words", "assertArgument", "entropy", "offset", "i", "index", "bit", "entropyBits", "checksumBits", "checksumMask", "checksum", "getBytes", "sha256", "hexlify", "entropyToMnemonic", "indices", "remainingBits", "_guard", "Mnemonic", "_Mnemonic", "guard", "phrase", "password", "assertPrivate", "defineProperties", "salt", "toUtf8Bytes", "pbkdf2", "_entropy", "numberOfRounds", "rcon", "S", "Si", "T1", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "U1", "U2", "U3", "U4", "convertToInt32", "bytes", "result", "i", "AES", "_AES", "__classPrivateFieldGet", "_AES_key", "key", "_AES_Kd", "_AES_Ke", "__classPrivateFieldSet", "rounds", "roundKeyCount", "KC", "tk", "index", "rconpointer", "t", "tt", "r", "c", "plaintext", "a", "ciphertext", "ModeOfOperation", "name", "key", "cls", "AES", "CBC", "_CBC", "ModeOfOperation", "key", "iv", "_CBC_iv", "_CBC_lastBlock", "__classPrivateFieldSet", "__classPrivateFieldGet", "plaintext", "ciphertext", "i", "j", "block", "data", "segmentSize", "__classPrivateFieldGet", "_CFB_shiftRegister", "CTR", "_CTR", "ModeOfOperation", "key", "initialValue", "_CTR_remaining", "_CTR_remainingIndex", "_CTR_counter", "__classPrivateFieldSet", "__classPrivateFieldGet", "value", "index", "i", "plaintext", "crypttext", "_b", "_a", "ciphertext", "pkcs7Strip", "data", "padder", "length", "i", "looseArrayify", "hexString", "getBytesCopy", "zpad", "value", "length", "getPassword", "password", "toUtf8Bytes", "spelunk", "object", "_path", "match", "assertArgument", "path", "type", "reqd", "cur", "comp", "found", "key", "defaultPath", "isKeystoreJson", "json", "data", "decrypt", "key", "ciphertext", "spelunk", "iv", "aesCtr", "CTR", "hexlify", "assert", "getAccount", "_key", "getBytes", "computedMAC", "keccak256", "concat", "assertArgument", "privateKey", "address", "computeAddress", "check", "getAddress", "account", "mnemonicKey", "mnemonicCiphertext", "mnemonicIv", "mnemonicAesCtr", "getDecryptKdfParams", "kdf", "salt", "N", "r", "p", "dkLen", "prf", "algorithm", "count", "decryptKeystoreJsonSync", "_password", "password", "getPassword", "params", "pbkdf2", "scryptSync", "stall", "duration", "resolve", "decryptKeystoreJson", "progress", "scrypt", "getEncryptKdfParams", "options", "randomBytes", "_encryptKeystore", "uuidRandom", "derivedKey", "macPrefix", "mac", "uuidV4", "client", "version", "path", "locale", "entropy", "now", "gethFilename", "zpad", "encryptKeystoreJsonSync", "passwordBytes", "encryptKeystoreJson", "defaultPath", "MasterSecret", "HardenedBit", "N", "Nibbles", "zpad", "value", "length", "result", "encodeBase58Check", "_value", "getBytes", "check", "dataSlice", "sha256", "bytes", "concat", "encodeBase58", "_guard", "ser_I", "index", "chainCode", "publicKey", "privateKey", "data", "assert", "i", "I", "computeHmac", "derivePath", "node", "path", "components", "assertArgument", "component", "HDNodeWallet", "_HDNodeWallet", "BaseWallet", "guard", "signingKey", "parentFingerprint", "depth", "mnemonic", "provider", "assertPrivate", "defineProperties", "fingerprint", "ripemd160", "#account", "account", "m", "password", "progressCallback", "encryptKeystoreJson", "encryptKeystoreJsonSync", "HDNodeVoidWallet", "_index", "getNumber", "IR", "IL", "ki", "SigningKey", "toBeHex", "toBigInt", "hexlify", "#fromSeed", "_seed", "isBytesLike", "seed", "extendedKey", "toBeArray", "decodeBase58", "key", "computeAddress", "wordlist", "LangEn", "Mnemonic", "randomBytes", "phrase", "_HDNodeVoidWallet", "VoidSigner", "address", "Ki", "getAccountPath", "getIndexedAccountPath", "isCrowdsaleJson", "json", "decryptCrowdsaleJson", "_password", "data", "password", "getPassword", "address", "getAddress", "spelunk", "encseed", "looseArrayify", "assertArgument", "key", "getBytes", "pbkdf2", "iv", "encryptedSeed", "aesCbc", "CBC", "seed", "pkcs7Strip", "seedHex", "i", "id", "stall", "duration", "resolve", "Wallet", "_Wallet", "BaseWallet", "key", "provider", "signingKey", "SigningKey", "password", "progressCallback", "account", "encryptKeystoreJson", "encryptKeystoreJsonSync", "#fromAccount", "assertArgument", "mnemonic", "Mnemonic", "wallet", "HDNodeWallet", "json", "progress", "isKeystoreJson", "decryptKeystoreJson", "isCrowdsaleJson", "decryptCrowdsaleJson", "decryptKeystoreJsonSync", "phrase", "Base64", "decodeBits", "width", "data", "maxValue", "result", "accum", "bits", "flood", "i", "value", "decodeOwlA", "data", "accents", "words", "decodeOwl", "accent", "match", "assertArgument", "posOffset", "positions", "decodeBits", "charCode", "regex", "all", "letter", "WordlistOwlA", "WordlistOwl", "#accent", "locale", "data", "accent", "checksum", "decodeOwlA", "wordlists", "LangEn", "getTotalSupply", "getMaxSupply", "polygon_mumbai_default", "CONFIG", "polygon_mumbai_default", "getChainConfig", "chainName", "ChainNetwork", "rpc", "chainName", "graphApiUrl", "contracts", "chainId", "assets", "defaultConfig", "getChainConfig", "e", "ethers_exports", "currencySymbol", "ChainNetwork_default", "generatePrivateKey", "ethers_exports", "generatePrivateKey_default", "getTokenURI", "tokenId", "getTokenURIs", "tokenId", "approve", "to", "tokenId", "import_core", "Ad", "_Ad", "offerId", "tokenId", "provider", "kind", "ratio", "size", "value", "key", "adString", "records", "ad", "Ad_default", "getAds", "offerId", "adData", "adList", "ad", "key", "Ad_default", "getApproved", "tokenId", "getBalanceOf", "owner", "getIsApprovedForAll", "owner", "operator", "getName", "getOwnerAddress", "getOwnerOf", "tokenId", "getSymbol", "mint", "tokenId", "to", "currency", "tokenData", "safeTransferFrom", "from", "to", "tokenId", "data", "setApprovalForAll", "operator", "approved", "setBaseURI", "_contractURI", "setContractURI", "_contractURI", "supportsInterface", "interfaceId", "transferFrom", "from", "to", "tokenId", "transferOwnership", "newOwner", "import_core", "import_core", "getOfferId", "offers", "import_core", "getOfferContract", "offerId", "getBPS", "getOfferProposals", "offerId", "tokenId", "adParameter", "isAllowedAdParameter", "offerId", "adParameter", "isOfferAdmin", "offerId", "admin", "isOfferDisabled", "offerId", "import_core", "getAllowedTokensFromId", "id", "getAllowedTokensQuery", "token", "getNFTFactoryContractAddress", "getCurrentTrustedForwarder", "getOwnerAddress", "getRecipientAddress", "getSwapRouterAddress", "createDSponsorNFTAndOffer", "nftParams", "offerParams", "createOffer", "nftContract", "offerParams", "mintAndSubmit", "params", "opts", "reviewAdProposal", "offerId", "tokenId", "proposalId", "adParameter", "validated", "reason", "setTrustedForwarder", "forwarder", "submitAdProposal", "offerId", "tokenId", "adParameter", "data", "transferOwnership", "newOwner", "updateOffer", "offerId", "disable", "name", "rulesURI", "addOptions", "removeOptions", "updateProtocolFee", "_recipient", "_bps", "import_core", "isNumber", "str", "getAdsProposalsFromOfferId", "offerId", "isNumber", "adData", "adList", "ad", "key", "Ad_default", "import_core", "getValidatedAdsFromOfferId", "offerId", "isNumber", "getValidatedProposalsRequest", "updateAdValidations", "adList", "validatedAdProposals", "updateAdValidation", "tokenId", "proposalId", "adParameter", "key", "validatedAdProposal", "records", "proposal", "Ad_default", "import_core", "getAdProposalFromProposalId", "proposalId", "isNumber", "getProposalRequest", "adProposal", "updateAdProposals", "tokenId", "offerId", "ad", "import_core", "getOffer", "offerId", "isNumber", "getOfferQueryByOfferId", "offerData", "offer", "allowedTokens", "updateDefaultMintPrices", "price", "token", "import_core", "getOffers", "offersRequest", "offers", "offer", "getDSponsorNFT", "address", "DSponsorNFT_default", "import_core", "getMintPricesFromId", "id", "updateDefaultMintPricesQuery", "price", "DSponsorAdmin", "address", "signer", "chain", "ChainNetwork_default", "privateKey", "generatePrivateKey_default", "wallet", "ethers_exports", "createDSponsorNFTAndOffer", "createOffer", "getAdProposalFromProposalId", "getAdsProposalsFromOfferId", "getValidatedAdsFromOfferId", "getAllowedTokensFromId", "getMintPricesFromId", "getBPS", "getOffer", "getOffers", "getDSponsorNFT", "getCurrentTrustedForwarder", "getNFTFactoryContractAddress", "getOfferContract", "getOfferProposals", "getOwnerAddress", "getRecipientAddress", "getSwapRouterAddress", "isAllowedAdParameter", "isOfferAdmin", "isOfferDisabled", "mintAndSubmit", "reviewAdProposal", "setTrustedForwarder", "submitAdProposal", "transferOwnership", "updateOffer", "updateProtocolFee", "DSponsorAdmin_default", "getDSponsorAdmin", "options", "DSponsorAdmin_default", "getMintPrice", "tokenId", "currency", "import_core", "getCreationInfo", "contractAddress", "creationInfoRequest", "creationInfo", "APIURL", "DSponsorNFT", "address", "signer", "chain", "ChainNetwork_default", "ethers_exports", "generatePrivateKey_default", "approve", "getAds", "getApproved", "getBalanceOf", "getDSponsorAdmin", "getMintPrice", "getIsApprovedForAll", "getMaxSupply", "getName", "getCreationInfo", "getOfferId", "getOwnerAddress", "getOwnerOf", "getSymbol", "getTokenURI", "getTokenURIs", "getTotalSupply", "mint", "safeTransferFrom", "setApprovalForAll", "setBaseURI", "setContractURI", "supportsInterface", "transferFrom", "transferOwnership", "DSponsorNFT_default", "mockCreateElement", "el", "node", "render", "options", "createElement", "createTextNode", "text", "styleElement", "container", "self", "dsponsorAdmin", "adsRow", "ad", "adElement", "link", "image", "e", "imageURL", "linkURL", "tokenId", "adParameters", "tokenData", "valuePrice", "bps", "fee", "feeAndValue", "mintParameters", "preload", "offer", "ads", "bps", "select", "selection", "type", "count", "adList", "selectedAds", "rows", "cols", "grid", "availableSlots", "i", "row", "j", "ad", "slot", "connect", "ethereum", "provider", "ethers_exports", "signer", "DSponsorAdmin_default", "AdSpaceRenderer", "_AdSpaceRenderer", "props", "offerId", "address", "signer", "chain", "DSponsorAdmin_default", "selector", "selection", "referral", "preload", "connect", "render", "select", "AdSpaceRenderer_default", "Wallet", "privateKey", "ethers_exports", "Wallet_default", "Token", "chainName", "tokenName", "Token_default", "DSponsorSDK", "chain", "privateKey", "ChainNetwork_default", "key", "generatePrivateKey_default", "signer", "ethers_exports", "DSponsorAdmin_default", "props", "currency", "amount", "contract", "DSponsorSDK_default", "stringToUint256", "s", "normalized", "keccak256", "toUtf8Bytes", "convertABIToShortABI", "abi", "ethers_exports", "isHexadecimal", "s"]
}
